{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894",
    "id": 2647467829,
    "node_id": "PR_kwDOABII586dzSc1",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/32894",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/32894.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/32894.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32894",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32894/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/96e1c8255299a38486c891d866063789f61f4f8a",
    "number": 32894,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "FUZZ: Test that BnB finds best solution",
    "user": {
      "login": "murchandamus",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murchandamus",
      "html_url": "https://github.com/murchandamus",
      "followers_url": "https://api.github.com/users/murchandamus/followers",
      "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
      "organizations_url": "https://api.github.com/users/murchandamus/orgs",
      "repos_url": "https://api.github.com/users/murchandamus/repos",
      "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/murchandamus/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "BnB’s solution is the input set with the lowest waste score, excluding any supersets of other solution candidates.\r\nThis fuzz test compares a brute force search with the BnB result to ensure that BnB succeeds.",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "created_at": "2025-07-07T17:34:08Z",
    "updated_at": "2025-10-22T15:42:58Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "185e1bd8c3af52cf0ab1e64b01212ab5a11d9e61",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "murchandamus:2025-07-bnb-is-optimal-fuzz",
      "ref": "2025-07-bnb-is-optimal-fuzz",
      "sha": "96e1c8255299a38486c891d866063789f61f4f8a",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 23979970,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMzk3OTk3MA==",
        "name": "bitcoin",
        "full_name": "murchandamus/bitcoin",
        "owner": {
          "login": "murchandamus",
          "id": 4060799,
          "node_id": "MDQ6VXNlcjQwNjA3OTk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/murchandamus",
          "html_url": "https://github.com/murchandamus",
          "followers_url": "https://api.github.com/users/murchandamus/followers",
          "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
          "organizations_url": "https://api.github.com/users/murchandamus/orgs",
          "repos_url": "https://api.github.com/users/murchandamus/repos",
          "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/murchandamus/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/murchandamus/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/murchandamus/bitcoin",
        "archive_url": "https://api.github.com/repos/murchandamus/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/murchandamus/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/murchandamus/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/murchandamus/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/murchandamus/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/murchandamus/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/murchandamus/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/murchandamus/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/murchandamus/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/murchandamus/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/murchandamus/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/murchandamus/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/murchandamus/bitcoin/events",
        "forks_url": "https://api.github.com/repos/murchandamus/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/murchandamus/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/murchandamus/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/murchandamus/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/murchandamus/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/murchandamus/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/murchandamus/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/murchandamus/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/murchandamus/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/murchandamus/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/murchandamus/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/murchandamus/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/murchandamus/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/murchandamus/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/murchandamus/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/murchandamus/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:murchandamus/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/murchandamus/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/murchandamus/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/murchandamus/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/murchandamus/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/murchandamus/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/murchandamus/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/murchandamus/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/murchandamus/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/murchandamus/bitcoin/hooks",
        "svn_url": "https://github.com/murchandamus/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 2,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 254277,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-08-19T22:49:05Z",
        "created_at": "2014-09-12T23:11:53Z",
        "updated_at": "2025-07-13T19:52:17Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "7129c9ea8e950f50bdc56d88c57617c66c90bb8a",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 38066,
        "stargazers_count": 86341,
        "watchers_count": 86341,
        "size": 295104,
        "default_branch": "master",
        "open_issues_count": 752,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-10-22T10:50:05Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-10-22T13:41:44Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 119,
    "deletions": 0,
    "changed_files": 1,
    "commits": 1,
    "review_comments": 37,
    "comments": 5
  },
  "events": [
    {
      "event": "labeled",
      "id": 18510090944,
      "node_id": "LE_lADOABII586_UXChzwAAAARPSZLA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18510090944",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-07T17:34:11Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "commented",
      "id": 3046020853,
      "node_id": "IC_kwDOABII5861jpb1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3046020853",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-07T17:34:13Z",
      "updated_at": "2025-07-11T20:07:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/32894.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [yancyribbens](https://github.com/bitcoin/bitcoin/pull/32894#issuecomment-3063652119) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#issuecomment-3046020853",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32894"
    },
    {
      "event": "reviewed",
      "id": 2996604860,
      "node_id": "PRR_kwDOABII586ynI-8",
      "url": null,
      "actor": null,
      "commit_id": "ce517d32d5c73122b85d12332fadd0278be24ccc",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-07-08T08:44:13Z",
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#pullrequestreview-2996604860",
      "submitted_at": "2025-07-08T08:44:13Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18527686467,
      "node_id": "HRFPE_lADOABII586_UXChzwAAAARQVg9D",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18527686467",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a5f632934f6948e3914ddf37d6e57460a592be12",
      "commit_url": "https://api.github.com/repos/murchandamus/bitcoin/commits/a5f632934f6948e3914ddf37d6e57460a592be12",
      "created_at": "2025-07-08T14:18:14Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18571808595,
      "node_id": "HRFPE_lADOABII586_UXChzwAAAARS909T",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18571808595",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a383386b9dd2de7a08d202b1e8129a44b870763b",
      "commit_url": "https://api.github.com/repos/murchandamus/bitcoin/commits/a383386b9dd2de7a08d202b1e8129a44b870763b",
      "created_at": "2025-07-10T18:58:00Z"
    },
    {
      "event": "commented",
      "id": 3058605059,
      "node_id": "IC_kwDOABII5862TpwD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3058605059",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-10T18:58:52Z",
      "updated_at": "2025-07-10T18:58:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks @maflcko, I fixed the sentence.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#issuecomment-3058605059",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32894"
    },
    {
      "event": "mentioned",
      "id": 18571820906,
      "node_id": "MEE_lADOABII586_UXChzwAAAARS939q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18571820906",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-10T18:58:53Z"
    },
    {
      "event": "subscribed",
      "id": 18571820917,
      "node_id": "SE_lADOABII586_UXChzwAAAARS9391",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18571820917",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-10T18:58:53Z"
    },
    {
      "event": "commented",
      "id": 3059542310,
      "node_id": "IC_kwDOABII5862XOkm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3059542310",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-10T23:38:57Z",
      "updated_at": "2025-07-10T23:38:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "I'll take a closer look at this, although some quick feedback since I've implemented something similar.\r\n\r\n> This fuzz test compares a brute force search with the BnB result to ensure that BnB succeeds.\r\n\r\nI recently removed a similar automated test that used brute force.  The issue with using a brute solution I had was a) brute force is slow b) only works on a limited pool size of say 20 UTXOs (see a).  Instead of using brute force, I adopted a strategy where I generate two random UTXO sets.  Then, build a target from one of the two sets.  Finally merge the two sets and randomize.  Therefore there is for sure  a solution (unless iteration limit is hit) and the assertion asserts that BnB will find the solution (or that it doesn't due to some error condition like iteration limit reached).  I'm curious what you think of the pros and cons of your brute force strategy vs seeding a random solution and how it works with larger UTXO sets.\r\n",
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#issuecomment-3059542310",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32894"
    },
    {
      "event": "reviewed",
      "id": 3011587627,
      "node_id": "PRR_kwDOABII586zgS4r",
      "url": null,
      "actor": null,
      "commit_id": "a383386b9dd2de7a08d202b1e8129a44b870763b",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-07-11T19:06:51Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#pullrequestreview-3011587627",
      "submitted_at": "2025-07-11T19:06:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
    },
    {
      "event": "reviewed",
      "id": 3011611342,
      "node_id": "PRR_kwDOABII586zgYrO",
      "url": null,
      "actor": null,
      "commit_id": "a383386b9dd2de7a08d202b1e8129a44b870763b",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-07-11T19:12:35Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#pullrequestreview-3011611342",
      "submitted_at": "2025-07-11T19:12:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
    },
    {
      "event": "reviewed",
      "id": 3011628763,
      "node_id": "PRR_kwDOABII586zgc7b",
      "url": null,
      "actor": null,
      "commit_id": "a383386b9dd2de7a08d202b1e8129a44b870763b",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-07-11T19:15:10Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#pullrequestreview-3011628763",
      "submitted_at": "2025-07-11T19:15:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
    },
    {
      "event": "reviewed",
      "id": 3011682856,
      "node_id": "PRR_kwDOABII586zgqIo",
      "url": null,
      "actor": null,
      "commit_id": "a383386b9dd2de7a08d202b1e8129a44b870763b",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-07-11T19:22:34Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#pullrequestreview-3011682856",
      "submitted_at": "2025-07-11T19:22:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
    },
    {
      "event": "reviewed",
      "id": 3011711344,
      "node_id": "PRR_kwDOABII586zgxFw",
      "url": null,
      "actor": null,
      "commit_id": "a383386b9dd2de7a08d202b1e8129a44b870763b",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-07-11T19:27:59Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#pullrequestreview-3011711344",
      "submitted_at": "2025-07-11T19:27:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
    },
    {
      "event": "commented",
      "id": 3063652119,
      "node_id": "IC_kwDOABII5862m58X",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3063652119",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-11T20:07:16Z",
      "updated_at": "2025-07-11T20:07:16Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK adding a test that shows BnB finds the best solution (min waste).  The downside to this approach however is it limits solutions to 16 and theoretically BnB could find solutions of larger sets without hitting the maximum iteration limit.  Code looks good though otherwise.\r\n\r\nI think this should be prioritized to merge first over https://github.com/bitcoin/bitcoin/pull/32150 so that it can add more test safety to that refactor.",
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#issuecomment-3063652119",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32894"
    },
    {
      "event": "reviewed",
      "id": 3011804263,
      "node_id": "PRR_kwDOABII586zhHxn",
      "url": null,
      "actor": null,
      "commit_id": "a383386b9dd2de7a08d202b1e8129a44b870763b",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-07-11T21:10:41Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#pullrequestreview-3011804263",
      "submitted_at": "2025-07-11T21:10:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk2ZTFjODI1NTI5OWEzODQ4NmM4OTFkODY2MDYzNzg5ZjYxZjRmOGE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/96e1c8255299a38486c891d866063789f61f4f8a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/96e1c8255299a38486c891d866063789f61f4f8a",
      "tree": {
        "sha": "b30b5dcc7e8529e778a7c8f852c6c61dcec5cba8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b30b5dcc7e8529e778a7c8f852c6c61dcec5cba8"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/51ccc71b1bf9ab3cd211f48b9805d3b7b957ced8",
          "sha": "51ccc71b1bf9ab3cd211f48b9805d3b7b957ced8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/51ccc71b1bf9ab3cd211f48b9805d3b7b957ced8"
        }
      ],
      "message": "FUZZ: Test that BnB finds best solution\n\nBnB’s solution is the input set with the lowest waste score, excluding\nany supersets of other solution candidates.\nThis fuzz test compares a brute force search with the BnB result to\nensure that BnB succeeds.",
      "committer": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2025-07-21T19:20:14Z"
      },
      "author": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2025-07-03T22:01:10Z"
      },
      "sha": "96e1c8255299a38486c891d866063789f61f4f8a"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18735437355,
      "node_id": "HRFPE_lADOABII586_UXChzwAAAARcuBYr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18735437355",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "96e1c8255299a38486c891d866063789f61f4f8a",
      "commit_url": "https://api.github.com/repos/murchandamus/bitcoin/commits/96e1c8255299a38486c891d866063789f61f4f8a",
      "created_at": "2025-07-21T19:20:34Z"
    },
    {
      "event": "commented",
      "id": 3098071484,
      "node_id": "IC_kwDOABII5864qNG8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3098071484",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-21T19:21:14Z",
      "updated_at": "2025-07-21T19:21:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "Removed the duplicate definition of `coin_params.m_cost_of_change`.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#issuecomment-3098071484",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32894"
    },
    {
      "event": "review_requested",
      "id": 20434479810,
      "node_id": "RRE_lADOABII586_UXChzwAAAATB_WrC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20434479810",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-22T15:42:43Z",
      "requested_reviewer": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 20434484494,
      "node_id": "RRE_lADOABII586_UXChzwAAAATB_X0O",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20434484494",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-22T15:42:58Z",
      "requested_reviewer": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2191871702",
      "pull_request_review_id": 2996604860,
      "id": 2191871702,
      "node_id": "PRRC_kwDOABII586CpU7W",
      "diff_hunk": "@@ -217,6 +217,126 @@ FUZZ_TARGET(coin_grinder_is_optimal)\n     assert(!result_cg);\n }\n \n+FUZZ_TARGET(bnb_finds_lowest_waste)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    FastRandomContext fast_random_context{ConsumeUInt256(fuzzed_data_provider)};\n+    CoinSelectionParams coin_params{fast_random_context};\n+    coin_params.m_subtract_fee_outputs = false;\n+    // Set effective feerate up to 10'000'000 sats per kvB (10'000 sat/vB).\n+    coin_params.m_effective_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_long_term_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_discard_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_cost_of_change = ConsumeMoney(fuzzed_data_provider);\n+\n+    coin_params.change_output_size = fuzzed_data_provider.ConsumeIntegralInRange(1, MAX_SCRIPT_SIZE);\n+    coin_params.m_change_fee = coin_params.m_effective_feerate.GetFee(coin_params.change_output_size);\n+    coin_params.change_spend_size = fuzzed_data_provider.ConsumeIntegralInRange<int>(41, 1000);\n+    const auto change_spend_fee{coin_params.m_discard_feerate.GetFee(coin_params.change_spend_size)};\n+    coin_params.m_cost_of_change = coin_params.m_change_fee + change_spend_fee;\n+    CScript change_out_script = CScript() << std::vector<unsigned char>(coin_params.change_output_size, OP_TRUE);\n+    const auto dust{GetDustThreshold(CTxOut{/*nValueIn=*/0, change_out_script}, coin_params.m_discard_feerate)};\n+    coin_params.min_viable_change = std::max(change_spend_fee + 1, dust);\n+\n+    // Create some coins\n+    CAmount max_spendable{0};\n+    int next_locktime{0};\n+    static constexpr unsigned max_output_groups{16};\n+    std::vector<OutputGroup> group_pos;\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), max_output_groups)\n+    {\n+        // With maximum m_effective_feerate 10'000 s/vB and n_input_bytes = 20'000 B, input_fee <= MAX_MONEY.\n+        const int n_input_bytes{fuzzed_data_provider.ConsumeIntegralInRange<int>(1, 20'000)};\n+        const CAmount input_fee = coin_params.m_effective_feerate.GetFee(n_input_bytes);\n+        // Only make UTXOs with positive effective value\n+        const CAmount eff_value{fuzzed_data_provider.ConsumeIntegralInRange<CAmount>(1, MAX_MONEY + group_pos.size() - max_spendable - max_output_groups)};\n+        const CAmount amount{eff_value + input_fee};\n+        std::vector<COutput> temp_utxo_pool;\n+\n+        AddCoin(amount, /*n_input=*/0, n_input_bytes, ++next_locktime, temp_utxo_pool, coin_params.m_effective_feerate);\n+        max_spendable += eff_value;\n+\n+        auto output_group = OutputGroup(coin_params);\n+        output_group.Insert(std::make_shared<COutput>(temp_utxo_pool.at(0)), /*ancestors=*/0, /*descendants=*/0);\n+        group_pos.push_back(output_group);\n+    }\n+    size_t num_groups = group_pos.size();\n+    assert(num_groups <= max_output_groups);\n+\n+    // Only choose targets below max_spendable\n+    const CAmount target{fuzzed_data_provider.ConsumeIntegralInRange<CAmount>(1, std::max(CAmount{1}, max_spendable - coin_params.m_cost_of_change))};\n+\n+    // Brute force optimal solution (lowest waste, but cannot be superset of another solution)\n+    std::vector<uint32_t> solutions;\n+    int best_waste{std::numeric_limits<int>::max()};\n+    int best_weight{std::numeric_limits<int>::max()};\n+    for (uint32_t pattern = 1; (pattern >> num_groups) == 0; ++pattern) {\n+        // BnB does not add permit adding more inputs to a solution, i.e. a superset of a solution cannot ever be a solution.",
      "path": "src/wallet/test/fuzz/coinselection.cpp",
      "position": 1,
      "original_position": 59,
      "commit_id": "96e1c8255299a38486c891d866063789f61f4f8a",
      "original_commit_id": "ce517d32d5c73122b85d12332fadd0278be24ccc",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "\n    “BnB does not add permit adding more inputs to a solution…” -> “BnB does not permit adding more inputs to a solution…” [remove the extraneous “add” to correct the verb phrase]\n",
      "created_at": "2025-07-08T08:44:13Z",
      "updated_at": "2025-07-08T08:44:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#discussion_r2191871702",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2191871702"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 275,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2201577538",
      "pull_request_review_id": 3011587627,
      "id": 2201577538,
      "node_id": "PRRC_kwDOABII586DOWhC",
      "diff_hunk": "@@ -217,6 +217,126 @@ FUZZ_TARGET(coin_grinder_is_optimal)\n     assert(!result_cg);\n }\n \n+FUZZ_TARGET(bnb_finds_min_waste)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    FastRandomContext fast_random_context{ConsumeUInt256(fuzzed_data_provider)};\n+    CoinSelectionParams coin_params{fast_random_context};\n+    coin_params.m_subtract_fee_outputs = false;\n+    // Set effective feerate up to 10'000'000 sats per kvB (10'000 sat/vB).\n+    coin_params.m_effective_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_long_term_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};",
      "path": "src/wallet/test/fuzz/coinselection.cpp",
      "position": 13,
      "original_position": 13,
      "commit_id": "96e1c8255299a38486c891d866063789f61f4f8a",
      "original_commit_id": "a383386b9dd2de7a08d202b1e8129a44b870763b",
      "in_reply_to_id": null,
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In a similar test, I run `SelectCoinsBnB` twice and swap fee_rate and long_term_fee_rate, then assert that when long_term_fee_rate is greater less outputs (or equal) are found between the two runs.",
      "created_at": "2025-07-11T19:06:51Z",
      "updated_at": "2025-07-11T19:06:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#discussion_r2201577538",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2201577538"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 229,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2201595887",
      "pull_request_review_id": 3011611342,
      "id": 2201595887,
      "node_id": "PRRC_kwDOABII586DOa_v",
      "diff_hunk": "@@ -217,6 +217,126 @@ FUZZ_TARGET(coin_grinder_is_optimal)\n     assert(!result_cg);\n }\n \n+FUZZ_TARGET(bnb_finds_min_waste)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    FastRandomContext fast_random_context{ConsumeUInt256(fuzzed_data_provider)};\n+    CoinSelectionParams coin_params{fast_random_context};\n+    coin_params.m_subtract_fee_outputs = false;\n+    // Set effective feerate up to 10'000'000 sats per kvB (10'000 sat/vB).\n+    coin_params.m_effective_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_long_term_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_discard_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_cost_of_change = ConsumeMoney(fuzzed_data_provider);\n+\n+    coin_params.change_output_size = fuzzed_data_provider.ConsumeIntegralInRange(1, MAX_SCRIPT_SIZE);\n+    coin_params.m_change_fee = coin_params.m_effective_feerate.GetFee(coin_params.change_output_size);\n+    coin_params.change_spend_size = fuzzed_data_provider.ConsumeIntegralInRange<int>(41, 1000);\n+    const auto change_spend_fee{coin_params.m_discard_feerate.GetFee(coin_params.change_spend_size)};\n+    coin_params.m_cost_of_change = coin_params.m_change_fee + change_spend_fee;",
      "path": "src/wallet/test/fuzz/coinselection.cpp",
      "position": 20,
      "original_position": 21,
      "commit_id": "96e1c8255299a38486c891d866063789f61f4f8a",
      "original_commit_id": "a383386b9dd2de7a08d202b1e8129a44b870763b",
      "in_reply_to_id": null,
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "could not `cost_of_change` be randomly selected from a range `(0, MAX)`?",
      "created_at": "2025-07-11T19:12:35Z",
      "updated_at": "2025-07-11T19:12:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#discussion_r2201595887",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2201595887"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 236,
      "original_line": 236,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2201606218",
      "pull_request_review_id": 3011628763,
      "id": 2201606218,
      "node_id": "PRRC_kwDOABII586DOdhK",
      "diff_hunk": "@@ -217,6 +217,126 @@ FUZZ_TARGET(coin_grinder_is_optimal)\n     assert(!result_cg);\n }\n \n+FUZZ_TARGET(bnb_finds_min_waste)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    FastRandomContext fast_random_context{ConsumeUInt256(fuzzed_data_provider)};\n+    CoinSelectionParams coin_params{fast_random_context};\n+    coin_params.m_subtract_fee_outputs = false;\n+    // Set effective feerate up to 10'000'000 sats per kvB (10'000 sat/vB).\n+    coin_params.m_effective_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_long_term_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_discard_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_cost_of_change = ConsumeMoney(fuzzed_data_provider);\n+\n+    coin_params.change_output_size = fuzzed_data_provider.ConsumeIntegralInRange(1, MAX_SCRIPT_SIZE);\n+    coin_params.m_change_fee = coin_params.m_effective_feerate.GetFee(coin_params.change_output_size);\n+    coin_params.change_spend_size = fuzzed_data_provider.ConsumeIntegralInRange<int>(41, 1000);\n+    const auto change_spend_fee{coin_params.m_discard_feerate.GetFee(coin_params.change_spend_size)};\n+    coin_params.m_cost_of_change = coin_params.m_change_fee + change_spend_fee;\n+    CScript change_out_script = CScript() << std::vector<unsigned char>(coin_params.change_output_size, OP_TRUE);\n+    const auto dust{GetDustThreshold(CTxOut{/*nValueIn=*/0, change_out_script}, coin_params.m_discard_feerate)};\n+    coin_params.min_viable_change = std::max(change_spend_fee + 1, dust);\n+\n+    // Create some coins\n+    CAmount max_spendable{0};\n+    int next_locktime{0};\n+    static constexpr unsigned max_output_groups{16};",
      "path": "src/wallet/test/fuzz/coinselection.cpp",
      "position": 28,
      "original_position": 29,
      "commit_id": "96e1c8255299a38486c891d866063789f61f4f8a",
      "original_commit_id": "a383386b9dd2de7a08d202b1e8129a44b870763b",
      "in_reply_to_id": null,
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It looks like a downside to this brute force approach is it only allows pool sizes up to 16.  Curious if you consider just pre-generating a solution which would allow any theoretical size.",
      "created_at": "2025-07-11T19:15:10Z",
      "updated_at": "2025-07-11T19:15:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#discussion_r2201606218",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2201606218"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 244,
      "original_line": 244,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2201612657",
      "pull_request_review_id": 3011638974,
      "id": 2201612657,
      "node_id": "PRRC_kwDOABII586DOfFx",
      "diff_hunk": "@@ -217,6 +217,126 @@ FUZZ_TARGET(coin_grinder_is_optimal)\n     assert(!result_cg);\n }\n \n+FUZZ_TARGET(bnb_finds_min_waste)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    FastRandomContext fast_random_context{ConsumeUInt256(fuzzed_data_provider)};\n+    CoinSelectionParams coin_params{fast_random_context};\n+    coin_params.m_subtract_fee_outputs = false;\n+    // Set effective feerate up to 10'000'000 sats per kvB (10'000 sat/vB).\n+    coin_params.m_effective_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_long_term_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_discard_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_cost_of_change = ConsumeMoney(fuzzed_data_provider);\n+\n+    coin_params.change_output_size = fuzzed_data_provider.ConsumeIntegralInRange(1, MAX_SCRIPT_SIZE);\n+    coin_params.m_change_fee = coin_params.m_effective_feerate.GetFee(coin_params.change_output_size);\n+    coin_params.change_spend_size = fuzzed_data_provider.ConsumeIntegralInRange<int>(41, 1000);\n+    const auto change_spend_fee{coin_params.m_discard_feerate.GetFee(coin_params.change_spend_size)};\n+    coin_params.m_cost_of_change = coin_params.m_change_fee + change_spend_fee;",
      "path": "src/wallet/test/fuzz/coinselection.cpp",
      "position": 20,
      "original_position": 21,
      "commit_id": "96e1c8255299a38486c891d866063789f61f4f8a",
      "original_commit_id": "a383386b9dd2de7a08d202b1e8129a44b870763b",
      "in_reply_to_id": 2201595887,
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I suppose `MAX` could be `MAX_MONEY` here?",
      "created_at": "2025-07-11T19:16:34Z",
      "updated_at": "2025-07-11T19:16:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#discussion_r2201612657",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2201612657"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 236,
      "original_line": 236,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2201638315",
      "pull_request_review_id": 3011682856,
      "id": 2201638315,
      "node_id": "PRRC_kwDOABII586DOlWr",
      "diff_hunk": "@@ -217,6 +217,126 @@ FUZZ_TARGET(coin_grinder_is_optimal)\n     assert(!result_cg);\n }\n \n+FUZZ_TARGET(bnb_finds_min_waste)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    FastRandomContext fast_random_context{ConsumeUInt256(fuzzed_data_provider)};\n+    CoinSelectionParams coin_params{fast_random_context};\n+    coin_params.m_subtract_fee_outputs = false;\n+    // Set effective feerate up to 10'000'000 sats per kvB (10'000 sat/vB).\n+    coin_params.m_effective_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_long_term_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_discard_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_cost_of_change = ConsumeMoney(fuzzed_data_provider);\n+\n+    coin_params.change_output_size = fuzzed_data_provider.ConsumeIntegralInRange(1, MAX_SCRIPT_SIZE);\n+    coin_params.m_change_fee = coin_params.m_effective_feerate.GetFee(coin_params.change_output_size);\n+    coin_params.change_spend_size = fuzzed_data_provider.ConsumeIntegralInRange<int>(41, 1000);\n+    const auto change_spend_fee{coin_params.m_discard_feerate.GetFee(coin_params.change_spend_size)};\n+    coin_params.m_cost_of_change = coin_params.m_change_fee + change_spend_fee;\n+    CScript change_out_script = CScript() << std::vector<unsigned char>(coin_params.change_output_size, OP_TRUE);\n+    const auto dust{GetDustThreshold(CTxOut{/*nValueIn=*/0, change_out_script}, coin_params.m_discard_feerate)};\n+    coin_params.min_viable_change = std::max(change_spend_fee + 1, dust);\n+\n+    // Create some coins\n+    CAmount max_spendable{0};\n+    int next_locktime{0};\n+    static constexpr unsigned max_output_groups{16};\n+    std::vector<OutputGroup> group_pos;\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), max_output_groups)\n+    {\n+        // With maximum m_effective_feerate 10'000 s/vB and n_input_bytes = 20'000 B, input_fee <= MAX_MONEY.\n+        const int n_input_bytes{fuzzed_data_provider.ConsumeIntegralInRange<int>(1, 20'000)};\n+        const CAmount input_fee = coin_params.m_effective_feerate.GetFee(n_input_bytes);\n+        // Only make UTXOs with positive effective value\n+        const CAmount eff_value{fuzzed_data_provider.ConsumeIntegralInRange<CAmount>(1, MAX_MONEY + group_pos.size() - max_spendable - max_output_groups)};",
      "path": "src/wallet/test/fuzz/coinselection.cpp",
      "position": 36,
      "original_position": 37,
      "commit_id": "96e1c8255299a38486c891d866063789f61f4f8a",
      "original_commit_id": "a383386b9dd2de7a08d202b1e8129a44b870763b",
      "in_reply_to_id": null,
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "doesn't this create pools that could sum to greater than `MAX_MONEY`?",
      "created_at": "2025-07-11T19:22:34Z",
      "updated_at": "2025-07-11T19:22:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#discussion_r2201638315",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2201638315"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 252,
      "original_line": 252,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2201659630",
      "pull_request_review_id": 3011711344,
      "id": 2201659630,
      "node_id": "PRRC_kwDOABII586DOqju",
      "diff_hunk": "@@ -217,6 +217,126 @@ FUZZ_TARGET(coin_grinder_is_optimal)\n     assert(!result_cg);\n }\n \n+FUZZ_TARGET(bnb_finds_min_waste)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    FastRandomContext fast_random_context{ConsumeUInt256(fuzzed_data_provider)};\n+    CoinSelectionParams coin_params{fast_random_context};\n+    coin_params.m_subtract_fee_outputs = false;\n+    // Set effective feerate up to 10'000'000 sats per kvB (10'000 sat/vB).\n+    coin_params.m_effective_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_long_term_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_discard_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_cost_of_change = ConsumeMoney(fuzzed_data_provider);\n+\n+    coin_params.change_output_size = fuzzed_data_provider.ConsumeIntegralInRange(1, MAX_SCRIPT_SIZE);\n+    coin_params.m_change_fee = coin_params.m_effective_feerate.GetFee(coin_params.change_output_size);\n+    coin_params.change_spend_size = fuzzed_data_provider.ConsumeIntegralInRange<int>(41, 1000);\n+    const auto change_spend_fee{coin_params.m_discard_feerate.GetFee(coin_params.change_spend_size)};\n+    coin_params.m_cost_of_change = coin_params.m_change_fee + change_spend_fee;\n+    CScript change_out_script = CScript() << std::vector<unsigned char>(coin_params.change_output_size, OP_TRUE);\n+    const auto dust{GetDustThreshold(CTxOut{/*nValueIn=*/0, change_out_script}, coin_params.m_discard_feerate)};\n+    coin_params.min_viable_change = std::max(change_spend_fee + 1, dust);\n+\n+    // Create some coins\n+    CAmount max_spendable{0};\n+    int next_locktime{0};\n+    static constexpr unsigned max_output_groups{16};\n+    std::vector<OutputGroup> group_pos;\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), max_output_groups)\n+    {\n+        // With maximum m_effective_feerate 10'000 s/vB and n_input_bytes = 20'000 B, input_fee <= MAX_MONEY.\n+        const int n_input_bytes{fuzzed_data_provider.ConsumeIntegralInRange<int>(1, 20'000)};\n+        const CAmount input_fee = coin_params.m_effective_feerate.GetFee(n_input_bytes);\n+        // Only make UTXOs with positive effective value\n+        const CAmount eff_value{fuzzed_data_provider.ConsumeIntegralInRange<CAmount>(1, MAX_MONEY + group_pos.size() - max_spendable - max_output_groups)};\n+        const CAmount amount{eff_value + input_fee};\n+        std::vector<COutput> temp_utxo_pool;\n+\n+        AddCoin(amount, /*n_input=*/0, n_input_bytes, ++next_locktime, temp_utxo_pool, coin_params.m_effective_feerate);\n+        max_spendable += eff_value;\n+\n+        auto output_group = OutputGroup(coin_params);\n+        output_group.Insert(std::make_shared<COutput>(temp_utxo_pool.at(0)), /*ancestors=*/0, /*descendants=*/0);\n+        group_pos.push_back(output_group);\n+    }\n+    size_t num_groups = group_pos.size();\n+    assert(num_groups <= max_output_groups);\n+\n+    // Only choose targets below max_spendable",
      "path": "src/wallet/test/fuzz/coinselection.cpp",
      "position": 50,
      "original_position": 51,
      "commit_id": "96e1c8255299a38486c891d866063789f61f4f8a",
      "original_commit_id": "a383386b9dd2de7a08d202b1e8129a44b870763b",
      "in_reply_to_id": null,
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think there should be something that prevents `max_spendable` from being greater than `MAX_MONEY`?",
      "created_at": "2025-07-11T19:27:59Z",
      "updated_at": "2025-07-11T19:27:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#discussion_r2201659630",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2201659630"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 266,
      "original_line": 266,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2201729545",
      "pull_request_review_id": 3011804263,
      "id": 2201729545,
      "node_id": "PRRC_kwDOABII586DO7oJ",
      "diff_hunk": "@@ -217,6 +217,126 @@ FUZZ_TARGET(coin_grinder_is_optimal)\n     assert(!result_cg);\n }\n \n+FUZZ_TARGET(bnb_finds_min_waste)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    FastRandomContext fast_random_context{ConsumeUInt256(fuzzed_data_provider)};\n+    CoinSelectionParams coin_params{fast_random_context};\n+    coin_params.m_subtract_fee_outputs = false;\n+    // Set effective feerate up to 10'000'000 sats per kvB (10'000 sat/vB).\n+    coin_params.m_effective_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_long_term_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};",
      "path": "src/wallet/test/fuzz/coinselection.cpp",
      "position": 13,
      "original_position": 13,
      "commit_id": "96e1c8255299a38486c891d866063789f61f4f8a",
      "original_commit_id": "a383386b9dd2de7a08d202b1e8129a44b870763b",
      "in_reply_to_id": 2201577538,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The invariant you describe does not generally hold true. It would be possible that running BnB on the _same UTXO set_ with the same target at two different feerates would result in an input set with fewer inputs at the lower feerate than the result at the higher feerate due the difference in available combinations after factoring in fees (unless we are talking about two different UTXO sets that match in effective values at the different feerates).\n\nWe test for switch between consolidatory and thrifty behavior in [`bnb_feerate_sensitivity_test`](https://github.com/bitcoin/bitcoin/blob/23e15d40b96a23112fba24cece5fe513ae1a2877/src/wallet/test/coinselection_tests.cpp#L195) and it is not a goal of this fuzz harness to test feerate sensitivity, although it indirectly is tested by checking that the waste score matches between the BnB result and the brute force result when BnB finished running and was not interrupted by the iteration limit.",
      "created_at": "2025-07-11T19:55:52Z",
      "updated_at": "2025-07-11T21:10:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#discussion_r2201729545",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2201729545"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 229,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2201745084",
      "pull_request_review_id": 3011804263,
      "id": 2201745084,
      "node_id": "PRRC_kwDOABII586DO_a8",
      "diff_hunk": "@@ -217,6 +217,126 @@ FUZZ_TARGET(coin_grinder_is_optimal)\n     assert(!result_cg);\n }\n \n+FUZZ_TARGET(bnb_finds_min_waste)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    FastRandomContext fast_random_context{ConsumeUInt256(fuzzed_data_provider)};\n+    CoinSelectionParams coin_params{fast_random_context};\n+    coin_params.m_subtract_fee_outputs = false;\n+    // Set effective feerate up to 10'000'000 sats per kvB (10'000 sat/vB).\n+    coin_params.m_effective_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_long_term_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_discard_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_cost_of_change = ConsumeMoney(fuzzed_data_provider);",
      "path": "src/wallet/test/fuzz/coinselection.cpp",
      "position": 1,
      "original_position": 15,
      "commit_id": "96e1c8255299a38486c891d866063789f61f4f8a",
      "original_commit_id": "a383386b9dd2de7a08d202b1e8129a44b870763b",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Remove duplicate definition of `m_cost_of_change`.",
      "created_at": "2025-07-11T20:06:53Z",
      "updated_at": "2025-07-11T21:10:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#discussion_r2201745084",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2201745084"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 231,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2201750551",
      "pull_request_review_id": 3011804263,
      "id": 2201750551,
      "node_id": "PRRC_kwDOABII586DPAwX",
      "diff_hunk": "@@ -217,6 +217,126 @@ FUZZ_TARGET(coin_grinder_is_optimal)\n     assert(!result_cg);\n }\n \n+FUZZ_TARGET(bnb_finds_min_waste)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    FastRandomContext fast_random_context{ConsumeUInt256(fuzzed_data_provider)};\n+    CoinSelectionParams coin_params{fast_random_context};\n+    coin_params.m_subtract_fee_outputs = false;\n+    // Set effective feerate up to 10'000'000 sats per kvB (10'000 sat/vB).\n+    coin_params.m_effective_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_long_term_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_discard_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_cost_of_change = ConsumeMoney(fuzzed_data_provider);\n+\n+    coin_params.change_output_size = fuzzed_data_provider.ConsumeIntegralInRange(1, MAX_SCRIPT_SIZE);\n+    coin_params.m_change_fee = coin_params.m_effective_feerate.GetFee(coin_params.change_output_size);\n+    coin_params.change_spend_size = fuzzed_data_provider.ConsumeIntegralInRange<int>(41, 1000);\n+    const auto change_spend_fee{coin_params.m_discard_feerate.GetFee(coin_params.change_spend_size)};\n+    coin_params.m_cost_of_change = coin_params.m_change_fee + change_spend_fee;",
      "path": "src/wallet/test/fuzz/coinselection.cpp",
      "position": 20,
      "original_position": 21,
      "commit_id": "96e1c8255299a38486c891d866063789f61f4f8a",
      "original_commit_id": "a383386b9dd2de7a08d202b1e8129a44b870763b",
      "in_reply_to_id": 2201595887,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`change_fee` and `cost_of_change` are used in different calculations relating to the solution window of BnB and the waste calculation and in reality relate to the current feerate. Therefore it was instead chosen to fuzz the input and output size used to calculate them, but base them on the same feerate used for other calculations in the context.",
      "created_at": "2025-07-11T20:09:40Z",
      "updated_at": "2025-07-11T21:10:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#discussion_r2201750551",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2201750551"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 236,
      "original_line": 236,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2201817713",
      "pull_request_review_id": 3011804263,
      "id": 2201817713,
      "node_id": "PRRC_kwDOABII586DPRJx",
      "diff_hunk": "@@ -217,6 +217,126 @@ FUZZ_TARGET(coin_grinder_is_optimal)\n     assert(!result_cg);\n }\n \n+FUZZ_TARGET(bnb_finds_min_waste)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    FastRandomContext fast_random_context{ConsumeUInt256(fuzzed_data_provider)};\n+    CoinSelectionParams coin_params{fast_random_context};\n+    coin_params.m_subtract_fee_outputs = false;\n+    // Set effective feerate up to 10'000'000 sats per kvB (10'000 sat/vB).\n+    coin_params.m_effective_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_long_term_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_discard_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_cost_of_change = ConsumeMoney(fuzzed_data_provider);\n+\n+    coin_params.change_output_size = fuzzed_data_provider.ConsumeIntegralInRange(1, MAX_SCRIPT_SIZE);\n+    coin_params.m_change_fee = coin_params.m_effective_feerate.GetFee(coin_params.change_output_size);\n+    coin_params.change_spend_size = fuzzed_data_provider.ConsumeIntegralInRange<int>(41, 1000);\n+    const auto change_spend_fee{coin_params.m_discard_feerate.GetFee(coin_params.change_spend_size)};\n+    coin_params.m_cost_of_change = coin_params.m_change_fee + change_spend_fee;\n+    CScript change_out_script = CScript() << std::vector<unsigned char>(coin_params.change_output_size, OP_TRUE);\n+    const auto dust{GetDustThreshold(CTxOut{/*nValueIn=*/0, change_out_script}, coin_params.m_discard_feerate)};\n+    coin_params.min_viable_change = std::max(change_spend_fee + 1, dust);\n+\n+    // Create some coins\n+    CAmount max_spendable{0};\n+    int next_locktime{0};\n+    static constexpr unsigned max_output_groups{16};",
      "path": "src/wallet/test/fuzz/coinselection.cpp",
      "position": 28,
      "original_position": 29,
      "commit_id": "96e1c8255299a38486c891d866063789f61f4f8a",
      "original_commit_id": "a383386b9dd2de7a08d202b1e8129a44b870763b",
      "in_reply_to_id": 2201606218,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "We already have the [`coinselection_bnb` fuzz target](https://github.com/bitcoin/bitcoin/blob/23e15d40b96a23112fba24cece5fe513ae1a2877/src/wallet/test/fuzz/coinselection.cpp#L347C1-L351C1) which runs BnB on UTXO pools of up to 10,000 UTXOs and validates that if BnB finds a solution that it falls in the solution window.\n\nIn contrast to the existing fuzz test, this fuzz target generates inputs that have solutions and don’t have solution. It then asserts that when the brute force search indicates that a solution exists, BnB also finds a solution, and if BnB finished searching the entire combination space, BnB’s result matches the optimal solution per BnB’s fitness function.\n\nAbove 17 UTXOs a fuzz input could be generated whose scenario [exhausts BnB’s iteration limit](https://github.com/bitcoin/bitcoin/blob/23e15d40b96a23112fba24cece5fe513ae1a2877/src/wallet/test/coinselection_tests.cpp#L156) before BnB finds any solution. The invariant that BnB will always find a solution when the brute force algorithm finds a solution no longer holds above 17 UTXOs.\n\nI guess I could increase it to 17 instead of 16, though.",
      "created_at": "2025-07-11T20:48:28Z",
      "updated_at": "2025-07-11T21:10:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#discussion_r2201817713",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2201817713"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 244,
      "original_line": 244,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2201834598",
      "pull_request_review_id": 3011804263,
      "id": 2201834598,
      "node_id": "PRRC_kwDOABII586DPVRm",
      "diff_hunk": "@@ -217,6 +217,126 @@ FUZZ_TARGET(coin_grinder_is_optimal)\n     assert(!result_cg);\n }\n \n+FUZZ_TARGET(bnb_finds_min_waste)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    FastRandomContext fast_random_context{ConsumeUInt256(fuzzed_data_provider)};\n+    CoinSelectionParams coin_params{fast_random_context};\n+    coin_params.m_subtract_fee_outputs = false;\n+    // Set effective feerate up to 10'000'000 sats per kvB (10'000 sat/vB).\n+    coin_params.m_effective_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_long_term_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_discard_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_cost_of_change = ConsumeMoney(fuzzed_data_provider);\n+\n+    coin_params.change_output_size = fuzzed_data_provider.ConsumeIntegralInRange(1, MAX_SCRIPT_SIZE);\n+    coin_params.m_change_fee = coin_params.m_effective_feerate.GetFee(coin_params.change_output_size);\n+    coin_params.change_spend_size = fuzzed_data_provider.ConsumeIntegralInRange<int>(41, 1000);\n+    const auto change_spend_fee{coin_params.m_discard_feerate.GetFee(coin_params.change_spend_size)};\n+    coin_params.m_cost_of_change = coin_params.m_change_fee + change_spend_fee;\n+    CScript change_out_script = CScript() << std::vector<unsigned char>(coin_params.change_output_size, OP_TRUE);\n+    const auto dust{GetDustThreshold(CTxOut{/*nValueIn=*/0, change_out_script}, coin_params.m_discard_feerate)};\n+    coin_params.min_viable_change = std::max(change_spend_fee + 1, dust);\n+\n+    // Create some coins\n+    CAmount max_spendable{0};\n+    int next_locktime{0};\n+    static constexpr unsigned max_output_groups{16};\n+    std::vector<OutputGroup> group_pos;\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), max_output_groups)\n+    {\n+        // With maximum m_effective_feerate 10'000 s/vB and n_input_bytes = 20'000 B, input_fee <= MAX_MONEY.\n+        const int n_input_bytes{fuzzed_data_provider.ConsumeIntegralInRange<int>(1, 20'000)};\n+        const CAmount input_fee = coin_params.m_effective_feerate.GetFee(n_input_bytes);\n+        // Only make UTXOs with positive effective value\n+        const CAmount eff_value{fuzzed_data_provider.ConsumeIntegralInRange<CAmount>(1, MAX_MONEY + group_pos.size() - max_spendable - max_output_groups)};",
      "path": "src/wallet/test/fuzz/coinselection.cpp",
      "position": 36,
      "original_position": 37,
      "commit_id": "96e1c8255299a38486c891d866063789f61f4f8a",
      "original_commit_id": "a383386b9dd2de7a08d202b1e8129a44b870763b",
      "in_reply_to_id": 2201638315,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I don’t think so.\n\n`max_spendable` starts at 0 and then sums the effective values of the generated UTXO (see line 258). As `max_spendable` grows, it limits the amount available to the remaining UTXOs as they are generated.\n`+ group_pos.size() - max_output_groups` ensures that there is always at least 1 sat left to be assigned to the current UTXO.",
      "created_at": "2025-07-11T20:57:31Z",
      "updated_at": "2025-07-11T21:10:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#discussion_r2201834598",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2201834598"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 252,
      "original_line": 252,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2201863280",
      "pull_request_review_id": 3011804263,
      "id": 2201863280,
      "node_id": "PRRC_kwDOABII586DPcRw",
      "diff_hunk": "@@ -217,6 +217,126 @@ FUZZ_TARGET(coin_grinder_is_optimal)\n     assert(!result_cg);\n }\n \n+FUZZ_TARGET(bnb_finds_min_waste)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    FastRandomContext fast_random_context{ConsumeUInt256(fuzzed_data_provider)};\n+    CoinSelectionParams coin_params{fast_random_context};\n+    coin_params.m_subtract_fee_outputs = false;\n+    // Set effective feerate up to 10'000'000 sats per kvB (10'000 sat/vB).\n+    coin_params.m_effective_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_long_term_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_discard_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_cost_of_change = ConsumeMoney(fuzzed_data_provider);\n+\n+    coin_params.change_output_size = fuzzed_data_provider.ConsumeIntegralInRange(1, MAX_SCRIPT_SIZE);\n+    coin_params.m_change_fee = coin_params.m_effective_feerate.GetFee(coin_params.change_output_size);\n+    coin_params.change_spend_size = fuzzed_data_provider.ConsumeIntegralInRange<int>(41, 1000);\n+    const auto change_spend_fee{coin_params.m_discard_feerate.GetFee(coin_params.change_spend_size)};\n+    coin_params.m_cost_of_change = coin_params.m_change_fee + change_spend_fee;\n+    CScript change_out_script = CScript() << std::vector<unsigned char>(coin_params.change_output_size, OP_TRUE);\n+    const auto dust{GetDustThreshold(CTxOut{/*nValueIn=*/0, change_out_script}, coin_params.m_discard_feerate)};\n+    coin_params.min_viable_change = std::max(change_spend_fee + 1, dust);\n+\n+    // Create some coins\n+    CAmount max_spendable{0};\n+    int next_locktime{0};\n+    static constexpr unsigned max_output_groups{16};\n+    std::vector<OutputGroup> group_pos;\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), max_output_groups)\n+    {\n+        // With maximum m_effective_feerate 10'000 s/vB and n_input_bytes = 20'000 B, input_fee <= MAX_MONEY.\n+        const int n_input_bytes{fuzzed_data_provider.ConsumeIntegralInRange<int>(1, 20'000)};\n+        const CAmount input_fee = coin_params.m_effective_feerate.GetFee(n_input_bytes);\n+        // Only make UTXOs with positive effective value\n+        const CAmount eff_value{fuzzed_data_provider.ConsumeIntegralInRange<CAmount>(1, MAX_MONEY + group_pos.size() - max_spendable - max_output_groups)};\n+        const CAmount amount{eff_value + input_fee};\n+        std::vector<COutput> temp_utxo_pool;\n+\n+        AddCoin(amount, /*n_input=*/0, n_input_bytes, ++next_locktime, temp_utxo_pool, coin_params.m_effective_feerate);\n+        max_spendable += eff_value;\n+\n+        auto output_group = OutputGroup(coin_params);\n+        output_group.Insert(std::make_shared<COutput>(temp_utxo_pool.at(0)), /*ancestors=*/0, /*descendants=*/0);\n+        group_pos.push_back(output_group);\n+    }\n+    size_t num_groups = group_pos.size();\n+    assert(num_groups <= max_output_groups);\n+\n+    // Only choose targets below max_spendable",
      "path": "src/wallet/test/fuzz/coinselection.cpp",
      "position": 50,
      "original_position": 51,
      "commit_id": "96e1c8255299a38486c891d866063789f61f4f8a",
      "original_commit_id": "a383386b9dd2de7a08d202b1e8129a44b870763b",
      "in_reply_to_id": 2201659630,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`max_spendable` is the sum of effective values of the generated UTXOs and they are being generated by being picking values from the gap that is left between `max_spendable` and `MAX_MONEY`. \n\nExample:\n\n- `MAX_MONEY` is 100.\n- `max_output_groups` is 3.\n\n\n1. The effective value for the first UTXO _A_ is generated randomly between `(1, MAX_MONEY + group_pos.size() - max_spendable - max_output_groups)`, i.e. (1, 100 + 0 - 0 - 3) = (1, 97).\nLet’s say it’s 43. `max_spendable` becomes 43.\n2. The effective value of the second UTXO _B_ is now generated randomly between (1, 100 + 1 - 43 -3) = (1, 55). Let’s say it’s 51. `max_spendable` is now 84.\n3. The effective value for the third UTXO _C_ is now generated randomly between (1, 100 + 2 - 84 - 3) = (1, 15). Let’s say it’s the maximum of 15. `max_spendable` is now 99 and less than `MAX_MONEY`.",
      "created_at": "2025-07-11T21:08:18Z",
      "updated_at": "2025-07-11T21:10:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#discussion_r2201863280",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2201863280"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 266,
      "original_line": 266,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2202009761",
      "pull_request_review_id": 3012193876,
      "id": 2202009761,
      "node_id": "PRRC_kwDOABII586DQACh",
      "diff_hunk": "@@ -217,6 +217,126 @@ FUZZ_TARGET(coin_grinder_is_optimal)\n     assert(!result_cg);\n }\n \n+FUZZ_TARGET(bnb_finds_min_waste)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    FastRandomContext fast_random_context{ConsumeUInt256(fuzzed_data_provider)};\n+    CoinSelectionParams coin_params{fast_random_context};\n+    coin_params.m_subtract_fee_outputs = false;\n+    // Set effective feerate up to 10'000'000 sats per kvB (10'000 sat/vB).\n+    coin_params.m_effective_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_long_term_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_discard_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_cost_of_change = ConsumeMoney(fuzzed_data_provider);\n+\n+    coin_params.change_output_size = fuzzed_data_provider.ConsumeIntegralInRange(1, MAX_SCRIPT_SIZE);\n+    coin_params.m_change_fee = coin_params.m_effective_feerate.GetFee(coin_params.change_output_size);\n+    coin_params.change_spend_size = fuzzed_data_provider.ConsumeIntegralInRange<int>(41, 1000);\n+    const auto change_spend_fee{coin_params.m_discard_feerate.GetFee(coin_params.change_spend_size)};\n+    coin_params.m_cost_of_change = coin_params.m_change_fee + change_spend_fee;\n+    CScript change_out_script = CScript() << std::vector<unsigned char>(coin_params.change_output_size, OP_TRUE);\n+    const auto dust{GetDustThreshold(CTxOut{/*nValueIn=*/0, change_out_script}, coin_params.m_discard_feerate)};\n+    coin_params.min_viable_change = std::max(change_spend_fee + 1, dust);\n+\n+    // Create some coins\n+    CAmount max_spendable{0};\n+    int next_locktime{0};\n+    static constexpr unsigned max_output_groups{16};",
      "path": "src/wallet/test/fuzz/coinselection.cpp",
      "position": 28,
      "original_position": 29,
      "commit_id": "96e1c8255299a38486c891d866063789f61f4f8a",
      "original_commit_id": "a383386b9dd2de7a08d202b1e8129a44b870763b",
      "in_reply_to_id": 2201606218,
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> We already have the [coinselection_bnb fuzz target](https://github.com/bitcoin/bitcoin/blob/23e15d40b96a23112fba24cece5fe513ae1a2877/src/wallet/test/fuzz/coinselection.cpp#L347C1-L351C1) which runs BnB on UTXO pools of up to 10,000 UTXOs and validates that if BnB finds a solution that it falls in the solution window.\r\n\r\nI see.  That is also valuable.  However, this does not test the case where a solution does exist (say with 20 UTXOS) and BnB does not find the result, only that any found solution matches the parameters.  The brute force technique would also not test such a case.  It's possible BnB could find solutions of up to 100,000 UTXOs if every UTXO was in the explore branch I believe.\r\n\r\nI admit, it is problematic to try to test every case.",
      "created_at": "2025-07-11T22:42:16Z",
      "updated_at": "2025-07-11T22:42:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#discussion_r2202009761",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2202009761"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 244,
      "original_line": 244,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2202046274",
      "pull_request_review_id": 3012244641,
      "id": 2202046274,
      "node_id": "PRRC_kwDOABII586DQI9C",
      "diff_hunk": "@@ -217,6 +217,126 @@ FUZZ_TARGET(coin_grinder_is_optimal)\n     assert(!result_cg);\n }\n \n+FUZZ_TARGET(bnb_finds_min_waste)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    FastRandomContext fast_random_context{ConsumeUInt256(fuzzed_data_provider)};\n+    CoinSelectionParams coin_params{fast_random_context};\n+    coin_params.m_subtract_fee_outputs = false;\n+    // Set effective feerate up to 10'000'000 sats per kvB (10'000 sat/vB).\n+    coin_params.m_effective_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_long_term_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_discard_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_cost_of_change = ConsumeMoney(fuzzed_data_provider);\n+\n+    coin_params.change_output_size = fuzzed_data_provider.ConsumeIntegralInRange(1, MAX_SCRIPT_SIZE);\n+    coin_params.m_change_fee = coin_params.m_effective_feerate.GetFee(coin_params.change_output_size);\n+    coin_params.change_spend_size = fuzzed_data_provider.ConsumeIntegralInRange<int>(41, 1000);\n+    const auto change_spend_fee{coin_params.m_discard_feerate.GetFee(coin_params.change_spend_size)};\n+    coin_params.m_cost_of_change = coin_params.m_change_fee + change_spend_fee;\n+    CScript change_out_script = CScript() << std::vector<unsigned char>(coin_params.change_output_size, OP_TRUE);\n+    const auto dust{GetDustThreshold(CTxOut{/*nValueIn=*/0, change_out_script}, coin_params.m_discard_feerate)};\n+    coin_params.min_viable_change = std::max(change_spend_fee + 1, dust);\n+\n+    // Create some coins\n+    CAmount max_spendable{0};\n+    int next_locktime{0};\n+    static constexpr unsigned max_output_groups{16};",
      "path": "src/wallet/test/fuzz/coinselection.cpp",
      "position": 28,
      "original_position": 29,
      "commit_id": "96e1c8255299a38486c891d866063789f61f4f8a",
      "original_commit_id": "a383386b9dd2de7a08d202b1e8129a44b870763b",
      "in_reply_to_id": 2201606218,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Let’s say you create a fuzz target that generates two sets of UTXOs and sums up the effective value of one set to set that as its target. For UTXO counts exceeding 17, BnB might return a solution and then we could check exactly the properties that `coinselection_bnb` checks and additionally, that the solution is at least as good as the input set we originally used to generate the target.\r\n\r\nHowever, while #32150 introduces the use of `m_algo_completed` and `m_selections_evaluated` to BnB, they are properties of `SelectionResult`; but when a coin selection algorithm fails to find a solution, it does not return a `SelectionResult` object, but just an error: either [returns `ErrorMaxWeightExceeded` or `util::Error`](https://github.com/bitcoin/bitcoin/blob/6a13a6106e3c1ebe95ba6430184d6260a7b942bd/src/wallet/coinselection.cpp#L190)  which do not surface these two properties.\r\nWe currently wouldn’t even be able to tell whether it failed because it hit the iteration limit, or whether it didn’t find a solution we know to exist, so I don’t think we would learn anything in addition to the two fuzz targets we have from the fuzz target you describe.",
      "created_at": "2025-07-11T23:14:44Z",
      "updated_at": "2025-07-11T23:22:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#discussion_r2202046274",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2202046274"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 244,
      "original_line": 244,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2202048060",
      "pull_request_review_id": 3012246838,
      "id": 2202048060,
      "node_id": "PRRC_kwDOABII586DQJY8",
      "diff_hunk": "@@ -217,6 +217,126 @@ FUZZ_TARGET(coin_grinder_is_optimal)\n     assert(!result_cg);\n }\n \n+FUZZ_TARGET(bnb_finds_min_waste)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    FastRandomContext fast_random_context{ConsumeUInt256(fuzzed_data_provider)};\n+    CoinSelectionParams coin_params{fast_random_context};\n+    coin_params.m_subtract_fee_outputs = false;\n+    // Set effective feerate up to 10'000'000 sats per kvB (10'000 sat/vB).\n+    coin_params.m_effective_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_long_term_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_discard_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_cost_of_change = ConsumeMoney(fuzzed_data_provider);\n+\n+    coin_params.change_output_size = fuzzed_data_provider.ConsumeIntegralInRange(1, MAX_SCRIPT_SIZE);\n+    coin_params.m_change_fee = coin_params.m_effective_feerate.GetFee(coin_params.change_output_size);\n+    coin_params.change_spend_size = fuzzed_data_provider.ConsumeIntegralInRange<int>(41, 1000);\n+    const auto change_spend_fee{coin_params.m_discard_feerate.GetFee(coin_params.change_spend_size)};\n+    coin_params.m_cost_of_change = coin_params.m_change_fee + change_spend_fee;\n+    CScript change_out_script = CScript() << std::vector<unsigned char>(coin_params.change_output_size, OP_TRUE);\n+    const auto dust{GetDustThreshold(CTxOut{/*nValueIn=*/0, change_out_script}, coin_params.m_discard_feerate)};\n+    coin_params.min_viable_change = std::max(change_spend_fee + 1, dust);\n+\n+    // Create some coins\n+    CAmount max_spendable{0};\n+    int next_locktime{0};\n+    static constexpr unsigned max_output_groups{16};",
      "path": "src/wallet/test/fuzz/coinselection.cpp",
      "position": 28,
      "original_position": 29,
      "commit_id": "96e1c8255299a38486c891d866063789f61f4f8a",
      "original_commit_id": "a383386b9dd2de7a08d202b1e8129a44b870763b",
      "in_reply_to_id": 2201606218,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It may however be interesting to introduce another Error class to coin selection which surfaces when the iteration limit was hit before a solution was found. Then we could distinguish between not finding a solution due to exhausting iterations or due to overlooking a solution that we should have found, and fuzzing BnB with bigger UTXO pools that are known to contain a solution would become interesting.",
      "created_at": "2025-07-11T23:16:55Z",
      "updated_at": "2025-07-12T00:29:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#discussion_r2202048060",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2202048060"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 244,
      "original_line": 244,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2202233279",
      "pull_request_review_id": 3012522148,
      "id": 2202233279,
      "node_id": "PRRC_kwDOABII586DQ2m_",
      "diff_hunk": "@@ -217,6 +217,126 @@ FUZZ_TARGET(coin_grinder_is_optimal)\n     assert(!result_cg);\n }\n \n+FUZZ_TARGET(bnb_finds_min_waste)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    FastRandomContext fast_random_context{ConsumeUInt256(fuzzed_data_provider)};\n+    CoinSelectionParams coin_params{fast_random_context};\n+    coin_params.m_subtract_fee_outputs = false;\n+    // Set effective feerate up to 10'000'000 sats per kvB (10'000 sat/vB).\n+    coin_params.m_effective_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_long_term_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_discard_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_cost_of_change = ConsumeMoney(fuzzed_data_provider);\n+\n+    coin_params.change_output_size = fuzzed_data_provider.ConsumeIntegralInRange(1, MAX_SCRIPT_SIZE);\n+    coin_params.m_change_fee = coin_params.m_effective_feerate.GetFee(coin_params.change_output_size);\n+    coin_params.change_spend_size = fuzzed_data_provider.ConsumeIntegralInRange<int>(41, 1000);\n+    const auto change_spend_fee{coin_params.m_discard_feerate.GetFee(coin_params.change_spend_size)};\n+    coin_params.m_cost_of_change = coin_params.m_change_fee + change_spend_fee;\n+    CScript change_out_script = CScript() << std::vector<unsigned char>(coin_params.change_output_size, OP_TRUE);\n+    const auto dust{GetDustThreshold(CTxOut{/*nValueIn=*/0, change_out_script}, coin_params.m_discard_feerate)};\n+    coin_params.min_viable_change = std::max(change_spend_fee + 1, dust);\n+\n+    // Create some coins\n+    CAmount max_spendable{0};\n+    int next_locktime{0};\n+    static constexpr unsigned max_output_groups{16};",
      "path": "src/wallet/test/fuzz/coinselection.cpp",
      "position": 28,
      "original_position": 29,
      "commit_id": "96e1c8255299a38486c891d866063789f61f4f8a",
      "original_commit_id": "a383386b9dd2de7a08d202b1e8129a44b870763b",
      "in_reply_to_id": 2201606218,
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> It may however be interesting to introduce another Error class to coin selection which surfaces when the iteration limit was hit before a solution was found\r\n\r\nYes exactly.  That's how the test works in the rust implementation I wrote.  A solution is created from one of two pools and then the pools are combined and shuffled.  I have an error that is returned that distinguish iteration limit reached from no solution, so to test BnB is correct, we know we should never see no solution, only iteration limit reached or a solution (or overflow is another possibility).\r\n\r\nHowever, I think the only way to test that BnB finds no solution when no solution exists is to take a target and look through every subset in brute force to validate that no solution exists.  So ideally, there would be those two tests.  One that tests for a known solution and one that tests for no solution.",
      "created_at": "2025-07-12T01:53:33Z",
      "updated_at": "2025-07-12T01:53:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#discussion_r2202233279",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2202233279"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 244,
      "original_line": 244,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2202239602",
      "pull_request_review_id": 3012535157,
      "id": 2202239602,
      "node_id": "PRRC_kwDOABII586DQ4Jy",
      "diff_hunk": "@@ -217,6 +217,126 @@ FUZZ_TARGET(coin_grinder_is_optimal)\n     assert(!result_cg);\n }\n \n+FUZZ_TARGET(bnb_finds_min_waste)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    FastRandomContext fast_random_context{ConsumeUInt256(fuzzed_data_provider)};\n+    CoinSelectionParams coin_params{fast_random_context};\n+    coin_params.m_subtract_fee_outputs = false;\n+    // Set effective feerate up to 10'000'000 sats per kvB (10'000 sat/vB).\n+    coin_params.m_effective_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_long_term_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};",
      "path": "src/wallet/test/fuzz/coinselection.cpp",
      "position": 13,
      "original_position": 13,
      "commit_id": "96e1c8255299a38486c891d866063789f61f4f8a",
      "original_commit_id": "a383386b9dd2de7a08d202b1e8129a44b870763b",
      "in_reply_to_id": 2201577538,
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I did not mean to use two UTXO sets.  If you have a single UTXO set and one swaps the long_term_fee_rate and the short term fee_rate, that ought to produce either the same results or different results depending on if the current fees are expensive or if the current fee_rates are cheap.  I think the test you linked to shows that since the same set is used `{2, 3, 5, 10}` which returns different results depending on the difference in fee_rate and long_term_fee_rate.  The difference between expensive and cheap fee_rates can be toggled by swapping fee_rate for long_term_fee_rate and running BnB again, unless I'm missing something.\r\n\r\nAnyway, I understand not wanting to add that complexity to the test.",
      "created_at": "2025-07-12T02:09:35Z",
      "updated_at": "2025-07-12T02:09:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#discussion_r2202239602",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2202239602"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 229,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2202647828",
      "pull_request_review_id": 3013130327,
      "id": 2202647828,
      "node_id": "PRRC_kwDOABII586DSb0U",
      "diff_hunk": "@@ -217,6 +217,126 @@ FUZZ_TARGET(coin_grinder_is_optimal)\n     assert(!result_cg);\n }\n \n+FUZZ_TARGET(bnb_finds_min_waste)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    FastRandomContext fast_random_context{ConsumeUInt256(fuzzed_data_provider)};\n+    CoinSelectionParams coin_params{fast_random_context};\n+    coin_params.m_subtract_fee_outputs = false;\n+    // Set effective feerate up to 10'000'000 sats per kvB (10'000 sat/vB).\n+    coin_params.m_effective_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_long_term_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_discard_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_cost_of_change = ConsumeMoney(fuzzed_data_provider);\n+\n+    coin_params.change_output_size = fuzzed_data_provider.ConsumeIntegralInRange(1, MAX_SCRIPT_SIZE);\n+    coin_params.m_change_fee = coin_params.m_effective_feerate.GetFee(coin_params.change_output_size);\n+    coin_params.change_spend_size = fuzzed_data_provider.ConsumeIntegralInRange<int>(41, 1000);\n+    const auto change_spend_fee{coin_params.m_discard_feerate.GetFee(coin_params.change_spend_size)};\n+    coin_params.m_cost_of_change = coin_params.m_change_fee + change_spend_fee;\n+    CScript change_out_script = CScript() << std::vector<unsigned char>(coin_params.change_output_size, OP_TRUE);\n+    const auto dust{GetDustThreshold(CTxOut{/*nValueIn=*/0, change_out_script}, coin_params.m_discard_feerate)};\n+    coin_params.min_viable_change = std::max(change_spend_fee + 1, dust);\n+\n+    // Create some coins\n+    CAmount max_spendable{0};\n+    int next_locktime{0};\n+    static constexpr unsigned max_output_groups{16};",
      "path": "src/wallet/test/fuzz/coinselection.cpp",
      "position": 28,
      "original_position": 29,
      "commit_id": "96e1c8255299a38486c891d866063789f61f4f8a",
      "original_commit_id": "a383386b9dd2de7a08d202b1e8129a44b870763b",
      "in_reply_to_id": 2201606218,
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "For reference, this is the rust test I recently wrote: https://github.com/p2pderivatives/rust-bitcoin-coin-selection/blob/3ae36852f4263270e794c444e9fc09172997fc67/src/branch_and_bound.rs#L866",
      "created_at": "2025-07-12T13:25:22Z",
      "updated_at": "2025-07-12T13:25:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#discussion_r2202647828",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2202647828"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 244,
      "original_line": 244,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2202682814",
      "pull_request_review_id": 3013176961,
      "id": 2202682814,
      "node_id": "PRRC_kwDOABII586DSkW-",
      "diff_hunk": "@@ -217,6 +217,126 @@ FUZZ_TARGET(coin_grinder_is_optimal)\n     assert(!result_cg);\n }\n \n+FUZZ_TARGET(bnb_finds_min_waste)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    FastRandomContext fast_random_context{ConsumeUInt256(fuzzed_data_provider)};\n+    CoinSelectionParams coin_params{fast_random_context};\n+    coin_params.m_subtract_fee_outputs = false;\n+    // Set effective feerate up to 10'000'000 sats per kvB (10'000 sat/vB).\n+    coin_params.m_effective_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_long_term_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_discard_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_cost_of_change = ConsumeMoney(fuzzed_data_provider);\n+\n+    coin_params.change_output_size = fuzzed_data_provider.ConsumeIntegralInRange(1, MAX_SCRIPT_SIZE);\n+    coin_params.m_change_fee = coin_params.m_effective_feerate.GetFee(coin_params.change_output_size);\n+    coin_params.change_spend_size = fuzzed_data_provider.ConsumeIntegralInRange<int>(41, 1000);\n+    const auto change_spend_fee{coin_params.m_discard_feerate.GetFee(coin_params.change_spend_size)};\n+    coin_params.m_cost_of_change = coin_params.m_change_fee + change_spend_fee;\n+    CScript change_out_script = CScript() << std::vector<unsigned char>(coin_params.change_output_size, OP_TRUE);\n+    const auto dust{GetDustThreshold(CTxOut{/*nValueIn=*/0, change_out_script}, coin_params.m_discard_feerate)};\n+    coin_params.min_viable_change = std::max(change_spend_fee + 1, dust);\n+\n+    // Create some coins\n+    CAmount max_spendable{0};\n+    int next_locktime{0};\n+    static constexpr unsigned max_output_groups{16};",
      "path": "src/wallet/test/fuzz/coinselection.cpp",
      "position": 28,
      "original_position": 29,
      "commit_id": "96e1c8255299a38486c891d866063789f61f4f8a",
      "original_commit_id": "a383386b9dd2de7a08d202b1e8129a44b870763b",
      "in_reply_to_id": 2201606218,
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I just noticed a subtle bug in the test that I fixed.  Let's see if anyone else notices :nerd_face: ",
      "created_at": "2025-07-12T14:01:34Z",
      "updated_at": "2025-07-12T14:01:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#discussion_r2202682814",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2202682814"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 244,
      "original_line": 244,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2202762467",
      "pull_request_review_id": 3013290702,
      "id": 2202762467,
      "node_id": "PRRC_kwDOABII586DS3zj",
      "diff_hunk": "@@ -217,6 +217,126 @@ FUZZ_TARGET(coin_grinder_is_optimal)\n     assert(!result_cg);\n }\n \n+FUZZ_TARGET(bnb_finds_min_waste)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    FastRandomContext fast_random_context{ConsumeUInt256(fuzzed_data_provider)};\n+    CoinSelectionParams coin_params{fast_random_context};\n+    coin_params.m_subtract_fee_outputs = false;\n+    // Set effective feerate up to 10'000'000 sats per kvB (10'000 sat/vB).\n+    coin_params.m_effective_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_long_term_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_discard_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_cost_of_change = ConsumeMoney(fuzzed_data_provider);\n+\n+    coin_params.change_output_size = fuzzed_data_provider.ConsumeIntegralInRange(1, MAX_SCRIPT_SIZE);\n+    coin_params.m_change_fee = coin_params.m_effective_feerate.GetFee(coin_params.change_output_size);\n+    coin_params.change_spend_size = fuzzed_data_provider.ConsumeIntegralInRange<int>(41, 1000);\n+    const auto change_spend_fee{coin_params.m_discard_feerate.GetFee(coin_params.change_spend_size)};\n+    coin_params.m_cost_of_change = coin_params.m_change_fee + change_spend_fee;",
      "path": "src/wallet/test/fuzz/coinselection.cpp",
      "position": 20,
      "original_position": 21,
      "commit_id": "96e1c8255299a38486c891d866063789f61f4f8a",
      "original_commit_id": "a383386b9dd2de7a08d202b1e8129a44b870763b",
      "in_reply_to_id": 2201595887,
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I see.  So `cost_of_change` is variable based on the change output size which is range bound `(0, MAX_SCRIPT_SIZE)` since the cost of creating the change output depends on the size of the change output created.  I didn't know there was a max script size for an output!?\r\n\r\nI think this type of thing might be worth adding in more detail to the commit message to help reviewers.",
      "created_at": "2025-07-12T15:34:25Z",
      "updated_at": "2025-07-12T15:34:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#discussion_r2202762467",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2202762467"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 236,
      "original_line": 236,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2202763864",
      "pull_request_review_id": 3013293337,
      "id": 2202763864,
      "node_id": "PRRC_kwDOABII586DS4JY",
      "diff_hunk": "@@ -217,6 +217,126 @@ FUZZ_TARGET(coin_grinder_is_optimal)\n     assert(!result_cg);\n }\n \n+FUZZ_TARGET(bnb_finds_min_waste)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    FastRandomContext fast_random_context{ConsumeUInt256(fuzzed_data_provider)};\n+    CoinSelectionParams coin_params{fast_random_context};\n+    coin_params.m_subtract_fee_outputs = false;\n+    // Set effective feerate up to 10'000'000 sats per kvB (10'000 sat/vB).\n+    coin_params.m_effective_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_long_term_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_discard_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_cost_of_change = ConsumeMoney(fuzzed_data_provider);",
      "path": "src/wallet/test/fuzz/coinselection.cpp",
      "position": 1,
      "original_position": 15,
      "commit_id": "96e1c8255299a38486c891d866063789f61f4f8a",
      "original_commit_id": "a383386b9dd2de7a08d202b1e8129a44b870763b",
      "in_reply_to_id": 2201745084,
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good call, I just noticed that as well.",
      "created_at": "2025-07-12T15:35:08Z",
      "updated_at": "2025-07-12T15:35:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#discussion_r2202763864",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2202763864"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 231,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2202897142",
      "pull_request_review_id": 3013502869,
      "id": 2202897142,
      "node_id": "PRRC_kwDOABII586DTYr2",
      "diff_hunk": "@@ -217,6 +217,126 @@ FUZZ_TARGET(coin_grinder_is_optimal)\n     assert(!result_cg);\n }\n \n+FUZZ_TARGET(bnb_finds_min_waste)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    FastRandomContext fast_random_context{ConsumeUInt256(fuzzed_data_provider)};\n+    CoinSelectionParams coin_params{fast_random_context};\n+    coin_params.m_subtract_fee_outputs = false;\n+    // Set effective feerate up to 10'000'000 sats per kvB (10'000 sat/vB).\n+    coin_params.m_effective_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_long_term_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_discard_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_cost_of_change = ConsumeMoney(fuzzed_data_provider);\n+\n+    coin_params.change_output_size = fuzzed_data_provider.ConsumeIntegralInRange(1, MAX_SCRIPT_SIZE);\n+    coin_params.m_change_fee = coin_params.m_effective_feerate.GetFee(coin_params.change_output_size);\n+    coin_params.change_spend_size = fuzzed_data_provider.ConsumeIntegralInRange<int>(41, 1000);\n+    const auto change_spend_fee{coin_params.m_discard_feerate.GetFee(coin_params.change_spend_size)};\n+    coin_params.m_cost_of_change = coin_params.m_change_fee + change_spend_fee;\n+    CScript change_out_script = CScript() << std::vector<unsigned char>(coin_params.change_output_size, OP_TRUE);\n+    const auto dust{GetDustThreshold(CTxOut{/*nValueIn=*/0, change_out_script}, coin_params.m_discard_feerate)};\n+    coin_params.min_viable_change = std::max(change_spend_fee + 1, dust);\n+\n+    // Create some coins\n+    CAmount max_spendable{0};\n+    int next_locktime{0};\n+    static constexpr unsigned max_output_groups{16};\n+    std::vector<OutputGroup> group_pos;\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), max_output_groups)\n+    {\n+        // With maximum m_effective_feerate 10'000 s/vB and n_input_bytes = 20'000 B, input_fee <= MAX_MONEY.\n+        const int n_input_bytes{fuzzed_data_provider.ConsumeIntegralInRange<int>(1, 20'000)};\n+        const CAmount input_fee = coin_params.m_effective_feerate.GetFee(n_input_bytes);\n+        // Only make UTXOs with positive effective value\n+        const CAmount eff_value{fuzzed_data_provider.ConsumeIntegralInRange<CAmount>(1, MAX_MONEY + group_pos.size() - max_spendable - max_output_groups)};",
      "path": "src/wallet/test/fuzz/coinselection.cpp",
      "position": 36,
      "original_position": 37,
      "commit_id": "96e1c8255299a38486c891d866063789f61f4f8a",
      "original_commit_id": "a383386b9dd2de7a08d202b1e8129a44b870763b",
      "in_reply_to_id": 2201638315,
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I see.  Thanks.  This will be a slightly non-uniform pattern since the window is largest for the first selection `(1, MAX_MONEY - 16)` and then the next selection will have a smaller range maybe `(1, MAX_MONEY / 2)`.  So the pool will tend to have the largest UTXO's first.",
      "created_at": "2025-07-12T20:01:13Z",
      "updated_at": "2025-07-12T20:01:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#discussion_r2202897142",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2202897142"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 252,
      "original_line": 252,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2202900053",
      "pull_request_review_id": 3013506099,
      "id": 2202900053,
      "node_id": "PRRC_kwDOABII586DTZZV",
      "diff_hunk": "@@ -217,6 +217,126 @@ FUZZ_TARGET(coin_grinder_is_optimal)\n     assert(!result_cg);\n }\n \n+FUZZ_TARGET(bnb_finds_min_waste)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    FastRandomContext fast_random_context{ConsumeUInt256(fuzzed_data_provider)};\n+    CoinSelectionParams coin_params{fast_random_context};\n+    coin_params.m_subtract_fee_outputs = false;\n+    // Set effective feerate up to 10'000'000 sats per kvB (10'000 sat/vB).\n+    coin_params.m_effective_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_long_term_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_discard_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_cost_of_change = ConsumeMoney(fuzzed_data_provider);\n+\n+    coin_params.change_output_size = fuzzed_data_provider.ConsumeIntegralInRange(1, MAX_SCRIPT_SIZE);\n+    coin_params.m_change_fee = coin_params.m_effective_feerate.GetFee(coin_params.change_output_size);\n+    coin_params.change_spend_size = fuzzed_data_provider.ConsumeIntegralInRange<int>(41, 1000);\n+    const auto change_spend_fee{coin_params.m_discard_feerate.GetFee(coin_params.change_spend_size)};\n+    coin_params.m_cost_of_change = coin_params.m_change_fee + change_spend_fee;\n+    CScript change_out_script = CScript() << std::vector<unsigned char>(coin_params.change_output_size, OP_TRUE);\n+    const auto dust{GetDustThreshold(CTxOut{/*nValueIn=*/0, change_out_script}, coin_params.m_discard_feerate)};\n+    coin_params.min_viable_change = std::max(change_spend_fee + 1, dust);\n+\n+    // Create some coins\n+    CAmount max_spendable{0};\n+    int next_locktime{0};\n+    static constexpr unsigned max_output_groups{16};\n+    std::vector<OutputGroup> group_pos;\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), max_output_groups)\n+    {\n+        // With maximum m_effective_feerate 10'000 s/vB and n_input_bytes = 20'000 B, input_fee <= MAX_MONEY.\n+        const int n_input_bytes{fuzzed_data_provider.ConsumeIntegralInRange<int>(1, 20'000)};\n+        const CAmount input_fee = coin_params.m_effective_feerate.GetFee(n_input_bytes);\n+        // Only make UTXOs with positive effective value\n+        const CAmount eff_value{fuzzed_data_provider.ConsumeIntegralInRange<CAmount>(1, MAX_MONEY + group_pos.size() - max_spendable - max_output_groups)};\n+        const CAmount amount{eff_value + input_fee};\n+        std::vector<COutput> temp_utxo_pool;\n+\n+        AddCoin(amount, /*n_input=*/0, n_input_bytes, ++next_locktime, temp_utxo_pool, coin_params.m_effective_feerate);\n+        max_spendable += eff_value;\n+\n+        auto output_group = OutputGroup(coin_params);\n+        output_group.Insert(std::make_shared<COutput>(temp_utxo_pool.at(0)), /*ancestors=*/0, /*descendants=*/0);\n+        group_pos.push_back(output_group);\n+    }\n+    size_t num_groups = group_pos.size();\n+    assert(num_groups <= max_output_groups);\n+\n+    // Only choose targets below max_spendable",
      "path": "src/wallet/test/fuzz/coinselection.cpp",
      "position": 50,
      "original_position": 51,
      "commit_id": "96e1c8255299a38486c891d866063789f61f4f8a",
      "original_commit_id": "a383386b9dd2de7a08d202b1e8129a44b870763b",
      "in_reply_to_id": 2201659630,
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes, that follows from my previous comment.  I note that this works however the distribution will not be truly random since the chance of selecting a large UTXO is greatest the first time and so on.",
      "created_at": "2025-07-12T20:03:36Z",
      "updated_at": "2025-07-12T20:03:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#discussion_r2202900053",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2202900053"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 266,
      "original_line": 266,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2202900649",
      "pull_request_review_id": 3013506818,
      "id": 2202900649,
      "node_id": "PRRC_kwDOABII586DTZip",
      "diff_hunk": "@@ -217,6 +217,126 @@ FUZZ_TARGET(coin_grinder_is_optimal)\n     assert(!result_cg);\n }\n \n+FUZZ_TARGET(bnb_finds_min_waste)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    FastRandomContext fast_random_context{ConsumeUInt256(fuzzed_data_provider)};\n+    CoinSelectionParams coin_params{fast_random_context};\n+    coin_params.m_subtract_fee_outputs = false;\n+    // Set effective feerate up to 10'000'000 sats per kvB (10'000 sat/vB).\n+    coin_params.m_effective_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_long_term_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_discard_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_cost_of_change = ConsumeMoney(fuzzed_data_provider);\n+\n+    coin_params.change_output_size = fuzzed_data_provider.ConsumeIntegralInRange(1, MAX_SCRIPT_SIZE);\n+    coin_params.m_change_fee = coin_params.m_effective_feerate.GetFee(coin_params.change_output_size);\n+    coin_params.change_spend_size = fuzzed_data_provider.ConsumeIntegralInRange<int>(41, 1000);\n+    const auto change_spend_fee{coin_params.m_discard_feerate.GetFee(coin_params.change_spend_size)};\n+    coin_params.m_cost_of_change = coin_params.m_change_fee + change_spend_fee;\n+    CScript change_out_script = CScript() << std::vector<unsigned char>(coin_params.change_output_size, OP_TRUE);\n+    const auto dust{GetDustThreshold(CTxOut{/*nValueIn=*/0, change_out_script}, coin_params.m_discard_feerate)};\n+    coin_params.min_viable_change = std::max(change_spend_fee + 1, dust);\n+\n+    // Create some coins\n+    CAmount max_spendable{0};\n+    int next_locktime{0};\n+    static constexpr unsigned max_output_groups{16};\n+    std::vector<OutputGroup> group_pos;\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), max_output_groups)\n+    {\n+        // With maximum m_effective_feerate 10'000 s/vB and n_input_bytes = 20'000 B, input_fee <= MAX_MONEY.\n+        const int n_input_bytes{fuzzed_data_provider.ConsumeIntegralInRange<int>(1, 20'000)};\n+        const CAmount input_fee = coin_params.m_effective_feerate.GetFee(n_input_bytes);\n+        // Only make UTXOs with positive effective value\n+        const CAmount eff_value{fuzzed_data_provider.ConsumeIntegralInRange<CAmount>(1, MAX_MONEY + group_pos.size() - max_spendable - max_output_groups)};\n+        const CAmount amount{eff_value + input_fee};\n+        std::vector<COutput> temp_utxo_pool;\n+\n+        AddCoin(amount, /*n_input=*/0, n_input_bytes, ++next_locktime, temp_utxo_pool, coin_params.m_effective_feerate);\n+        max_spendable += eff_value;\n+\n+        auto output_group = OutputGroup(coin_params);\n+        output_group.Insert(std::make_shared<COutput>(temp_utxo_pool.at(0)), /*ancestors=*/0, /*descendants=*/0);\n+        group_pos.push_back(output_group);\n+    }\n+    size_t num_groups = group_pos.size();\n+    assert(num_groups <= max_output_groups);\n+\n+    // Only choose targets below max_spendable",
      "path": "src/wallet/test/fuzz/coinselection.cpp",
      "position": 50,
      "original_position": 51,
      "commit_id": "96e1c8255299a38486c891d866063789f61f4f8a",
      "original_commit_id": "a383386b9dd2de7a08d202b1e8129a44b870763b",
      "in_reply_to_id": 2201659630,
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Maybe randomize the pool once it's created so there is equal likely-hood of having a large UTXO at the back of the list.",
      "created_at": "2025-07-12T20:05:53Z",
      "updated_at": "2025-07-12T20:05:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#discussion_r2202900649",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2202900649"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 266,
      "original_line": 266,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2202902938",
      "pull_request_review_id": 3013509567,
      "id": 2202902938,
      "node_id": "PRRC_kwDOABII586DTaGa",
      "diff_hunk": "@@ -217,6 +217,126 @@ FUZZ_TARGET(coin_grinder_is_optimal)\n     assert(!result_cg);\n }\n \n+FUZZ_TARGET(bnb_finds_min_waste)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    FastRandomContext fast_random_context{ConsumeUInt256(fuzzed_data_provider)};\n+    CoinSelectionParams coin_params{fast_random_context};\n+    coin_params.m_subtract_fee_outputs = false;\n+    // Set effective feerate up to 10'000'000 sats per kvB (10'000 sat/vB).\n+    coin_params.m_effective_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_long_term_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_discard_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_cost_of_change = ConsumeMoney(fuzzed_data_provider);\n+\n+    coin_params.change_output_size = fuzzed_data_provider.ConsumeIntegralInRange(1, MAX_SCRIPT_SIZE);\n+    coin_params.m_change_fee = coin_params.m_effective_feerate.GetFee(coin_params.change_output_size);\n+    coin_params.change_spend_size = fuzzed_data_provider.ConsumeIntegralInRange<int>(41, 1000);\n+    const auto change_spend_fee{coin_params.m_discard_feerate.GetFee(coin_params.change_spend_size)};\n+    coin_params.m_cost_of_change = coin_params.m_change_fee + change_spend_fee;",
      "path": "src/wallet/test/fuzz/coinselection.cpp",
      "position": 20,
      "original_position": 21,
      "commit_id": "96e1c8255299a38486c891d866063789f61f4f8a",
      "original_commit_id": "a383386b9dd2de7a08d202b1e8129a44b870763b",
      "in_reply_to_id": 2201595887,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "scriptPubKeys of size above 10000 are consensus-unspendable.",
      "created_at": "2025-07-12T20:16:51Z",
      "updated_at": "2025-07-12T20:16:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#discussion_r2202902938",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2202902938"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 236,
      "original_line": 236,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2203049928",
      "pull_request_review_id": 3013732848,
      "id": 2203049928,
      "node_id": "PRRC_kwDOABII586DT9_I",
      "diff_hunk": "@@ -217,6 +217,126 @@ FUZZ_TARGET(coin_grinder_is_optimal)\n     assert(!result_cg);\n }\n \n+FUZZ_TARGET(bnb_finds_min_waste)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    FastRandomContext fast_random_context{ConsumeUInt256(fuzzed_data_provider)};\n+    CoinSelectionParams coin_params{fast_random_context};\n+    coin_params.m_subtract_fee_outputs = false;\n+    // Set effective feerate up to 10'000'000 sats per kvB (10'000 sat/vB).\n+    coin_params.m_effective_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_long_term_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_discard_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_cost_of_change = ConsumeMoney(fuzzed_data_provider);\n+\n+    coin_params.change_output_size = fuzzed_data_provider.ConsumeIntegralInRange(1, MAX_SCRIPT_SIZE);\n+    coin_params.m_change_fee = coin_params.m_effective_feerate.GetFee(coin_params.change_output_size);\n+    coin_params.change_spend_size = fuzzed_data_provider.ConsumeIntegralInRange<int>(41, 1000);\n+    const auto change_spend_fee{coin_params.m_discard_feerate.GetFee(coin_params.change_spend_size)};\n+    coin_params.m_cost_of_change = coin_params.m_change_fee + change_spend_fee;\n+    CScript change_out_script = CScript() << std::vector<unsigned char>(coin_params.change_output_size, OP_TRUE);\n+    const auto dust{GetDustThreshold(CTxOut{/*nValueIn=*/0, change_out_script}, coin_params.m_discard_feerate)};\n+    coin_params.min_viable_change = std::max(change_spend_fee + 1, dust);\n+\n+    // Create some coins\n+    CAmount max_spendable{0};\n+    int next_locktime{0};\n+    static constexpr unsigned max_output_groups{16};",
      "path": "src/wallet/test/fuzz/coinselection.cpp",
      "position": 28,
      "original_position": 29,
      "commit_id": "96e1c8255299a38486c891d866063789f61f4f8a",
      "original_commit_id": "a383386b9dd2de7a08d202b1e8129a44b870763b",
      "in_reply_to_id": 2201606218,
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> In contrast to the existing fuzz test, this fuzz target generates inputs that have solutions and don’t have solution. It then asserts that when the brute force search indicates that a solution exists\r\n\r\nOn second thought, I don't see the value in a test that tests for results that \"don't have solutions\",  The valuable test is testing the quality of any produced solution.   Therefore, I'm not sure what the value is to using a brute force method to show that no solution is produced.",
      "created_at": "2025-07-13T02:10:23Z",
      "updated_at": "2025-07-13T02:10:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#discussion_r2203049928",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2203049928"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 244,
      "original_line": 244,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2219993026",
      "pull_request_review_id": 3039308798,
      "id": 2219993026,
      "node_id": "PRRC_kwDOABII586EUmfC",
      "diff_hunk": "@@ -217,6 +217,126 @@ FUZZ_TARGET(coin_grinder_is_optimal)\n     assert(!result_cg);\n }\n \n+FUZZ_TARGET(bnb_finds_min_waste)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    FastRandomContext fast_random_context{ConsumeUInt256(fuzzed_data_provider)};\n+    CoinSelectionParams coin_params{fast_random_context};\n+    coin_params.m_subtract_fee_outputs = false;\n+    // Set effective feerate up to 10'000'000 sats per kvB (10'000 sat/vB).\n+    coin_params.m_effective_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_long_term_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_discard_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_cost_of_change = ConsumeMoney(fuzzed_data_provider);\n+\n+    coin_params.change_output_size = fuzzed_data_provider.ConsumeIntegralInRange(1, MAX_SCRIPT_SIZE);\n+    coin_params.m_change_fee = coin_params.m_effective_feerate.GetFee(coin_params.change_output_size);\n+    coin_params.change_spend_size = fuzzed_data_provider.ConsumeIntegralInRange<int>(41, 1000);\n+    const auto change_spend_fee{coin_params.m_discard_feerate.GetFee(coin_params.change_spend_size)};\n+    coin_params.m_cost_of_change = coin_params.m_change_fee + change_spend_fee;\n+    CScript change_out_script = CScript() << std::vector<unsigned char>(coin_params.change_output_size, OP_TRUE);\n+    const auto dust{GetDustThreshold(CTxOut{/*nValueIn=*/0, change_out_script}, coin_params.m_discard_feerate)};\n+    coin_params.min_viable_change = std::max(change_spend_fee + 1, dust);\n+\n+    // Create some coins\n+    CAmount max_spendable{0};\n+    int next_locktime{0};\n+    static constexpr unsigned max_output_groups{16};\n+    std::vector<OutputGroup> group_pos;\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), max_output_groups)\n+    {\n+        // With maximum m_effective_feerate 10'000 s/vB and n_input_bytes = 20'000 B, input_fee <= MAX_MONEY.\n+        const int n_input_bytes{fuzzed_data_provider.ConsumeIntegralInRange<int>(1, 20'000)};\n+        const CAmount input_fee = coin_params.m_effective_feerate.GetFee(n_input_bytes);\n+        // Only make UTXOs with positive effective value\n+        const CAmount eff_value{fuzzed_data_provider.ConsumeIntegralInRange<CAmount>(1, MAX_MONEY + group_pos.size() - max_spendable - max_output_groups)};",
      "path": "src/wallet/test/fuzz/coinselection.cpp",
      "position": 36,
      "original_position": 37,
      "commit_id": "96e1c8255299a38486c891d866063789f61f4f8a",
      "original_commit_id": "a383386b9dd2de7a08d202b1e8129a44b870763b",
      "in_reply_to_id": 2201638315,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "UTXOs are ordered in descending effective value by BnB, so I don’t think the UTXO with largest value being likely to be generated first is a problem.",
      "created_at": "2025-07-21T18:50:12Z",
      "updated_at": "2025-07-21T18:50:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#discussion_r2219993026",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2219993026"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 252,
      "original_line": 252,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2219994826",
      "pull_request_review_id": 3039311431,
      "id": 2219994826,
      "node_id": "PRRC_kwDOABII586EUm7K",
      "diff_hunk": "@@ -217,6 +217,126 @@ FUZZ_TARGET(coin_grinder_is_optimal)\n     assert(!result_cg);\n }\n \n+FUZZ_TARGET(bnb_finds_min_waste)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    FastRandomContext fast_random_context{ConsumeUInt256(fuzzed_data_provider)};\n+    CoinSelectionParams coin_params{fast_random_context};\n+    coin_params.m_subtract_fee_outputs = false;\n+    // Set effective feerate up to 10'000'000 sats per kvB (10'000 sat/vB).\n+    coin_params.m_effective_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_long_term_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_discard_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_cost_of_change = ConsumeMoney(fuzzed_data_provider);\n+\n+    coin_params.change_output_size = fuzzed_data_provider.ConsumeIntegralInRange(1, MAX_SCRIPT_SIZE);\n+    coin_params.m_change_fee = coin_params.m_effective_feerate.GetFee(coin_params.change_output_size);\n+    coin_params.change_spend_size = fuzzed_data_provider.ConsumeIntegralInRange<int>(41, 1000);\n+    const auto change_spend_fee{coin_params.m_discard_feerate.GetFee(coin_params.change_spend_size)};\n+    coin_params.m_cost_of_change = coin_params.m_change_fee + change_spend_fee;\n+    CScript change_out_script = CScript() << std::vector<unsigned char>(coin_params.change_output_size, OP_TRUE);\n+    const auto dust{GetDustThreshold(CTxOut{/*nValueIn=*/0, change_out_script}, coin_params.m_discard_feerate)};\n+    coin_params.min_viable_change = std::max(change_spend_fee + 1, dust);\n+\n+    // Create some coins\n+    CAmount max_spendable{0};\n+    int next_locktime{0};\n+    static constexpr unsigned max_output_groups{16};\n+    std::vector<OutputGroup> group_pos;\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), max_output_groups)\n+    {\n+        // With maximum m_effective_feerate 10'000 s/vB and n_input_bytes = 20'000 B, input_fee <= MAX_MONEY.\n+        const int n_input_bytes{fuzzed_data_provider.ConsumeIntegralInRange<int>(1, 20'000)};\n+        const CAmount input_fee = coin_params.m_effective_feerate.GetFee(n_input_bytes);\n+        // Only make UTXOs with positive effective value\n+        const CAmount eff_value{fuzzed_data_provider.ConsumeIntegralInRange<CAmount>(1, MAX_MONEY + group_pos.size() - max_spendable - max_output_groups)};\n+        const CAmount amount{eff_value + input_fee};\n+        std::vector<COutput> temp_utxo_pool;\n+\n+        AddCoin(amount, /*n_input=*/0, n_input_bytes, ++next_locktime, temp_utxo_pool, coin_params.m_effective_feerate);\n+        max_spendable += eff_value;\n+\n+        auto output_group = OutputGroup(coin_params);\n+        output_group.Insert(std::make_shared<COutput>(temp_utxo_pool.at(0)), /*ancestors=*/0, /*descendants=*/0);\n+        group_pos.push_back(output_group);\n+    }\n+    size_t num_groups = group_pos.size();\n+    assert(num_groups <= max_output_groups);\n+\n+    // Only choose targets below max_spendable",
      "path": "src/wallet/test/fuzz/coinselection.cpp",
      "position": 50,
      "original_position": 51,
      "commit_id": "96e1c8255299a38486c891d866063789f61f4f8a",
      "original_commit_id": "a383386b9dd2de7a08d202b1e8129a44b870763b",
      "in_reply_to_id": 2201659630,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "BnB traverses the UTXOs after sorting, so I don’t see why this would be of concern.",
      "created_at": "2025-07-21T18:51:02Z",
      "updated_at": "2025-07-21T18:51:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#discussion_r2219994826",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2219994826"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 266,
      "original_line": 266,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2220021453",
      "pull_request_review_id": 3039351411,
      "id": 2220021453,
      "node_id": "PRRC_kwDOABII586EUtbN",
      "diff_hunk": "@@ -217,6 +217,126 @@ FUZZ_TARGET(coin_grinder_is_optimal)\n     assert(!result_cg);\n }\n \n+FUZZ_TARGET(bnb_finds_min_waste)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    FastRandomContext fast_random_context{ConsumeUInt256(fuzzed_data_provider)};\n+    CoinSelectionParams coin_params{fast_random_context};\n+    coin_params.m_subtract_fee_outputs = false;\n+    // Set effective feerate up to 10'000'000 sats per kvB (10'000 sat/vB).\n+    coin_params.m_effective_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_long_term_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};",
      "path": "src/wallet/test/fuzz/coinselection.cpp",
      "position": 13,
      "original_position": 13,
      "commit_id": "96e1c8255299a38486c891d866063789f61f4f8a",
      "original_commit_id": "a383386b9dd2de7a08d202b1e8129a44b870763b",
      "in_reply_to_id": 2201577538,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "As mentioned above, I think we are crossing wires here. I was talking about running coin selection with the **same UTXO set** at two different feerates. You appear to be talking about running a test with two different UTXO sets generated from the same set of _effective values_ at different feerates. The latter is done already in the test I linked above. For the former the invariant you describe does not hold.",
      "created_at": "2025-07-21T19:06:43Z",
      "updated_at": "2025-07-21T19:08:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#discussion_r2220021453",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2220021453"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 229,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2220043055",
      "pull_request_review_id": 3039385233,
      "id": 2220043055,
      "node_id": "PRRC_kwDOABII586EUysv",
      "diff_hunk": "@@ -217,6 +217,126 @@ FUZZ_TARGET(coin_grinder_is_optimal)\n     assert(!result_cg);\n }\n \n+FUZZ_TARGET(bnb_finds_min_waste)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    FastRandomContext fast_random_context{ConsumeUInt256(fuzzed_data_provider)};\n+    CoinSelectionParams coin_params{fast_random_context};\n+    coin_params.m_subtract_fee_outputs = false;\n+    // Set effective feerate up to 10'000'000 sats per kvB (10'000 sat/vB).\n+    coin_params.m_effective_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_long_term_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_discard_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_cost_of_change = ConsumeMoney(fuzzed_data_provider);\n+\n+    coin_params.change_output_size = fuzzed_data_provider.ConsumeIntegralInRange(1, MAX_SCRIPT_SIZE);\n+    coin_params.m_change_fee = coin_params.m_effective_feerate.GetFee(coin_params.change_output_size);\n+    coin_params.change_spend_size = fuzzed_data_provider.ConsumeIntegralInRange<int>(41, 1000);\n+    const auto change_spend_fee{coin_params.m_discard_feerate.GetFee(coin_params.change_spend_size)};\n+    coin_params.m_cost_of_change = coin_params.m_change_fee + change_spend_fee;\n+    CScript change_out_script = CScript() << std::vector<unsigned char>(coin_params.change_output_size, OP_TRUE);\n+    const auto dust{GetDustThreshold(CTxOut{/*nValueIn=*/0, change_out_script}, coin_params.m_discard_feerate)};\n+    coin_params.min_viable_change = std::max(change_spend_fee + 1, dust);\n+\n+    // Create some coins\n+    CAmount max_spendable{0};\n+    int next_locktime{0};\n+    static constexpr unsigned max_output_groups{16};",
      "path": "src/wallet/test/fuzz/coinselection.cpp",
      "position": 28,
      "original_position": 29,
      "commit_id": "96e1c8255299a38486c891d866063789f61f4f8a",
      "original_commit_id": "a383386b9dd2de7a08d202b1e8129a44b870763b",
      "in_reply_to_id": 2201606218,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The test you propose is also interesting, and someone might want to take a stab at adding it in another pull request. It is out of scope for this pull request however.\r\n\r\nFuzzing explores pseudorandomly all code paths that can be reached by exercising the fuzz harness. By comparing BnB with a brute force search, we can demonstrate that BnB always finds the best solution that is present, but only when they are present. As only inputs that cause new paths to be explored in the source code are retained, fuzzing space efficiently surfaces edge cases.",
      "created_at": "2025-07-21T19:18:46Z",
      "updated_at": "2025-07-21T19:18:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#discussion_r2220043055",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2220043055"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 244,
      "original_line": 244,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2222306224",
      "pull_request_review_id": 3042671286,
      "id": 2222306224,
      "node_id": "PRRC_kwDOABII586EdbOw",
      "diff_hunk": "@@ -217,6 +217,126 @@ FUZZ_TARGET(coin_grinder_is_optimal)\n     assert(!result_cg);\n }\n \n+FUZZ_TARGET(bnb_finds_min_waste)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    FastRandomContext fast_random_context{ConsumeUInt256(fuzzed_data_provider)};\n+    CoinSelectionParams coin_params{fast_random_context};\n+    coin_params.m_subtract_fee_outputs = false;\n+    // Set effective feerate up to 10'000'000 sats per kvB (10'000 sat/vB).\n+    coin_params.m_effective_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_long_term_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};",
      "path": "src/wallet/test/fuzz/coinselection.cpp",
      "position": 13,
      "original_position": 13,
      "commit_id": "96e1c8255299a38486c891d866063789f61f4f8a",
      "original_commit_id": "a383386b9dd2de7a08d202b1e8129a44b870763b",
      "in_reply_to_id": 2201577538,
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> You appear to be talking about running a test with two different UTXO sets generated from the same set of effective values at different feerates. The latter is done already in the test I linked above. For the former the invariant you describe does not hold.\r\n\r\nYes, that is what I'm talking about said a different way.  Yes, the test you linked above tests for that but only for the same static values.",
      "created_at": "2025-07-22T12:03:46Z",
      "updated_at": "2025-07-22T12:03:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#discussion_r2222306224",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2222306224"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 229,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2222316261",
      "pull_request_review_id": 3042685953,
      "id": 2222316261,
      "node_id": "PRRC_kwDOABII586Eddrl",
      "diff_hunk": "@@ -217,6 +217,126 @@ FUZZ_TARGET(coin_grinder_is_optimal)\n     assert(!result_cg);\n }\n \n+FUZZ_TARGET(bnb_finds_min_waste)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    FastRandomContext fast_random_context{ConsumeUInt256(fuzzed_data_provider)};\n+    CoinSelectionParams coin_params{fast_random_context};\n+    coin_params.m_subtract_fee_outputs = false;\n+    // Set effective feerate up to 10'000'000 sats per kvB (10'000 sat/vB).\n+    coin_params.m_effective_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_long_term_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_discard_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_cost_of_change = ConsumeMoney(fuzzed_data_provider);\n+\n+    coin_params.change_output_size = fuzzed_data_provider.ConsumeIntegralInRange(1, MAX_SCRIPT_SIZE);\n+    coin_params.m_change_fee = coin_params.m_effective_feerate.GetFee(coin_params.change_output_size);\n+    coin_params.change_spend_size = fuzzed_data_provider.ConsumeIntegralInRange<int>(41, 1000);\n+    const auto change_spend_fee{coin_params.m_discard_feerate.GetFee(coin_params.change_spend_size)};\n+    coin_params.m_cost_of_change = coin_params.m_change_fee + change_spend_fee;\n+    CScript change_out_script = CScript() << std::vector<unsigned char>(coin_params.change_output_size, OP_TRUE);\n+    const auto dust{GetDustThreshold(CTxOut{/*nValueIn=*/0, change_out_script}, coin_params.m_discard_feerate)};\n+    coin_params.min_viable_change = std::max(change_spend_fee + 1, dust);\n+\n+    // Create some coins\n+    CAmount max_spendable{0};\n+    int next_locktime{0};\n+    static constexpr unsigned max_output_groups{16};",
      "path": "src/wallet/test/fuzz/coinselection.cpp",
      "position": 28,
      "original_position": 29,
      "commit_id": "96e1c8255299a38486c891d866063789f61f4f8a",
      "original_commit_id": "a383386b9dd2de7a08d202b1e8129a44b870763b",
      "in_reply_to_id": 2201606218,
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> The test you propose is also interesting, and someone might want to take a stab at adding it in another pull request.\r\n\r\nThat would be great.",
      "created_at": "2025-07-22T12:08:33Z",
      "updated_at": "2025-07-22T12:08:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#discussion_r2222316261",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2222316261"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 244,
      "original_line": 244,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2222321444",
      "pull_request_review_id": 3042693904,
      "id": 2222321444,
      "node_id": "PRRC_kwDOABII586Ede8k",
      "diff_hunk": "@@ -217,6 +217,126 @@ FUZZ_TARGET(coin_grinder_is_optimal)\n     assert(!result_cg);\n }\n \n+FUZZ_TARGET(bnb_finds_min_waste)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    FastRandomContext fast_random_context{ConsumeUInt256(fuzzed_data_provider)};\n+    CoinSelectionParams coin_params{fast_random_context};\n+    coin_params.m_subtract_fee_outputs = false;\n+    // Set effective feerate up to 10'000'000 sats per kvB (10'000 sat/vB).\n+    coin_params.m_effective_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_long_term_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_discard_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_cost_of_change = ConsumeMoney(fuzzed_data_provider);\n+\n+    coin_params.change_output_size = fuzzed_data_provider.ConsumeIntegralInRange(1, MAX_SCRIPT_SIZE);\n+    coin_params.m_change_fee = coin_params.m_effective_feerate.GetFee(coin_params.change_output_size);\n+    coin_params.change_spend_size = fuzzed_data_provider.ConsumeIntegralInRange<int>(41, 1000);\n+    const auto change_spend_fee{coin_params.m_discard_feerate.GetFee(coin_params.change_spend_size)};\n+    coin_params.m_cost_of_change = coin_params.m_change_fee + change_spend_fee;\n+    CScript change_out_script = CScript() << std::vector<unsigned char>(coin_params.change_output_size, OP_TRUE);\n+    const auto dust{GetDustThreshold(CTxOut{/*nValueIn=*/0, change_out_script}, coin_params.m_discard_feerate)};\n+    coin_params.min_viable_change = std::max(change_spend_fee + 1, dust);\n+\n+    // Create some coins\n+    CAmount max_spendable{0};\n+    int next_locktime{0};\n+    static constexpr unsigned max_output_groups{16};\n+    std::vector<OutputGroup> group_pos;\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), max_output_groups)\n+    {\n+        // With maximum m_effective_feerate 10'000 s/vB and n_input_bytes = 20'000 B, input_fee <= MAX_MONEY.\n+        const int n_input_bytes{fuzzed_data_provider.ConsumeIntegralInRange<int>(1, 20'000)};\n+        const CAmount input_fee = coin_params.m_effective_feerate.GetFee(n_input_bytes);\n+        // Only make UTXOs with positive effective value\n+        const CAmount eff_value{fuzzed_data_provider.ConsumeIntegralInRange<CAmount>(1, MAX_MONEY + group_pos.size() - max_spendable - max_output_groups)};",
      "path": "src/wallet/test/fuzz/coinselection.cpp",
      "position": 36,
      "original_position": 37,
      "commit_id": "96e1c8255299a38486c891d866063789f61f4f8a",
      "original_commit_id": "a383386b9dd2de7a08d202b1e8129a44b870763b",
      "in_reply_to_id": 2201638315,
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> UTXOs are ordered in descending effective value by BnB, so I don’t think the UTXO with largest value being likely to be generated first is a problem.\r\n\r\nI was thinking of testing this more as you would a black box.",
      "created_at": "2025-07-22T12:10:59Z",
      "updated_at": "2025-07-22T12:11:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#discussion_r2222321444",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2222321444"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 252,
      "original_line": 252,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2222739458",
      "pull_request_review_id": 3043296231,
      "id": 2222739458,
      "node_id": "PRRC_kwDOABII586EfFAC",
      "diff_hunk": "@@ -217,6 +217,126 @@ FUZZ_TARGET(coin_grinder_is_optimal)\n     assert(!result_cg);\n }\n \n+FUZZ_TARGET(bnb_finds_min_waste)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    FastRandomContext fast_random_context{ConsumeUInt256(fuzzed_data_provider)};\n+    CoinSelectionParams coin_params{fast_random_context};\n+    coin_params.m_subtract_fee_outputs = false;\n+    // Set effective feerate up to 10'000'000 sats per kvB (10'000 sat/vB).\n+    coin_params.m_effective_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_long_term_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};",
      "path": "src/wallet/test/fuzz/coinselection.cpp",
      "position": 13,
      "original_position": 13,
      "commit_id": "96e1c8255299a38486c891d866063789f61f4f8a",
      "original_commit_id": "a383386b9dd2de7a08d202b1e8129a44b870763b",
      "in_reply_to_id": 2201577538,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Isn’t that sufficient to demonstrate that it is doing that?",
      "created_at": "2025-07-22T14:29:13Z",
      "updated_at": "2025-07-22T14:29:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#discussion_r2222739458",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2222739458"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 229,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2223486495",
      "pull_request_review_id": 3044356987,
      "id": 2223486495,
      "node_id": "PRRC_kwDOABII586Eh7Yf",
      "diff_hunk": "@@ -217,6 +217,126 @@ FUZZ_TARGET(coin_grinder_is_optimal)\n     assert(!result_cg);\n }\n \n+FUZZ_TARGET(bnb_finds_min_waste)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    FastRandomContext fast_random_context{ConsumeUInt256(fuzzed_data_provider)};\n+    CoinSelectionParams coin_params{fast_random_context};\n+    coin_params.m_subtract_fee_outputs = false;\n+    // Set effective feerate up to 10'000'000 sats per kvB (10'000 sat/vB).\n+    coin_params.m_effective_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_long_term_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};",
      "path": "src/wallet/test/fuzz/coinselection.cpp",
      "position": 13,
      "original_position": 13,
      "commit_id": "96e1c8255299a38486c891d866063789f61f4f8a",
      "original_commit_id": "a383386b9dd2de7a08d202b1e8129a44b870763b",
      "in_reply_to_id": 2201577538,
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Isn't it a stronger assertion to show the invariant holds for all cases?  Otherwise what's the point of any of the fuzz assertions?",
      "created_at": "2025-07-22T18:36:48Z",
      "updated_at": "2025-07-22T18:36:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#discussion_r2223486495",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2223486495"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 229,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2421773084",
      "pull_request_review_id": 3325514604,
      "id": 2421773084,
      "node_id": "PRRC_kwDOABII586QWVMc",
      "diff_hunk": "@@ -217,6 +217,126 @@ FUZZ_TARGET(coin_grinder_is_optimal)\n     assert(!result_cg);\n }\n \n+FUZZ_TARGET(bnb_finds_min_waste)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    FastRandomContext fast_random_context{ConsumeUInt256(fuzzed_data_provider)};\n+    CoinSelectionParams coin_params{fast_random_context};\n+    coin_params.m_subtract_fee_outputs = false;\n+    // Set effective feerate up to 10'000'000 sats per kvB (10'000 sat/vB).\n+    coin_params.m_effective_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_long_term_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_discard_feerate = CFeeRate{ConsumeMoney(fuzzed_data_provider, 10'000'000), 1'000};\n+    coin_params.m_cost_of_change = ConsumeMoney(fuzzed_data_provider);\n+\n+    coin_params.change_output_size = fuzzed_data_provider.ConsumeIntegralInRange(1, MAX_SCRIPT_SIZE);\n+    coin_params.m_change_fee = coin_params.m_effective_feerate.GetFee(coin_params.change_output_size);\n+    coin_params.change_spend_size = fuzzed_data_provider.ConsumeIntegralInRange<int>(41, 1000);\n+    const auto change_spend_fee{coin_params.m_discard_feerate.GetFee(coin_params.change_spend_size)};\n+    coin_params.m_cost_of_change = coin_params.m_change_fee + change_spend_fee;\n+    CScript change_out_script = CScript() << std::vector<unsigned char>(coin_params.change_output_size, OP_TRUE);\n+    const auto dust{GetDustThreshold(CTxOut{/*nValueIn=*/0, change_out_script}, coin_params.m_discard_feerate)};\n+    coin_params.min_viable_change = std::max(change_spend_fee + 1, dust);\n+\n+    // Create some coins\n+    CAmount max_spendable{0};\n+    int next_locktime{0};\n+    static constexpr unsigned max_output_groups{16};",
      "path": "src/wallet/test/fuzz/coinselection.cpp",
      "position": 28,
      "original_position": 29,
      "commit_id": "96e1c8255299a38486c891d866063789f61f4f8a",
      "original_commit_id": "a383386b9dd2de7a08d202b1e8129a44b870763b",
      "in_reply_to_id": 2201606218,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Above 17 UTXOs a fuzz input could be generated whose scenario [exhausts BnB’s iteration limit](https://github.com/bitcoin/bitcoin/blob/23e15d40b96a23112fba24cece5fe513ae1a2877/src/wallet/test/coinselection_tests.cpp#L156) before BnB finds any solution. The invariant that BnB will always find a solution when the brute force algorithm finds a solution no longer holds above 17 UTXOs.\r\n\r\nWorth adding a short comment on `max_output_groups ` about this? It would be great to understand this rationale when reading the harness.",
      "created_at": "2025-10-10T19:05:46Z",
      "updated_at": "2025-10-10T19:05:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32894#discussion_r2421773084",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2421773084"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32894"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 244,
      "original_line": 244,
      "side": "RIGHT"
    }
  ]
}