{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539",
    "id": 877751403,
    "node_id": "PR_kwDOABII5840UWxr",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/24539",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/24539.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/24539.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/845b54defebc1987b9d654ea7b611a4ddebe345a",
    "number": 24539,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Add a \"tx output spender\" index",
    "user": {
      "login": "sstone",
      "id": 1573866,
      "node_id": "MDQ6VXNlcjE1NzM4NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sstone",
      "html_url": "https://github.com/sstone",
      "followers_url": "https://api.github.com/users/sstone/followers",
      "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
      "organizations_url": "https://api.github.com/users/sstone/orgs",
      "repos_url": "https://api.github.com/users/sstone/repos",
      "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/sstone/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "This PR adds a new \"tx output spender\" index, which allows users to query which tx spent a given outpoint with the `gettxspendingprevout` RPC call that was added by https://github.com/bitcoin/bitcoin/pull/24408.\r\n\r\nSuch an index would be extremely useful for Lightning, and probably for most layer-2 protocols that rely on chains of unpublished transactions.\r\n\r\nUPDATE: this PR is ready for review and issues have been addressed:\r\n- using a watch-only wallet instead would not work if there is a significant number of outpoints to watch (see https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-1276595646)\r\n- this PR does not require `-txindex` anymore\r\n\r\nWe use a composite key with 2 parts (suggested by @romanz): hash(spent outpoint) and tx position, with an empty value. Average composite key size is 15 bytes.\r\n\r\nThe spending tx can optionally be returned by `gettxspendingprevout` (even it `-txindex is not set`).",
    "labels": [
      {
        "id": 97470796,
        "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
        "name": "UTXO Db and Indexes",
        "color": "fbca04",
        "default": false
      }
    ],
    "created_at": "2022-03-11T19:32:41Z",
    "updated_at": "2025-10-16T02:17:17Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "c9ba9f1ef9a651b4e9318ea71da00c79a6dce857",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "sstone:add-txospender-index",
      "ref": "add-txospender-index",
      "sha": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 31305826,
        "node_id": "MDEwOlJlcG9zaXRvcnkzMTMwNTgyNg==",
        "name": "bitcoin",
        "full_name": "sstone/bitcoin",
        "owner": {
          "login": "sstone",
          "id": 1573866,
          "node_id": "MDQ6VXNlcjE1NzM4NjY=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sstone",
          "html_url": "https://github.com/sstone",
          "followers_url": "https://api.github.com/users/sstone/followers",
          "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
          "organizations_url": "https://api.github.com/users/sstone/orgs",
          "repos_url": "https://api.github.com/users/sstone/repos",
          "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/sstone/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/sstone/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/sstone/bitcoin",
        "archive_url": "https://api.github.com/repos/sstone/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/sstone/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/sstone/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/sstone/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/sstone/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/sstone/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/sstone/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/sstone/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/sstone/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/sstone/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/sstone/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/sstone/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/sstone/bitcoin/events",
        "forks_url": "https://api.github.com/repos/sstone/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/sstone/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/sstone/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/sstone/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/sstone/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/sstone/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/sstone/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/sstone/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/sstone/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/sstone/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/sstone/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/sstone/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/sstone/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/sstone/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/sstone/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/sstone/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:sstone/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/sstone/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/sstone/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/sstone/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/sstone/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/sstone/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/sstone/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/sstone/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/sstone/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/sstone/bitcoin/hooks",
        "svn_url": "https://github.com/sstone/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 256125,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-09-12T15:16:20Z",
        "created_at": "2015-02-25T09:17:18Z",
        "updated_at": "2025-09-11T07:17:37Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "d20f10affba83601f1855bc87d0f47e9dfd5caae",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 38036,
        "stargazers_count": 86206,
        "watchers_count": 86206,
        "size": 294954,
        "default_branch": "master",
        "open_issues_count": 826,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-10-15T14:01:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-10-16T02:11:16Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 469,
    "deletions": 1,
    "changed_files": 12,
    "commits": 1,
    "review_comments": 139,
    "comments": 51
  },
  "events": [
    {
      "event": "head_ref_force_pushed",
      "id": 6227681994,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAAFzMuLK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6227681994",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "aa9f96370eb0294b918a3ee17e6928bace23a131",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/aa9f96370eb0294b918a3ee17e6928bace23a131",
      "created_at": "2022-03-11T21:08:30Z"
    },
    {
      "event": "commented",
      "id": 1065541156,
      "node_id": "IC_kwDOABII584_gt4k",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1065541156",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-11T21:24:10Z",
      "updated_at": "2022-03-11T21:24:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK. It would be good know more about specific use-cases for this, if you can provide some links or more description. But the implementation seems very simple, so I don't think adding this would be a maintenance burden.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-1065541156",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "labeled",
      "id": 6227844439,
      "node_id": "LE_lADOABII585Fi6uozwAAAAFzNV1X",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6227844439",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-11T21:39:05Z",
      "label": {
        "name": "Build system",
        "color": "5319e7"
      }
    },
    {
      "event": "labeled",
      "id": 6227844441,
      "node_id": "LE_lADOABII585Fi6uozwAAAAFzNV1Z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6227844441",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-11T21:39:05Z",
      "label": {
        "name": "RPC/REST/ZMQ",
        "color": "0052cc"
      }
    },
    {
      "event": "labeled",
      "id": 6227844444,
      "node_id": "LE_lADOABII585Fi6uozwAAAAFzNV1c",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6227844444",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-11T21:39:05Z",
      "label": {
        "name": "UTXO Db and Indexes",
        "color": "fbca04"
      }
    },
    {
      "event": "labeled",
      "id": 6227844446,
      "node_id": "LE_lADOABII585Fi6uozwAAAAFzNV1e",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6227844446",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-11T21:39:05Z",
      "label": {
        "name": "Validation",
        "color": "6060aa"
      }
    },
    {
      "event": "commented",
      "id": 1065836894,
      "node_id": "IC_kwDOABII584_h2Fe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1065836894",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-12T08:01:34Z",
      "updated_at": "2022-03-12T08:01:34Z",
      "author_association": "MEMBER",
      "body": "@ ryan, I think the idea is that there is one coin that is owned by more than one entity. There may be several (conflicting) pre-signed txs spending it and as soon as it is spent, all entities with ownership in it want to check which pre-signed tx spent the coin.\r\nIf they use Bitcoin Core to monitor the coin, they may use:\r\n* A watch-only wallet (which requires a file on disk and BDB/Sqlite)\r\n* Walk the raw chain and raw mempool themselves (According to https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1059188351 this is doable for the chain, but may not be for the mempool)\r\n* Use an index. A blockfilterindex might speed up scanning the chain, whereas this index directly gives the answer.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-1065836894",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "commented",
      "id": 1065868465,
      "node_id": "IC_kwDOABII584_h9yx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1065868465",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-12T11:46:10Z",
      "updated_at": "2022-03-12T11:46:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "Lightning channels are basically trees of unpublished transactions:\r\n- a commit tx that spends a shared onchain \"funding\" UTXO\r\n- HTLC txs that spend the commit tx (there can be competing HTLC txs that spend the same commit tx output: one for successful payments, one for timed out payments)\r\n\r\nThere is also a penalty scheme built into these txs: if you cheat, you need to wait before you can spend your outputs but your channel peer can spend them immediately.\r\n\r\nAnd LN is also transitioning to a model where these txs pay minimum fees and can be \"bumped\" with RBF/CPFP.\r\n\r\n=> it's very useful for LN nodes to detect when transactions have been spent, but also how they've been spent and react accordingly (by extracting info from the spending txs for example), and walk up chains of txs that spend each other.\r\n\r\nAs described above, there are tools in bitcoin core that we could use and would help a bit, and Lightning nodes could also create their own indexes independently or use electrum servers, block explorers, but this would make running LN nodes connected to your own bitcoin node much easier.\r\n",
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-1065868465",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "commented",
      "id": 1065899900,
      "node_id": "IC_kwDOABII584_iFd8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1065899900",
      "actor": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-12T15:13:04Z",
      "updated_at": "2022-03-12T15:13:04Z",
      "author_association": "NONE",
      "body": "Concept ACK\r\n\r\nI think the use case is clear and if others think the maintenance burden is reasonable there doesn't seem to be an obvious downside.\r\n\r\n> This PR can be viewed as an \"extension\" to #24408\r\n\r\nSeems like review should be focused on #24408 first but assuming that gets merged, Concept ACK for this.",
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-1065899900",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "commented",
      "id": 1065965240,
      "node_id": "IC_kwDOABII584_iVa4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1065965240",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-12T21:25:18Z",
      "updated_at": "2025-10-16T02:17:17Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/24539.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [TheCharlatan](https://github.com/bitcoin/bitcoin/pull/24539#pullrequestreview-3224343678) |\n| Concept ACK | [ryanofsky](https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-1065541156), [michaelfolkson](https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-1065899900), [mzumsande](https://github.com/bitcoin/bitcoin/pull/24539#pullrequestreview-908174478), [glozow](https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-1086218571), [aureleoules](https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-1276604721), [achow101](https://github.com/bitcoin/bitcoin/pull/24539#pullrequestreview-1188968612), [hodlinator](https://github.com/bitcoin/bitcoin/pull/24539#pullrequestreview-2219808525) |\n| Approach ACK | [w0xlt](https://github.com/bitcoin/bitcoin/pull/24539#pullrequestreview-958601762) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#31260](https://github.com/bitcoin/bitcoin/pull/31260) (scripted-diff: Type-safe settings retrieval by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-1065965240",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "reviewed",
      "id": 908174478,
      "node_id": "PRR_kwDOABII5842IaSO",
      "url": null,
      "actor": null,
      "commit_id": "aa9f96370eb0294b918a3ee17e6928bace23a131",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2022-03-13T21:30:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK - I can see why this could be helpful for lightning, the code is very similar to the txindex code.\r\n\r\nSome general thoughts:\r\n- `getmempooltxspendingprevout` in #24408 takes a list of outpoints, `gettxospender` takes a single outpoint. Would it make sense to have the same format here (I'd guess a common use case would be to check both RPCs with the same outpoint(s)?)\r\n- Taking this one step further, `getrawtransaction` queries transaction data from the mempool or from blocks (if txindex is enabled) in one RPC. Would it make sense to have something similar for outpoints, instead of two separate RPCs?\r\n- I think that the indexed data will not be deleted in case of a reorg (but possibly overwritten if an outpoint would be spent in a different tx as a result of a reorg). That means that a result from `gettxospender` could be stale. Would it make sense to delete entries or should we at least mention this possibility in the rpc doc?\r\n- What's the reason for the dependency on -txindex? As far as I can see it's not technical, so would knowing the fact that an outpoint was used in a tx (even if we can't lookup the details of that tx further) be sufficient for some use cases?",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#pullrequestreview-908174478",
      "submitted_at": "2022-03-13T21:25:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6234272771,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAAFzl3QD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6234272771",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1b82b7e503a193802373003db8fe5c220cb99eb9",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/1b82b7e503a193802373003db8fe5c220cb99eb9",
      "created_at": "2022-03-14T10:27:58Z"
    },
    {
      "event": "commented",
      "id": 1066633467,
      "node_id": "IC_kwDOABII584_k4j7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1066633467",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-14T10:47:14Z",
      "updated_at": "2022-03-14T10:47:14Z",
      "author_association": "CONTRIBUTOR",
      "body": ">     * `getmempooltxspendingprevout` in #24408 takes a list of outpoints, `gettxospender` takes a single outpoint. Would it make sense to have the same format here (I'd guess a common use case would be to check both RPCs with the same outpoint(s)?)\r\n\r\nBitcoin supports batched RPC request so from a functional p.o.v it's equivalent to passing a list of outpoints but it's a bit easier to reason about imho. \r\nI think that the use case for  `getmempooltxspendingprevout` is a bit different: you want to bump fees for a set of txs that are related to the same channel and want to understand who is spending what. You may also have txs with multiple inputs, and would pass them all together to `getmempooltxspendingprevout`.\r\n\r\nFor `gettxospender` the use case is trying to understand why channels have been closed and react if needed, if we could pass in multiple outpoints they would likely be unrelated.\r\n \r\n>     * Taking this one step further, `getrawtransaction` queries transaction data from the mempool or from blocks (if txindex is enabled) in one RPC. Would it make sense to have something similar for outpoints, instead of two separate RPCs?\r\n\r\nMaybe, let's see where the discussion in https://github.com/bitcoin/bitcoin/pull/24408 but to me it feels cleaner to have separate calls.\r\n\r\n>     * I think that the indexed data will not be deleted in case of a reorg (but possibly overwritten if an outpoint would be spent in a different tx as a result of a reorg). That means that a result from `gettxospender` could be stale. Would it make sense to delete entries or should we at least mention this possibility in the rpc doc?\r\n> \r\n>     * What's the reason for the dependency on -txindex? As far as I can see it's not technical, so would knowing the fact that an outpoint was used in a tx (even if we can't lookup the details of that tx further) be sufficient for some use cases?\r\n\r\nWe would almost always want to get the actual tx that spends our outpoint. My reasoning was that relying on `-txindex` makes `gettxospender` robust and consistent in the case of reorgs and is also simpler and easier to understand that storing block positions instead of txids. ",
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-1066633467",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "labeled",
      "id": 6294804839,
      "node_id": "LE_lADOABII585Fi6uozwAAAAF3Mxln",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6294804839",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-23T20:55:24Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6297680749,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAAF3Xvtt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6297680749",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "3e97658771d5bf5f8ff26723b6090e476193f22e",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/3e97658771d5bf5f8ff26723b6090e476193f22e",
      "created_at": "2022-03-24T09:11:13Z"
    },
    {
      "event": "unlabeled",
      "id": 6297823303,
      "node_id": "UNLE_lADOABII585Fi6uozwAAAAF3YShH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6297823303",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-24T09:30:14Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6298501136,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAAF3a4AQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6298501136",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e021b6bc77315bc0c148b21c301882fa5dd68c05",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/e021b6bc77315bc0c148b21c301882fa5dd68c05",
      "created_at": "2022-03-24T11:03:23Z"
    },
    {
      "event": "commented",
      "id": 1086218571,
      "node_id": "IC_kwDOABII585AvmFL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1086218571",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-01T18:41:32Z",
      "updated_at": "2022-04-01T18:41:32Z",
      "author_association": "MEMBER",
      "body": "Concept ACK, nice",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-1086218571",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "unlabeled",
      "id": 6432241836,
      "node_id": "UNLE_lADOABII585Fi6uozwAAAAF_ZDis",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6432241836",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-14T06:54:43Z",
      "label": {
        "name": "Build system",
        "color": "5319e7"
      }
    },
    {
      "event": "unlabeled",
      "id": 6432241837,
      "node_id": "UNLE_lADOABII585Fi6uozwAAAAF_ZDit",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6432241837",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-14T06:54:43Z",
      "label": {
        "name": "RPC/REST/ZMQ",
        "color": "0052cc"
      }
    },
    {
      "event": "unlabeled",
      "id": 6432241838,
      "node_id": "UNLE_lADOABII585Fi6uozwAAAAF_ZDiu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6432241838",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-14T06:54:43Z",
      "label": {
        "name": "Validation",
        "color": "6060aa"
      }
    },
    {
      "event": "reviewed",
      "id": 950732877,
      "node_id": "PRR_kwDOABII5844qwhN",
      "url": null,
      "actor": null,
      "commit_id": "e021b6bc77315bc0c148b21c301882fa5dd68c05",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2022-04-23T00:41:44Z",
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#pullrequestreview-950732877",
      "submitted_at": "2022-04-23T00:41:44Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6492194951,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAAGC9wiH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6492194951",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a6cb2c661cfe8208acbe50f75b67f3612b7af396",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/a6cb2c661cfe8208acbe50f75b67f3612b7af396",
      "created_at": "2022-04-25T17:03:37Z"
    },
    {
      "event": "commented",
      "id": 1108832699,
      "node_id": "IC_kwDOABII585CF3G7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1108832699",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-25T17:14:59Z",
      "updated_at": "2022-04-25T17:14:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased on https://github.com/bitcoin/bitcoin/pull/24408",
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-1108832699",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "labeled",
      "id": 6501915115,
      "node_id": "LE_lADOABII585Fi6uozwAAAAGDi1nr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6501915115",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-26T20:48:55Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1110949442,
      "node_id": "IC_kwDOABII585CN75C",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1110949442",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-27T12:37:13Z",
      "updated_at": "2022-04-27T12:37:13Z",
      "author_association": "MEMBER",
      "body": "Looks like the test somehow went away? If #https://github.com/bitcoin/bitcoin/pull/24408 is merged soon, you can fix everything on the next rebase.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-1110949442",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6507479187,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAAGD4ECT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6507479187",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ac2cffcfdf4e08a1b71898e525e4c0f6e1935fd3",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/ac2cffcfdf4e08a1b71898e525e4c0f6e1935fd3",
      "created_at": "2022-04-27T14:22:47Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6507719483,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAAGD4-s7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6507719483",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7805cfd193fefbab3e8b6ecd82e3a63864f012f8",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/7805cfd193fefbab3e8b6ecd82e3a63864f012f8",
      "created_at": "2022-04-27T14:51:34Z"
    },
    {
      "event": "commented",
      "id": 1111137054,
      "node_id": "IC_kwDOABII585COpse",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1111137054",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-27T15:23:50Z",
      "updated_at": "2022-04-27T15:23:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Looks like the test somehow went away? If ##24408 is merged soon, you can fix everything on the next rebase.\r\n\r\nYes sorry about that, I've brought it back. I will also add another commit to move `gettxspendingprevout` out of `rpc/mempool.cpp`.",
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-1111137054",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "unlabeled",
      "id": 6508168651,
      "node_id": "UNLE_lADOABII585Fi6uozwAAAAGD6sXL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6508168651",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-27T15:48:56Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1113716662,
      "node_id": "IC_kwDOABII585CYfe2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1113716662",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-29T20:52:02Z",
      "updated_at": "2022-04-29T20:52:02Z",
      "author_association": "MEMBER",
      "body": "As with #24408, unless there's a need for looking up an unpredictable outpoint after its spend is mined (why?), I think a watch-only wallet is the correct approach for this use case, and expecting users to build infinitely-growing indexes isn't a good solution.",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-1113716662",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "reviewed",
      "id": 958241302,
      "node_id": "PRR_kwDOABII5845HZoW",
      "url": null,
      "actor": null,
      "commit_id": "7805cfd193fefbab3e8b6ecd82e3a63864f012f8",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2022-04-29T22:47:45Z",
      "author_association": "MEMBER",
      "body": "Suggested patch: https://gist.github.com/luke-jr/beb37abb2cfc2f7db86605f74bc4b934",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#pullrequestreview-958241302",
      "submitted_at": "2022-04-29T22:47:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
    },
    {
      "event": "reviewed",
      "id": 958601762,
      "node_id": "PRR_kwDOABII5845Ixoi",
      "url": null,
      "actor": null,
      "commit_id": "7805cfd193fefbab3e8b6ecd82e3a63864f012f8",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2022-05-01T15:16:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "Approach ACK",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#pullrequestreview-958601762",
      "submitted_at": "2022-05-01T15:16:06Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
    },
    {
      "event": "reviewed",
      "id": 959202584,
      "node_id": "PRR_kwDOABII5845LEUY",
      "url": null,
      "actor": null,
      "commit_id": "7805cfd193fefbab3e8b6ecd82e3a63864f012f8",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2022-05-02T15:18:21Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#pullrequestreview-959202584",
      "submitted_at": "2022-05-02T15:18:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
    },
    {
      "event": "reviewed",
      "id": 959413555,
      "node_id": "PRR_kwDOABII5845L30z",
      "url": null,
      "actor": null,
      "commit_id": "7805cfd193fefbab3e8b6ecd82e3a63864f012f8",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2022-05-02T18:34:59Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#pullrequestreview-959413555",
      "submitted_at": "2022-05-02T18:34:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
    },
    {
      "event": "commented",
      "id": 1115235423,
      "node_id": "IC_kwDOABII585CeSRf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1115235423",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-02T18:42:06Z",
      "updated_at": "2022-05-02T18:42:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "@sstone I created a branch that modifies this PR to include the `in_mempool` and `block_height` of the transaction that spends the output.\r\nThe result is like this:\r\n\r\n```\r\n[\r\n  {\r\n    \"txid\": \"c8de5b22e7dac049cd6a2628580876d74c16a58a886be2b4b1c744901f8e953e\",\r\n    \"vout\": 0,\r\n    \"spendingtxid\": \"117dd0df58201d4ac6c49472dc59208487caa7d79079a4bb32d85c16f4174e72\",\r\n    \"in_mempool\": false,\r\n    \"block_height\": 88551\r\n  }\r\n]\r\n```\r\n\r\nIf you agree with this approach, feel free to use the code of that branch.\r\nhttps://github.com/w0xlt/bitcoin/tree/add_txospender_index_2",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-1115235423",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "mentioned",
      "id": 6535486440,
      "node_id": "MEE_lADOABII585Fi6uozwAAAAGFi5vo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6535486440",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-02T18:42:06Z"
    },
    {
      "event": "subscribed",
      "id": 6535486448,
      "node_id": "SE_lADOABII585Fi6uozwAAAAGFi5vw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6535486448",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-02T18:42:06Z"
    },
    {
      "event": "comment_deleted",
      "id": 6543103911,
      "node_id": "CDE_lADOABII585Fi6uozwAAAAGF_9en",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6543103911",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-03T18:51:05Z"
    },
    {
      "event": "commented",
      "id": 1116455957,
      "node_id": "IC_kwDOABII585Ci8QV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1116455957",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-03T19:00:42Z",
      "updated_at": "2022-05-03T19:00:42Z",
      "author_association": "CONTRIBUTOR",
      "body": "There is no need for a new commit to address review comments.\r\nThe last commit can be squashed.\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#squashing-commits",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-1116455957",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6543418094,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAAGGBKLu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6543418094",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "94e82f5750c7b29719a6f2cbb2fe257a4d284c5f",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/94e82f5750c7b29719a6f2cbb2fe257a4d284c5f",
      "created_at": "2022-05-03T19:37:39Z"
    },
    {
      "event": "commented",
      "id": 1117947117,
      "node_id": "IC_kwDOABII585CooTt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1117947117",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-04T21:18:05Z",
      "updated_at": "2022-05-04T21:18:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "The `static RPCHelpMan getindexinfo()` RPC should also be updated.\r\n\r\n```diff\r\nstatic RPCHelpMan getindexinfo()\r\n{\r\n    // ...\r\n    if (g_txindex) {\r\n        result.pushKVs(SummaryToJSON(g_txindex->GetSummary(), index_name));\r\n    }\r\n\r\n    if (g_coin_stats_index) {\r\n        result.pushKVs(SummaryToJSON(g_coin_stats_index->GetSummary(), index_name));\r\n    }\r\n\r\n+    if (g_txospenderindex) {\r\n+        result.pushKVs(SummaryToJSON(g_txospenderindex->GetSummary(), index_name));\r\n+    }\r\n\r\n    ForEachBlockFilterIndex([&result, &index_name](const BlockFilterIndex& index) {\r\n        result.pushKVs(SummaryToJSON(index.GetSummary(), index_name));\r\n    });\r\n    // ...\r\n}\r\n```\r\n\r\n",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-1117947117",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6558792341,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAAGG7zqV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6558792341",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d9d96f8b5dab7a617efb95c7a4c53114a7815abe",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/d9d96f8b5dab7a617efb95c7a4c53114a7815abe",
      "created_at": "2022-05-05T18:35:21Z"
    },
    {
      "event": "commented",
      "id": 1119010703,
      "node_id": "IC_kwDOABII585Csr-P",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1119010703",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-05T20:21:43Z",
      "updated_at": "2022-05-05T20:21:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "> The `static RPCHelpMan getindexinfo()` RPC should also be updated.\r\n> \r\n> ```diff\r\n> static RPCHelpMan getindexinfo()\r\n> {\r\n>     // ...\r\n>     if (g_txindex) {\r\n>         result.pushKVs(SummaryToJSON(g_txindex->GetSummary(), index_name));\r\n>     }\r\n> \r\n>     if (g_coin_stats_index) {\r\n>         result.pushKVs(SummaryToJSON(g_coin_stats_index->GetSummary(), index_name));\r\n>     }\r\n> \r\n> +    if (g_txospenderindex) {\r\n> +        result.pushKVs(SummaryToJSON(g_txospenderindex->GetSummary(), index_name));\r\n> +    }\r\n> \r\n>     ForEachBlockFilterIndex([&result, &index_name](const BlockFilterIndex& index) {\r\n>         result.pushKVs(SummaryToJSON(index.GetSummary(), index_name));\r\n>     });\r\n>     // ...\r\n> }\r\n> ```\r\n\r\nThanks! done in https://github.com/bitcoin/bitcoin/pull/24539/commits/d9d96f8b5dab7a617efb95c7a4c53114a7815abe",
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-1119010703",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6697741235,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAAGPN2uz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6697741235",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "30e91e3978d5beb32394cc1496b7f572548c871c",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/30e91e3978d5beb32394cc1496b7f572548c871c",
      "created_at": "2022-05-29T02:20:03Z"
    },
    {
      "event": "labeled",
      "id": 7013334694,
      "node_id": "LE_lADOABII585Fi6uozwAAAAGiBv6m",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7013334694",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-18T15:53:27Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7028797593,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAAGi8vCZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7028797593",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "972728ab72b63ad074ffc1f2d8275d0c05672fa8",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/972728ab72b63ad074ffc1f2d8275d0c05672fa8",
      "created_at": "2022-07-20T12:14:17Z"
    },
    {
      "event": "unlabeled",
      "id": 7029704478,
      "node_id": "UNLE_lADOABII585Fi6uozwAAAAGjAMce",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7029704478",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-20T14:00:56Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7446350582,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAAG71kr2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7446350582",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ec6f47f9401b968f2805d4e8d51951e711e3a53f",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/ec6f47f9401b968f2805d4e8d51951e711e3a53f",
      "created_at": "2022-09-23T10:50:22Z"
    },
    {
      "event": "commented",
      "id": 1260928098,
      "node_id": "IC_kwDOABII585LKDxi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1260928098",
      "actor": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-28T13:36:38Z",
      "updated_at": "2022-09-28T13:37:09Z",
      "author_association": "CONTRIBUTOR",
      "body": "> As described above, there are tools in bitcoin core that we could use and would help a bit\r\n\r\nMarcoFalke and luke-jr suggested using a watch-only wallet for this use case. I don't fully understand how Lightning works in depth/implementation. Do you know @sstone what would be the pros and cons of using a watch-only wallet for this? \r\n\r\nI haven't fully synced the txospenderindex (height 568907) and I know the index is optional but it's already ~60GB, so is it worth it for layer 2 node operators?",
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-1260928098",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "mentioned",
      "id": 7478044550,
      "node_id": "MEE_lADOABII585Fi6uozwAAAAG9ueeG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7478044550",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-28T13:36:39Z"
    },
    {
      "event": "subscribed",
      "id": 7478044558,
      "node_id": "SE_lADOABII585Fi6uozwAAAAG9ueeO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7478044558",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-28T13:36:39Z"
    },
    {
      "event": "commented",
      "id": 1265735375,
      "node_id": "IC_kwDOABII585LcZbP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1265735375",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-03T16:41:53Z",
      "updated_at": "2022-10-03T16:41:53Z",
      "author_association": "CONTRIBUTOR",
      "body": "For most LN nodes watch-only wallets are probably enough: you would import all your channel outpoints, and check your wallet transactions for spending transactions (bitcoin core should include them). AFAIK you would do this by importing each channel outpoint in a single \"address\" descriptor (though it seems that there is currently no way to remove a descriptor ?).\r\n\r\nBut I'm not sure yet how practical and efficient this would be for large nodes with 10s of 1000s of transactions (I would like to have bitcoin core do some kind of filtering before it returns wallet transactions).   ",
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-1265735375",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "labeled",
      "id": 7515773589,
      "node_id": "LE_lADOABII585Fi6uozwAAAAG_-ZqV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7515773589",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-04T11:59:31Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7524218832,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAAHAenfQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7524218832",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "16b5cb0b9d343de1080ec4761bd8f20d668059ee",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/16b5cb0b9d343de1080ec4761bd8f20d668059ee",
      "created_at": "2022-10-05T11:04:53Z"
    },
    {
      "event": "unlabeled",
      "id": 7524269215,
      "node_id": "UNLE_lADOABII585Fi6uozwAAAAHAezyf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7524269215",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-05T11:13:21Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1276595646,
      "node_id": "IC_kwDOABII585MF02-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1276595646",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-12T18:49:44Z",
      "updated_at": "2022-10-12T18:49:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "update: unless I've missed something, unless you have just a few transactions to monitor, using watch-only wallet would not work as is and even if it was modified it would still create serious operational issues:\r\n\r\nIf we were to use a single watch-only wallet and import all the outpoints that we need to watch, with one descriptor per outpoint , we would still to to fetch all wallet transactions to get spending transactions even if we used labels when importing our descriptors because label filtering only works for incoming transactions, so this does not scale (and again there does not seem to be a way to remove descriptors once they've been imported). \r\n\r\nSince with LN we currently know which transactions would spend the outpoints that we are watching, we could also import them. It would solves our filtering problem but we would end up with a huge number of transaction in our wallet (millions of them). \r\n\r\nAnother option would be using one watch-only wallet per channel. This would be much better from an indexing point of view but would scale even less because there would be one wallet database per channel.\r\n\r\nAnd even if we modified how watch-only wallets work to add an optional \"spent-by\" field to listtransactions (this would be fairly easy), using them would be a problem from an operational point of view: rebuilding a node can be done very quickly, as we don't even need to restore the bitcoin wallet that we used before (we just need to have a backup): we can just point our system to a new bitcoin node with a fresh wallet and we're good to go. With watch-only wallets we would first need to rebuild this wallet, which could take hours, before we're operational again.\r\n\r\n=> I still believe that indexing \"spending\" transactions is a better approach than watch-only wallets.",
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-1276595646",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "commented",
      "id": 1276604721,
      "node_id": "IC_kwDOABII585MF3Ex",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1276604721",
      "actor": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-12T18:58:16Z",
      "updated_at": "2022-10-12T18:58:16Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the clarification @sstone. \r\n> I still believe that indexing \"spending\" transactions is a better approach than watch-only wallets.\r\n\r\nAgreed, this is Concept ACK for me then.\r\n\r\n> rebuilding a node can be done very quickly, as we don't even need to restore the bitcoin wallet that we used before (we just need to have a backup): we can just point our system to a new bitcoin node with a fresh wallet and we're good to go. With watch-only wallets we would first need to rebuild this wallet, which could take hours, before we're operational again.\r\n\r\nThe \"new bitcoin node\" would still need to have the `txospenderindex` constructed though right? Which also takes some time no?",
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-1276604721",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "mentioned",
      "id": 7574514401,
      "node_id": "MEE_lADOABII585Fi6uozwAAAAHDeerh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7574514401",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-12T18:58:17Z"
    },
    {
      "event": "subscribed",
      "id": 7574514408,
      "node_id": "SE_lADOABII585Fi6uozwAAAAHDeero",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7574514408",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-12T18:58:17Z"
    },
    {
      "event": "commented",
      "id": 1277200926,
      "node_id": "IC_kwDOABII585MIIoe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1277200926",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-13T08:05:05Z",
      "updated_at": "2022-10-13T08:05:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "> The \"new bitcoin node\" would still need to have the `txospenderindex` constructed though right? Which also takes some time no?\r\n\r\nYes, you would need to run your bitcoin nodes with -txospenderindex and -txindex (but theses indexes are \"generic\" and completely independent from your application). \r\n\r\n",
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-1277200926",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "reviewed",
      "id": 1140554364,
      "node_id": "PRR_kwDOABII585D-3p8",
      "url": null,
      "actor": null,
      "commit_id": "16b5cb0b9d343de1080ec4761bd8f20d668059ee",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2022-10-24T08:11:07Z",
      "author_association": "CONTRIBUTOR",
      "body": "LGTM.\r\nI tried this:\r\n```bash\r\n./src/bitcoin-cli -testnet gettxspendingprevout '[{\"txid\": \"f52c6102a5e9b9d11ff5edf0d888009cdcad85b44a7e83f057cf934745d9dce2\", \"vout\": 1}]'\r\n[\r\n  {\r\n    \"txid\": \"f52c6102a5e9b9d11ff5edf0d888009cdcad85b44a7e83f057cf934745d9dce2\",\r\n    \"vout\": 1,\r\n    \"spendingtxid\": \"cb891f936bb45b347495542ebc7f413db612424c5516e14faef0239fbedecee1\"\r\n  }\r\n]\r\n```\r\nThe information returned is correct (https://blockstream.info/testnet/tx/f52c6102a5e9b9d11ff5edf0d888009cdcad85b44a7e83f057cf934745d9dce2?output:1).\r\n\r\nHere's the result on `master`:\r\n```bash\r\n./src/bitcoin-cli -testnet gettxspendingprevout '[{\"txid\": \"f52c6102a5e9b9d11ff5edf0d888009cdcad85b44a7e83f057cf934745d9dce2\", \"vout\": 1}]'\r\n[\r\n  {\r\n    \"txid\": \"f52c6102a5e9b9d11ff5edf0d888009cdcad85b44a7e83f057cf934745d9dce2\",\r\n    \"vout\": 1\r\n  }\r\n]\r\n```\r\n\r\nI verified that if the spending transaction is already in the mempool, `gettxspendingprevout` behaves the same on master and this PR.\r\n\r\nFor info, the index is `6.7GB` on testnet, and 110GB on mainnet. \r\n\r\nI would also suggest splitting the PR in 3 commits (index, rpc and test) for easier review.\r\n",
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#pullrequestreview-1140554364",
      "submitted_at": "2022-10-13T11:44:09Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
    },
    {
      "event": "reviewed",
      "id": 1140675810,
      "node_id": "PRR_kwDOABII585D_VTi",
      "url": null,
      "actor": null,
      "commit_id": "16b5cb0b9d343de1080ec4761bd8f20d668059ee",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2022-10-13T12:20:39Z",
      "author_association": "MEMBER",
      "body": "didn't review, but left some nits (no need to address them, unless you push for other reasons)",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#pullrequestreview-1140675810",
      "submitted_at": "2022-10-13T12:20:39Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
    },
    {
      "event": "commented",
      "id": 1320276112,
      "node_id": "IC_kwDOABII585OsdCQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1320276112",
      "actor": {
        "login": "Pantamis",
        "id": 13965245,
        "node_id": "MDQ6VXNlcjEzOTY1MjQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13965245?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Pantamis",
        "html_url": "https://github.com/Pantamis",
        "followers_url": "https://api.github.com/users/Pantamis/followers",
        "following_url": "https://api.github.com/users/Pantamis/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Pantamis/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Pantamis/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Pantamis/subscriptions",
        "organizations_url": "https://api.github.com/users/Pantamis/orgs",
        "repos_url": "https://api.github.com/users/Pantamis/repos",
        "events_url": "https://api.github.com/users/Pantamis/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Pantamis/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-18T16:50:46Z",
      "updated_at": "2022-11-18T16:50:46Z",
      "author_association": "NONE",
      "body": "I did not review the code but tested the PR at commit 972728ab72b63ad074ffc1f2d8275d0c05672fa8 and it works.\r\n\r\nIt would be great to reduce the size of the index because it is well larger than `txindex`:\r\n\r\n```\r\nbitcoin/indexes $ du -h --max-depth=1\r\n119G\t./txospenderindex\r\n38G\t./txindex\r\n157G\t.\r\n```\r\nInstead of storing outpoint (32 + 4 bytes) -> txid (32 bytes) it could be outpointhash (32  bytes) -> txid (32 bytes) to gain 4 bytes per txos (or even using RIPEMD160 to gain 4 + 12 bytes per txo).\r\n\r\nThe txospenderindex stores redondantly the funding_txid as key for each transaction's outputs. It could be made almost half its current size if it was possible to store with the following schema: \r\n\r\nfunding_txid (32 bytes) -> concat_txids (32 * number_of_outpoints_in_funding_txid bytes)\r\n\r\nwhere concat_txid would be all the spending txid concatenated in the order of the vout of the funding transaction or 32 bytes at 0 if the outpoint is unspent. To get the spending transaction of an outpoint txid:vout, you would just have to read the bytes 32 * vout to 32 * (vout+1)  of the concat_txids given by the index. However this requires modifying the value at a given key during the sync of the index, I don't know if it is an issue.\r\n\r\nIt could be nice to provide more informations on the spending transaction too, like blockheight of spending transaction and the index of the input spending the outpoint in the spending transaction althought not necessary since these information can be found by using `txindex`.",
      "user": {
        "login": "Pantamis",
        "id": 13965245,
        "node_id": "MDQ6VXNlcjEzOTY1MjQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13965245?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Pantamis",
        "html_url": "https://github.com/Pantamis",
        "followers_url": "https://api.github.com/users/Pantamis/followers",
        "following_url": "https://api.github.com/users/Pantamis/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Pantamis/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Pantamis/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Pantamis/subscriptions",
        "organizations_url": "https://api.github.com/users/Pantamis/orgs",
        "repos_url": "https://api.github.com/users/Pantamis/repos",
        "events_url": "https://api.github.com/users/Pantamis/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Pantamis/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-1320276112",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "commented",
      "id": 1322129396,
      "node_id": "IC_kwDOABII585Ozhf0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1322129396",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-21T14:16:01Z",
      "updated_at": "2022-11-21T14:16:01Z",
      "author_association": "CONTRIBUTOR",
      "body": "> It would be great to reduce the size of the index because it is well larger than `txindex`:\r\n> ...\r\n> Instead of storing outpoint (32 + 4 bytes) -> txid (32 bytes) it could be outpointhash (32 bytes) -> txid (32 bytes) to gain 4 bytes per txos (or even using RIPEMD160 to gain 4 + 12 bytes per txo).\r\n\r\nI went for a simple scheme that is easy to use and did not try to optimize for space as it would still be O(n) so there's not much to be gained unless I'm missing something.\r\nIt could be made smaller by using `blockheight | txindex |outputindex` (8 bytes) instead of txids ((this is how we define \"short channel ids\" in LN), but it would be harder to use. \r\n  \r\n> The txospenderindex stores redondantly the funding_txid as key for each transaction's outputs. It could be made almost half its current size if it was possible to store with the following schema:\r\n> \r\n> funding_txid (32 bytes) -> concat_txids (32 * number_of_outpoints_in_funding_txid bytes)\r\n> \r\n> where concat_txid would be all the spending txid concatenated in the order of the vout of the funding transaction or 32 bytes at 0 if the outpoint is unspent. To get the spending transaction of an outpoint txid:vout, you would just have to read the bytes 32 * vout to 32 * (vout+1) of the concat_txids given by the index. However this requires modifying the value at a given key during the sync of the index, I don't know if it is an issue.\r\n> \r\n\r\nSame reason as above, I'll have a look but I'm not sure the gain is worth the added complexity.\r\n\r\n> It could be nice to provide more informations on the spending transaction too, like blockheight of spending transaction and the index of the input spending the outpoint in the spending transaction althought not necessary since these information can be found by using `txindex`.\r\n\r\nYes, I supposed that users would call `gettransaction` to get additional info on the spending tx \r\n\r\n",
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-1322129396",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "reviewed",
      "id": 1188968612,
      "node_id": "PRR_kwDOABII585G3jik",
      "url": null,
      "actor": null,
      "commit_id": "16b5cb0b9d343de1080ec4761bd8f20d668059ee",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2022-11-21T22:01:04Z",
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#pullrequestreview-1188968612",
      "submitted_at": "2022-11-21T22:01:04Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7869473337,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAAHVDqI5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7869473337",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "965bc7ef2e8548fd9abe609a752cadf7c44b8c00",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/965bc7ef2e8548fd9abe609a752cadf7c44b8c00",
      "created_at": "2022-11-22T16:08:47Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7879596144,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAAHVqRhw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7879596144",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5957f992b7afe20dca250c398bb28ad0ae52f868",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/5957f992b7afe20dca250c398bb28ad0ae52f868",
      "created_at": "2022-11-23T18:01:53Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7941177033,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAAHZVL7J",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7941177033",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2d6f407fb70e6afe004cfcdc563a6fab00f29e42",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/2d6f407fb70e6afe004cfcdc563a6fab00f29e42",
      "created_at": "2022-12-02T14:27:06Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7941320883,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAAHZVvCz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7941320883",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "47e60750e7de54365dba3651b412716af552f85f",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/47e60750e7de54365dba3651b412716af552f85f",
      "created_at": "2022-12-02T14:45:17Z"
    },
    {
      "event": "reviewed",
      "id": 1204651133,
      "node_id": "PRR_kwDOABII585HzYR9",
      "url": null,
      "actor": null,
      "commit_id": "47e60750e7de54365dba3651b412716af552f85f",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2022-12-05T14:27:58Z",
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#pullrequestreview-1204651133",
      "submitted_at": "2022-12-05T14:27:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
    },
    {
      "event": "labeled",
      "id": 7970455511,
      "node_id": "LE_lADOABII585Fi6uozwAAAAHbE3_X",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7970455511",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-06T20:07:46Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7978142479,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAAHbiMsP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7978142479",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "99aed6d923d85ae4c10418cf4fa7264c7ca8d65f",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/99aed6d923d85ae4c10418cf4fa7264c7ca8d65f",
      "created_at": "2022-12-07T14:01:39Z"
    },
    {
      "event": "unlabeled",
      "id": 7978810264,
      "node_id": "UNLE_lADOABII585Fi6uozwAAAAHbkvuY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7978810264",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-07T15:06:39Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8374655068,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAAHzKxhc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8374655068",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a99e01bdeb2997c9bb01fe3b8d80d6b4438a42b7",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/a99e01bdeb2997c9bb01fe3b8d80d6b4438a42b7",
      "created_at": "2023-01-27T15:50:10Z"
    },
    {
      "event": "labeled",
      "id": 8913456669,
      "node_id": "LE_lADOABII585Fi6uozwAAAAITSI4d",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8913456669",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-03T14:07:24Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8914750217,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAAITXEsJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8914750217",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "8c4774aa175aa03c58857f60f2f2334a32e8bd8c",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/8c4774aa175aa03c58857f60f2f2334a32e8bd8c",
      "created_at": "2023-04-03T16:01:22Z"
    },
    {
      "event": "unlabeled",
      "id": 8914914692,
      "node_id": "UNLE_lADOABII585Fi6uozwAAAAITXs2E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8914914692",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-03T16:16:19Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9082659489,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAAIdXmKh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9082659489",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fad04bc872c546f2c521d7271853d5cf9ba3b004",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/fad04bc872c546f2c521d7271853d5cf9ba3b004",
      "created_at": "2023-04-24T15:04:54Z"
    },
    {
      "event": "labeled",
      "id": 9237859929,
      "node_id": "LE_lADOABII585Fi6uozwAAAAImno5Z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9237859929",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-13T05:54:06Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unsubscribed",
      "id": 9281775210,
      "node_id": "UE_lADOABII585Fi6uozwAAAAIpPKZq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9281775210",
      "actor": {
        "login": "joostjager",
        "id": 4638168,
        "node_id": "MDQ6VXNlcjQ2MzgxNjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4638168?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/joostjager",
        "html_url": "https://github.com/joostjager",
        "followers_url": "https://api.github.com/users/joostjager/followers",
        "following_url": "https://api.github.com/users/joostjager/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/joostjager/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/joostjager/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/joostjager/subscriptions",
        "organizations_url": "https://api.github.com/users/joostjager/orgs",
        "repos_url": "https://api.github.com/users/joostjager/repos",
        "events_url": "https://api.github.com/users/joostjager/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/joostjager/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-18T16:41:58Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9286450296,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAAIpg_x4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9286450296",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "db2a6884dfef4ad6945e634a0c0d1f3ce21a20ad",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/db2a6884dfef4ad6945e634a0c0d1f3ce21a20ad",
      "created_at": "2023-05-19T07:11:42Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9287920726,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAAIpmmxW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9287920726",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2176778461f52ea15f85fada81fcf4c8aa59646b",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/2176778461f52ea15f85fada81fcf4c8aa59646b",
      "created_at": "2023-05-19T10:14:45Z"
    },
    {
      "event": "unlabeled",
      "id": 9295604388,
      "node_id": "UNLE_lADOABII585Fi6uozwAAAAIqD6qk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9295604388",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-21T08:41:25Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 9384952005,
      "node_id": "LE_lADOABII585Fi6uozwAAAAIvYwDF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9384952005",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-31T03:29:53Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9435682643,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAAIyaRdT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9435682643",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e208ff8bf7aff2d3393553e1a6cbf76da9f3e011",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/e208ff8bf7aff2d3393553e1a6cbf76da9f3e011",
      "created_at": "2023-06-05T16:13:59Z"
    },
    {
      "event": "unlabeled",
      "id": 9436392478,
      "node_id": "UNLE_lADOABII585Fi6uozwAAAAIyc-we",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9436392478",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T17:30:30Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 9828121384,
      "node_id": "LE_lADOABII585Fi6uozwAAAAJJzTso",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9828121384",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-15T10:36:55Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10027016280,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAAJVqCBY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10027016280",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "8368a74f533db25ea6a02ad95221545c1f93f7be",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/8368a74f533db25ea6a02ad95221545c1f93f7be",
      "created_at": "2023-08-07T17:31:15Z"
    },
    {
      "event": "reviewed",
      "id": 1566674806,
      "node_id": "PRR_kwDOABII585dYY92",
      "url": null,
      "actor": null,
      "commit_id": "8368a74f533db25ea6a02ad95221545c1f93f7be",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2023-08-08T07:36:20Z",
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#pullrequestreview-1566674806",
      "submitted_at": "2023-08-08T07:36:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10035051703,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAAJWIry3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10035051703",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "48d829484eb9fc0a63fd04083d92f6a3005ec491",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/48d829484eb9fc0a63fd04083d92f6a3005ec491",
      "created_at": "2023-08-08T12:39:38Z"
    },
    {
      "event": "unlabeled",
      "id": 10036392813,
      "node_id": "UNLE_lADOABII585Fi6uozwAAAAJWNzNt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10036392813",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-08T14:32:49Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 10353336019,
      "node_id": "LE_lADOABII585Fi6uozwAAAAJpG17T",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10353336019",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-13T00:20:23Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10396777545,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAAJrsjxJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10396777545",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d5c3dffbbd8d9b67b08d7494d522883a16a960e7",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/d5c3dffbbd8d9b67b08d7494d522883a16a960e7",
      "created_at": "2023-09-18T11:36:32Z"
    },
    {
      "event": "unlabeled",
      "id": 10398544436,
      "node_id": "UNLE_lADOABII585Fi6uozwAAAAJrzTI0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10398544436",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-18T14:07:29Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10537847125,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAAJ0GslV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10537847125",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "af92a0dd83d1f1a80ffa683c475be526205c7351",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/af92a0dd83d1f1a80ffa683c475be526205c7351",
      "created_at": "2023-10-03T12:38:21Z"
    },
    {
      "event": "labeled",
      "id": 10546056031,
      "node_id": "LE_lADOABII585Fi6uozwAAAAJ0mAtf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10546056031",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-04T04:54:51Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 10550378950,
      "node_id": "UNLE_lADOABII585Fi6uozwAAAAJ02gHG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10550378950",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-04T12:24:12Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1850461907,
      "node_id": "IC_kwDOABII585uS87T",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1850461907",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-11T16:45:47Z",
      "updated_at": "2023-12-11T16:45:47Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-1850461907",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "labeled",
      "id": 11480169023,
      "node_id": "LE_lADOABII585Fi6uozwAAAAKsRXo_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11480169023",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-14T06:28:15Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11665789716,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAAK3VdMU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11665789716",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a0e0ce8b36f5f96ee75faf6e897d55b2406734c6",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/a0e0ce8b36f5f96ee75faf6e897d55b2406734c6",
      "created_at": "2024-02-01T07:44:23Z"
    },
    {
      "event": "unlabeled",
      "id": 11666532937,
      "node_id": "UNLE_lADOABII585Fi6uozwAAAAK3YSpJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11666532937",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-01T08:47:46Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1999546679,
      "node_id": "IC_kwDOABII5853Lqk3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1999546679",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-15T12:18:06Z",
      "updated_at": "2024-03-15T12:18:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/21097591816</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-1999546679",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "labeled",
      "id": 12130857114,
      "node_id": "LE_lADOABII585Fi6uozwAAAALTDjCa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12130857114",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-15T12:18:06Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12166349075,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAALVK8ET",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12166349075",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "12f55a4b356e3d0dfac86ab5ae30f0161d26df17",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/12f55a4b356e3d0dfac86ab5ae30f0161d26df17",
      "created_at": "2024-03-19T09:35:53Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12167074035,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAALVNtDz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12167074035",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "af3c6032a1b497490b3bd00b6902a2bcaf5d7214",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/af3c6032a1b497490b3bd00b6902a2bcaf5d7214",
      "created_at": "2024-03-19T10:29:17Z"
    },
    {
      "event": "unlabeled",
      "id": 12167758365,
      "node_id": "UNLE_lADOABII585Fi6uozwAAAALVQUId",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12167758365",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-19T11:24:13Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 12188678304,
      "node_id": "LE_lADOABII585Fi6uozwAAAALWgHig",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12188678304",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-20T17:25:24Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12199280257,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAALXIj6B",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12199280257",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "eada8fcba054d45db5f8641fca5d6ebaa0c4ad17",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/eada8fcba054d45db5f8641fca5d6ebaa0c4ad17",
      "created_at": "2024-03-21T11:39:54Z"
    },
    {
      "event": "unlabeled",
      "id": 12200034316,
      "node_id": "UNLE_lADOABII585Fi6uozwAAAALXLcAM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12200034316",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-21T12:32:38Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 13028896819,
      "node_id": "LE_lADOABII585Fi6uozwAAAAMIlTAz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13028896819",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-04T01:54:02Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2146418971,
      "node_id": "IC_kwDOABII585_78Eb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2146418971",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-04T01:54:03Z",
      "updated_at": "2024-06-04T01:54:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/22929252121</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-2146418971",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13032471815,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAAMIy70H",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13032471815",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "080443267232ac884e20a995fb80f23343ed469e",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/080443267232ac884e20a995fb80f23343ed469e",
      "created_at": "2024-06-04T08:39:39Z"
    },
    {
      "event": "unlabeled",
      "id": 13033655153,
      "node_id": "UNLE_lADOABII585Fi6uozwAAAAMI3ctx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13033655153",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-04T09:56:34Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2168724504,
      "node_id": "IC_kwDOABII586BRBwY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2168724504",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-14T20:32:29Z",
      "updated_at": "2024-06-14T20:32:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/25775869882</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-2168724504",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "labeled",
      "id": 13165367238,
      "node_id": "LE_lADOABII585Fi6uozwAAAAMQt4_G",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13165367238",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-14T20:32:29Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13219897194,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAAMT959q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13219897194",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "40e44e96c38593210877f0b5d062e71a8dd292a5",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/40e44e96c38593210877f0b5d062e71a8dd292a5",
      "created_at": "2024-06-19T18:38:19Z"
    },
    {
      "event": "unlabeled",
      "id": 13220981726,
      "node_id": "UNLE_lADOABII585Fi6uozwAAAAMUCCve",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13220981726",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-19T21:15:34Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2219808525,
      "node_id": "PRR_kwDOABII586ET5cN",
      "url": null,
      "actor": null,
      "commit_id": "40e44e96c38593210877f0b5d062e71a8dd292a5",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-08-07T22:51:28Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK 40e44e96c38593210877f0b5d062e71a8dd292a5\r\n\r\nCan see how this is useful for L2s. Is a variant of this PR known to be used in production?\r\n\r\nI do agree with @Pantamis in https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-1320276112 that having it take 3x the space of **TxIndex** seems unfortunate, would prefer it used `CDiskTxPos` for the values. Edit: Would require disallowing pruning again.\r\n\r\n\r\nCommits could be squashed/rewritten. Seems like the latter two are responses to PR feedback rather than \"telling a story\".\r\nPreviously pointed out: https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-1116455957\r\n\r\nPR summary still has \"(so -txospenderindex requires -txindex)\" which doesn't match current implementation.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#pullrequestreview-2219808525",
      "submitted_at": "2024-08-07T22:48:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
    },
    {
      "event": "labeled",
      "id": 13909179768,
      "node_id": "LE_lADOABII585Fi6uozwAAAAM9DT14",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13909179768",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-16T10:30:08Z",
      "label": {
        "name": "Needs CMake port",
        "color": "0e8a16"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13963195022,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAANARXKO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13963195022",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0b8a1ae6bf7a723a375898217b90d274aa193373",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/0b8a1ae6bf7a723a375898217b90d274aa193373",
      "created_at": "2024-08-21T16:15:17Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13963400277,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAANASJRV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13963400277",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "20b259332ff1d2e6ca6b291ffeda00b51497bbed",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/20b259332ff1d2e6ca6b291ffeda00b51497bbed",
      "created_at": "2024-08-21T16:30:00Z"
    },
    {
      "event": "labeled",
      "id": 13963401508,
      "node_id": "LE_lADOABII585Fi6uozwAAAANASJkk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13963401508",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-21T16:30:05Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2302506145,
      "node_id": "IC_kwDOABII586JPXSh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2302506145",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-21T16:30:06Z",
      "updated_at": "2024-08-21T16:30:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/29067777506</sub>\n\n<details><summary>Hints</summary>\n\nMake sure to run all tests locally, according to the documentation.\n\nThe failure may happen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-2302506145",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "unlabeled",
      "id": 13964455375,
      "node_id": "UNLE_lADOABII585Fi6uozwAAAANAWK3P",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13964455375",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-21T17:58:03Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2252007696,
      "node_id": "PRR_kwDOABII586GOukQ",
      "url": null,
      "actor": null,
      "commit_id": "20b259332ff1d2e6ca6b291ffeda00b51497bbed",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-08-21T22:14:17Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#pullrequestreview-2252007696",
      "submitted_at": "2024-08-21T22:14:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
    },
    {
      "event": "commented",
      "id": 2303916729,
      "node_id": "IC_kwDOABII586JUvq5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2303916729",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-22T06:53:06Z",
      "updated_at": "2024-08-22T06:53:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I do agree with @Pantamis in [#24539 (comment)](https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-1320276112) that having it take 3x the space of **TxIndex** seems unfortunate, would prefer it used `CDiskTxPos` for the values. Edit: Would require disallowing pruning again.\r\n\r\nTo make the index more efficient we could replace the indexed outpoint with an 8 byte value `{block height|tx pos|output index}` and use the block height where the tx is spent instead of the full spending tx id, reducing the size of an index entry from (32 + 4 + 32)  to (8 + 4) bytes, though it would become less generic and harder to use (especially without `-txindex`).",
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-2303916729",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "mentioned",
      "id": 13972189215,
      "node_id": "MEE_lADOABII585Fi6uozwAAAANAzrAf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13972189215",
      "actor": {
        "login": "Pantamis",
        "id": 13965245,
        "node_id": "MDQ6VXNlcjEzOTY1MjQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13965245?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Pantamis",
        "html_url": "https://github.com/Pantamis",
        "followers_url": "https://api.github.com/users/Pantamis/followers",
        "following_url": "https://api.github.com/users/Pantamis/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Pantamis/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Pantamis/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Pantamis/subscriptions",
        "organizations_url": "https://api.github.com/users/Pantamis/orgs",
        "repos_url": "https://api.github.com/users/Pantamis/repos",
        "events_url": "https://api.github.com/users/Pantamis/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Pantamis/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-22T06:53:07Z"
    },
    {
      "event": "subscribed",
      "id": 13972189226,
      "node_id": "SE_lADOABII585Fi6uozwAAAANAzrAq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13972189226",
      "actor": {
        "login": "Pantamis",
        "id": 13965245,
        "node_id": "MDQ6VXNlcjEzOTY1MjQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13965245?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Pantamis",
        "html_url": "https://github.com/Pantamis",
        "followers_url": "https://api.github.com/users/Pantamis/followers",
        "following_url": "https://api.github.com/users/Pantamis/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Pantamis/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Pantamis/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Pantamis/subscriptions",
        "organizations_url": "https://api.github.com/users/Pantamis/orgs",
        "repos_url": "https://api.github.com/users/Pantamis/repos",
        "events_url": "https://api.github.com/users/Pantamis/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Pantamis/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-22T06:53:07Z"
    },
    {
      "event": "labeled",
      "id": 14056558754,
      "node_id": "LE_lADOABII585Fi6uozwAAAANF1hCi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14056558754",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-29T06:43:56Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2316831548,
      "node_id": "IC_kwDOABII586KGAs8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2316831548",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-29T06:43:57Z",
      "updated_at": "2024-08-29T06:43:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/29068484289</sub>\n\n<details><summary>Hints</summary>\n\nMake sure to run all tests locally, according to the documentation.\n\nThe failure may happen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-2316831548",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "unlabeled",
      "id": 14056772001,
      "node_id": "UNLE_lADOABII585Fi6uozwAAAANF2VGh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14056772001",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-29T07:04:06Z",
      "label": {
        "name": "Needs CMake port",
        "color": "0e8a16"
      }
    },
    {
      "event": "labeled",
      "id": 14107553224,
      "node_id": "LE_lADOABII585Fi6uozwAAAANI4C3I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14107553224",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-02T22:46:52Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14182704083,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAANNWuPT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14182704083",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f5b2f4c9df83cfcda3317053fb8f9a97ed026500",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/f5b2f4c9df83cfcda3317053fb8f9a97ed026500",
      "created_at": "2024-09-09T12:39:19Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14182787890,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAANNXCsy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14182787890",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0ead96c5484b07226d387da67d7b80213e1abeab",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/0ead96c5484b07226d387da67d7b80213e1abeab",
      "created_at": "2024-09-09T12:45:02Z"
    },
    {
      "event": "unlabeled",
      "id": 14184012334,
      "node_id": "UNLE_lADOABII585Fi6uozwAAAANNbtou",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14184012334",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-09T14:00:34Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 14185519628,
      "node_id": "UNLE_lADOABII585Fi6uozwAAAANNhdoM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14185519628",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-09T15:36:35Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2346225294,
      "node_id": "IC_kwDOABII586L2I6O",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2346225294",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-12T13:01:56Z",
      "updated_at": "2024-09-12T22:37:11Z",
      "author_association": "CONTRIBUTOR",
      "body": "I put some time into implementing 3 variations on different personal branches:\r\n\r\n### Variant 1: [unchanged_key_CDiskTxPos](https://github.com/bitcoin/bitcoin/compare/20b259332ff1d2e6ca6b291ffeda00b51497bbed...hodlinator:bitcoin:pr/24539_unchanged_key_CDiskTxPos) / baf57fb3a45c97d6cfb531b9252c97d4f27ad7ae\r\n\r\n`uint256` value -> `CDiskTxPos`\r\n\r\nStill have key of `COutPoint`: 32 + 4 = 36 bytes\r\nold value - `uint256`: 32 bytes\r\nnew value - `CDiskTxPos`: 4 + 4 + 4 = 12 bytes\r\n\r\n36+32 -> 36+12 => 29% theoretical size reduction.\r\n\r\n### Variant 2: [slow_key_CDiskTxPos](https://github.com/bitcoin/bitcoin/compare/20b259332ff1d2e6ca6b291ffeda00b51497bbed...hodlinator:bitcoin:pr/24539_slow_key_CDiskTxPos) / 1d3fd04a60ca5c28d8bef6ce4f611a583667dc2e\r\n\r\nMinimize key + `CDiskTxPos` value\r\n\r\nold key - `COutPoint`: 32 + 4 = 36 bytes\r\nnew key - `uint64`: 8 bytes\r\nold value - `uint256`: 32 bytes\r\nnew value - `CDiskTxPos`: 4 + 4 + 4 = 12 bytes\r\n\r\n36+32 -> 8+12 => 71% theoretical size reduction.\r\n\r\nUses expensive way of computing keys: looking up through `BlockManager` and reading the block data from disk.\r\n\r\nApologies for using \"tx_index\" both for the `TxIndex` database and the location of a transactions within a given block.\r\n\r\n### Variant 3: [minimal_key_value](https://github.com/bitcoin/bitcoin/compare/20b259332ff1d2e6ca6b291ffeda00b51497bbed...hodlinator:bitcoin:pr/24539_minimal_key_value) / ced505834dd1349bccbceeac3bf5abaa2327bda0\r\n\r\nMinimize key & value footprint\r\n\r\nold key - `COutPoint`: 32 + 4 = 36 bytes\r\nnew key - `uint64`: 8 bytes\r\nold value - `uint256`: 32 bytes\r\nnew value - `uint32`: 4 bytes\r\n\r\n36+32 -> 8+4 => 82% theoretical size reduction, matching https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-2303916729.\r\n\r\nUses expensive way of computing keys: looking up through `BlockManager` and reading the block data from disk.\r\n\r\n`TxoSpenderIndex::FindSpender` uses questionable way of finding the correct block.\r\n\r\n### Conclusion\r\n\r\nNot an expert on the `BlockManager` family of API's so there may well be better implementations.\r\n\r\nThe first one of just switching the value `uint256` -> `CDiskTxPos` feels quite feasible. Should have similar performance as `TxIndex::FindTx()` for the `TxoSpenderIndex::FindSpender()`-lookups.\r\n\r\nThe 2 later variants do significantly decrease the amount of theoretical space used, but I'm guessing the cost of computing the key would be somewhat prohibitive.\r\n\r\nIf run in an environment where hardware cost is negligible, but speed of lookup is *critical*, keeping the current approach of full `uint256` values may be preferable.\r\n\r\n(The size reductions have not been confirmed on chain syncs and remain theoretical for now).\r\n\r\n(All 3 explored variations contain the same 2 base refactoring commits de14caa0df5b90208400b96e5b1b34752f4d57c0 & 44e4e4e88fb10c3fe44ebe238f88da369a7572f0).\r\n\r\nEdit: Managed to fix functional tests for variant 2 with an additional commit but variant 3 is still flaky despite being patched up.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-2346225294",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "commented",
      "id": 2346494798,
      "node_id": "IC_kwDOABII586L3KtO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2346494798",
      "actor": {
        "login": "antonilol",
        "id": 49868160,
        "node_id": "MDQ6VXNlcjQ5ODY4MTYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/49868160?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/antonilol",
        "html_url": "https://github.com/antonilol",
        "followers_url": "https://api.github.com/users/antonilol/followers",
        "following_url": "https://api.github.com/users/antonilol/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/antonilol/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/antonilol/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/antonilol/subscriptions",
        "organizations_url": "https://api.github.com/users/antonilol/orgs",
        "repos_url": "https://api.github.com/users/antonilol/repos",
        "events_url": "https://api.github.com/users/antonilol/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/antonilol/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-12T14:40:48Z",
      "updated_at": "2024-09-12T14:40:48Z",
      "author_association": "NONE",
      "body": "> ### [minimal_key_value](https://github.com/bitcoin/bitcoin/compare/20b259332ff1d2e6ca6b291ffeda00b51497bbed...hodlinator:bitcoin:pr/24539_minimal_key_value) / [ced5058](https://github.com/bitcoin/bitcoin/commit/ced505834dd1349bccbceeac3bf5abaa2327bda0)\r\n> \r\n> Minimize key & value footprint\r\n> \r\n> ...\r\n\r\nThis one (the third) is very similar to the 'spending' index of electrs (https://github.com/romanz/electrs), only different being how the key is calculated, electrs uses the first 8 bytes of the txid (as uint64) + vout, because the block height or tx position might not be known.\r\n\r\nNeeding to parse whole blocks to find a transaction for every request impacts lookup time and requires all blocks to be available (so either disallows pruning or needs to request blocks from peers, which hurts privacy).",
      "user": {
        "login": "antonilol",
        "id": 49868160,
        "node_id": "MDQ6VXNlcjQ5ODY4MTYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/49868160?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/antonilol",
        "html_url": "https://github.com/antonilol",
        "followers_url": "https://api.github.com/users/antonilol/followers",
        "following_url": "https://api.github.com/users/antonilol/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/antonilol/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/antonilol/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/antonilol/subscriptions",
        "organizations_url": "https://api.github.com/users/antonilol/orgs",
        "repos_url": "https://api.github.com/users/antonilol/repos",
        "events_url": "https://api.github.com/users/antonilol/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/antonilol/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-2346494798",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "labeled",
      "id": 14236588060,
      "node_id": "LE_lADOABII585Fi6uozwAAAANQkRgc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14236588060",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-12T17:31:41Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2347290237,
      "node_id": "IC_kwDOABII586L6M59",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2347290237",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-12T21:35:41Z",
      "updated_at": "2024-09-12T21:35:41Z",
      "author_association": "CONTRIBUTOR",
      "body": "> This one (the third) is very similar to the 'spending' index of electrs (https://github.com/romanz/electrs), only different being how the key is calculated, electrs uses the first 8 bytes of the txid (as uint64) + vout, because the block height or tx position might not be known.\r\n> \r\n> Needing to parse whole blocks to find a transaction for every request impacts lookup time and requires all blocks to be available (so either disallows pruning or needs to request blocks from peers, which hurts privacy).\r\n\r\nAh, I see: https://github.com/romanz/electrs/blob/875fb61951e3b337c9e4e468734e119ff58c0482/src/types.rs#L119-L124\r\nInteresting variant. Just using 8 bytes from the txid + vout does allow for a lot of transactions before collisions start becoming frequent, and avoids the expensive block lookup. People do grind txid prefixes like https://mempool.space/tx/b10c0000004da5a9d1d9b4ae32e09f0b3e62d21a5cce5428d4ad714fb444eb5d so they could intentionally force a lot of equal prefixes, but that's probably negligible.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-2347290237",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "commented",
      "id": 2347355369,
      "node_id": "IC_kwDOABII586L6czp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2347355369",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-12T22:33:07Z",
      "updated_at": "2024-09-14T22:19:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "New variant inspired by @antonilol with same disk space requirements as my 2nd variant above (avoiding my messy and not 100% functional block-lookup-by-height code from variant 3 for now). Much cleaner, removing requirement for additional locking and removes dependencies on `BlockManager` and `TxIndex` - on parity with variant 1 but with the disk space savings of variant 2!\r\n\r\nEdit 1: Drawback - does not handle key-collisions yet. :D\r\nEdit 2: Now contains tentative collision handling solution without specific tests. Prefix collisions should be very rare but do fall back to full outpoint keys (32 + 4 bytes).\r\n\r\n### Variant 4: [txidprefix+vout_CDiskTxPos](https://github.com/bitcoin/bitcoin/compare/20b259332ff1d2e6ca6b291ffeda00b51497bbed...hodlinator:bitcoin:pr/24539_txidprefix+vout_CDiskTxPos) / 3bc5c8dbffd1ef529eb12bae5f5722c99cc17c69 (+ c2d0d97f467649748a7f21af3b1e58b74da12b49 for collision handling)\r\n\r\ntxout prefix + `CDiskTxPos` value\r\n\r\nold key - `COutPoint`: 32 + 4 = 36 bytes\r\nnew key - (`COutPoint.hash.u64_prefix` + `COutPoint.vout`) -> uint64: 8 bytes\r\nold value - `uint256`: 32 bytes\r\nnew value - `CDiskTxPos`: 4 + 4 + 4 = 12 bytes\r\n\r\n36+32 -> 8+12 => 71% theoretical size reduction.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-2347355369",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "mentioned",
      "id": 14239701151,
      "node_id": "MEE_lADOABII585Fi6uozwAAAANQwJif",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14239701151",
      "actor": {
        "login": "antonilol",
        "id": 49868160,
        "node_id": "MDQ6VXNlcjQ5ODY4MTYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/49868160?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/antonilol",
        "html_url": "https://github.com/antonilol",
        "followers_url": "https://api.github.com/users/antonilol/followers",
        "following_url": "https://api.github.com/users/antonilol/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/antonilol/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/antonilol/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/antonilol/subscriptions",
        "organizations_url": "https://api.github.com/users/antonilol/orgs",
        "repos_url": "https://api.github.com/users/antonilol/repos",
        "events_url": "https://api.github.com/users/antonilol/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/antonilol/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-12T22:33:09Z"
    },
    {
      "event": "subscribed",
      "id": 14239701162,
      "node_id": "SE_lADOABII585Fi6uozwAAAANQwJiq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14239701162",
      "actor": {
        "login": "antonilol",
        "id": 49868160,
        "node_id": "MDQ6VXNlcjQ5ODY4MTYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/49868160?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/antonilol",
        "html_url": "https://github.com/antonilol",
        "followers_url": "https://api.github.com/users/antonilol/followers",
        "following_url": "https://api.github.com/users/antonilol/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/antonilol/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/antonilol/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/antonilol/subscriptions",
        "organizations_url": "https://api.github.com/users/antonilol/orgs",
        "repos_url": "https://api.github.com/users/antonilol/repos",
        "events_url": "https://api.github.com/users/antonilol/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/antonilol/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-12T22:33:09Z"
    },
    {
      "event": "unlabeled",
      "id": 14263166966,
      "node_id": "UNLE_lADOABII585Fi6uozwAAAANSJqf2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14263166966",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-15T13:35:11Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2370881572,
      "node_id": "IC_kwDOABII586NUMgk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2370881572",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-24T10:28:04Z",
      "updated_at": "2024-09-24T10:28:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/29873383730</sub>\n\n<details><summary>Hints</summary>\n\nMake sure to run all tests locally, according to the documentation.\n\nThe failure may happen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-2370881572",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "labeled",
      "id": 14379174346,
      "node_id": "LE_lADOABII585Fi6uozwAAAANZEMnK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14379174346",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-24T10:28:04Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14427251753,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAANb7mQp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14427251753",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2d3609604b6511ffe8f86600fb7fc95a0d77884e",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/2d3609604b6511ffe8f86600fb7fc95a0d77884e",
      "created_at": "2024-09-27T08:11:51Z"
    },
    {
      "event": "unlabeled",
      "id": 14428189784,
      "node_id": "UNLE_lADOABII585Fi6uozwAAAANb_LRY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14428189784",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-27T09:24:05Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2379086150,
      "node_id": "IC_kwDOABII586NzflG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2379086150",
      "actor": {
        "login": "antonilol",
        "id": 49868160,
        "node_id": "MDQ6VXNlcjQ5ODY4MTYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/49868160?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/antonilol",
        "html_url": "https://github.com/antonilol",
        "followers_url": "https://api.github.com/users/antonilol/followers",
        "following_url": "https://api.github.com/users/antonilol/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/antonilol/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/antonilol/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/antonilol/subscriptions",
        "organizations_url": "https://api.github.com/users/antonilol/orgs",
        "repos_url": "https://api.github.com/users/antonilol/repos",
        "events_url": "https://api.github.com/users/antonilol/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/antonilol/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-27T11:45:30Z",
      "updated_at": "2024-09-27T11:45:30Z",
      "author_association": "NONE",
      "body": "How hard is it for attackers to deliberately insert collisions? Is it worth to (try to) counteract this?",
      "user": {
        "login": "antonilol",
        "id": 49868160,
        "node_id": "MDQ6VXNlcjQ5ODY4MTYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/49868160?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/antonilol",
        "html_url": "https://github.com/antonilol",
        "followers_url": "https://api.github.com/users/antonilol/followers",
        "following_url": "https://api.github.com/users/antonilol/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/antonilol/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/antonilol/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/antonilol/subscriptions",
        "organizations_url": "https://api.github.com/users/antonilol/orgs",
        "repos_url": "https://api.github.com/users/antonilol/repos",
        "events_url": "https://api.github.com/users/antonilol/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/antonilol/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-2379086150",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "commented",
      "id": 2379167604,
      "node_id": "IC_kwDOABII586Nzzd0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2379167604",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-27T12:32:48Z",
      "updated_at": "2024-09-27T12:32:48Z",
      "author_association": "CONTRIBUTOR",
      "body": "> How hard is it for attackers to deliberately insert collisions? Is it worth to (try to) counteract this?\r\n\r\nThe index is currently based on suggestions by @hodlinator and @antonilol and the key for a given outpoint is the last 8 bytes of the outpoint's tx hash, represented as an 8 bytes integer,  to which we add the outpoint's output index.\r\n=> to generated collisions attackers need to generate transactions which hash to values that have the same first 8 bytes. I guess that would not be that difficult.\r\n\r\nI think it may be countered by using a 64 bits hash mixed with a random key initialised when the index is created (so different nodes would use different keys), something like siphash.  ",
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-2379167604",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "mentioned",
      "id": 14430458425,
      "node_id": "MEE_lADOABII585Fi6uozwAAAANcH1I5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14430458425",
      "actor": {
        "login": "antonilol",
        "id": 49868160,
        "node_id": "MDQ6VXNlcjQ5ODY4MTYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/49868160?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/antonilol",
        "html_url": "https://github.com/antonilol",
        "followers_url": "https://api.github.com/users/antonilol/followers",
        "following_url": "https://api.github.com/users/antonilol/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/antonilol/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/antonilol/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/antonilol/subscriptions",
        "organizations_url": "https://api.github.com/users/antonilol/orgs",
        "repos_url": "https://api.github.com/users/antonilol/repos",
        "events_url": "https://api.github.com/users/antonilol/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/antonilol/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-27T12:32:50Z"
    },
    {
      "event": "subscribed",
      "id": 14430458442,
      "node_id": "SE_lADOABII585Fi6uozwAAAANcH1JK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14430458442",
      "actor": {
        "login": "antonilol",
        "id": 49868160,
        "node_id": "MDQ6VXNlcjQ5ODY4MTYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/49868160?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/antonilol",
        "html_url": "https://github.com/antonilol",
        "followers_url": "https://api.github.com/users/antonilol/followers",
        "following_url": "https://api.github.com/users/antonilol/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/antonilol/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/antonilol/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/antonilol/subscriptions",
        "organizations_url": "https://api.github.com/users/antonilol/orgs",
        "repos_url": "https://api.github.com/users/antonilol/repos",
        "events_url": "https://api.github.com/users/antonilol/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/antonilol/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-27T12:32:50Z"
    },
    {
      "event": "mentioned",
      "id": 14430458458,
      "node_id": "MEE_lADOABII585Fi6uozwAAAANcH1Ja",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14430458458",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-27T12:32:50Z"
    },
    {
      "event": "subscribed",
      "id": 14430458475,
      "node_id": "SE_lADOABII585Fi6uozwAAAANcH1Jr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14430458475",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-27T12:32:50Z"
    },
    {
      "event": "commented",
      "id": 2379174442,
      "node_id": "IC_kwDOABII586Nz1Iq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2379174442",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-27T12:36:32Z",
      "updated_at": "2024-09-27T12:36:32Z",
      "author_association": "CONTRIBUTOR",
      "body": "Another option that I'm looking at is simply to replace and extend `txindex` and create 2 indexes:\r\n\r\n- txid (32 bytes) -> tx position (8 bytes) (same as txindex)\r\n- tx position (8 bytes) + output index (4 bytes) -> spending tx position (8 bytes)\r\n\r\nNo more collisions, and we can return the full tx and not just its hash, but not as efficient as this version (which can also return the full tx)l",
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-2379174442",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14473124639,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAANeqlsf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14473124639",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "93e1cafc3f8a7f5b36e495d7eb68c19acdab5809",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/93e1cafc3f8a7f5b36e495d7eb68c19acdab5809",
      "created_at": "2024-10-01T13:40:31Z"
    },
    {
      "event": "commented",
      "id": 2386800235,
      "node_id": "IC_kwDOABII586OQ65r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2386800235",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-01T19:28:58Z",
      "updated_at": "2024-10-01T19:28:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "Updated with the following changes:\r\n- key is now `siphash(k, spent outpoint)` (8 bytes) where k is a random value created when the index is created, to defend against potential collisions attacks. Value is still a tx position (8 bytes)\r\n- `gettxspendingprevout` will return the full spending tx if option ` include_tx` is set",
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-2386800235",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "commented",
      "id": 2387041009,
      "node_id": "IC_kwDOABII586OR1rx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2387041009",
      "actor": {
        "login": "antonilol",
        "id": 49868160,
        "node_id": "MDQ6VXNlcjQ5ODY4MTYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/49868160?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/antonilol",
        "html_url": "https://github.com/antonilol",
        "followers_url": "https://api.github.com/users/antonilol/followers",
        "following_url": "https://api.github.com/users/antonilol/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/antonilol/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/antonilol/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/antonilol/subscriptions",
        "organizations_url": "https://api.github.com/users/antonilol/orgs",
        "repos_url": "https://api.github.com/users/antonilol/repos",
        "events_url": "https://api.github.com/users/antonilol/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/antonilol/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-01T20:45:05Z",
      "updated_at": "2024-10-01T20:45:05Z",
      "author_association": "NONE",
      "body": "That's a good way to prevent attackers from inserting collisions in everyone's database, the chance of collision will be dependent on k, which is unknown to an attacker and different for everyone (except by chance or people copying each other's database). Shouldn't 8 bytes of randomness be enough (instead of 16)? Assuming that siphash's output is uniformly distributed, more randomness than the output size (8 bytes) feels unnecessary.\r\n\r\nAlso, the rpc description should be updated, https://github.com/sstone/bitcoin/blob/add-txospender-index/src/rpc/mempool.cpp#L589 (couldn't add a github review comment because it is too far away from a changed line)",
      "user": {
        "login": "antonilol",
        "id": 49868160,
        "node_id": "MDQ6VXNlcjQ5ODY4MTYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/49868160?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/antonilol",
        "html_url": "https://github.com/antonilol",
        "followers_url": "https://api.github.com/users/antonilol/followers",
        "following_url": "https://api.github.com/users/antonilol/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/antonilol/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/antonilol/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/antonilol/subscriptions",
        "organizations_url": "https://api.github.com/users/antonilol/orgs",
        "repos_url": "https://api.github.com/users/antonilol/repos",
        "events_url": "https://api.github.com/users/antonilol/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/antonilol/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-2387041009",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "reviewed",
      "id": 2341436782,
      "node_id": "PRR_kwDOABII586Lj31u",
      "url": null,
      "actor": null,
      "commit_id": "93e1cafc3f8a7f5b36e495d7eb68c19acdab5809",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-10-01T22:40:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "Reviewed 93e1cafc3f8a7f5b36e495d7eb68c19acdab5809\r\n\r\nConcept: I am curious about the justification for including this Index in Bitcoin Core vs implementing it as a third party index, especially since it is not required by anything inside of Core itself. It keeps the index in close sync with the chain state and de-duplicates effort among L2-implementations, but adds maintenance burden in Core.\r\n\r\nImplementation: Appreciate the fresh SipHash take. Solves the DoS problem and has some nerd-sniping potential. Also nice having `include_tx`, as `CDiskPos` already implies deserialization of the full tx. Feared the approach of storing values with colliding keys together, but turned out quite smooth.\r\n\r\n---\r\n\r\nsstone:\r\n> Value is still a tx position (8 bytes)\r\n\r\nI believe `CDiskPos` is at least 12 bytes `CDiskTxPos::nTxOffset` + `FlatFilePos::nFile` + `FlatFilePos::nPos`. This is assuming there is no additional padding for alignment nor per-element size information in LevelDB. Since values are currently `vector<CDiskPos>` there should at the very least be an extra byte for the compressed size of the vector itself.\r\n\r\n---\r\n\r\nantonilol:\r\n> Shouldn't 8 bytes of randomness be enough (instead of 16)? Assuming that siphash's output is uniformly distributed, more randomness than the output size (8 bytes) feels unnecessary.\r\n\r\nAccording to https://en.wikipedia.org/wiki/SipHash key size is 128-bit as standard and that's what is currently supported in Bitcoin Core. Having a smaller key might increase DoS risk to much after all?\r\n\\+ The key is only stored in one entry in LevelDB.\r\n\\+ This type of computation using data that is cache-coherent (8 bytes next to the first 8 bytes of the key) should be exceedingly cheap.\r\n",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#pullrequestreview-2341436782",
      "submitted_at": "2024-10-01T22:40:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
    },
    {
      "event": "commented",
      "id": 2388103756,
      "node_id": "IC_kwDOABII586OV5JM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2388103756",
      "actor": {
        "login": "antonilol",
        "id": 49868160,
        "node_id": "MDQ6VXNlcjQ5ODY4MTYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/49868160?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/antonilol",
        "html_url": "https://github.com/antonilol",
        "followers_url": "https://api.github.com/users/antonilol/followers",
        "following_url": "https://api.github.com/users/antonilol/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/antonilol/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/antonilol/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/antonilol/subscriptions",
        "organizations_url": "https://api.github.com/users/antonilol/orgs",
        "repos_url": "https://api.github.com/users/antonilol/repos",
        "events_url": "https://api.github.com/users/antonilol/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/antonilol/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-02T09:43:59Z",
      "updated_at": "2024-10-02T09:43:59Z",
      "author_association": "NONE",
      "body": "> According to https://en.wikipedia.org/wiki/SipHash key size is 128-bit as standard and that's what is currently supported in Bitcoin Core. Having a smaller key might increase DoS risk to much after all?\r\n> + The key is only stored in one entry in LevelDB.\r\n> + This type of computation using data that is cache-coherent (8 bytes next to the first 8 bytes of the key) should be exceedingly cheap.\r\n\r\nYou are right, siphash is designed for a 128 bit key, so lets keep it 128 bit then. It is not a cryptographic hash according to that wikipedia page, so I could be wrong about the output being uniformly distributed.\r\nAlso, the cost of the extra 8 bytes is minimal/negligible.",
      "user": {
        "login": "antonilol",
        "id": 49868160,
        "node_id": "MDQ6VXNlcjQ5ODY4MTYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/49868160?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/antonilol",
        "html_url": "https://github.com/antonilol",
        "followers_url": "https://api.github.com/users/antonilol/followers",
        "following_url": "https://api.github.com/users/antonilol/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/antonilol/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/antonilol/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/antonilol/subscriptions",
        "organizations_url": "https://api.github.com/users/antonilol/orgs",
        "repos_url": "https://api.github.com/users/antonilol/repos",
        "events_url": "https://api.github.com/users/antonilol/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/antonilol/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-2388103756",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14531204816,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAANiIJbQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14531204816",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "00ea9012534bdfb0d39c0d2d95103a3645047fd9",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/00ea9012534bdfb0d39c0d2d95103a3645047fd9",
      "created_at": "2024-10-06T18:15:25Z"
    },
    {
      "event": "commented",
      "id": 2395534118,
      "node_id": "IC_kwDOABII586OyPMm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2395534118",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-06T18:21:44Z",
      "updated_at": "2024-10-06T18:21:44Z",
      "author_association": "MEMBER",
      "body": "SipHash with a 128-bit key seems like the correct choice for this.\n\nIt is indeed not cryptographic, in the sense that it is not practically collision-resistant (no 64-bit hash function can be, as that inherently allows a 2^32 birthday attack).\n\nHowever, SipHash is effectively as secure and unpredictable as a 64-bit hash function can be, and is specifically designed for preventing attackers from triggering hash table collisions at scale, given that the salt is a uniform 128-bit key unknown to the attacker.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-2395534118",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "commented",
      "id": 2395534947,
      "node_id": "IC_kwDOABII586OyPZj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2395534947",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-06T18:24:41Z",
      "updated_at": "2024-10-06T18:24:41Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Concept: I am curious about the justification for including this Index in Bitcoin Core vs implementing it as a third party index, especially since it is not required by anything inside of Core itself. It keeps the index in close sync with the chain state and de-duplicates effort among L2-implementations, but adds maintenance burden in Core.\r\n> \r\n\r\nI understand that adding new indexes must be justified. This one is simple and quite efficient now, the code is compact, isolated and easy to understand, and imho there are more and more apps/protocols that work by creating/updating transactions that are not published that would benefit from such an index.\r\n\r\nFor applications that use Bitcoin Core's wallet (this is is our case,) and benefit from all the features that have been and are being developed (fee management, fee bumping, coin selection, package relay, descriptors, ...),  adding a custom tool to build an external index would be sub-optimal from a dev and also an operational point of view, and people may prefer to use this PR instead.",
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-2395534947",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "commented",
      "id": 2411599475,
      "node_id": "IC_kwDOABII586PvhZz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2411599475",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-14T15:29:02Z",
      "updated_at": "2024-10-14T15:29:02Z",
      "author_association": "MEMBER",
      "body": "Related to: https://github.com/bitcoin/bitcoin/issues/9641",
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-2411599475",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "labeled",
      "id": 15977506114,
      "node_id": "LE_lADOABII585Fi6uozwAAAAO4VWVC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15977506114",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-17T13:26:25Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15986257685,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAAO42u8V",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15986257685",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "40ce7d187ef0abe9bd98100e746eb6ff4f23ad11",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/40ce7d187ef0abe9bd98100e746eb6ff4f23ad11",
      "created_at": "2025-01-18T17:11:21Z"
    },
    {
      "event": "unlabeled",
      "id": 15986483213,
      "node_id": "UNLE_lADOABII585Fi6uozwAAAAO43mAN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15986483213",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-18T19:14:22Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16121074630,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAAPA5BPG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16121074630",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "618c5f08f866c7ebf0244a943d8f77a9c2a2587e",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/618c5f08f866c7ebf0244a943d8f77a9c2a2587e",
      "created_at": "2025-01-30T09:00:08Z"
    },
    {
      "event": "commented",
      "id": 2974694771,
      "node_id": "IC_kwDOABII586xTj1z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2974694771",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-15T21:13:02Z",
      "updated_at": "2025-06-15T21:13:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "Would be good to get a PR with 9 Concept ACKs and no significant concerns raised moving again.  Can you rebase it? A recent PR (https://github.com/bitcoin/bitcoin/pull/32694) changed how we populate the block info struct. You'd now want to set `CustomOptions` for the index to get the required block data to the index, without having to call `ReadBlock` in your new `TxSpenderIndex` class. ",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-2974694771",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "labeled",
      "id": 18181818468,
      "node_id": "LE_lADOABII585Fi6uozwAAAAQ7uIhk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18181818468",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-17T03:22:36Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2978797111,
      "node_id": "IC_kwDOABII586xjNY3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2978797111",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-17T03:22:38Z",
      "updated_at": "2025-06-17T03:22:38Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Task `previous releases, depends DEBUG`: https://github.com/bitcoin/bitcoin/runs/36404454050</sub>\n<sub>LLM reason (✨ experimental): The CI failure is caused by a compilation error due to an incorrect override in txospenderindex.h.</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-2978797111",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18214525926,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAAQ9q5vm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18214525926",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f3e5a7f20fb2e19509b94adc9428e8cf4951a000",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/f3e5a7f20fb2e19509b94adc9428e8cf4951a000",
      "created_at": "2025-06-18T16:44:40Z"
    },
    {
      "event": "unlabeled",
      "id": 18215685326,
      "node_id": "UNLE_lADOABII585Fi6uozwAAAAQ9vUzO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18215685326",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-18T18:02:14Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2987485100,
      "node_id": "IC_kwDOABII586yEWes",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2987485100",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-19T09:57:34Z",
      "updated_at": "2025-06-19T09:57:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Would be good to get a PR with 9 Concept ACKs and no significant concerns raised moving again. Can you rebase it? A recent PR (#32694) changed how we populate the block info struct. You'd now want to set `CustomOptions` for the index to get the required block data to the index, without having to call `ReadBlock` in your new `TxSpenderIndex` class.\r\n\r\nRebased on 1be688f575151109816fa8956d54a5b5220e3b00",
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-2987485100",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "reviewed",
      "id": 2942451284,
      "node_id": "PRR_kwDOABII586vYj5U",
      "url": null,
      "actor": null,
      "commit_id": "f3e5a7f20fb2e19509b94adc9428e8cf4951a000",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-06-19T13:37:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the rebase :)\r\n\r\nIn the pull request description you are saying that the keys are 64 bytes, but I guess you mean 64 bits? \r\n\r\nDid you split this work into two commits to gather feedback on tradeoffs between the two approaches? The space savings and the ability to immediately return a transaction is nice, but it is also not compatible with pruning (and still requires notices about that in init.cpp). Some lightning implementations do support pruned nodes, I guess they won't be able to leverage this extra index in that case?\r\n\r\nCan you give a typical data query flow for both variants that you would expect from your use case in lightning? Is the read performance still acceptable for your use case? My guess is the extra read cost is compensated by not having to do an extra roundtrip to fetch the full transaction from the node.\r\n\r\nI was also wondering if it were possible to combine this with #32541 to avoid the pruning limitation by writing the position in a block instead, but could not come up with a useful way to combine the two to that end.",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#pullrequestreview-2942451284",
      "submitted_at": "2025-06-19T13:37:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
    },
    {
      "event": "reviewed",
      "id": 2957453895,
      "node_id": "PRR_kwDOABII586wRypH",
      "url": null,
      "actor": null,
      "commit_id": "f3e5a7f20fb2e19509b94adc9428e8cf4951a000",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-06-25T09:40:43Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#pullrequestreview-2957453895",
      "submitted_at": "2025-06-25T09:40:43Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
    },
    {
      "event": "labeled",
      "id": 18340225573,
      "node_id": "LE_lADOABII585Fi6uozwAAAARFKaIl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18340225573",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-26T17:09:37Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18416494286,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAARJtWbO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18416494286",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d5980f39f934a8e251ddaf6801d23bd5a4bcb3ef",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/d5980f39f934a8e251ddaf6801d23bd5a4bcb3ef",
      "created_at": "2025-07-01T17:58:09Z"
    },
    {
      "event": "commented",
      "id": 3025042997,
      "node_id": "IC_kwDOABII5860Tn41",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3025042997",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-01T18:08:59Z",
      "updated_at": "2025-07-01T18:08:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "> In the pull request description you are saying that the keys are 64 bytes, but I guess you mean 64 bits?\r\nYes 64 bits.\r\n> \r\n> Did you split this work into two commits to gather feedback on tradeoffs between the two approaches? The space savings and the ability to immediately return a transaction is nice, but it is also not compatible with pruning (and still requires notices about that in init.cpp). Some lightning implementations do support pruned nodes, I guess they won't be able to leverage this extra index in that case?\r\n\r\nI merged them into a single commit, the first approach requires too much disk space. This index would mostly be useful to fairly large nodes (like ours :)) which would not use pruning.",
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-3025042997",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "unlabeled",
      "id": 18417059455,
      "node_id": "UNLE_lADOABII585Fi6uozwAAAARJvgZ_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18417059455",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-01T18:30:52Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 3041007146,
      "node_id": "IC_kwDOABII5861QhYq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3041007146",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-06T06:35:19Z",
      "updated_at": "2025-07-06T06:55:36Z",
      "author_association": "CONTRIBUTOR",
      "body": "I think that we can simplify collision handling a bit and allow pruning if the index data is stored using the following schema:\r\n- key: `siphash(spent_outpoint) + serialize(tx_disk_position)`\r\n- value: `b\"\"`\r\n\r\ninstead of storing a list of positions per `siphash(spent_outpoint)`.\r\n\r\nIt supports fast lookup of a outpoint spender by using LevelDB prefix scan (similar to how it's done in [electrs](https://github.com/romanz/electrs/blob/master/doc/schema.md) and [bindex](https://docs.google.com/presentation/d/1Zez-6DApKRu59kke4i_g9jwxQlaFKKRpOPdYFYsFXfA/edit?slide=id.g2b9ee1c7587_0_71#slide=id.g2b9ee1c7587_0_71)).\r\n\r\nWhen pruning a block, the `key` can be recomputed and deleted from the index DB (since the key containing the `tx_disk_position` should be unique).",
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-3041007146",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "commented",
      "id": 3072820488,
      "node_id": "IC_kwDOABII5863J4UI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3072820488",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-15T09:10:25Z",
      "updated_at": "2025-07-15T09:10:25Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I think that we can simplify collision handling a bit and allow pruning if the index data is stored using the following schema:\r\n> \r\n> * key: `siphash(spent_outpoint) + serialize(tx_disk_position)`\r\n> * value: `b\"\"`\r\n> \r\n> instead of storing a list of positions per `siphash(spent_outpoint)`.\r\n> \r\n> It supports fast lookup of a outpoint spender by using LevelDB prefix scan (similar to how it's done in [electrs](https://github.com/romanz/electrs/blob/master/doc/schema.md) and [bindex](https://docs.google.com/presentation/d/1Zez-6DApKRu59kke4i_g9jwxQlaFKKRpOPdYFYsFXfA/edit?slide=id.g2b9ee1c7587_0_71#slide=id.g2b9ee1c7587_0_71)).\r\n> \r\n> When pruning a block, the `key` can be recomputed and deleted from the index DB (since the key containing the `tx_disk_position` should be unique).\r\n\r\nThanks! I used your suggestion in https://github.com/bitcoin/bitcoin/pull/24539/commits/0970256ffb56df6ad663eaa7192aed0e87a4aae3 and it is cleaner than using a list of tx positions.",
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-3072820488",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18641971809,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAARXJeph",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18641971809",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "9b750be5ecb0a8d063a98225c0ac997cca0885eb",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/9b750be5ecb0a8d063a98225c0ac997cca0885eb",
      "created_at": "2025-07-15T16:10:19Z"
    },
    {
      "event": "reviewed",
      "id": 3023239719,
      "node_id": "PRR_kwDOABII5860Mvon",
      "url": null,
      "actor": null,
      "commit_id": "9b750be5ecb0a8d063a98225c0ac997cca0885eb",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-07-16T06:07:54Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#pullrequestreview-3023239719",
      "submitted_at": "2025-07-16T06:07:54Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18686128877,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAARZx7Lt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18686128877",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "42d3aa8787d9411ad2a9c9ae9c828aa1285853ec",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/42d3aa8787d9411ad2a9c9ae9c828aa1285853ec",
      "created_at": "2025-07-17T19:00:00Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18796523050,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAARgXC4q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18796523050",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "3158e0318d08ab23df992c0b8189f8e153ecc1a4",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/3158e0318d08ab23df992c0b8189f8e153ecc1a4",
      "created_at": "2025-07-24T14:22:24Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18798482992,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAARgehYw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18798482992",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "4e3df36faee4235e30a689665bc566e6ae4d4c84",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/4e3df36faee4235e30a689665bc566e6ae4d4c84",
      "created_at": "2025-07-24T15:58:52Z"
    },
    {
      "event": "commented",
      "id": 3266420083,
      "node_id": "IC_kwDOABII587CsZ1z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3266420083",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-08T13:46:47Z",
      "updated_at": "2025-09-08T13:46:47Z",
      "author_association": "CONTRIBUTOR",
      "body": "Approach ACK on using siphash and `FlatFilePos`.\r\n\r\nDo you want to squash the commits? This just feels like an improvement in every regard.",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-3266420083",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDg0NWI1NGRlZmViYzE5ODdiOWQ2NTRlYTdiNjExYTRkZGViZTM0NWE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/845b54defebc1987b9d654ea7b611a4ddebe345a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/845b54defebc1987b9d654ea7b611a4ddebe345a",
      "tree": {
        "sha": "cb9782a0da8e0e941d780681966d7a9a4d4fdd04",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cb9782a0da8e0e941d780681966d7a9a4d4fdd04"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree cb9782a0da8e0e941d780681966d7a9a4d4fdd04\nparent ee42d59d4de970769ebabf77b89ff4269498f61e\nauthor sstone <fabrice.drouin@acinq.fr> 1646904417 +0100\ncommitter sstone <fabrice@acinq.fr> 1757575348 +0200\n\nAdd a \"tx output spender\" index\n\nAdds an outpoint -> txid index, which can be used to find which transactions spent a given output.\nWe use a composite key with 2 parts (suggested by @romanz): hash(spent outpoint) and tx position, with an empty value.\nTo find the spending tx for a given outpoint, we do a prefix search (prefix being the hash of the provided outpoint), and for all keys that match this prefix\nwe load the tx at the position specified in the key and return it if does spend the provided outpoint.\nTo handle reorgs we just erase the keys computed from the removed block.\n\nThis index is extremely useful for Lightning and more generally for layer-2 protocols that rely on chains of unpublished transactions.\nIf enabled, this index will be used by `gettxspendingprevout` when it does not find a spending transaction in the mempool.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEVQkjFK0FR8Wb23ro4E5I5ywgVGMFAmjCeLQACgkQ4E5I5ywg\nVGMl1RAAlyFkva7ZU3n/jhasZuNQanVmerg2V5lerX90cvqDbhsH77VzR40MwW72\nNlbZL53m2ILv/yCKp0ydM1Iogtmq423ZqO7V/XfCKHQUJZ/5OU450XLBjyCf/l73\no+Cz4vdO129i/20M55qDSIhi331kD/VBeCsEo+3LEB537/SnNcTh86043AqF24Dd\n9JWQrYuzia80L04T4/7iAS6g9r0bDcpO5AQyIVodw0q1cAeGlzJFuS0wAgO2MNru\n1f1jAt3QWali7cMhYZReTk2lVx6LmAiXndZs6geUugGYn2kMT369r5kVR+idNRmK\nfuUMGtJ3Uf4kN9mEn9GgHTuXgOPeVL4vq2+JK2ol4SX0vlFFZtDJwt4z0RSwGfOC\nZeNeYQI8VD4tz4kkbSuo+3HvJ/8DwrQydzR1blmu3YMhxMPpvMd30CdZh0tiiWJo\nA5mc7uhM7mCtOhSxOWvNvGGU3EuPHW/w5HdXK56nP3CREQ68lCR5wO7fmeon1oem\nZRBX5PesuYmmFptZ9AiugxqxphyH8GTI9HRrNMkrndiHi1E0rgKOOfmDcMhSpOoT\ns8LsHeuXQ1vc53WDnFlC4CAZ+LclJlLLzyzYbYuZbNjAtPL+NzEpeI2zmKQZB/Py\n/h6bnOpOYKMxgzKXRflCMVjZ3Bac5DeR1hN7Xxm7Pb0W4wVXc5U=\n=UxOv\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ee42d59d4de970769ebabf77b89ff4269498f61e",
          "sha": "ee42d59d4de970769ebabf77b89ff4269498f61e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ee42d59d4de970769ebabf77b89ff4269498f61e"
        }
      ],
      "message": "Add a \"tx output spender\" index\n\nAdds an outpoint -> txid index, which can be used to find which transactions spent a given output.\nWe use a composite key with 2 parts (suggested by @romanz): hash(spent outpoint) and tx position, with an empty value.\nTo find the spending tx for a given outpoint, we do a prefix search (prefix being the hash of the provided outpoint), and for all keys that match this prefix\nwe load the tx at the position specified in the key and return it if does spend the provided outpoint.\nTo handle reorgs we just erase the keys computed from the removed block.\n\nThis index is extremely useful for Lightning and more generally for layer-2 protocols that rely on chains of unpublished transactions.\nIf enabled, this index will be used by `gettxspendingprevout` when it does not find a spending transaction in the mempool.",
      "committer": {
        "name": "sstone",
        "email": "fabrice@acinq.fr",
        "date": "2025-09-11T07:22:28Z"
      },
      "author": {
        "name": "sstone",
        "email": "fabrice.drouin@acinq.fr",
        "date": "2022-03-10T09:26:57Z"
      },
      "sha": "845b54defebc1987b9d654ea7b611a4ddebe345a"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19663471053,
      "node_id": "HRFPE_lADOABII585Fi6uozwAAAASUCMHN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19663471053",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "commit_url": "https://api.github.com/repos/sstone/bitcoin/commits/845b54defebc1987b9d654ea7b611a4ddebe345a",
      "created_at": "2025-09-12T15:16:24Z"
    },
    {
      "event": "mentioned",
      "id": 19676912579,
      "node_id": "MEE_lADOABII585Fi6uozwAAAASU1dvD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19676912579",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-13T12:18:28Z"
    },
    {
      "event": "subscribed",
      "id": 19676912587,
      "node_id": "SE_lADOABII585Fi6uozwAAAASU1dvL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19676912587",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-13T12:18:28Z"
    },
    {
      "event": "commented",
      "id": 3288247205,
      "node_id": "IC_kwDOABII587D_qul",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3288247205",
      "actor": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-13T12:18:51Z",
      "updated_at": "2025-09-13T12:18:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Approach ACK on using siphash and `FlatFilePos`.\r\n> \r\n> Do you want to squash the commits? This just feels like an improvement in every regard.\r\n\r\nRebased and squashed in https://github.com/bitcoin/bitcoin/commit/845b54defebc1987b9d654ea7b611a4ddebe345a. I also updated the PR description.",
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-3288247205",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539"
    },
    {
      "event": "reviewed",
      "id": 3224343678,
      "node_id": "PRR_kwDOABII587AL5R-",
      "url": null,
      "actor": null,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-09-15T13:20:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK 845b54defebc1987b9d654ea7b611a4ddebe345a\r\n\r\nI previously wrote software that had to add a bunch of extra logic to accurately react when a certain output was spent. This would have made my life considerably easier.",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#pullrequestreview-3224343678",
      "submitted_at": "2025-09-15T13:20:37Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
    },
    {
      "event": "review_requested",
      "id": 19701474037,
      "node_id": "RRE_lADOABII585Fi6uozwAAAASWTKL1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19701474037",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-15T13:20:44Z",
      "requested_reviewer": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 19701474396,
      "node_id": "RRE_lADOABII585Fi6uozwAAAASWTKRc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19701474396",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-15T13:20:45Z",
      "requested_reviewer": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 19701474727,
      "node_id": "RRE_lADOABII585Fi6uozwAAAASWTKWn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19701474727",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-15T13:20:46Z",
      "requested_reviewer": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 19701475182,
      "node_id": "RRE_lADOABII585Fi6uozwAAAASWTKdu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19701475182",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-15T13:20:47Z",
      "requested_reviewer": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 19701475580,
      "node_id": "RRE_lADOABII585Fi6uozwAAAASWTKj8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19701475580",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-15T13:20:48Z",
      "requested_reviewer": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 19701475943,
      "node_id": "RRE_lADOABII585Fi6uozwAAAASWTKpn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19701475943",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-15T13:20:49Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 19701476349,
      "node_id": "RRE_lADOABII585Fi6uozwAAAASWTKv9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19701476349",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-15T13:20:50Z",
      "requested_reviewer": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/825489966",
      "pull_request_review_id": 908174478,
      "id": 825489966,
      "node_id": "PRRC_kwDOABII584xM_ou",
      "diff_hunk": "@@ -857,6 +866,8 @@ bool AppInitParameterInteraction(const ArgsManager& args)\n     if (args.GetIntArg(\"-prune\", 0)) {\n         if (args.GetBoolArg(\"-txindex\", DEFAULT_TXINDEX))\n             return InitError(_(\"Prune mode is incompatible with -txindex.\"));\n+        if (args.GetBoolArg(\"-txospenderindex\", DEFAULT_TXINDEX))",
      "path": "src/init.cpp",
      "position": 1,
      "original_position": 41,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "aa9f96370eb0294b918a3ee17e6928bace23a131",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Should use DEFAULT_TXOSPENDERINDEX",
      "created_at": "2022-03-13T18:58:24Z",
      "updated_at": "2022-03-13T21:25:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r825489966",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/825489966"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 869,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/825490023",
      "pull_request_review_id": 908174478,
      "id": 825490023,
      "node_id": "PRRC_kwDOABII584xM_pn",
      "diff_hunk": "@@ -1397,6 +1408,9 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n     if (args.GetBoolArg(\"-txindex\", DEFAULT_TXINDEX)) {\n         LogPrintf(\"* Using %.1f MiB for transaction index database\\n\", cache_sizes.tx_index * (1.0 / 1024 / 1024));\n     }\n+    if (args.GetBoolArg(\"-txospenderindex\", DEFAULT_TXINDEX)) {",
      "path": "src/init.cpp",
      "position": 1,
      "original_position": 50,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "aa9f96370eb0294b918a3ee17e6928bace23a131",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "DEFAULT_TXOSPENDERINDEX here as well",
      "created_at": "2022-03-13T18:59:04Z",
      "updated_at": "2022-03-13T21:25:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r825490023",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/825490023"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1411,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/825494247",
      "pull_request_review_id": 908174478,
      "id": 825494247,
      "node_id": "PRRC_kwDOABII584xNArn",
      "diff_hunk": "@@ -268,6 +269,43 @@ static RPCHelpMan getrawtransaction()\n     };\n }\n \n+static RPCHelpMan gettxospender()\n+{\n+    return RPCHelpMan{\"gettxospender\",\n+                \"\\nReturns the id of the transaction that spend the provided outpoint.\\n\",\n+                {\n+                    {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The outpoint transaction id\"},\n+                    {\"index\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The outpoint output index\"},\n+                },\n+                RPCResult{\n+                    RPCResult::Type::STR_HEX, \"\", \"The id of the transaction that spend the provided outpoint\"},",
      "path": "src/rpc/rawtransaction.cpp",
      "position": 1,
      "original_position": 21,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "aa9f96370eb0294b918a3ee17e6928bace23a131",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "spends",
      "created_at": "2022-03-13T19:38:19Z",
      "updated_at": "2022-03-13T21:25:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r825494247",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/825494247"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 281,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/825494466",
      "pull_request_review_id": 908174478,
      "id": 825494466,
      "node_id": "PRRC_kwDOABII584xNAvC",
      "diff_hunk": "@@ -0,0 +1,60 @@\n+#include <index/txospenderindex.h>\n+\n+#include <index/disktxpos.h>\n+#include <node/blockstorage.h>\n+#include <util/system.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};\n+\n+std::unique_ptr<TxoSpenderIndex> g_txospenderindex;\n+\n+/** Access to the txindex database (indexes/txindex/) */",
      "path": "src/index/txospenderindex.cpp",
      "position": 1,
      "original_position": 12,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "aa9f96370eb0294b918a3ee17e6928bace23a131",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "update comment",
      "created_at": "2022-03-13T19:39:48Z",
      "updated_at": "2022-03-13T21:25:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r825494466",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/825494466"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 12,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/825494504",
      "pull_request_review_id": 908174478,
      "id": 825494504,
      "node_id": "PRRC_kwDOABII584xNAvo",
      "diff_hunk": "@@ -0,0 +1,44 @@\n+// Copyright (c) 2017-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INDEX_TXOSPENDERINDEX_H\n+#define BITCOIN_INDEX_TXOSPENDERINDEX_H\n+\n+#include <index/base.h>\n+\n+/**\n+ * TxIndex is used to look up transactions included in the blockchain by hash.",
      "path": "src/index/txospenderindex.h",
      "position": 1,
      "original_position": 11,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "aa9f96370eb0294b918a3ee17e6928bace23a131",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "update comment",
      "created_at": "2022-03-13T19:40:00Z",
      "updated_at": "2022-03-13T21:25:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r825494504",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/825494504"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 11,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/825797435",
      "pull_request_review_id": 908575857,
      "id": 825797435,
      "node_id": "PRRC_kwDOABII584xOKs7",
      "diff_hunk": "@@ -857,6 +866,8 @@ bool AppInitParameterInteraction(const ArgsManager& args)\n     if (args.GetIntArg(\"-prune\", 0)) {\n         if (args.GetBoolArg(\"-txindex\", DEFAULT_TXINDEX))\n             return InitError(_(\"Prune mode is incompatible with -txindex.\"));\n+        if (args.GetBoolArg(\"-txospenderindex\", DEFAULT_TXINDEX))",
      "path": "src/init.cpp",
      "position": 1,
      "original_position": 41,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "aa9f96370eb0294b918a3ee17e6928bace23a131",
      "in_reply_to_id": 825489966,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "fixed in https://github.com/bitcoin/bitcoin/pull/24539/commits/1b82b7e503a193802373003db8fe5c220cb99eb9",
      "created_at": "2022-03-14T10:28:47Z",
      "updated_at": "2022-03-14T10:28:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r825797435",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/825797435"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 869,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/825797563",
      "pull_request_review_id": 908576025,
      "id": 825797563,
      "node_id": "PRRC_kwDOABII584xOKu7",
      "diff_hunk": "@@ -1397,6 +1408,9 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n     if (args.GetBoolArg(\"-txindex\", DEFAULT_TXINDEX)) {\n         LogPrintf(\"* Using %.1f MiB for transaction index database\\n\", cache_sizes.tx_index * (1.0 / 1024 / 1024));\n     }\n+    if (args.GetBoolArg(\"-txospenderindex\", DEFAULT_TXINDEX)) {",
      "path": "src/init.cpp",
      "position": 1,
      "original_position": 50,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "aa9f96370eb0294b918a3ee17e6928bace23a131",
      "in_reply_to_id": 825490023,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "fixed in https://github.com/bitcoin/bitcoin/pull/24539/commits/1b82b7e503a193802373003db8fe5c220cb99eb9",
      "created_at": "2022-03-14T10:28:57Z",
      "updated_at": "2022-03-14T10:28:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r825797563",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/825797563"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1411,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/825797688",
      "pull_request_review_id": 908576192,
      "id": 825797688,
      "node_id": "PRRC_kwDOABII584xOKw4",
      "diff_hunk": "@@ -268,6 +269,43 @@ static RPCHelpMan getrawtransaction()\n     };\n }\n \n+static RPCHelpMan gettxospender()\n+{\n+    return RPCHelpMan{\"gettxospender\",\n+                \"\\nReturns the id of the transaction that spend the provided outpoint.\\n\",\n+                {\n+                    {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The outpoint transaction id\"},\n+                    {\"index\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The outpoint output index\"},\n+                },\n+                RPCResult{\n+                    RPCResult::Type::STR_HEX, \"\", \"The id of the transaction that spend the provided outpoint\"},",
      "path": "src/rpc/rawtransaction.cpp",
      "position": 1,
      "original_position": 21,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "aa9f96370eb0294b918a3ee17e6928bace23a131",
      "in_reply_to_id": 825494247,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "fixed in https://github.com/bitcoin/bitcoin/pull/24539/commits/1b82b7e503a193802373003db8fe5c220cb99eb9",
      "created_at": "2022-03-14T10:29:06Z",
      "updated_at": "2022-03-14T10:29:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r825797688",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/825797688"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 281,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/825797820",
      "pull_request_review_id": 908576381,
      "id": 825797820,
      "node_id": "PRRC_kwDOABII584xOKy8",
      "diff_hunk": "@@ -0,0 +1,60 @@\n+#include <index/txospenderindex.h>\n+\n+#include <index/disktxpos.h>\n+#include <node/blockstorage.h>\n+#include <util/system.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};\n+\n+std::unique_ptr<TxoSpenderIndex> g_txospenderindex;\n+\n+/** Access to the txindex database (indexes/txindex/) */",
      "path": "src/index/txospenderindex.cpp",
      "position": 1,
      "original_position": 12,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "aa9f96370eb0294b918a3ee17e6928bace23a131",
      "in_reply_to_id": 825494466,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "fixed in https://github.com/bitcoin/bitcoin/pull/24539/commits/1b82b7e503a193802373003db8fe5c220cb99eb9",
      "created_at": "2022-03-14T10:29:15Z",
      "updated_at": "2022-03-14T10:29:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r825797820",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/825797820"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 12,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/825797928",
      "pull_request_review_id": 908576548,
      "id": 825797928,
      "node_id": "PRRC_kwDOABII584xOK0o",
      "diff_hunk": "@@ -0,0 +1,44 @@\n+// Copyright (c) 2017-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INDEX_TXOSPENDERINDEX_H\n+#define BITCOIN_INDEX_TXOSPENDERINDEX_H\n+\n+#include <index/base.h>\n+\n+/**\n+ * TxIndex is used to look up transactions included in the blockchain by hash.",
      "path": "src/index/txospenderindex.h",
      "position": 1,
      "original_position": 11,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "aa9f96370eb0294b918a3ee17e6928bace23a131",
      "in_reply_to_id": 825494504,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "fixed in https://github.com/bitcoin/bitcoin/pull/24539/commits/1b82b7e503a193802373003db8fe5c220cb99eb9",
      "created_at": "2022-03-14T10:29:23Z",
      "updated_at": "2022-03-14T10:29:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r825797928",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/825797928"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 11,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/856687862",
      "pull_request_review_id": 950732877,
      "id": 856687862,
      "node_id": "PRRC_kwDOABII584zEAT2",
      "diff_hunk": "@@ -0,0 +1,66 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the gettxospender RPC call.\n+\"\"\"\n+\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    find_vout_for_address,\n+)\n+\n+class GetTxoSpenderTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [\"-txindex\", \"-txospenderindex\"],\n+            [\"-txindex\"],\n+        ]\n+        # whitelist all peers to speed up tx relay / mempool sync\n+        for args in self.extra_args:\n+            args.append(\"-whitelist=noban@127.0.0.1\")\n+\n+        self.supports_cli = False\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()",
      "path": "test/functional/rpc_txospender.py",
      "position": 1,
      "original_position": 31,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "e021b6bc77315bc0c148b21c301882fa5dd68c05",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "RPC tests shouldn't require wallet, please use `MiniWallet`",
      "created_at": "2022-04-23T00:40:54Z",
      "updated_at": "2022-04-23T00:41:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r856687862",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/856687862"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": 30,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857127463",
      "pull_request_review_id": 951206356,
      "id": 857127463,
      "node_id": "PRRC_kwDOABII584zFron",
      "diff_hunk": "@@ -0,0 +1,66 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the gettxospender RPC call.\n+\"\"\"\n+\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    find_vout_for_address,\n+)\n+\n+class GetTxoSpenderTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [\"-txindex\", \"-txospenderindex\"],\n+            [\"-txindex\"],\n+        ]\n+        # whitelist all peers to speed up tx relay / mempool sync\n+        for args in self.extra_args:\n+            args.append(\"-whitelist=noban@127.0.0.1\")\n+\n+        self.supports_cli = False\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()",
      "path": "test/functional/rpc_txospender.py",
      "position": 1,
      "original_position": 31,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "e021b6bc77315bc0c148b21c301882fa5dd68c05",
      "in_reply_to_id": 856687862,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've translated the test to MiniWallet. If you take it, make sure to rebase on current master first, as it is using new MiniWallet functions.\r\n\r\nAlso, I am removing not needed stuff. Let me know if you have any questions. And no need to mention me in the commit as author.\r\n\r\n```diff\r\ndiff --git a/test/functional/rpc_txospender.py b/test/functional/rpc_txospender.py\r\nindex 1d7157e9bf..c063b4e502 100755\r\n--- a/test/functional/rpc_txospender.py\r\n+++ b/test/functional/rpc_txospender.py\r\n@@ -10,57 +10,36 @@ from test_framework.test_framework import BitcoinTestFramework\r\n from test_framework.util import (\r\n     assert_equal,\r\n     assert_raises_rpc_error,\r\n-    find_vout_for_address,\r\n )\r\n+from test_framework.wallet import MiniWallet\r\n+\r\n \r\n class GetTxoSpenderTest(BitcoinTestFramework):\r\n     def set_test_params(self):\r\n-        self.setup_clean_chain = True\r\n         self.num_nodes = 2\r\n         self.extra_args = [\r\n             [\"-txindex\", \"-txospenderindex\"],\r\n             [\"-txindex\"],\r\n         ]\r\n-        # whitelist all peers to speed up tx relay / mempool sync\r\n-        for args in self.extra_args:\r\n-            args.append(\"-whitelist=noban@127.0.0.1\")\r\n-\r\n         self.supports_cli = False\r\n \r\n-    def skip_test_if_missing_module(self):\r\n-        self.skip_if_no_wallet()\r\n-\r\n-    def setup_network(self):\r\n-        super().setup_network()\r\n-        self.connect_nodes(0, 1)\r\n-\r\n     def run_test(self):\r\n-        self.log.info(\"Prepare some coins for multiple *rawtransaction commands\")\r\n-        self.generate(self.nodes[1], 1)\r\n-        self.generate(self.nodes[0], COINBASE_MATURITY + 1)\r\n-        self.sync_all()\r\n-        self.generate(self.nodes[0], 5)\r\n+        self.wallet = MiniWallet(self.nodes[1])\r\n+        self.wallet.rescan_utxos()\r\n \r\n         self.gettxospender_tests()\r\n \r\n     def gettxospender_tests(self):\r\n-        addr = self.nodes[1].getnewaddress()\r\n-        txid = self.nodes[0].sendtoaddress(addr, 10)\r\n-        self.generate(self.nodes[0], 1)\r\n-        vout = find_vout_for_address(self.nodes[1], txid, addr)\r\n-        rawTx = self.nodes[1].createrawtransaction([{'txid': txid, 'vout': vout}], {self.nodes[1].getnewaddress(): 9.999})\r\n-        rawTxSigned = self.nodes[1].signrawtransactionwithwallet(rawTx)\r\n-        txId = self.nodes[1].sendrawtransaction(rawTxSigned['hex'])\r\n-        self.generateblock(self.nodes[0], output=self.nodes[0].getnewaddress(), transactions=[rawTxSigned['hex']])\r\n+        partially_spent_tx = self.wallet.send_self_transfer_multi(from_node=self.nodes[1], num_outputs=2)\r\n+        num_out = 1\r\n+        spending_txid = self.wallet.send_self_transfer(from_node=self.nodes[1], utxo_to_spend=partially_spent_tx[\"new_utxos\"][num_out])[\"txid\"]\r\n+        self.generate(self.wallet, 1)\r\n \r\n-        for n in [0, 1]:\r\n-            self.log.info(f\"Test gettxospender {'with' if n == 0 else 'without'} -txospenderindex\")\r\n+        self.log.info(f\"Test gettxospender with -txospenderindex\")\r\n+        assert_equal(self.nodes[0].gettxospender(partially_spent_tx[\"txid\"], num_out), spending_txid)\r\n+        self.log.info(f\"Test gettxospender without -txospenderindex\")\r\n+        assert_raises_rpc_error(-8, \"This RPC call requires -txospenderindex to be enabled.\", self.nodes[1].gettxospender, partially_spent_tx[\"txid\"], num_out)\r\n \r\n-            if n == 0:\r\n-                assert_equal(self.nodes[n].gettxospender(txid, vout), txId)\r\n-            else:\r\n-                # Without -txospenderindex, expect to raise.\r\n-                assert_raises_rpc_error(-8, \"This RPC call requires -txospenderindex to be enabled.\", self.nodes[n].gettxospender, txid, vout)\r\n \r\n-if __name__ == '__main__':\r\n+if __name__ == \"__main__\":\r\n     GetTxoSpenderTest().main()\r\n",
      "created_at": "2022-04-24T13:34:15Z",
      "updated_at": "2022-04-24T13:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r857127463",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857127463"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": 30,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857855347",
      "pull_request_review_id": 952206496,
      "id": 857855347,
      "node_id": "PRRC_kwDOABII584zIdVz",
      "diff_hunk": "@@ -0,0 +1,66 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the gettxospender RPC call.\n+\"\"\"\n+\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    find_vout_for_address,\n+)\n+\n+class GetTxoSpenderTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [\"-txindex\", \"-txospenderindex\"],\n+            [\"-txindex\"],\n+        ]\n+        # whitelist all peers to speed up tx relay / mempool sync\n+        for args in self.extra_args:\n+            args.append(\"-whitelist=noban@127.0.0.1\")\n+\n+        self.supports_cli = False\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()",
      "path": "test/functional/rpc_txospender.py",
      "position": 1,
      "original_position": 31,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "e021b6bc77315bc0c148b21c301882fa5dd68c05",
      "in_reply_to_id": 856687862,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks! I've rebased on https://github.com/bitcoin/bitcoin/pull/24408 and used your code to extend its RPC test",
      "created_at": "2022-04-25T17:16:43Z",
      "updated_at": "2022-04-25T17:16:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r857855347",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857855347"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": 30,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862144297",
      "pull_request_review_id": 958241302,
      "id": 862144297,
      "node_id": "PRRC_kwDOABII584zY0cp",
      "diff_hunk": "@@ -0,0 +1,60 @@\n+#include <index/txospenderindex.h>",
      "path": "src/index/txospenderindex.cpp",
      "position": 8,
      "original_position": 1,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "7805cfd193fefbab3e8b6ecd82e3a63864f012f8",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Missing copyright/license header",
      "created_at": "2022-04-29T20:54:08Z",
      "updated_at": "2022-04-29T22:47:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r862144297",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862144297"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 8,
      "original_line": 8,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862146611",
      "pull_request_review_id": 958241302,
      "id": 862146611,
      "node_id": "PRRC_kwDOABII584zY1Az",
      "diff_hunk": "@@ -1574,6 +1588,16 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n         }\n     }\n \n+    if (args.GetBoolArg(\"-txospenderindex\", DEFAULT_TXOSPENDERINDEX)) {\n+        if (!args.GetBoolArg(\"-txindex\", DEFAULT_TXINDEX)) {\n+            return InitError(_(\"-txospenderindex requires -txindex.\"));",
      "path": "src/init.cpp",
      "position": 1,
      "original_position": 62,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "7805cfd193fefbab3e8b6ecd82e3a63864f012f8",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Maybe(?) should SoftSetArg in param interaction",
      "created_at": "2022-04-29T20:56:36Z",
      "updated_at": "2022-04-29T22:47:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r862146611",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862146611"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1584,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862149848",
      "pull_request_review_id": 958241302,
      "id": 862149848,
      "node_id": "PRRC_kwDOABII584zY1zY",
      "diff_hunk": "@@ -587,6 +588,99 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan gettxspendingprevout()\n+{\n+    return RPCHelpMan{\"gettxspendingprevout\",\n+        \"Scans the mempool to find transactions spending any of the given outputs\",\n+        {\n+            {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The transaction outputs that we want to check, and within each, the txid (string) vout (numeric).\",\n+                {\n+                    {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                        {\n+                            {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n+                            {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n+                        },\n+                    },\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::ARR, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ, \"\", \"\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id of the spent output\"},\n+                    {RPCResult::Type::NUM, \"vout\", \"the vout value of the spent output\"},\n+                    {RPCResult::Type::STR_HEX, \"spendingtxid\", /*optional=*/true, \"the transaction id of the mempool transaction spending this output (omitted if unspent)\"},\n+                }},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"gettxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+            + HelpExampleRpc(\"gettxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            RPCTypeCheckArgument(request.params[0], UniValue::VARR);\n+            const UniValue& output_params = request.params[0];\n+            if (output_params.empty()) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, outputs are missing\");\n+            }\n+\n+            std::vector<COutPoint> prevouts;\n+            prevouts.reserve(output_params.size());\n+\n+            for (unsigned int idx = 0; idx < output_params.size(); idx++) {\n+                const UniValue& o = output_params[idx].get_obj();\n+\n+                RPCTypeCheckObj(o,\n+                                {\n+                                    {\"txid\", UniValueType(UniValue::VSTR)},\n+                                    {\"vout\", UniValueType(UniValue::VNUM)},\n+                                });\n+\n+                const uint256 txid(ParseHashO(o, \"txid\"));\n+                const int nOutput = find_value(o, \"vout\").get_int();\n+                if (nOutput < 0) {\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, vout cannot be negative\");\n+                }\n+\n+                prevouts.emplace_back(txid, nOutput);\n+            }\n+\n+            bool f_txospenderindex_ready = g_txospenderindex ? g_txospenderindex->BlockUntilSyncedToCurrentChain() : false;",
      "path": "src/rpc/mempool.cpp",
      "position": 1,
      "original_position": 72,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "7805cfd193fefbab3e8b6ecd82e3a63864f012f8",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Suggest moving this below where it's actually needed/used.\r\n\r\nNote this is non-trivial: we shouldn't re-\"block\" for each outpoint, and lock order might matter.",
      "created_at": "2022-04-29T21:01:26Z",
      "updated_at": "2022-04-29T22:47:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r862149848",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862149848"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 651,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862150115",
      "pull_request_review_id": 958241302,
      "id": 862150115,
      "node_id": "PRRC_kwDOABII584zY13j",
      "diff_hunk": "@@ -0,0 +1,121 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test RPCs that retrieve information from the mempool.\"\"\"\n+\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+\n+class RPCMempoolInfoTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+         self.num_nodes = 3\n+         self.extra_args = [\n+             [\"-txindex\", \"-txospenderindex\"],\n+             [\"-txindex\", \"-txospenderindex\"],\n+             [\"-txindex\"],\n+         ]",
      "path": "test/functional/rpc_mempool_info.py",
      "position": 1,
      "original_position": 23,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "7805cfd193fefbab3e8b6ecd82e3a63864f012f8",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Block indented 1 space too many",
      "created_at": "2022-04-29T21:01:51Z",
      "updated_at": "2022-04-29T22:47:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r862150115",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862150115"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": 18,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862152877",
      "pull_request_review_id": 958241302,
      "id": 862152877,
      "node_id": "PRRC_kwDOABII584zY2it",
      "diff_hunk": "@@ -0,0 +1,46 @@\n+// Copyright (c) 2017-2021 The Bitcoin Core developers",
      "path": "src/index/txospenderindex.h",
      "position": 1,
      "original_position": 1,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "7805cfd193fefbab3e8b6ecd82e3a63864f012f8",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Wrong year range",
      "created_at": "2022-04-29T21:05:34Z",
      "updated_at": "2022-04-29T22:47:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r862152877",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862152877"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862156731",
      "pull_request_review_id": 958241302,
      "id": 862156731,
      "node_id": "PRRC_kwDOABII584zY3e7",
      "diff_hunk": "@@ -587,6 +588,99 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan gettxspendingprevout()\n+{\n+    return RPCHelpMan{\"gettxspendingprevout\",\n+        \"Scans the mempool to find transactions spending any of the given outputs\",\n+        {\n+            {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The transaction outputs that we want to check, and within each, the txid (string) vout (numeric).\",\n+                {\n+                    {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                        {\n+                            {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n+                            {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n+                        },\n+                    },\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::ARR, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ, \"\", \"\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id of the spent output\"},\n+                    {RPCResult::Type::NUM, \"vout\", \"the vout value of the spent output\"},\n+                    {RPCResult::Type::STR_HEX, \"spendingtxid\", /*optional=*/true, \"the transaction id of the mempool transaction spending this output (omitted if unspent)\"},\n+                }},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"gettxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+            + HelpExampleRpc(\"gettxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            RPCTypeCheckArgument(request.params[0], UniValue::VARR);\n+            const UniValue& output_params = request.params[0];\n+            if (output_params.empty()) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, outputs are missing\");\n+            }\n+\n+            std::vector<COutPoint> prevouts;\n+            prevouts.reserve(output_params.size());\n+\n+            for (unsigned int idx = 0; idx < output_params.size(); idx++) {\n+                const UniValue& o = output_params[idx].get_obj();\n+\n+                RPCTypeCheckObj(o,\n+                                {\n+                                    {\"txid\", UniValueType(UniValue::VSTR)},\n+                                    {\"vout\", UniValueType(UniValue::VNUM)},\n+                                });\n+\n+                const uint256 txid(ParseHashO(o, \"txid\"));\n+                const int nOutput = find_value(o, \"vout\").get_int();\n+                if (nOutput < 0) {\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, vout cannot be negative\");\n+                }\n+\n+                prevouts.emplace_back(txid, nOutput);\n+            }\n+\n+            bool f_txospenderindex_ready = g_txospenderindex ? g_txospenderindex->BlockUntilSyncedToCurrentChain() : false;\n+\n+            const CTxMemPool& mempool = EnsureAnyMemPool(request.context);\n+            LOCK(mempool.cs);\n+\n+            UniValue result{UniValue::VARR};\n+\n+            for (const COutPoint& prevout : prevouts) {\n+                UniValue o(UniValue::VOBJ);\n+                o.pushKV(\"txid\", prevout.hash.ToString());\n+                o.pushKV(\"vout\", (uint64_t)prevout.n);\n+\n+                const CTransaction* spendingTx = mempool.GetConflictTx(prevout);\n+                if (spendingTx != nullptr) {\n+                    o.pushKV(\"spendingtxid\", spendingTx->GetHash().ToString());\n+                } else if (g_txospenderindex) {\n+                    // no spending tx in mempool, query txospender index\n+                    uint256 spendingtxid;\n+                    if(g_txospenderindex->FindSpender(prevout, spendingtxid)) {\n+                        o.pushKV(\"spendingtxid\", spendingtxid.GetHex());\n+                    } else if (!f_txospenderindex_ready) {\n+                        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"No spending tx for the provided outpoint. Transactions spenders are still in the process of being indexed \");",
      "path": "src/rpc/mempool.cpp",
      "position": 1,
      "original_position": 93,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "7805cfd193fefbab3e8b6ecd82e3a63864f012f8",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Space at the end instead of punctuation",
      "created_at": "2022-04-29T21:13:19Z",
      "updated_at": "2022-04-29T22:47:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r862156731",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862156731"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 672,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862157126",
      "pull_request_review_id": 958241302,
      "id": 862157126,
      "node_id": "PRRC_kwDOABII584zY3lG",
      "diff_hunk": "@@ -587,6 +588,99 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan gettxspendingprevout()\n+{\n+    return RPCHelpMan{\"gettxspendingprevout\",\n+        \"Scans the mempool to find transactions spending any of the given outputs\",\n+        {\n+            {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The transaction outputs that we want to check, and within each, the txid (string) vout (numeric).\",\n+                {\n+                    {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                        {\n+                            {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n+                            {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n+                        },\n+                    },\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::ARR, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ, \"\", \"\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id of the spent output\"},\n+                    {RPCResult::Type::NUM, \"vout\", \"the vout value of the spent output\"},\n+                    {RPCResult::Type::STR_HEX, \"spendingtxid\", /*optional=*/true, \"the transaction id of the mempool transaction spending this output (omitted if unspent)\"},\n+                }},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"gettxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+            + HelpExampleRpc(\"gettxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            RPCTypeCheckArgument(request.params[0], UniValue::VARR);\n+            const UniValue& output_params = request.params[0];\n+            if (output_params.empty()) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, outputs are missing\");\n+            }\n+\n+            std::vector<COutPoint> prevouts;\n+            prevouts.reserve(output_params.size());\n+\n+            for (unsigned int idx = 0; idx < output_params.size(); idx++) {\n+                const UniValue& o = output_params[idx].get_obj();\n+\n+                RPCTypeCheckObj(o,\n+                                {\n+                                    {\"txid\", UniValueType(UniValue::VSTR)},\n+                                    {\"vout\", UniValueType(UniValue::VNUM)},\n+                                });\n+\n+                const uint256 txid(ParseHashO(o, \"txid\"));\n+                const int nOutput = find_value(o, \"vout\").get_int();\n+                if (nOutput < 0) {\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, vout cannot be negative\");\n+                }\n+\n+                prevouts.emplace_back(txid, nOutput);\n+            }\n+\n+            bool f_txospenderindex_ready = g_txospenderindex ? g_txospenderindex->BlockUntilSyncedToCurrentChain() : false;\n+\n+            const CTxMemPool& mempool = EnsureAnyMemPool(request.context);\n+            LOCK(mempool.cs);\n+\n+            UniValue result{UniValue::VARR};\n+\n+            for (const COutPoint& prevout : prevouts) {\n+                UniValue o(UniValue::VOBJ);\n+                o.pushKV(\"txid\", prevout.hash.ToString());\n+                o.pushKV(\"vout\", (uint64_t)prevout.n);\n+\n+                const CTransaction* spendingTx = mempool.GetConflictTx(prevout);\n+                if (spendingTx != nullptr) {\n+                    o.pushKV(\"spendingtxid\", spendingTx->GetHash().ToString());\n+                } else if (g_txospenderindex) {\n+                    // no spending tx in mempool, query txospender index\n+                    uint256 spendingtxid;\n+                    if(g_txospenderindex->FindSpender(prevout, spendingtxid)) {\n+                        o.pushKV(\"spendingtxid\", spendingtxid.GetHex());\n+                    } else if (!f_txospenderindex_ready) {\n+                        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"No spending tx for the provided outpoint. Transactions spenders are still in the process of being indexed \");",
      "path": "src/rpc/mempool.cpp",
      "position": 1,
      "original_position": 93,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "7805cfd193fefbab3e8b6ecd82e3a63864f012f8",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Doesn't say *which* output triggers it, and blocks partial results.\r\n\r\nSuggest something like a \"warnings\" key on the output result.",
      "created_at": "2022-04-29T21:14:09Z",
      "updated_at": "2022-04-29T22:47:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r862157126",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862157126"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 672,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862187808",
      "pull_request_review_id": 958241302,
      "id": 862187808,
      "node_id": "PRRC_kwDOABII584zY_Eg",
      "diff_hunk": "@@ -587,6 +588,99 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan gettxspendingprevout()\n+{\n+    return RPCHelpMan{\"gettxspendingprevout\",\n+        \"Scans the mempool to find transactions spending any of the given outputs\",\n+        {\n+            {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The transaction outputs that we want to check, and within each, the txid (string) vout (numeric).\",\n+                {\n+                    {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                        {\n+                            {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n+                            {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n+                        },\n+                    },\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::ARR, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ, \"\", \"\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id of the spent output\"},\n+                    {RPCResult::Type::NUM, \"vout\", \"the vout value of the spent output\"},\n+                    {RPCResult::Type::STR_HEX, \"spendingtxid\", /*optional=*/true, \"the transaction id of the mempool transaction spending this output (omitted if unspent)\"},\n+                }},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"gettxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+            + HelpExampleRpc(\"gettxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            RPCTypeCheckArgument(request.params[0], UniValue::VARR);\n+            const UniValue& output_params = request.params[0];\n+            if (output_params.empty()) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, outputs are missing\");\n+            }\n+\n+            std::vector<COutPoint> prevouts;\n+            prevouts.reserve(output_params.size());\n+\n+            for (unsigned int idx = 0; idx < output_params.size(); idx++) {\n+                const UniValue& o = output_params[idx].get_obj();\n+\n+                RPCTypeCheckObj(o,\n+                                {\n+                                    {\"txid\", UniValueType(UniValue::VSTR)},\n+                                    {\"vout\", UniValueType(UniValue::VNUM)},\n+                                });\n+\n+                const uint256 txid(ParseHashO(o, \"txid\"));\n+                const int nOutput = find_value(o, \"vout\").get_int();\n+                if (nOutput < 0) {\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, vout cannot be negative\");\n+                }\n+\n+                prevouts.emplace_back(txid, nOutput);\n+            }\n+\n+            bool f_txospenderindex_ready = g_txospenderindex ? g_txospenderindex->BlockUntilSyncedToCurrentChain() : false;\n+\n+            const CTxMemPool& mempool = EnsureAnyMemPool(request.context);\n+            LOCK(mempool.cs);\n+\n+            UniValue result{UniValue::VARR};\n+\n+            for (const COutPoint& prevout : prevouts) {\n+                UniValue o(UniValue::VOBJ);\n+                o.pushKV(\"txid\", prevout.hash.ToString());\n+                o.pushKV(\"vout\", (uint64_t)prevout.n);\n+\n+                const CTransaction* spendingTx = mempool.GetConflictTx(prevout);\n+                if (spendingTx != nullptr) {\n+                    o.pushKV(\"spendingtxid\", spendingTx->GetHash().ToString());\n+                } else if (g_txospenderindex) {\n+                    // no spending tx in mempool, query txospender index\n+                    uint256 spendingtxid;\n+                    if(g_txospenderindex->FindSpender(prevout, spendingtxid)) {\n+                        o.pushKV(\"spendingtxid\", spendingtxid.GetHex());\n+                    } else if (!f_txospenderindex_ready) {\n+                        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"No spending tx for the provided outpoint. Transactions spenders are still in the process of being indexed \");",
      "path": "src/rpc/mempool.cpp",
      "position": 1,
      "original_position": 93,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "7805cfd193fefbab3e8b6ecd82e3a63864f012f8",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "RPC_INVALID_ADDRESS_OR_KEY seems like the wrong code to use",
      "created_at": "2022-04-29T21:46:18Z",
      "updated_at": "2022-04-29T22:47:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r862187808",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862187808"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 672,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862487923",
      "pull_request_review_id": 958601762,
      "id": 862487923,
      "node_id": "PRRC_kwDOABII584zaIVz",
      "diff_hunk": "@@ -587,6 +588,99 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan gettxspendingprevout()\n+{\n+    return RPCHelpMan{\"gettxspendingprevout\",\n+        \"Scans the mempool to find transactions spending any of the given outputs\",\n+        {\n+            {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The transaction outputs that we want to check, and within each, the txid (string) vout (numeric).\",\n+                {\n+                    {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                        {\n+                            {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n+                            {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n+                        },\n+                    },\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::ARR, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ, \"\", \"\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id of the spent output\"},\n+                    {RPCResult::Type::NUM, \"vout\", \"the vout value of the spent output\"},\n+                    {RPCResult::Type::STR_HEX, \"spendingtxid\", /*optional=*/true, \"the transaction id of the mempool transaction spending this output (omitted if unspent)\"},\n+                }},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"gettxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+            + HelpExampleRpc(\"gettxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            RPCTypeCheckArgument(request.params[0], UniValue::VARR);\n+            const UniValue& output_params = request.params[0];\n+            if (output_params.empty()) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, outputs are missing\");\n+            }\n+\n+            std::vector<COutPoint> prevouts;\n+            prevouts.reserve(output_params.size());\n+\n+            for (unsigned int idx = 0; idx < output_params.size(); idx++) {\n+                const UniValue& o = output_params[idx].get_obj();\n+\n+                RPCTypeCheckObj(o,\n+                                {\n+                                    {\"txid\", UniValueType(UniValue::VSTR)},\n+                                    {\"vout\", UniValueType(UniValue::VNUM)},\n+                                });\n+\n+                const uint256 txid(ParseHashO(o, \"txid\"));\n+                const int nOutput = find_value(o, \"vout\").get_int();\n+                if (nOutput < 0) {\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, vout cannot be negative\");\n+                }\n+\n+                prevouts.emplace_back(txid, nOutput);\n+            }\n+\n+            bool f_txospenderindex_ready = g_txospenderindex ? g_txospenderindex->BlockUntilSyncedToCurrentChain() : false;\n+\n+            const CTxMemPool& mempool = EnsureAnyMemPool(request.context);\n+            LOCK(mempool.cs);\n+\n+            UniValue result{UniValue::VARR};\n+\n+            for (const COutPoint& prevout : prevouts) {\n+                UniValue o(UniValue::VOBJ);\n+                o.pushKV(\"txid\", prevout.hash.ToString());\n+                o.pushKV(\"vout\", (uint64_t)prevout.n);\n+\n+                const CTransaction* spendingTx = mempool.GetConflictTx(prevout);\n+                if (spendingTx != nullptr) {\n+                    o.pushKV(\"spendingtxid\", spendingTx->GetHash().ToString());\n+                } else if (g_txospenderindex) {\n+                    // no spending tx in mempool, query txospender index",
      "path": "src/rpc/mempool.cpp",
      "position": 77,
      "original_position": 88,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "7805cfd193fefbab3e8b6ecd82e3a63864f012f8",
      "in_reply_to_id": null,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Perhaps a new field could be added to the response indicating whether the transaction is in the mempool or not?\r\nSomething like:\r\n```c++\r\no.pushKV(\"in_mempool\", true); // or false\r\n```",
      "created_at": "2022-05-01T15:15:10Z",
      "updated_at": "2022-05-01T15:16:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r862487923",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862487923"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 704,
      "original_line": 704,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862938062",
      "pull_request_review_id": 959202584,
      "id": 862938062,
      "node_id": "PRRC_kwDOABII584zb2PO",
      "diff_hunk": "@@ -0,0 +1,60 @@\n+#include <index/txospenderindex.h>\n+\n+#include <index/disktxpos.h>\n+#include <node/blockstorage.h>\n+#include <util/system.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};\n+\n+std::unique_ptr<TxoSpenderIndex> g_txospenderindex;\n+\n+/** Access to the txo spender index database (indexes/txospenderindex/) */\n+class TxoSpenderIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    bool WriteSpenderInfos(const std::vector<std::pair<COutPoint, uint256>>& items);\n+};\n+\n+TxoSpenderIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"txospenderindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+TxoSpenderIndex::TxoSpenderIndex(size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : m_db(std::make_unique<TxoSpenderIndex::DB>(n_cache_size, f_memory, f_wipe))\n+{}\n+\n+TxoSpenderIndex::~TxoSpenderIndex() {}\n+\n+bool TxoSpenderIndex::DB::WriteSpenderInfos(const std::vector<std::pair<COutPoint, uint256>>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& tuple : items) {\n+        batch.Write(std::make_pair(DB_TXOSPENDERINDEX, tuple.first), tuple.second);",
      "path": "src/index/txospenderindex.cpp",
      "position": 1,
      "original_position": 35,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "7805cfd193fefbab3e8b6ecd82e3a63864f012f8",
      "in_reply_to_id": null,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Is there any reason to use `std::make_pair(DB_TXOSPENDERINDEX, tuple.first)`  as the key instead of just  `tuple.first` ?\r\n\r\n`DB_TXOSPENDERINDEX` seems redundant.",
      "created_at": "2022-05-02T15:18:20Z",
      "updated_at": "2022-05-02T15:18:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r862938062",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862938062"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 39,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/863085647",
      "pull_request_review_id": 959413555,
      "id": 863085647,
      "node_id": "PRRC_kwDOABII584zcaRP",
      "diff_hunk": "@@ -587,6 +588,99 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan gettxspendingprevout()\n+{\n+    return RPCHelpMan{\"gettxspendingprevout\",\n+        \"Scans the mempool to find transactions spending any of the given outputs\",\n+        {\n+            {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The transaction outputs that we want to check, and within each, the txid (string) vout (numeric).\",\n+                {\n+                    {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                        {\n+                            {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n+                            {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n+                        },\n+                    },\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::ARR, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ, \"\", \"\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id of the spent output\"},\n+                    {RPCResult::Type::NUM, \"vout\", \"the vout value of the spent output\"},\n+                    {RPCResult::Type::STR_HEX, \"spendingtxid\", /*optional=*/true, \"the transaction id of the mempool transaction spending this output (omitted if unspent)\"},",
      "path": "src/rpc/mempool.cpp",
      "position": 24,
      "original_position": 35,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "7805cfd193fefbab3e8b6ecd82e3a63864f012f8",
      "in_reply_to_id": null,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This message needs to be changed, as the transaction may not be in the mempool, but in the blocks.\r\nThis field is no longer optional in this PR.\r\n\r\n```suggestion\r\n                    {RPCResult::Type::STR_HEX, \"spendingtxid\", \"the id of the transaction that spends the output\"},\r\n```",
      "created_at": "2022-05-02T18:34:59Z",
      "updated_at": "2022-05-02T18:49:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r863085647",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/863085647"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 624,
      "original_line": 624,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/864062496",
      "pull_request_review_id": 960797515,
      "id": 864062496,
      "node_id": "PRRC_kwDOABII584zgIwg",
      "diff_hunk": "@@ -0,0 +1,60 @@\n+#include <index/txospenderindex.h>",
      "path": "src/index/txospenderindex.cpp",
      "position": 8,
      "original_position": 1,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "7805cfd193fefbab3e8b6ecd82e3a63864f012f8",
      "in_reply_to_id": 862144297,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks! I've applied your patch and updated python tests",
      "created_at": "2022-05-03T18:14:52Z",
      "updated_at": "2022-05-03T18:14:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r864062496",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/864062496"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 8,
      "original_line": 8,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/864075572",
      "pull_request_review_id": 960826186,
      "id": 864075572,
      "node_id": "PRRC_kwDOABII584zgL80",
      "diff_hunk": "@@ -587,6 +588,99 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan gettxspendingprevout()\n+{\n+    return RPCHelpMan{\"gettxspendingprevout\",\n+        \"Scans the mempool to find transactions spending any of the given outputs\",\n+        {\n+            {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The transaction outputs that we want to check, and within each, the txid (string) vout (numeric).\",\n+                {\n+                    {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                        {\n+                            {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n+                            {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n+                        },\n+                    },\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::ARR, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ, \"\", \"\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id of the spent output\"},\n+                    {RPCResult::Type::NUM, \"vout\", \"the vout value of the spent output\"},\n+                    {RPCResult::Type::STR_HEX, \"spendingtxid\", /*optional=*/true, \"the transaction id of the mempool transaction spending this output (omitted if unspent)\"},\n+                }},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"gettxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+            + HelpExampleRpc(\"gettxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            RPCTypeCheckArgument(request.params[0], UniValue::VARR);\n+            const UniValue& output_params = request.params[0];\n+            if (output_params.empty()) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, outputs are missing\");\n+            }\n+\n+            std::vector<COutPoint> prevouts;\n+            prevouts.reserve(output_params.size());\n+\n+            for (unsigned int idx = 0; idx < output_params.size(); idx++) {\n+                const UniValue& o = output_params[idx].get_obj();\n+\n+                RPCTypeCheckObj(o,\n+                                {\n+                                    {\"txid\", UniValueType(UniValue::VSTR)},\n+                                    {\"vout\", UniValueType(UniValue::VNUM)},\n+                                });\n+\n+                const uint256 txid(ParseHashO(o, \"txid\"));\n+                const int nOutput = find_value(o, \"vout\").get_int();\n+                if (nOutput < 0) {\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, vout cannot be negative\");\n+                }\n+\n+                prevouts.emplace_back(txid, nOutput);\n+            }\n+\n+            bool f_txospenderindex_ready = g_txospenderindex ? g_txospenderindex->BlockUntilSyncedToCurrentChain() : false;",
      "path": "src/rpc/mempool.cpp",
      "position": 1,
      "original_position": 72,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "7805cfd193fefbab3e8b6ecd82e3a63864f012f8",
      "in_reply_to_id": 862149848,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "That what I tried at first but could not get it to work without triggering a deadlock:\r\n```\r\nPOTENTIAL DEADLOCK DETECTED\r\nPrevious lock order was:\r\n(2) 'cs_main' in node/chainstate.cpp:30 (in thread 'qt-init')\r\n(1) 'cs' in txmempool.cpp:709 (in thread 'qt-init')\r\nCurrent lock order is:\r\n(1) 'mempool.cs' in rpc/mempool.cpp:676 (in thread 'qt-rpcconsole')\r\n(2) 'cs_main' in index/base.cpp:331 (in thread 'qt-rpcconsole')\r\n```",
      "created_at": "2022-05-03T18:32:54Z",
      "updated_at": "2022-05-03T18:32:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r864075572",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/864075572"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 651,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/864076176",
      "pull_request_review_id": 960829245,
      "id": 864076176,
      "node_id": "PRRC_kwDOABII584zgMGQ",
      "diff_hunk": "@@ -0,0 +1,121 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test RPCs that retrieve information from the mempool.\"\"\"\n+\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+\n+class RPCMempoolInfoTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+         self.num_nodes = 3\n+         self.extra_args = [\n+             [\"-txindex\", \"-txospenderindex\"],\n+             [\"-txindex\", \"-txospenderindex\"],\n+             [\"-txindex\"],\n+         ]",
      "path": "test/functional/rpc_mempool_info.py",
      "position": 1,
      "original_position": 23,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "7805cfd193fefbab3e8b6ecd82e3a63864f012f8",
      "in_reply_to_id": 862150115,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done in https://github.com/bitcoin/bitcoin/pull/24539/commits/84c1e67c7b6a7fa618325e2767b243f97cab0e45",
      "created_at": "2022-05-03T18:33:46Z",
      "updated_at": "2022-05-03T18:33:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r864076176",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/864076176"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": 18,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/864076237",
      "pull_request_review_id": 960829715,
      "id": 864076237,
      "node_id": "PRRC_kwDOABII584zgMHN",
      "diff_hunk": "@@ -0,0 +1,46 @@\n+// Copyright (c) 2017-2021 The Bitcoin Core developers",
      "path": "src/index/txospenderindex.h",
      "position": 1,
      "original_position": 1,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "7805cfd193fefbab3e8b6ecd82e3a63864f012f8",
      "in_reply_to_id": 862152877,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done in https://github.com/bitcoin/bitcoin/pull/24539/commits/84c1e67c7b6a7fa618325e2767b243f97cab0e45",
      "created_at": "2022-05-03T18:33:53Z",
      "updated_at": "2022-05-03T18:33:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r864076237",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/864076237"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/864076338",
      "pull_request_review_id": 960830357,
      "id": 864076338,
      "node_id": "PRRC_kwDOABII584zgMIy",
      "diff_hunk": "@@ -587,6 +588,99 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan gettxspendingprevout()\n+{\n+    return RPCHelpMan{\"gettxspendingprevout\",\n+        \"Scans the mempool to find transactions spending any of the given outputs\",\n+        {\n+            {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The transaction outputs that we want to check, and within each, the txid (string) vout (numeric).\",\n+                {\n+                    {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                        {\n+                            {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n+                            {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n+                        },\n+                    },\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::ARR, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ, \"\", \"\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id of the spent output\"},\n+                    {RPCResult::Type::NUM, \"vout\", \"the vout value of the spent output\"},\n+                    {RPCResult::Type::STR_HEX, \"spendingtxid\", /*optional=*/true, \"the transaction id of the mempool transaction spending this output (omitted if unspent)\"},\n+                }},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"gettxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+            + HelpExampleRpc(\"gettxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            RPCTypeCheckArgument(request.params[0], UniValue::VARR);\n+            const UniValue& output_params = request.params[0];\n+            if (output_params.empty()) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, outputs are missing\");\n+            }\n+\n+            std::vector<COutPoint> prevouts;\n+            prevouts.reserve(output_params.size());\n+\n+            for (unsigned int idx = 0; idx < output_params.size(); idx++) {\n+                const UniValue& o = output_params[idx].get_obj();\n+\n+                RPCTypeCheckObj(o,\n+                                {\n+                                    {\"txid\", UniValueType(UniValue::VSTR)},\n+                                    {\"vout\", UniValueType(UniValue::VNUM)},\n+                                });\n+\n+                const uint256 txid(ParseHashO(o, \"txid\"));\n+                const int nOutput = find_value(o, \"vout\").get_int();\n+                if (nOutput < 0) {\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, vout cannot be negative\");\n+                }\n+\n+                prevouts.emplace_back(txid, nOutput);\n+            }\n+\n+            bool f_txospenderindex_ready = g_txospenderindex ? g_txospenderindex->BlockUntilSyncedToCurrentChain() : false;\n+\n+            const CTxMemPool& mempool = EnsureAnyMemPool(request.context);\n+            LOCK(mempool.cs);\n+\n+            UniValue result{UniValue::VARR};\n+\n+            for (const COutPoint& prevout : prevouts) {\n+                UniValue o(UniValue::VOBJ);\n+                o.pushKV(\"txid\", prevout.hash.ToString());\n+                o.pushKV(\"vout\", (uint64_t)prevout.n);\n+\n+                const CTransaction* spendingTx = mempool.GetConflictTx(prevout);\n+                if (spendingTx != nullptr) {\n+                    o.pushKV(\"spendingtxid\", spendingTx->GetHash().ToString());\n+                } else if (g_txospenderindex) {\n+                    // no spending tx in mempool, query txospender index\n+                    uint256 spendingtxid;\n+                    if(g_txospenderindex->FindSpender(prevout, spendingtxid)) {\n+                        o.pushKV(\"spendingtxid\", spendingtxid.GetHex());\n+                    } else if (!f_txospenderindex_ready) {\n+                        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"No spending tx for the provided outpoint. Transactions spenders are still in the process of being indexed \");",
      "path": "src/rpc/mempool.cpp",
      "position": 1,
      "original_position": 93,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "7805cfd193fefbab3e8b6ecd82e3a63864f012f8",
      "in_reply_to_id": 862156731,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done in https://github.com/bitcoin/bitcoin/pull/24539/commits/84c1e67c7b6a7fa618325e2767b243f97cab0e45",
      "created_at": "2022-05-03T18:34:01Z",
      "updated_at": "2022-05-03T18:34:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r864076338",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/864076338"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 672,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/864076573",
      "pull_request_review_id": 960831256,
      "id": 864076573,
      "node_id": "PRRC_kwDOABII584zgMMd",
      "diff_hunk": "@@ -587,6 +588,99 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan gettxspendingprevout()\n+{\n+    return RPCHelpMan{\"gettxspendingprevout\",\n+        \"Scans the mempool to find transactions spending any of the given outputs\",\n+        {\n+            {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The transaction outputs that we want to check, and within each, the txid (string) vout (numeric).\",\n+                {\n+                    {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                        {\n+                            {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n+                            {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n+                        },\n+                    },\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::ARR, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ, \"\", \"\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id of the spent output\"},\n+                    {RPCResult::Type::NUM, \"vout\", \"the vout value of the spent output\"},\n+                    {RPCResult::Type::STR_HEX, \"spendingtxid\", /*optional=*/true, \"the transaction id of the mempool transaction spending this output (omitted if unspent)\"},\n+                }},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"gettxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+            + HelpExampleRpc(\"gettxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            RPCTypeCheckArgument(request.params[0], UniValue::VARR);\n+            const UniValue& output_params = request.params[0];\n+            if (output_params.empty()) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, outputs are missing\");\n+            }\n+\n+            std::vector<COutPoint> prevouts;\n+            prevouts.reserve(output_params.size());\n+\n+            for (unsigned int idx = 0; idx < output_params.size(); idx++) {\n+                const UniValue& o = output_params[idx].get_obj();\n+\n+                RPCTypeCheckObj(o,\n+                                {\n+                                    {\"txid\", UniValueType(UniValue::VSTR)},\n+                                    {\"vout\", UniValueType(UniValue::VNUM)},\n+                                });\n+\n+                const uint256 txid(ParseHashO(o, \"txid\"));\n+                const int nOutput = find_value(o, \"vout\").get_int();\n+                if (nOutput < 0) {\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, vout cannot be negative\");\n+                }\n+\n+                prevouts.emplace_back(txid, nOutput);\n+            }\n+\n+            bool f_txospenderindex_ready = g_txospenderindex ? g_txospenderindex->BlockUntilSyncedToCurrentChain() : false;\n+\n+            const CTxMemPool& mempool = EnsureAnyMemPool(request.context);\n+            LOCK(mempool.cs);\n+\n+            UniValue result{UniValue::VARR};\n+\n+            for (const COutPoint& prevout : prevouts) {\n+                UniValue o(UniValue::VOBJ);\n+                o.pushKV(\"txid\", prevout.hash.ToString());\n+                o.pushKV(\"vout\", (uint64_t)prevout.n);\n+\n+                const CTransaction* spendingTx = mempool.GetConflictTx(prevout);\n+                if (spendingTx != nullptr) {\n+                    o.pushKV(\"spendingtxid\", spendingTx->GetHash().ToString());\n+                } else if (g_txospenderindex) {\n+                    // no spending tx in mempool, query txospender index\n+                    uint256 spendingtxid;\n+                    if(g_txospenderindex->FindSpender(prevout, spendingtxid)) {\n+                        o.pushKV(\"spendingtxid\", spendingtxid.GetHex());\n+                    } else if (!f_txospenderindex_ready) {\n+                        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"No spending tx for the provided outpoint. Transactions spenders are still in the process of being indexed \");",
      "path": "src/rpc/mempool.cpp",
      "position": 1,
      "original_position": 93,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "7805cfd193fefbab3e8b6ecd82e3a63864f012f8",
      "in_reply_to_id": 862157126,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done in https://github.com/bitcoin/bitcoin/pull/24539/commits/84c1e67c7b6a7fa618325e2767b243f97cab0e45",
      "created_at": "2022-05-03T18:34:14Z",
      "updated_at": "2022-05-03T18:34:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r864076573",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/864076573"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 672,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/864076726",
      "pull_request_review_id": 960831665,
      "id": 864076726,
      "node_id": "PRRC_kwDOABII584zgMO2",
      "diff_hunk": "@@ -587,6 +588,99 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan gettxspendingprevout()\n+{\n+    return RPCHelpMan{\"gettxspendingprevout\",\n+        \"Scans the mempool to find transactions spending any of the given outputs\",\n+        {\n+            {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The transaction outputs that we want to check, and within each, the txid (string) vout (numeric).\",\n+                {\n+                    {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                        {\n+                            {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n+                            {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n+                        },\n+                    },\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::ARR, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ, \"\", \"\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id of the spent output\"},\n+                    {RPCResult::Type::NUM, \"vout\", \"the vout value of the spent output\"},\n+                    {RPCResult::Type::STR_HEX, \"spendingtxid\", /*optional=*/true, \"the transaction id of the mempool transaction spending this output (omitted if unspent)\"},\n+                }},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"gettxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+            + HelpExampleRpc(\"gettxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            RPCTypeCheckArgument(request.params[0], UniValue::VARR);\n+            const UniValue& output_params = request.params[0];\n+            if (output_params.empty()) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, outputs are missing\");\n+            }\n+\n+            std::vector<COutPoint> prevouts;\n+            prevouts.reserve(output_params.size());\n+\n+            for (unsigned int idx = 0; idx < output_params.size(); idx++) {\n+                const UniValue& o = output_params[idx].get_obj();\n+\n+                RPCTypeCheckObj(o,\n+                                {\n+                                    {\"txid\", UniValueType(UniValue::VSTR)},\n+                                    {\"vout\", UniValueType(UniValue::VNUM)},\n+                                });\n+\n+                const uint256 txid(ParseHashO(o, \"txid\"));\n+                const int nOutput = find_value(o, \"vout\").get_int();\n+                if (nOutput < 0) {\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, vout cannot be negative\");\n+                }\n+\n+                prevouts.emplace_back(txid, nOutput);\n+            }\n+\n+            bool f_txospenderindex_ready = g_txospenderindex ? g_txospenderindex->BlockUntilSyncedToCurrentChain() : false;\n+\n+            const CTxMemPool& mempool = EnsureAnyMemPool(request.context);\n+            LOCK(mempool.cs);\n+\n+            UniValue result{UniValue::VARR};\n+\n+            for (const COutPoint& prevout : prevouts) {\n+                UniValue o(UniValue::VOBJ);\n+                o.pushKV(\"txid\", prevout.hash.ToString());\n+                o.pushKV(\"vout\", (uint64_t)prevout.n);\n+\n+                const CTransaction* spendingTx = mempool.GetConflictTx(prevout);\n+                if (spendingTx != nullptr) {\n+                    o.pushKV(\"spendingtxid\", spendingTx->GetHash().ToString());\n+                } else if (g_txospenderindex) {\n+                    // no spending tx in mempool, query txospender index\n+                    uint256 spendingtxid;\n+                    if(g_txospenderindex->FindSpender(prevout, spendingtxid)) {\n+                        o.pushKV(\"spendingtxid\", spendingtxid.GetHex());\n+                    } else if (!f_txospenderindex_ready) {\n+                        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"No spending tx for the provided outpoint. Transactions spenders are still in the process of being indexed \");",
      "path": "src/rpc/mempool.cpp",
      "position": 1,
      "original_position": 93,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "7805cfd193fefbab3e8b6ecd82e3a63864f012f8",
      "in_reply_to_id": 862187808,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done in https://github.com/bitcoin/bitcoin/pull/24539/commits/84c1e67c7b6a7fa618325e2767b243f97cab0e45",
      "created_at": "2022-05-03T18:34:22Z",
      "updated_at": "2022-05-03T18:34:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r864076726",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/864076726"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 672,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/864078378",
      "pull_request_review_id": 960835258,
      "id": 864078378,
      "node_id": "PRRC_kwDOABII584zgMoq",
      "diff_hunk": "@@ -587,6 +588,99 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan gettxspendingprevout()\n+{\n+    return RPCHelpMan{\"gettxspendingprevout\",\n+        \"Scans the mempool to find transactions spending any of the given outputs\",\n+        {\n+            {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The transaction outputs that we want to check, and within each, the txid (string) vout (numeric).\",\n+                {\n+                    {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                        {\n+                            {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n+                            {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n+                        },\n+                    },\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::ARR, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ, \"\", \"\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id of the spent output\"},\n+                    {RPCResult::Type::NUM, \"vout\", \"the vout value of the spent output\"},\n+                    {RPCResult::Type::STR_HEX, \"spendingtxid\", /*optional=*/true, \"the transaction id of the mempool transaction spending this output (omitted if unspent)\"},\n+                }},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"gettxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+            + HelpExampleRpc(\"gettxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            RPCTypeCheckArgument(request.params[0], UniValue::VARR);\n+            const UniValue& output_params = request.params[0];\n+            if (output_params.empty()) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, outputs are missing\");\n+            }\n+\n+            std::vector<COutPoint> prevouts;\n+            prevouts.reserve(output_params.size());\n+\n+            for (unsigned int idx = 0; idx < output_params.size(); idx++) {\n+                const UniValue& o = output_params[idx].get_obj();\n+\n+                RPCTypeCheckObj(o,\n+                                {\n+                                    {\"txid\", UniValueType(UniValue::VSTR)},\n+                                    {\"vout\", UniValueType(UniValue::VNUM)},\n+                                });\n+\n+                const uint256 txid(ParseHashO(o, \"txid\"));\n+                const int nOutput = find_value(o, \"vout\").get_int();\n+                if (nOutput < 0) {\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, vout cannot be negative\");\n+                }\n+\n+                prevouts.emplace_back(txid, nOutput);\n+            }\n+\n+            bool f_txospenderindex_ready = g_txospenderindex ? g_txospenderindex->BlockUntilSyncedToCurrentChain() : false;\n+\n+            const CTxMemPool& mempool = EnsureAnyMemPool(request.context);\n+            LOCK(mempool.cs);\n+\n+            UniValue result{UniValue::VARR};\n+\n+            for (const COutPoint& prevout : prevouts) {\n+                UniValue o(UniValue::VOBJ);\n+                o.pushKV(\"txid\", prevout.hash.ToString());\n+                o.pushKV(\"vout\", (uint64_t)prevout.n);\n+\n+                const CTransaction* spendingTx = mempool.GetConflictTx(prevout);\n+                if (spendingTx != nullptr) {\n+                    o.pushKV(\"spendingtxid\", spendingTx->GetHash().ToString());\n+                } else if (g_txospenderindex) {\n+                    // no spending tx in mempool, query txospender index",
      "path": "src/rpc/mempool.cpp",
      "position": 77,
      "original_position": 88,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "7805cfd193fefbab3e8b6ecd82e3a63864f012f8",
      "in_reply_to_id": 862487923,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'm not sure it is needed: caller will receive a list of tx ids and will call `getrawtransaction` which will include number of confirmations etc....",
      "created_at": "2022-05-03T18:35:53Z",
      "updated_at": "2022-05-03T18:35:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r864078378",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/864078378"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 704,
      "original_line": 704,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/864081172",
      "pull_request_review_id": 960838860,
      "id": 864081172,
      "node_id": "PRRC_kwDOABII584zgNUU",
      "diff_hunk": "@@ -0,0 +1,60 @@\n+#include <index/txospenderindex.h>\n+\n+#include <index/disktxpos.h>\n+#include <node/blockstorage.h>\n+#include <util/system.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};\n+\n+std::unique_ptr<TxoSpenderIndex> g_txospenderindex;\n+\n+/** Access to the txo spender index database (indexes/txospenderindex/) */\n+class TxoSpenderIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    bool WriteSpenderInfos(const std::vector<std::pair<COutPoint, uint256>>& items);\n+};\n+\n+TxoSpenderIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"txospenderindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+TxoSpenderIndex::TxoSpenderIndex(size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : m_db(std::make_unique<TxoSpenderIndex::DB>(n_cache_size, f_memory, f_wipe))\n+{}\n+\n+TxoSpenderIndex::~TxoSpenderIndex() {}\n+\n+bool TxoSpenderIndex::DB::WriteSpenderInfos(const std::vector<std::pair<COutPoint, uint256>>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& tuple : items) {\n+        batch.Write(std::make_pair(DB_TXOSPENDERINDEX, tuple.first), tuple.second);",
      "path": "src/index/txospenderindex.cpp",
      "position": 1,
      "original_position": 35,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "7805cfd193fefbab3e8b6ecd82e3a63864f012f8",
      "in_reply_to_id": 862938062,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This is how all other indexes work even when there is just one possible key. Maybe because it makes it easier to add new record type later with a new key prefix ?",
      "created_at": "2022-05-03T18:37:45Z",
      "updated_at": "2022-05-03T18:37:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r864081172",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/864081172"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 39,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/864083637",
      "pull_request_review_id": 960840371,
      "id": 864083637,
      "node_id": "PRRC_kwDOABII584zgN61",
      "diff_hunk": "@@ -587,6 +588,99 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan gettxspendingprevout()\n+{\n+    return RPCHelpMan{\"gettxspendingprevout\",\n+        \"Scans the mempool to find transactions spending any of the given outputs\",\n+        {\n+            {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The transaction outputs that we want to check, and within each, the txid (string) vout (numeric).\",\n+                {\n+                    {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                        {\n+                            {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n+                            {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n+                        },\n+                    },\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::ARR, \"\", \"\",\n+            {\n+                {RPCResult::Type::OBJ, \"\", \"\",\n+                {\n+                    {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id of the spent output\"},\n+                    {RPCResult::Type::NUM, \"vout\", \"the vout value of the spent output\"},\n+                    {RPCResult::Type::STR_HEX, \"spendingtxid\", /*optional=*/true, \"the transaction id of the mempool transaction spending this output (omitted if unspent)\"},",
      "path": "src/rpc/mempool.cpp",
      "position": 24,
      "original_position": 35,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "7805cfd193fefbab3e8b6ecd82e3a63864f012f8",
      "in_reply_to_id": 863085647,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done in https://github.com/bitcoin/bitcoin/commit/84c1e67c7b6a7fa618325e2767b243f97cab0e45",
      "created_at": "2022-05-03T18:39:10Z",
      "updated_at": "2022-05-03T18:39:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r864083637",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/864083637"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 624,
      "original_line": 624,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/994483806",
      "pull_request_review_id": 1140554364,
      "id": 994483806,
      "node_id": "PRRC_kwDOABII5847Rp5e",
      "diff_hunk": "@@ -0,0 +1,64 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <index/txospenderindex.h>\n+\n+#include <index/disktxpos.h>\n+#include <node/blockstorage.h>\n+#include <util/system.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};\n+\n+std::unique_ptr<TxoSpenderIndex> g_txospenderindex;\n+\n+/** Access to the txo spender index database (indexes/txospenderindex/) */\n+class TxoSpenderIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    bool WriteSpenderInfos(const std::vector<std::pair<COutPoint, uint256>>& items);\n+};\n+\n+TxoSpenderIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"txospenderindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+TxoSpenderIndex::TxoSpenderIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"txospenderindex\"), m_db(std::make_unique<TxoSpenderIndex::DB>(n_cache_size, f_memory, f_wipe))\n+{}\n+\n+TxoSpenderIndex::~TxoSpenderIndex() {}\n+\n+bool TxoSpenderIndex::DB::WriteSpenderInfos(const std::vector<std::pair<COutPoint, uint256>>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& tuple : items) {\n+        batch.Write(std::make_pair(DB_TXOSPENDERINDEX, tuple.first), tuple.second);",
      "path": "src/index/txospenderindex.cpp",
      "position": 1,
      "original_position": 39,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "16b5cb0b9d343de1080ec4761bd8f20d668059ee",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit\r\n```suggestion\r\n    for (const auto& [outPoint, hash] : items) {\r\n        batch.Write(std::make_pair(DB_TXOSPENDERINDEX, outPoint), hash);\r\n```",
      "created_at": "2022-10-13T10:51:21Z",
      "updated_at": "2022-10-13T11:44:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r994483806",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/994483806"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": 38,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 39,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/994567590",
      "pull_request_review_id": 1140673527,
      "id": 994567590,
      "node_id": "PRRC_kwDOABII5847R-Wm",
      "diff_hunk": "@@ -0,0 +1,64 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <index/txospenderindex.h>\n+\n+#include <index/disktxpos.h>\n+#include <node/blockstorage.h>\n+#include <util/system.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};\n+\n+std::unique_ptr<TxoSpenderIndex> g_txospenderindex;\n+\n+/** Access to the txo spender index database (indexes/txospenderindex/) */\n+class TxoSpenderIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    bool WriteSpenderInfos(const std::vector<std::pair<COutPoint, uint256>>& items);\n+};\n+\n+TxoSpenderIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"txospenderindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+TxoSpenderIndex::TxoSpenderIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"txospenderindex\"), m_db(std::make_unique<TxoSpenderIndex::DB>(n_cache_size, f_memory, f_wipe))\n+{}\n+\n+TxoSpenderIndex::~TxoSpenderIndex() {}\n+\n+bool TxoSpenderIndex::DB::WriteSpenderInfos(const std::vector<std::pair<COutPoint, uint256>>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& tuple : items) {\n+        batch.Write(std::make_pair(DB_TXOSPENDERINDEX, tuple.first), tuple.second);",
      "path": "src/index/txospenderindex.cpp",
      "position": 1,
      "original_position": 39,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "16b5cb0b9d343de1080ec4761bd8f20d668059ee",
      "in_reply_to_id": 994483806,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "we use snake_case, so if this suggestion is taken, it should be `outpoint` or `out_point`",
      "created_at": "2022-10-13T12:16:40Z",
      "updated_at": "2022-10-13T12:16:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r994567590",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/994567590"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": 38,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 39,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/994569142",
      "pull_request_review_id": 1140675810,
      "id": 994569142,
      "node_id": "PRRC_kwDOABII5847R-u2",
      "diff_hunk": "@@ -881,6 +890,8 @@ bool AppInitParameterInteraction(const ArgsManager& args, bool use_syscall_sandb\n     if (args.GetIntArg(\"-prune\", 0)) {\n         if (args.GetBoolArg(\"-txindex\", DEFAULT_TXINDEX))\n             return InitError(_(\"Prune mode is incompatible with -txindex.\"));\n+        if (args.GetBoolArg(\"-txospenderindex\", DEFAULT_TXOSPENDERINDEX))",
      "path": "src/init.cpp",
      "position": 1,
      "original_position": 41,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "16b5cb0b9d343de1080ec4761bd8f20d668059ee",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit for new code: (only if you retouch)\r\n```suggestion\r\n        if (args.GetBoolArg(\"-txospenderindex\", DEFAULT_TXOSPENDERINDEX)) {\r\n```",
      "created_at": "2022-10-13T12:18:14Z",
      "updated_at": "2022-10-13T12:20:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r994569142",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/994569142"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 893,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/994570253",
      "pull_request_review_id": 1140675810,
      "id": 994570253,
      "node_id": "PRRC_kwDOABII5847R_AN",
      "diff_hunk": "@@ -644,6 +672,30 @@ static RPCHelpMan gettxspendingprevout()\n                 const CTransaction* spendingTx = mempool.GetConflictTx(prevout);\n                 if (spendingTx != nullptr) {\n                     o.pushKV(\"spendingtxid\", spendingTx->GetHash().ToString());\n+                } else if (mempool_only.value_or(false)) {\n+                    // do nothing\n+                } else if (g_txospenderindex) {\n+                    // no spending tx in mempool, query txospender index\n+                    uint256 spendingtxid;\n+                    if(g_txospenderindex->FindSpender(prevout, spendingtxid)) {",
      "path": "src/rpc/mempool.cpp",
      "position": 1,
      "original_position": 72,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "16b5cb0b9d343de1080ec4761bd8f20d668059ee",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit (only if you retouch):\r\n```suggestion\r\n                    if (g_txospenderindex->FindSpender(prevout, spendingtxid)) {\r\n```",
      "created_at": "2022-10-13T12:19:24Z",
      "updated_at": "2022-10-13T12:20:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r994570253",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/994570253"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 680,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1000327209",
      "pull_request_review_id": 1148815922,
      "id": 1000327209,
      "node_id": "PRRC_kwDOABII5847n8gp",
      "diff_hunk": "@@ -0,0 +1,64 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <index/txospenderindex.h>\n+\n+#include <index/disktxpos.h>\n+#include <node/blockstorage.h>\n+#include <util/system.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};\n+\n+std::unique_ptr<TxoSpenderIndex> g_txospenderindex;\n+\n+/** Access to the txo spender index database (indexes/txospenderindex/) */\n+class TxoSpenderIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    bool WriteSpenderInfos(const std::vector<std::pair<COutPoint, uint256>>& items);\n+};\n+\n+TxoSpenderIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"txospenderindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+TxoSpenderIndex::TxoSpenderIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"txospenderindex\"), m_db(std::make_unique<TxoSpenderIndex::DB>(n_cache_size, f_memory, f_wipe))\n+{}\n+\n+TxoSpenderIndex::~TxoSpenderIndex() {}\n+\n+bool TxoSpenderIndex::DB::WriteSpenderInfos(const std::vector<std::pair<COutPoint, uint256>>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& tuple : items) {\n+        batch.Write(std::make_pair(DB_TXOSPENDERINDEX, tuple.first), tuple.second);",
      "path": "src/index/txospenderindex.cpp",
      "position": 1,
      "original_position": 39,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "16b5cb0b9d343de1080ec4761bd8f20d668059ee",
      "in_reply_to_id": 994483806,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks! I'll use your suggestions next time I rebase",
      "created_at": "2022-10-20T08:48:19Z",
      "updated_at": "2022-10-20T08:48:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1000327209",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1000327209"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": 38,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 39,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1028538250",
      "pull_request_review_id": 1188968612,
      "id": 1028538250,
      "node_id": "PRRC_kwDOABII5849Tj-K",
      "diff_hunk": "@@ -644,6 +672,30 @@ static RPCHelpMan gettxspendingprevout()\n                 const CTransaction* spendingTx = mempool.GetConflictTx(prevout);\n                 if (spendingTx != nullptr) {\n                     o.pushKV(\"spendingtxid\", spendingTx->GetHash().ToString());\n+                } else if (mempool_only.value_or(false)) {\n+                    // do nothing\n+                } else if (g_txospenderindex) {\n+                    // no spending tx in mempool, query txospender index\n+                    uint256 spendingtxid;\n+                    if(g_txospenderindex->FindSpender(prevout, spendingtxid)) {\n+                        o.pushKV(\"spendingtxid\", spendingtxid.GetHex());\n+                    } else if (!f_txospenderindex_ready) {\n+                        if (mempool_only.has_value()) {  // NOTE: value is false here\n+                            throw JSONRPCError(RPC_MISC_ERROR, strprintf(\"No spending tx for the outpoint %s:%d found, and txospenderindex is still being synced.\", prevout.hash.GetHex(), prevout.n));\n+                        } else {\n+                            UniValue warnings(UniValue::VARR);\n+                            warnings.push_back(\"txospenderindex is still being synced.\");\n+                            o.pushKV(\"warnings\", warnings);\n+                        }\n+                    }",
      "path": "src/rpc/mempool.cpp",
      "position": 1,
      "original_position": 82,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "16b5cb0b9d343de1080ec4761bd8f20d668059ee",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 16b5cb0b9d343de1080ec4761bd8f20d668059ee \"Add a \"tx output spender\" index\"\r\n\r\nI think we should be warning if the spending txid was found, but the index was not yet synced? It seems like it would be possible for a spend to have been recorded in the index, but was removed/changed by a reorg that has not been synced by the index yet.",
      "created_at": "2022-11-21T21:38:48Z",
      "updated_at": "2022-11-21T22:01:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1028538250",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1028538250"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": 682,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 724,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1028539576",
      "pull_request_review_id": 1188968612,
      "id": 1028539576,
      "node_id": "PRRC_kwDOABII5849TkS4",
      "diff_hunk": "@@ -0,0 +1,64 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <index/txospenderindex.h>\n+\n+#include <index/disktxpos.h>\n+#include <node/blockstorage.h>\n+#include <util/system.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};\n+\n+std::unique_ptr<TxoSpenderIndex> g_txospenderindex;\n+\n+/** Access to the txo spender index database (indexes/txospenderindex/) */\n+class TxoSpenderIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    bool WriteSpenderInfos(const std::vector<std::pair<COutPoint, uint256>>& items);\n+};\n+\n+TxoSpenderIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"txospenderindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+TxoSpenderIndex::TxoSpenderIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"txospenderindex\"), m_db(std::make_unique<TxoSpenderIndex::DB>(n_cache_size, f_memory, f_wipe))\n+{}\n+\n+TxoSpenderIndex::~TxoSpenderIndex() {}\n+\n+bool TxoSpenderIndex::DB::WriteSpenderInfos(const std::vector<std::pair<COutPoint, uint256>>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& tuple : items) {\n+        batch.Write(std::make_pair(DB_TXOSPENDERINDEX, tuple.first), tuple.second);\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+bool TxoSpenderIndex::CustomAppend(const interfaces::BlockInfo& block)\n+{\n+    std::vector<std::pair<COutPoint, uint256>> items;\n+    items.reserve(block.data->vtx.size());\n+\n+    for (const auto& tx : block.data->vtx) {",
      "path": "src/index/txospenderindex.cpp",
      "position": 100,
      "original_position": 49,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "16b5cb0b9d343de1080ec4761bd8f20d668059ee",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 16b5cb0b9d343de1080ec4761bd8f20d668059ee \"Add a \"tx output spender\" index\"\r\n\r\nThis should skip coinbase transactions.",
      "created_at": "2022-11-21T21:40:42Z",
      "updated_at": "2022-11-21T22:01:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1028539576",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1028539576"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 100,
      "original_line": 100,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1028541621",
      "pull_request_review_id": 1188968612,
      "id": 1028541621,
      "node_id": "PRRC_kwDOABII5849Tky1",
      "diff_hunk": "@@ -1520,6 +1534,16 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n         }\n     }\n \n+    if (args.GetBoolArg(\"-txospenderindex\", DEFAULT_TXOSPENDERINDEX)) {\n+        if (!args.GetBoolArg(\"-txindex\", DEFAULT_TXINDEX)) {\n+            return InitError(_(\"-txospenderindex requires -txindex.\"));",
      "path": "src/init.cpp",
      "position": 1,
      "original_position": 62,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "16b5cb0b9d343de1080ec4761bd8f20d668059ee",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 16b5cb0b9d343de1080ec4761bd8f20d668059ee \"Add a \"tx output spender\" index\"\r\n\r\nI don't think it's necessary to require that txindex when enabling txospenderindex. There isn't anything in the txospenderindex that inherently requires the txindex (i.e. it isn't storing information specific to the txindex). I get that it isn't as useful without the txindex enabled, but that isn't really a reason to restrict it.\r\n\r\nRemoving this restriction would also allow txospenderindex to be enabled with pruning.",
      "created_at": "2022-11-21T21:43:30Z",
      "updated_at": "2022-11-21T22:01:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1028541621",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1028541621"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1584,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1028542275",
      "pull_request_review_id": 1188968612,
      "id": 1028542275,
      "node_id": "PRRC_kwDOABII5849Tk9D",
      "diff_hunk": "@@ -0,0 +1,46 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INDEX_TXOSPENDERINDEX_H\n+#define BITCOIN_INDEX_TXOSPENDERINDEX_H\n+\n+#include <index/base.h>\n+\n+static constexpr bool DEFAULT_TXOSPENDERINDEX{false};\n+\n+/**\n+ * TxoSpenderIndex is used to look up which transaction spent a given output.\n+ * The index is written to a LevelDB database and, for each input of each transaction in a block,\n+ * records the outpoint that is spent and the hash of the spending transaction.\n+ */\n+class TxoSpenderIndex final : public BaseIndex\n+{\n+protected:\n+    class DB;\n+\n+private:\n+    const std::unique_ptr<DB> m_db;\n+\n+    bool AllowPrune() const override { return false; }",
      "path": "src/index/txospenderindex.h",
      "position": 1,
      "original_position": 25,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "16b5cb0b9d343de1080ec4761bd8f20d668059ee",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 16b5cb0b9d343de1080ec4761bd8f20d668059ee \"Add a \"tx output spender\" index\"\r\n\r\nI don't see a technical reason for why the txospenderindex should not work with pruning (other than the current requirement of -txindex). It doesn't store any information related to the block files.",
      "created_at": "2022-11-21T21:44:23Z",
      "updated_at": "2022-11-21T22:01:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1028542275",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1028542275"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1028544839",
      "pull_request_review_id": 1188968612,
      "id": 1028544839,
      "node_id": "PRRC_kwDOABII5849TllH",
      "diff_hunk": "@@ -0,0 +1,46 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INDEX_TXOSPENDERINDEX_H\n+#define BITCOIN_INDEX_TXOSPENDERINDEX_H\n+\n+#include <index/base.h>\n+\n+static constexpr bool DEFAULT_TXOSPENDERINDEX{false};\n+\n+/**\n+ * TxoSpenderIndex is used to look up which transaction spent a given output.\n+ * The index is written to a LevelDB database and, for each input of each transaction in a block,\n+ * records the outpoint that is spent and the hash of the spending transaction.\n+ */\n+class TxoSpenderIndex final : public BaseIndex\n+{\n+protected:\n+    class DB;\n+\n+private:\n+    const std::unique_ptr<DB> m_db;\n+\n+    bool AllowPrune() const override { return false; }\n+\n+protected:\n+    bool CustomAppend(const interfaces::BlockInfo& block) override;",
      "path": "src/index/txospenderindex.h",
      "position": 31,
      "original_position": 28,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "16b5cb0b9d343de1080ec4761bd8f20d668059ee",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 16b5cb0b9d343de1080ec4761bd8f20d668059ee \"Add a \"tx output spender\" index\"\r\n\r\nI think this will need to implement `CustomRewind` as well so that reorgs can be handled. Otherwise, as it is now, a reorg that removes a spend and does not replace it with a conflicting one will leave the original spend in the index. However it would be incorrect to say that that txo has been spent as in the main chain following the reorg, the txo was not spent.\r\n\r\nSo `CustomRewind` is needed in order to remove those records.\r\n\r\nA test for this condition would also be nice.",
      "created_at": "2022-11-21T21:48:01Z",
      "updated_at": "2022-11-21T22:01:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1028544839",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1028544839"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 31,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1028547783",
      "pull_request_review_id": 1188968612,
      "id": 1028547783,
      "node_id": "PRRC_kwDOABII5849TmTH",
      "diff_hunk": "@@ -0,0 +1,77 @@\n+// Copyright (c) 2017-2021 The Bitcoin Core developers",
      "path": "src/test/txospenderindex_tests.cpp",
      "position": 1,
      "original_position": 1,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "16b5cb0b9d343de1080ec4761bd8f20d668059ee",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 16b5cb0b9d343de1080ec4761bd8f20d668059ee \"Add a \"tx output spender\" index\"\r\n\r\nWrong date range here.",
      "created_at": "2022-11-21T21:52:11Z",
      "updated_at": "2022-11-21T22:01:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1028547783",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1028547783"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1028548977",
      "pull_request_review_id": 1188968612,
      "id": 1028548977,
      "node_id": "PRRC_kwDOABII5849Tmlx",
      "diff_hunk": "@@ -0,0 +1,77 @@\n+// Copyright (c) 2017-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <index/txospenderindex.h>\n+#include <script/standard.h>\n+#include <test/util/setup_common.h>\n+#include <util/time.h>\n+#include <validation.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_AUTO_TEST_SUITE(txospenderindex_tests)\n+\n+BOOST_FIXTURE_TEST_CASE(txospenderindex_initial_sync, TestChain100Setup)\n+{\n+    TxoSpenderIndex txospenderindex(interfaces::MakeChain(m_node), 1 << 20, true);\n+    // Mine blocks for coinbase maturity, so we can spend some coinbase outputs in the test.\n+     for (int i = 0; i < 50; i++) {\n+         std::vector<CMutableTransaction> no_txns;\n+         CreateAndProcessBlock(no_txns, this->m_coinbase_txns[i]->vout[0].scriptPubKey);\n+     }\n+    std::vector<COutPoint> spent(10);\n+    std::vector<CMutableTransaction> spender(spent.size());\n+\n+    for (size_t i = 0; i < spent.size(); i++) {\n+        spent[i] = COutPoint(this->m_coinbase_txns[i]->GetHash(), 0);\n+        spender[i].nVersion = 1;\n+        spender[i].vin.resize(1);\n+        spender[i].vin[0].prevout.hash = spent[i].hash;\n+        spender[i].vin[0].prevout.n = spent[i].n;\n+        spender[i].vout.resize(1);\n+        spender[i].vout[0].nValue = this->m_coinbase_txns[i]->GetValueOut();\n+        spender[i].vout[0].scriptPubKey = this->m_coinbase_txns[i]->vout[0].scriptPubKey;\n+\n+        // Sign:\n+        std::vector<unsigned char> vchSig;\n+        const uint256 hash = SignatureHash(this->m_coinbase_txns[i]->vout[0].scriptPubKey, spender[i], 0, SIGHASH_ALL, 0, SigVersion::BASE);\n+        coinbaseKey.Sign(hash, vchSig);\n+        vchSig.push_back((unsigned char)SIGHASH_ALL);\n+        spender[i].vin[0].scriptSig << vchSig;\n+    }\n+\n+    CreateAndProcessBlock(spender, this->m_coinbase_txns[0]->vout[0].scriptPubKey);\n+    uint256 txid;\n+\n+    // Transaction should not be found in the index before it is started.\n+    for (const auto& outpoint : spent) {\n+        BOOST_CHECK(!txospenderindex.FindSpender(outpoint, txid));\n+    }\n+\n+    // BlockUntilSyncedToCurrentChain should return false before txindex is started.",
      "path": "src/test/txospenderindex_tests.cpp",
      "position": 1,
      "original_position": 53,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "16b5cb0b9d343de1080ec4761bd8f20d668059ee",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 16b5cb0b9d343de1080ec4761bd8f20d668059ee \"Add a \"tx output spender\" index\"\r\n\r\ns/txindex/txospenderindex",
      "created_at": "2022-11-21T21:53:45Z",
      "updated_at": "2022-11-21T22:01:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1028548977",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1028548977"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1028552792",
      "pull_request_review_id": 1188968612,
      "id": 1028552792,
      "node_id": "PRRC_kwDOABII5849TnhY",
      "diff_hunk": "@@ -60,8 +65,13 @@ def create_tx(**kwargs):\n             assert_equal(txid in mempool, True)\n \n         self.log.info(\"Find transactions spending outputs\")\n+        # spending transactions are found in the mempool of node 0 but not 1 and 2\n         result = self.nodes[0].gettxspendingprevout([ {'txid' : confirmed_utxo['txid'], 'vout' : 0}, {'txid' : txidA, 'vout' : 1} ])\n         assert_equal(result, [ {'txid' : confirmed_utxo['txid'], 'vout' : 0, 'spendingtxid' : txidA}, {'txid' : txidA, 'vout' : 1, 'spendingtxid' : txidC} ])\n+        result = self.nodes[1].gettxspendingprevout([ {'txid' : confirmed_utxo['txid'], 'vout' : 0}, {'txid' : txidA, 'vout' : 1} ])\n+        assert_equal(result, [ {'txid' : confirmed_utxo['txid'], 'vout' : 0}, {'txid' : txidA, 'vout' : 1} ])\n+        result = self.nodes[2].gettxspendingprevout([ {'txid' : confirmed_utxo['txid'], 'vout' : 0}, {'txid' : txidA, 'vout' : 1} ])\n+        assert_equal(result, [ {'txid' : confirmed_utxo['txid'], 'vout' : 0, 'warnings': ['txospenderindex is unavailable.']}, {'txid' : txidA, 'vout' : 1, 'warnings': ['txospenderindex is unavailable.']} ])",
      "path": "test/functional/rpc_mempool_info.py",
      "position": 1,
      "original_position": 24,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "16b5cb0b9d343de1080ec4761bd8f20d668059ee",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 16b5cb0b9d343de1080ec4761bd8f20d668059ee \"Add a \"tx output spender\" index\"\r\n\r\nI don't see why the spends wouldn't be in nodes 1 and 2's mempools, other than that this is a race.",
      "created_at": "2022-11-21T21:59:11Z",
      "updated_at": "2022-11-21T22:01:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1028552792",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1028552792"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": 71,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1029540125",
      "pull_request_review_id": 1190363982,
      "id": 1029540125,
      "node_id": "PRRC_kwDOABII5849XYkd",
      "diff_hunk": "@@ -0,0 +1,64 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <index/txospenderindex.h>\n+\n+#include <index/disktxpos.h>\n+#include <node/blockstorage.h>\n+#include <util/system.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};\n+\n+std::unique_ptr<TxoSpenderIndex> g_txospenderindex;\n+\n+/** Access to the txo spender index database (indexes/txospenderindex/) */\n+class TxoSpenderIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    bool WriteSpenderInfos(const std::vector<std::pair<COutPoint, uint256>>& items);\n+};\n+\n+TxoSpenderIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"txospenderindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+TxoSpenderIndex::TxoSpenderIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"txospenderindex\"), m_db(std::make_unique<TxoSpenderIndex::DB>(n_cache_size, f_memory, f_wipe))\n+{}\n+\n+TxoSpenderIndex::~TxoSpenderIndex() {}\n+\n+bool TxoSpenderIndex::DB::WriteSpenderInfos(const std::vector<std::pair<COutPoint, uint256>>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& tuple : items) {\n+        batch.Write(std::make_pair(DB_TXOSPENDERINDEX, tuple.first), tuple.second);",
      "path": "src/index/txospenderindex.cpp",
      "position": 1,
      "original_position": 39,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "16b5cb0b9d343de1080ec4761bd8f20d668059ee",
      "in_reply_to_id": 994483806,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done in https://github.com/bitcoin/bitcoin/pull/24539/commits/965bc7ef2e8548fd9abe609a752cadf7c44b8c00",
      "created_at": "2022-11-22T16:09:46Z",
      "updated_at": "2022-11-22T16:09:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1029540125",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1029540125"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": 38,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 39,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1029540434",
      "pull_request_review_id": 1190364412,
      "id": 1029540434,
      "node_id": "PRRC_kwDOABII5849XYpS",
      "diff_hunk": "@@ -881,6 +890,8 @@ bool AppInitParameterInteraction(const ArgsManager& args, bool use_syscall_sandb\n     if (args.GetIntArg(\"-prune\", 0)) {\n         if (args.GetBoolArg(\"-txindex\", DEFAULT_TXINDEX))\n             return InitError(_(\"Prune mode is incompatible with -txindex.\"));\n+        if (args.GetBoolArg(\"-txospenderindex\", DEFAULT_TXOSPENDERINDEX))",
      "path": "src/init.cpp",
      "position": 1,
      "original_position": 41,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "16b5cb0b9d343de1080ec4761bd8f20d668059ee",
      "in_reply_to_id": 994569142,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done in https://github.com/bitcoin/bitcoin/pull/24539/commits/965bc7ef2e8548fd9abe609a752cadf7c44b8c00",
      "created_at": "2022-11-22T16:10:02Z",
      "updated_at": "2022-11-22T16:10:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1029540434",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1029540434"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 893,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1029540643",
      "pull_request_review_id": 1190364734,
      "id": 1029540643,
      "node_id": "PRRC_kwDOABII5849XYsj",
      "diff_hunk": "@@ -644,6 +672,30 @@ static RPCHelpMan gettxspendingprevout()\n                 const CTransaction* spendingTx = mempool.GetConflictTx(prevout);\n                 if (spendingTx != nullptr) {\n                     o.pushKV(\"spendingtxid\", spendingTx->GetHash().ToString());\n+                } else if (mempool_only.value_or(false)) {\n+                    // do nothing\n+                } else if (g_txospenderindex) {\n+                    // no spending tx in mempool, query txospender index\n+                    uint256 spendingtxid;\n+                    if(g_txospenderindex->FindSpender(prevout, spendingtxid)) {",
      "path": "src/rpc/mempool.cpp",
      "position": 1,
      "original_position": 72,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "16b5cb0b9d343de1080ec4761bd8f20d668059ee",
      "in_reply_to_id": 994570253,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done in https://github.com/bitcoin/bitcoin/pull/24539/commits/965bc7ef2e8548fd9abe609a752cadf7c44b8c00",
      "created_at": "2022-11-22T16:10:13Z",
      "updated_at": "2022-11-22T16:10:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1029540643",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1029540643"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 680,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1029540948",
      "pull_request_review_id": 1190365157,
      "id": 1029540948,
      "node_id": "PRRC_kwDOABII5849XYxU",
      "diff_hunk": "@@ -0,0 +1,64 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <index/txospenderindex.h>\n+\n+#include <index/disktxpos.h>\n+#include <node/blockstorage.h>\n+#include <util/system.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};\n+\n+std::unique_ptr<TxoSpenderIndex> g_txospenderindex;\n+\n+/** Access to the txo spender index database (indexes/txospenderindex/) */\n+class TxoSpenderIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    bool WriteSpenderInfos(const std::vector<std::pair<COutPoint, uint256>>& items);\n+};\n+\n+TxoSpenderIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"txospenderindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+TxoSpenderIndex::TxoSpenderIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"txospenderindex\"), m_db(std::make_unique<TxoSpenderIndex::DB>(n_cache_size, f_memory, f_wipe))\n+{}\n+\n+TxoSpenderIndex::~TxoSpenderIndex() {}\n+\n+bool TxoSpenderIndex::DB::WriteSpenderInfos(const std::vector<std::pair<COutPoint, uint256>>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& tuple : items) {\n+        batch.Write(std::make_pair(DB_TXOSPENDERINDEX, tuple.first), tuple.second);\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+bool TxoSpenderIndex::CustomAppend(const interfaces::BlockInfo& block)\n+{\n+    std::vector<std::pair<COutPoint, uint256>> items;\n+    items.reserve(block.data->vtx.size());\n+\n+    for (const auto& tx : block.data->vtx) {",
      "path": "src/index/txospenderindex.cpp",
      "position": 100,
      "original_position": 49,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "16b5cb0b9d343de1080ec4761bd8f20d668059ee",
      "in_reply_to_id": 1028539576,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done in https://github.com/bitcoin/bitcoin/pull/24539/commits/965bc7ef2e8548fd9abe609a752cadf7c44b8c00",
      "created_at": "2022-11-22T16:10:29Z",
      "updated_at": "2022-11-22T16:10:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1029540948",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1029540948"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 100,
      "original_line": 100,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1029541298",
      "pull_request_review_id": 1190365575,
      "id": 1029541298,
      "node_id": "PRRC_kwDOABII5849XY2y",
      "diff_hunk": "@@ -0,0 +1,77 @@\n+// Copyright (c) 2017-2021 The Bitcoin Core developers",
      "path": "src/test/txospenderindex_tests.cpp",
      "position": 1,
      "original_position": 1,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "16b5cb0b9d343de1080ec4761bd8f20d668059ee",
      "in_reply_to_id": 1028547783,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "fixed in https://github.com/bitcoin/bitcoin/pull/24539/commits/965bc7ef2e8548fd9abe609a752cadf7c44b8c00",
      "created_at": "2022-11-22T16:10:44Z",
      "updated_at": "2022-11-22T16:10:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1029541298",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1029541298"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1029541433",
      "pull_request_review_id": 1190365757,
      "id": 1029541433,
      "node_id": "PRRC_kwDOABII5849XY45",
      "diff_hunk": "@@ -0,0 +1,77 @@\n+// Copyright (c) 2017-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <index/txospenderindex.h>\n+#include <script/standard.h>\n+#include <test/util/setup_common.h>\n+#include <util/time.h>\n+#include <validation.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_AUTO_TEST_SUITE(txospenderindex_tests)\n+\n+BOOST_FIXTURE_TEST_CASE(txospenderindex_initial_sync, TestChain100Setup)\n+{\n+    TxoSpenderIndex txospenderindex(interfaces::MakeChain(m_node), 1 << 20, true);\n+    // Mine blocks for coinbase maturity, so we can spend some coinbase outputs in the test.\n+     for (int i = 0; i < 50; i++) {\n+         std::vector<CMutableTransaction> no_txns;\n+         CreateAndProcessBlock(no_txns, this->m_coinbase_txns[i]->vout[0].scriptPubKey);\n+     }\n+    std::vector<COutPoint> spent(10);\n+    std::vector<CMutableTransaction> spender(spent.size());\n+\n+    for (size_t i = 0; i < spent.size(); i++) {\n+        spent[i] = COutPoint(this->m_coinbase_txns[i]->GetHash(), 0);\n+        spender[i].nVersion = 1;\n+        spender[i].vin.resize(1);\n+        spender[i].vin[0].prevout.hash = spent[i].hash;\n+        spender[i].vin[0].prevout.n = spent[i].n;\n+        spender[i].vout.resize(1);\n+        spender[i].vout[0].nValue = this->m_coinbase_txns[i]->GetValueOut();\n+        spender[i].vout[0].scriptPubKey = this->m_coinbase_txns[i]->vout[0].scriptPubKey;\n+\n+        // Sign:\n+        std::vector<unsigned char> vchSig;\n+        const uint256 hash = SignatureHash(this->m_coinbase_txns[i]->vout[0].scriptPubKey, spender[i], 0, SIGHASH_ALL, 0, SigVersion::BASE);\n+        coinbaseKey.Sign(hash, vchSig);\n+        vchSig.push_back((unsigned char)SIGHASH_ALL);\n+        spender[i].vin[0].scriptSig << vchSig;\n+    }\n+\n+    CreateAndProcessBlock(spender, this->m_coinbase_txns[0]->vout[0].scriptPubKey);\n+    uint256 txid;\n+\n+    // Transaction should not be found in the index before it is started.\n+    for (const auto& outpoint : spent) {\n+        BOOST_CHECK(!txospenderindex.FindSpender(outpoint, txid));\n+    }\n+\n+    // BlockUntilSyncedToCurrentChain should return false before txindex is started.",
      "path": "src/test/txospenderindex_tests.cpp",
      "position": 1,
      "original_position": 53,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "16b5cb0b9d343de1080ec4761bd8f20d668059ee",
      "in_reply_to_id": 1028548977,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done  in https://github.com/bitcoin/bitcoin/pull/24539/commits/965bc7ef2e8548fd9abe609a752cadf7c44b8c00",
      "created_at": "2022-11-22T16:10:50Z",
      "updated_at": "2022-11-22T16:10:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1029541433",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1029541433"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1029542286",
      "pull_request_review_id": 1190367024,
      "id": 1029542286,
      "node_id": "PRRC_kwDOABII5849XZGO",
      "diff_hunk": "@@ -60,8 +65,13 @@ def create_tx(**kwargs):\n             assert_equal(txid in mempool, True)\n \n         self.log.info(\"Find transactions spending outputs\")\n+        # spending transactions are found in the mempool of node 0 but not 1 and 2\n         result = self.nodes[0].gettxspendingprevout([ {'txid' : confirmed_utxo['txid'], 'vout' : 0}, {'txid' : txidA, 'vout' : 1} ])\n         assert_equal(result, [ {'txid' : confirmed_utxo['txid'], 'vout' : 0, 'spendingtxid' : txidA}, {'txid' : txidA, 'vout' : 1, 'spendingtxid' : txidC} ])\n+        result = self.nodes[1].gettxspendingprevout([ {'txid' : confirmed_utxo['txid'], 'vout' : 0}, {'txid' : txidA, 'vout' : 1} ])\n+        assert_equal(result, [ {'txid' : confirmed_utxo['txid'], 'vout' : 0}, {'txid' : txidA, 'vout' : 1} ])\n+        result = self.nodes[2].gettxspendingprevout([ {'txid' : confirmed_utxo['txid'], 'vout' : 0}, {'txid' : txidA, 'vout' : 1} ])\n+        assert_equal(result, [ {'txid' : confirmed_utxo['txid'], 'vout' : 0, 'warnings': ['txospenderindex is unavailable.']}, {'txid' : txidA, 'vout' : 1, 'warnings': ['txospenderindex is unavailable.']} ])",
      "path": "test/functional/rpc_mempool_info.py",
      "position": 1,
      "original_position": 24,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "16b5cb0b9d343de1080ec4761bd8f20d668059ee",
      "in_reply_to_id": 1028552792,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "you're right, thanks! fixed in https://github.com/bitcoin/bitcoin/pull/24539/commits/965bc7ef2e8548fd9abe609a752cadf7c44b8c00",
      "created_at": "2022-11-22T16:11:34Z",
      "updated_at": "2022-11-22T16:11:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1029542286",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1029542286"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": 71,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1029549049",
      "pull_request_review_id": 1190376797,
      "id": 1029549049,
      "node_id": "PRRC_kwDOABII5849Xav5",
      "diff_hunk": "@@ -1520,6 +1534,16 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n         }\n     }\n \n+    if (args.GetBoolArg(\"-txospenderindex\", DEFAULT_TXOSPENDERINDEX)) {\n+        if (!args.GetBoolArg(\"-txindex\", DEFAULT_TXINDEX)) {\n+            return InitError(_(\"-txospenderindex requires -txindex.\"));",
      "path": "src/init.cpp",
      "position": 1,
      "original_position": 62,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "16b5cb0b9d343de1080ec4761bd8f20d668059ee",
      "in_reply_to_id": 1028541621,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I did not see a use case for `txospenderindex` without `txindex` as you would always want you fetch the spending tx but I guess people could want to know that a tx was confirmed and spent and nothing more.",
      "created_at": "2022-11-22T16:17:27Z",
      "updated_at": "2022-11-22T16:17:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1029549049",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1029549049"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1584,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1029553655",
      "pull_request_review_id": 1190383600,
      "id": 1029553655,
      "node_id": "PRRC_kwDOABII5849Xb33",
      "diff_hunk": "@@ -0,0 +1,46 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INDEX_TXOSPENDERINDEX_H\n+#define BITCOIN_INDEX_TXOSPENDERINDEX_H\n+\n+#include <index/base.h>\n+\n+static constexpr bool DEFAULT_TXOSPENDERINDEX{false};\n+\n+/**\n+ * TxoSpenderIndex is used to look up which transaction spent a given output.\n+ * The index is written to a LevelDB database and, for each input of each transaction in a block,\n+ * records the outpoint that is spent and the hash of the spending transaction.\n+ */\n+class TxoSpenderIndex final : public BaseIndex\n+{\n+protected:\n+    class DB;\n+\n+private:\n+    const std::unique_ptr<DB> m_db;\n+\n+    bool AllowPrune() const override { return false; }",
      "path": "src/index/txospenderindex.h",
      "position": 1,
      "original_position": 25,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "16b5cb0b9d343de1080ec4761bd8f20d668059ee",
      "in_reply_to_id": 1028542275,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I will experiment with not requiring txindex and pruning support and add a separate commit for that.  ",
      "created_at": "2022-11-22T16:21:31Z",
      "updated_at": "2022-11-22T16:21:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1029553655",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1029553655"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1030752512",
      "pull_request_review_id": 1192099078,
      "id": 1030752512,
      "node_id": "PRRC_kwDOABII5849cAkA",
      "diff_hunk": "@@ -0,0 +1,46 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INDEX_TXOSPENDERINDEX_H\n+#define BITCOIN_INDEX_TXOSPENDERINDEX_H\n+\n+#include <index/base.h>\n+\n+static constexpr bool DEFAULT_TXOSPENDERINDEX{false};\n+\n+/**\n+ * TxoSpenderIndex is used to look up which transaction spent a given output.\n+ * The index is written to a LevelDB database and, for each input of each transaction in a block,\n+ * records the outpoint that is spent and the hash of the spending transaction.\n+ */\n+class TxoSpenderIndex final : public BaseIndex\n+{\n+protected:\n+    class DB;\n+\n+private:\n+    const std::unique_ptr<DB> m_db;\n+\n+    bool AllowPrune() const override { return false; }\n+\n+protected:\n+    bool CustomAppend(const interfaces::BlockInfo& block) override;",
      "path": "src/index/txospenderindex.h",
      "position": 31,
      "original_position": 28,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "16b5cb0b9d343de1080ec4761bd8f20d668059ee",
      "in_reply_to_id": 1028544839,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done in https://github.com/bitcoin/bitcoin/pull/24539/commits/5957f992b7afe20dca250c398bb28ad0ae52f868\r\n\r\nI may have missed something, but it seems that if the chain tip is reorged out, `CustomRewind` won't be called until a new block is added to the chain. Until then, our txospenderindex (and I guess this might be true for other indexes) will return stale results. In our case, you'll be able to see that the spending tx has 0 confirmations and could be replaced, but it makes me wonder how usable this index is if you cannot tell if spending txs are confirmed or not. So yes technically `txospenderindex` does not require `txindex` but could it really be usable in practice without it ?",
      "created_at": "2022-11-23T18:09:37Z",
      "updated_at": "2022-11-23T18:09:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1030752512",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1030752512"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 31,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1038197461",
      "pull_request_review_id": 1202581582,
      "id": 1038197461,
      "node_id": "PRRC_kwDOABII58494aLV",
      "diff_hunk": "@@ -644,6 +672,30 @@ static RPCHelpMan gettxspendingprevout()\n                 const CTransaction* spendingTx = mempool.GetConflictTx(prevout);\n                 if (spendingTx != nullptr) {\n                     o.pushKV(\"spendingtxid\", spendingTx->GetHash().ToString());\n+                } else if (mempool_only.value_or(false)) {\n+                    // do nothing\n+                } else if (g_txospenderindex) {\n+                    // no spending tx in mempool, query txospender index\n+                    uint256 spendingtxid;\n+                    if(g_txospenderindex->FindSpender(prevout, spendingtxid)) {\n+                        o.pushKV(\"spendingtxid\", spendingtxid.GetHex());\n+                    } else if (!f_txospenderindex_ready) {\n+                        if (mempool_only.has_value()) {  // NOTE: value is false here\n+                            throw JSONRPCError(RPC_MISC_ERROR, strprintf(\"No spending tx for the outpoint %s:%d found, and txospenderindex is still being synced.\", prevout.hash.GetHex(), prevout.n));\n+                        } else {\n+                            UniValue warnings(UniValue::VARR);\n+                            warnings.push_back(\"txospenderindex is still being synced.\");\n+                            o.pushKV(\"warnings\", warnings);\n+                        }\n+                    }",
      "path": "src/rpc/mempool.cpp",
      "position": 1,
      "original_position": 82,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "16b5cb0b9d343de1080ec4761bd8f20d668059ee",
      "in_reply_to_id": 1028538250,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done  in https://github.com/bitcoin/bitcoin/pull/24539/commits/15e850c0a41c295683c90b42b5b8d97033e68be7",
      "created_at": "2022-12-02T14:28:05Z",
      "updated_at": "2022-12-02T14:28:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1038197461",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1038197461"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": 682,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 724,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1038198878",
      "pull_request_review_id": 1202583500,
      "id": 1038198878,
      "node_id": "PRRC_kwDOABII58494ahe",
      "diff_hunk": "@@ -1520,6 +1534,16 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n         }\n     }\n \n+    if (args.GetBoolArg(\"-txospenderindex\", DEFAULT_TXOSPENDERINDEX)) {\n+        if (!args.GetBoolArg(\"-txindex\", DEFAULT_TXINDEX)) {\n+            return InitError(_(\"-txospenderindex requires -txindex.\"));",
      "path": "src/init.cpp",
      "position": 1,
      "original_position": 62,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "16b5cb0b9d343de1080ec4761bd8f20d668059ee",
      "in_reply_to_id": 1028541621,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/24539/commits/2d6f407fb70e6afe004cfcdc563a6fab00f29e42 removes the requirement on `-txindex`",
      "created_at": "2022-12-02T14:29:24Z",
      "updated_at": "2022-12-02T14:29:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1038198878",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1038198878"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1584,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1038200079",
      "pull_request_review_id": 1202585275,
      "id": 1038200079,
      "node_id": "PRRC_kwDOABII58494a0P",
      "diff_hunk": "@@ -0,0 +1,46 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INDEX_TXOSPENDERINDEX_H\n+#define BITCOIN_INDEX_TXOSPENDERINDEX_H\n+\n+#include <index/base.h>\n+\n+static constexpr bool DEFAULT_TXOSPENDERINDEX{false};\n+\n+/**\n+ * TxoSpenderIndex is used to look up which transaction spent a given output.\n+ * The index is written to a LevelDB database and, for each input of each transaction in a block,\n+ * records the outpoint that is spent and the hash of the spending transaction.\n+ */\n+class TxoSpenderIndex final : public BaseIndex\n+{\n+protected:\n+    class DB;\n+\n+private:\n+    const std::unique_ptr<DB> m_db;\n+\n+    bool AllowPrune() const override { return false; }",
      "path": "src/index/txospenderindex.h",
      "position": 1,
      "original_position": 25,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "16b5cb0b9d343de1080ec4761bd8f20d668059ee",
      "in_reply_to_id": 1028542275,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/24539/commits/2d6f407fb70e6afe004cfcdc563a6fab00f29e42 makes this index compatible with pruning.",
      "created_at": "2022-12-02T14:30:35Z",
      "updated_at": "2022-12-02T14:30:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1038200079",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1038200079"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1039669931",
      "pull_request_review_id": 1204651133,
      "id": 1039669931,
      "node_id": "PRRC_kwDOABII5849-Bqr",
      "diff_hunk": "@@ -0,0 +1,77 @@\n+// Copyright (c) 2017-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <index/txospenderindex.h>\n+#include <script/standard.h>\n+#include <test/util/setup_common.h>\n+#include <util/time.h>\n+#include <validation.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_AUTO_TEST_SUITE(txospenderindex_tests)\n+\n+BOOST_FIXTURE_TEST_CASE(txospenderindex_initial_sync, TestChain100Setup)\n+{\n+    TxoSpenderIndex txospenderindex(interfaces::MakeChain(m_node), 1 << 20, true);\n+    // Mine blocks for coinbase maturity, so we can spend some coinbase outputs in the test.\n+     for (int i = 0; i < 50; i++) {\n+         std::vector<CMutableTransaction> no_txns;\n+         CreateAndProcessBlock(no_txns, this->m_coinbase_txns[i]->vout[0].scriptPubKey);\n+     }\n+    std::vector<COutPoint> spent(10);\n+    std::vector<CMutableTransaction> spender(spent.size());\n+\n+    for (size_t i = 0; i < spent.size(); i++) {\n+        spent[i] = COutPoint(this->m_coinbase_txns[i]->GetHash(), 0);\n+        spender[i].nVersion = 1;\n+        spender[i].vin.resize(1);\n+        spender[i].vin[0].prevout.hash = spent[i].hash;\n+        spender[i].vin[0].prevout.n = spent[i].n;\n+        spender[i].vout.resize(1);\n+        spender[i].vout[0].nValue = this->m_coinbase_txns[i]->GetValueOut();\n+        spender[i].vout[0].scriptPubKey = this->m_coinbase_txns[i]->vout[0].scriptPubKey;\n+\n+        // Sign:\n+        std::vector<unsigned char> vchSig;\n+        const uint256 hash = SignatureHash(this->m_coinbase_txns[i]->vout[0].scriptPubKey, spender[i], 0, SIGHASH_ALL, 0, SigVersion::BASE);\n+        coinbaseKey.Sign(hash, vchSig);\n+        vchSig.push_back((unsigned char)SIGHASH_ALL);\n+        spender[i].vin[0].scriptSig << vchSig;\n+    }\n+\n+    CreateAndProcessBlock(spender, this->m_coinbase_txns[0]->vout[0].scriptPubKey);\n+    uint256 txid;\n+\n+    // Transaction should not be found in the index before it is started.\n+    for (const auto& outpoint : spent) {\n+        BOOST_CHECK(!txospenderindex.FindSpender(outpoint, txid));\n+    }\n+\n+    // BlockUntilSyncedToCurrentChain should return false before txospenderindex is started.\n+    BOOST_CHECK(!txospenderindex.BlockUntilSyncedToCurrentChain());\n+\n+    BOOST_REQUIRE(txospenderindex.Start());\n+\n+\n+    // Allow tx index to catch up with the block index.\n+    constexpr int64_t timeout_ms = 10 * 1000;\n+    int64_t time_start = GetTimeMillis();\n+    while (!txospenderindex.BlockUntilSyncedToCurrentChain()) {\n+        BOOST_REQUIRE(time_start + timeout_ms > GetTimeMillis());\n+        UninterruptibleSleep(std::chrono::milliseconds{100});\n+    }\n+    for (size_t i = 0; i < spent.size(); i++) {\n+        BOOST_CHECK(txospenderindex.FindSpender(spent[i], txid) && txid == spender[i].GetHash());\n+    }\n+\n+    // shutdown sequence (c.f. Shutdown() in init.cpp)\n+    txospenderindex.Stop();\n+\n+    // Let scheduler events finish running to avoid accessing any memory related to txindex after it is destructed\n+    SyncWithValidationInterfaceQueue();",
      "path": "src/test/txospenderindex_tests.cpp",
      "position": 1,
      "original_position": 74,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "47e60750e7de54365dba3651b412716af552f85f",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit if you retouch: Looks like the order was changed in the other tests.\r\n\r\n\r\n```cpp\r\n    // It is not safe to stop and destroy the index until it finishes handling\r\n    // the last BlockConnected notification. The BlockUntilSyncedToCurrentChain()\r\n    // call above is sufficient to ensure this, but the\r\n    // SyncWithValidationInterfaceQueue() call below is also needed to ensure\r\n    // TSAN always sees the test thread waiting for the notification thread, and\r\n    // avoid potential false positive reports.\r\n    SyncWithValidationInterfaceQueue();\r\n\r\n    // Shutdown sequence (c.f. Shutdown() in init.cpp)\r\n    coin_stats_index.Stop();\r\n```\r\n\r\nSee 861cb3fadce88cfaee27088185a48f03fb9dafe7",
      "created_at": "2022-12-05T14:27:58Z",
      "updated_at": "2022-12-05T14:27:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1039669931",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1039669931"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1043428164",
      "pull_request_review_id": 1210191997,
      "id": 1043428164,
      "node_id": "PRRC_kwDOABII584-MXNE",
      "diff_hunk": "@@ -0,0 +1,77 @@\n+// Copyright (c) 2017-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <index/txospenderindex.h>\n+#include <script/standard.h>\n+#include <test/util/setup_common.h>\n+#include <util/time.h>\n+#include <validation.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_AUTO_TEST_SUITE(txospenderindex_tests)\n+\n+BOOST_FIXTURE_TEST_CASE(txospenderindex_initial_sync, TestChain100Setup)\n+{\n+    TxoSpenderIndex txospenderindex(interfaces::MakeChain(m_node), 1 << 20, true);\n+    // Mine blocks for coinbase maturity, so we can spend some coinbase outputs in the test.\n+     for (int i = 0; i < 50; i++) {\n+         std::vector<CMutableTransaction> no_txns;\n+         CreateAndProcessBlock(no_txns, this->m_coinbase_txns[i]->vout[0].scriptPubKey);\n+     }\n+    std::vector<COutPoint> spent(10);\n+    std::vector<CMutableTransaction> spender(spent.size());\n+\n+    for (size_t i = 0; i < spent.size(); i++) {\n+        spent[i] = COutPoint(this->m_coinbase_txns[i]->GetHash(), 0);\n+        spender[i].nVersion = 1;\n+        spender[i].vin.resize(1);\n+        spender[i].vin[0].prevout.hash = spent[i].hash;\n+        spender[i].vin[0].prevout.n = spent[i].n;\n+        spender[i].vout.resize(1);\n+        spender[i].vout[0].nValue = this->m_coinbase_txns[i]->GetValueOut();\n+        spender[i].vout[0].scriptPubKey = this->m_coinbase_txns[i]->vout[0].scriptPubKey;\n+\n+        // Sign:\n+        std::vector<unsigned char> vchSig;\n+        const uint256 hash = SignatureHash(this->m_coinbase_txns[i]->vout[0].scriptPubKey, spender[i], 0, SIGHASH_ALL, 0, SigVersion::BASE);\n+        coinbaseKey.Sign(hash, vchSig);\n+        vchSig.push_back((unsigned char)SIGHASH_ALL);\n+        spender[i].vin[0].scriptSig << vchSig;\n+    }\n+\n+    CreateAndProcessBlock(spender, this->m_coinbase_txns[0]->vout[0].scriptPubKey);\n+    uint256 txid;\n+\n+    // Transaction should not be found in the index before it is started.\n+    for (const auto& outpoint : spent) {\n+        BOOST_CHECK(!txospenderindex.FindSpender(outpoint, txid));\n+    }\n+\n+    // BlockUntilSyncedToCurrentChain should return false before txospenderindex is started.\n+    BOOST_CHECK(!txospenderindex.BlockUntilSyncedToCurrentChain());\n+\n+    BOOST_REQUIRE(txospenderindex.Start());\n+\n+\n+    // Allow tx index to catch up with the block index.\n+    constexpr int64_t timeout_ms = 10 * 1000;\n+    int64_t time_start = GetTimeMillis();\n+    while (!txospenderindex.BlockUntilSyncedToCurrentChain()) {\n+        BOOST_REQUIRE(time_start + timeout_ms > GetTimeMillis());\n+        UninterruptibleSleep(std::chrono::milliseconds{100});\n+    }\n+    for (size_t i = 0; i < spent.size(); i++) {\n+        BOOST_CHECK(txospenderindex.FindSpender(spent[i], txid) && txid == spender[i].GetHash());\n+    }\n+\n+    // shutdown sequence (c.f. Shutdown() in init.cpp)\n+    txospenderindex.Stop();\n+\n+    // Let scheduler events finish running to avoid accessing any memory related to txindex after it is destructed\n+    SyncWithValidationInterfaceQueue();",
      "path": "src/test/txospenderindex_tests.cpp",
      "position": 1,
      "original_position": 74,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "47e60750e7de54365dba3651b412716af552f85f",
      "in_reply_to_id": 1039669931,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done in https://github.com/bitcoin/bitcoin/pull/24539/commits/1ea70b814d641deb63746044795001d1bd3d709b",
      "created_at": "2022-12-08T14:38:49Z",
      "updated_at": "2022-12-08T14:38:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1043428164",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1043428164"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286722759",
      "pull_request_review_id": 1566674806,
      "id": 1286722759,
      "node_id": "PRRC_kwDOABII585MsdTH",
      "diff_hunk": "@@ -0,0 +1,109 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <common/args.h>\n+#include <index/txospenderindex.h>\n+#include <index/disktxpos.h>\n+#include <node/blockstorage.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};\n+\n+std::unique_ptr<TxoSpenderIndex> g_txospenderindex;\n+\n+/** Access to the txo spender index database (indexes/txospenderindex/) */\n+class TxoSpenderIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    bool WriteSpenderInfos(const std::vector<std::pair<COutPoint, uint256>>& items);\n+    bool EraseSpenderInfos(const std::vector<COutPoint>& items);\n+};\n+\n+TxoSpenderIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) : BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"txospenderindex\", n_cache_size, f_memory, f_wipe)\n+{\n+}\n+\n+TxoSpenderIndex::TxoSpenderIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"txospenderindex\"), m_db(std::make_unique<TxoSpenderIndex::DB>(n_cache_size, f_memory, f_wipe))\n+{\n+}\n+\n+TxoSpenderIndex::~TxoSpenderIndex() {}\n+\n+bool TxoSpenderIndex::DB::WriteSpenderInfos(const std::vector<std::pair<COutPoint, uint256>>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& [outpoint, hash] : items) {\n+        batch.Write(std::make_pair(DB_TXOSPENDERINDEX, outpoint), hash);\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+bool TxoSpenderIndex::DB::EraseSpenderInfos(const std::vector<COutPoint>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& outpoint : items) {\n+        batch.Erase(std::make_pair(DB_TXOSPENDERINDEX, outpoint));\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+bool TxoSpenderIndex::CustomAppend(const interfaces::BlockInfo& block)\n+{\n+    std::vector<std::pair<COutPoint, uint256>> items;\n+    items.reserve(block.data->vtx.size());\n+\n+    for (const auto& tx : block.data->vtx) {\n+        if (tx->IsCoinBase()) {\n+            continue;\n+        }\n+        for (const auto& input : tx->vin) {\n+            items.emplace_back(input.prevout, tx->GetHash());\n+        }\n+    }\n+    return m_db->WriteSpenderInfos(items);\n+}\n+\n+bool TxoSpenderIndex::CustomRewind(const interfaces::BlockKey& current_tip, const interfaces::BlockKey& new_tip)\n+{\n+    LOCK(cs_main);\n+    const CBlockIndex* iter_tip{m_chainstate->m_blockman.LookupBlockIndex(current_tip.hash)};\n+    const CBlockIndex* new_tip_index{m_chainstate->m_blockman.LookupBlockIndex(new_tip.hash)};\n+\n+    do {\n+        CBlock block;\n+        if (!m_chainstate->m_blockman.ReadBlockFromDisk(block, *iter_tip)) {\n+            return error(\"%s: Failed to read block %s from disk\",\n+                         __func__, iter_tip->GetBlockHash().ToString());",
      "path": "src/index/txospenderindex.cpp",
      "position": 1,
      "original_position": 81,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "8368a74f533db25ea6a02ad95221545c1f93f7be",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n            return error(\"Failed to read block %s from disk\",\r\n                         iter_tip->GetBlockHash().ToString());\r\n```\r\n\r\nnit: For new code there is no need to add `__func__`, because users can set `-logsourcelocations` if they want. Also, missing include `#include \"logging.h\" ` for `error()`, see CI failure?",
      "created_at": "2023-08-08T07:36:19Z",
      "updated_at": "2023-08-08T07:36:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1286722759",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286722759"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": 80,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 81,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288027509",
      "pull_request_review_id": 1568862443,
      "id": 1288027509,
      "node_id": "PRRC_kwDOABII585Mxb11",
      "diff_hunk": "@@ -0,0 +1,109 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <common/args.h>\n+#include <index/txospenderindex.h>\n+#include <index/disktxpos.h>\n+#include <node/blockstorage.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};\n+\n+std::unique_ptr<TxoSpenderIndex> g_txospenderindex;\n+\n+/** Access to the txo spender index database (indexes/txospenderindex/) */\n+class TxoSpenderIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    bool WriteSpenderInfos(const std::vector<std::pair<COutPoint, uint256>>& items);\n+    bool EraseSpenderInfos(const std::vector<COutPoint>& items);\n+};\n+\n+TxoSpenderIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) : BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"txospenderindex\", n_cache_size, f_memory, f_wipe)\n+{\n+}\n+\n+TxoSpenderIndex::TxoSpenderIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"txospenderindex\"), m_db(std::make_unique<TxoSpenderIndex::DB>(n_cache_size, f_memory, f_wipe))\n+{\n+}\n+\n+TxoSpenderIndex::~TxoSpenderIndex() {}\n+\n+bool TxoSpenderIndex::DB::WriteSpenderInfos(const std::vector<std::pair<COutPoint, uint256>>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& [outpoint, hash] : items) {\n+        batch.Write(std::make_pair(DB_TXOSPENDERINDEX, outpoint), hash);\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+bool TxoSpenderIndex::DB::EraseSpenderInfos(const std::vector<COutPoint>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& outpoint : items) {\n+        batch.Erase(std::make_pair(DB_TXOSPENDERINDEX, outpoint));\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+bool TxoSpenderIndex::CustomAppend(const interfaces::BlockInfo& block)\n+{\n+    std::vector<std::pair<COutPoint, uint256>> items;\n+    items.reserve(block.data->vtx.size());\n+\n+    for (const auto& tx : block.data->vtx) {\n+        if (tx->IsCoinBase()) {\n+            continue;\n+        }\n+        for (const auto& input : tx->vin) {\n+            items.emplace_back(input.prevout, tx->GetHash());\n+        }\n+    }\n+    return m_db->WriteSpenderInfos(items);\n+}\n+\n+bool TxoSpenderIndex::CustomRewind(const interfaces::BlockKey& current_tip, const interfaces::BlockKey& new_tip)\n+{\n+    LOCK(cs_main);\n+    const CBlockIndex* iter_tip{m_chainstate->m_blockman.LookupBlockIndex(current_tip.hash)};\n+    const CBlockIndex* new_tip_index{m_chainstate->m_blockman.LookupBlockIndex(new_tip.hash)};\n+\n+    do {\n+        CBlock block;\n+        if (!m_chainstate->m_blockman.ReadBlockFromDisk(block, *iter_tip)) {\n+            return error(\"%s: Failed to read block %s from disk\",\n+                         __func__, iter_tip->GetBlockHash().ToString());",
      "path": "src/index/txospenderindex.cpp",
      "position": 1,
      "original_position": 81,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "8368a74f533db25ea6a02ad95221545c1f93f7be",
      "in_reply_to_id": 1286722759,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks! rebased and fixed in https://github.com/bitcoin/bitcoin/pull/24539/commits/ff8b7d485e0b216a5ddf5e092ab5e2624f845fa4",
      "created_at": "2023-08-09T06:51:27Z",
      "updated_at": "2023-08-09T06:51:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1288027509",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1288027509"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": 80,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 81,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704599014",
      "pull_request_review_id": 2219808525,
      "id": 1704599014,
      "node_id": "PRRC_kwDOABII585lmh3m",
      "diff_hunk": "@@ -0,0 +1,110 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <common/args.h>\n+#include <index/disktxpos.h>\n+#include <index/txospenderindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};\n+\n+std::unique_ptr<TxoSpenderIndex> g_txospenderindex;\n+\n+/** Access to the txo spender index database (indexes/txospenderindex/) */\n+class TxoSpenderIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    bool WriteSpenderInfos(const std::vector<std::pair<COutPoint, uint256>>& items);\n+    bool EraseSpenderInfos(const std::vector<COutPoint>& items);\n+};\n+\n+TxoSpenderIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) : BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"txospenderindex\", n_cache_size, f_memory, f_wipe)\n+{\n+}\n+\n+TxoSpenderIndex::TxoSpenderIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"txospenderindex\"), m_db(std::make_unique<TxoSpenderIndex::DB>(n_cache_size, f_memory, f_wipe))",
      "path": "src/index/txospenderindex.cpp",
      "position": 1,
      "original_position": 32,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "40e44e96c38593210877f0b5d062e71a8dd292a5",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Inconsistent style, should probably have initializer list on own line in both cases.",
      "created_at": "2024-08-05T20:28:06Z",
      "updated_at": "2024-08-07T22:49:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1704599014",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704599014"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": 27,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 32,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706465407",
      "pull_request_review_id": 2219808525,
      "id": 1706465407,
      "node_id": "PRRC_kwDOABII585ltph_",
      "diff_hunk": "@@ -0,0 +1,110 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <common/args.h>\n+#include <index/disktxpos.h>\n+#include <index/txospenderindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};\n+\n+std::unique_ptr<TxoSpenderIndex> g_txospenderindex;\n+\n+/** Access to the txo spender index database (indexes/txospenderindex/) */\n+class TxoSpenderIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    bool WriteSpenderInfos(const std::vector<std::pair<COutPoint, uint256>>& items);\n+    bool EraseSpenderInfos(const std::vector<COutPoint>& items);\n+};\n+\n+TxoSpenderIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) : BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"txospenderindex\", n_cache_size, f_memory, f_wipe)\n+{\n+}\n+\n+TxoSpenderIndex::TxoSpenderIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"txospenderindex\"), m_db(std::make_unique<TxoSpenderIndex::DB>(n_cache_size, f_memory, f_wipe))\n+{\n+}\n+\n+TxoSpenderIndex::~TxoSpenderIndex() {}",
      "path": "src/index/txospenderindex.cpp",
      "position": 1,
      "original_position": 36,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "2f80cd2d5f0ef533a1ca20084c350f57f0d022ae",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Consider using `default` syntax to indicate that you only included this in the **.cpp** file so that `m_db` can be destructed:\r\n```suggestion\r\nTxoSpenderIndex::~TxoSpenderIndex() = default;\r\n```\r\n`TxIndex` already does this.\r\n\r\n(Inspired by https://github.com/bitcoin/bitcoin/pull/19988#discussion_r494257310).",
      "created_at": "2024-08-07T06:42:55Z",
      "updated_at": "2024-08-07T22:49:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1706465407",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706465407"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 36,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706479714",
      "pull_request_review_id": 2219808525,
      "id": 1706479714,
      "node_id": "PRRC_kwDOABII585lttBi",
      "diff_hunk": "@@ -0,0 +1,110 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <common/args.h>\n+#include <index/disktxpos.h>\n+#include <index/txospenderindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};\n+\n+std::unique_ptr<TxoSpenderIndex> g_txospenderindex;\n+\n+/** Access to the txo spender index database (indexes/txospenderindex/) */\n+class TxoSpenderIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    bool WriteSpenderInfos(const std::vector<std::pair<COutPoint, uint256>>& items);\n+    bool EraseSpenderInfos(const std::vector<COutPoint>& items);\n+};\n+\n+TxoSpenderIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) : BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"txospenderindex\", n_cache_size, f_memory, f_wipe)\n+{\n+}\n+\n+TxoSpenderIndex::TxoSpenderIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"txospenderindex\"), m_db(std::make_unique<TxoSpenderIndex::DB>(n_cache_size, f_memory, f_wipe))\n+{\n+}\n+\n+TxoSpenderIndex::~TxoSpenderIndex() {}\n+\n+bool TxoSpenderIndex::DB::WriteSpenderInfos(const std::vector<std::pair<COutPoint, uint256>>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& [outpoint, hash] : items) {\n+        batch.Write(std::make_pair(DB_TXOSPENDERINDEX, outpoint), hash);\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+bool TxoSpenderIndex::DB::EraseSpenderInfos(const std::vector<COutPoint>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& outpoint : items) {\n+        batch.Erase(std::make_pair(DB_TXOSPENDERINDEX, outpoint));\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+bool TxoSpenderIndex::CustomAppend(const interfaces::BlockInfo& block)\n+{\n+    std::vector<std::pair<COutPoint, uint256>> items;\n+    items.reserve(block.data->vtx.size());\n+\n+    for (const auto& tx : block.data->vtx) {\n+        if (tx->IsCoinBase()) {\n+            continue;\n+        }\n+        for (const auto& input : tx->vin) {\n+            items.emplace_back(input.prevout, tx->GetHash());\n+        }\n+    }\n+    return m_db->WriteSpenderInfos(items);\n+}\n+\n+bool TxoSpenderIndex::CustomRewind(const interfaces::BlockKey& current_tip, const interfaces::BlockKey& new_tip)\n+{\n+    LOCK(cs_main);\n+    const CBlockIndex* iter_tip{m_chainstate->m_blockman.LookupBlockIndex(current_tip.hash)};\n+    const CBlockIndex* new_tip_index{m_chainstate->m_blockman.LookupBlockIndex(new_tip.hash)};\n+\n+    do {\n+        CBlock block;\n+        if (!m_chainstate->m_blockman.ReadBlockFromDisk(block, *iter_tip)) {\n+            LogError(\"Failed to read block %s from disk\\n\", iter_tip->GetBlockHash().ToString());\n+            return false;\n+        }\n+        std::vector<COutPoint> items;\n+        for (const auto& tx : block.vtx) {\n+            if (tx->IsCoinBase()) {\n+                continue;\n+            }\n+            for (const auto& input : tx->vin) {\n+                items.emplace_back(input.prevout);\n+            }\n+        }\n+        if (!m_db->EraseSpenderInfos(items)) {\n+            LogError(\"Failed to erase indexed data for disconnected block %s from disk\\n\", iter_tip->GetBlockHash().ToString());\n+            return false;\n+        }\n+\n+        iter_tip = iter_tip->GetAncestor(iter_tip->nHeight - 1);\n+    } while (new_tip_index != iter_tip);\n+\n+    return true;\n+}\n+\n+bool TxoSpenderIndex::FindSpender(const COutPoint& txo, uint256& tx_hash) const\n+{\n+    return m_db->Read(std::make_pair(DB_TXOSPENDERINDEX, txo), tx_hash);\n+}",
      "path": "src/index/txospenderindex.cpp",
      "position": 1,
      "original_position": 107,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "40e44e96c38593210877f0b5d062e71a8dd292a5",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Suggestion: use `optional` to promote error checking or `[[nodiscard]] bool` and document non-const \"out\"-references by variable naming or comment.\r\n\r\n```suggestion\r\nstd::optional<Txid> TxoSpenderIndex::FindSpender(const COutPoint& txo) const\r\n{\r\n    uint256 tx_hash_out;\r\n    if (m_db->Read(std::pair{DB_TXOSPENDERINDEX, txo}, tx_hash_out))\r\n        return Txid::FromUint256(tx_hash_out);\r\n    return std::nullopt;\r\n}\r\n```",
      "created_at": "2024-08-07T06:56:05Z",
      "updated_at": "2024-08-07T22:49:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1706479714",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706479714"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": 104,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 157,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706495582",
      "pull_request_review_id": 2219808525,
      "id": 1706495582,
      "node_id": "PRRC_kwDOABII585ltw5e",
      "diff_hunk": "@@ -0,0 +1,110 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <common/args.h>\n+#include <index/disktxpos.h>",
      "path": "src/index/txospenderindex.cpp",
      "position": 1,
      "original_position": 7,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "40e44e96c38593210877f0b5d062e71a8dd292a5",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "No longer used?\r\n```suggestion\r\n#include <common/args.h>\r\n```",
      "created_at": "2024-08-07T07:10:09Z",
      "updated_at": "2024-08-07T22:49:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1706495582",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706495582"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": 5,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 7,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706507458",
      "pull_request_review_id": 2219808525,
      "id": 1706507458,
      "node_id": "PRRC_kwDOABII585ltzzC",
      "diff_hunk": "@@ -0,0 +1,110 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <common/args.h>\n+#include <index/disktxpos.h>\n+#include <index/txospenderindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};\n+\n+std::unique_ptr<TxoSpenderIndex> g_txospenderindex;\n+\n+/** Access to the txo spender index database (indexes/txospenderindex/) */\n+class TxoSpenderIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    bool WriteSpenderInfos(const std::vector<std::pair<COutPoint, uint256>>& items);\n+    bool EraseSpenderInfos(const std::vector<COutPoint>& items);\n+};\n+\n+TxoSpenderIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) : BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"txospenderindex\", n_cache_size, f_memory, f_wipe)\n+{\n+}\n+\n+TxoSpenderIndex::TxoSpenderIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"txospenderindex\"), m_db(std::make_unique<TxoSpenderIndex::DB>(n_cache_size, f_memory, f_wipe))\n+{\n+}\n+\n+TxoSpenderIndex::~TxoSpenderIndex() {}\n+\n+bool TxoSpenderIndex::DB::WriteSpenderInfos(const std::vector<std::pair<COutPoint, uint256>>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& [outpoint, hash] : items) {\n+        batch.Write(std::make_pair(DB_TXOSPENDERINDEX, outpoint), hash);",
      "path": "src/index/txospenderindex.cpp",
      "position": 1,
      "original_position": 42,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "40e44e96c38593210877f0b5d062e71a8dd292a5",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Could use `pair{}` for brevity here and elsewhere (https://stackoverflow.com/a/41521422).\r\n```suggestion\r\n        batch.Write(std::pair{DB_TXOSPENDERINDEX, outpoint}, hash);\r\n```",
      "created_at": "2024-08-07T07:19:47Z",
      "updated_at": "2024-08-07T22:49:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1706507458",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706507458"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706511696",
      "pull_request_review_id": 2219808525,
      "id": 1706511696,
      "node_id": "PRRC_kwDOABII585lt01Q",
      "diff_hunk": "@@ -0,0 +1,48 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INDEX_TXOSPENDERINDEX_H\n+#define BITCOIN_INDEX_TXOSPENDERINDEX_H\n+\n+#include <index/base.h>\n+\n+static constexpr bool DEFAULT_TXOSPENDERINDEX{false};\n+\n+/**\n+ * TxoSpenderIndex is used to look up which transaction spent a given output.\n+ * The index is written to a LevelDB database and, for each input of each transaction in a block,\n+ * records the outpoint that is spent and the hash of the spending transaction.\n+ */\n+class TxoSpenderIndex final : public BaseIndex\n+{\n+protected:\n+    class DB;\n+\n+private:\n+    const std::unique_ptr<DB> m_db;\n+\n+    bool AllowPrune() const override { return true; }\n+\n+protected:\n+    bool CustomAppend(const interfaces::BlockInfo& block) override;\n+\n+    bool CustomRewind(const interfaces::BlockKey& current_tip, const interfaces::BlockKey& new_tip) override;\n+\n+    BaseIndex::DB& GetDB() const override;\n+\n+public:\n+    /// Constructs the index, which becomes available to be queried.",
      "path": "src/index/txospenderindex.h",
      "position": 1,
      "original_position": 35,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "40e44e96c38593210877f0b5d062e71a8dd292a5",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Superfluous comment copied from **txindex.h**.\r\n```suggestion\r\n```",
      "created_at": "2024-08-07T07:22:52Z",
      "updated_at": "2024-08-07T22:49:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1706511696",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706511696"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706514167",
      "pull_request_review_id": 2219808525,
      "id": 1706514167,
      "node_id": "PRRC_kwDOABII585lt1b3",
      "diff_hunk": "@@ -0,0 +1,48 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INDEX_TXOSPENDERINDEX_H\n+#define BITCOIN_INDEX_TXOSPENDERINDEX_H\n+\n+#include <index/base.h>\n+\n+static constexpr bool DEFAULT_TXOSPENDERINDEX{false};\n+\n+/**\n+ * TxoSpenderIndex is used to look up which transaction spent a given output.\n+ * The index is written to a LevelDB database and, for each input of each transaction in a block,\n+ * records the outpoint that is spent and the hash of the spending transaction.\n+ */\n+class TxoSpenderIndex final : public BaseIndex\n+{\n+protected:\n+    class DB;\n+\n+private:\n+    const std::unique_ptr<DB> m_db;\n+\n+    bool AllowPrune() const override { return true; }\n+\n+protected:\n+    bool CustomAppend(const interfaces::BlockInfo& block) override;\n+\n+    bool CustomRewind(const interfaces::BlockKey& current_tip, const interfaces::BlockKey& new_tip) override;\n+\n+    BaseIndex::DB& GetDB() const override;\n+\n+public:\n+    /// Constructs the index, which becomes available to be queried.\n+    explicit TxoSpenderIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    // Destructor is declared because this class contains a unique_ptr to an incomplete type.",
      "path": "src/index/txospenderindex.h",
      "position": 1,
      "original_position": 38,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "40e44e96c38593210877f0b5d062e71a8dd292a5",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Explain why, not what:\r\n```suggestion\r\n    // Destroys unique_ptr to an incomplete type.\r\n```",
      "created_at": "2024-08-07T07:24:38Z",
      "updated_at": "2024-08-07T22:49:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1706514167",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706514167"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706531361",
      "pull_request_review_id": 2219808525,
      "id": 1706531361,
      "node_id": "PRRC_kwDOABII585lt5oh",
      "diff_hunk": "@@ -0,0 +1,48 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INDEX_TXOSPENDERINDEX_H\n+#define BITCOIN_INDEX_TXOSPENDERINDEX_H\n+\n+#include <index/base.h>\n+\n+static constexpr bool DEFAULT_TXOSPENDERINDEX{false};\n+\n+/**\n+ * TxoSpenderIndex is used to look up which transaction spent a given output.\n+ * The index is written to a LevelDB database and, for each input of each transaction in a block,\n+ * records the outpoint that is spent and the hash of the spending transaction.\n+ */\n+class TxoSpenderIndex final : public BaseIndex\n+{\n+protected:\n+    class DB;\n+\n+private:\n+    const std::unique_ptr<DB> m_db;\n+\n+    bool AllowPrune() const override { return true; }\n+\n+protected:\n+    bool CustomAppend(const interfaces::BlockInfo& block) override;\n+\n+    bool CustomRewind(const interfaces::BlockKey& current_tip, const interfaces::BlockKey& new_tip) override;\n+\n+    BaseIndex::DB& GetDB() const override;\n+\n+public:\n+    /// Constructs the index, which becomes available to be queried.\n+    explicit TxoSpenderIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    // Destructor is declared because this class contains a unique_ptr to an incomplete type.\n+    virtual ~TxoSpenderIndex() override;\n+\n+    bool FindSpender(const COutPoint& txo, uint256& tx_hash) const;\n+};\n+\n+/// The global txo spender index. May be null.\n+extern std::unique_ptr<TxoSpenderIndex> g_txospenderindex;",
      "path": "src/index/txospenderindex.h",
      "position": 47,
      "original_position": 45,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "40e44e96c38593210877f0b5d062e71a8dd292a5",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: I realize this is copied from **txindex.h**, but could be made less redundant:\r\n```suggestion\r\n/// May be null.\r\nextern std::unique_ptr<TxoSpenderIndex> g_txospenderindex;\r\n```",
      "created_at": "2024-08-07T07:37:39Z",
      "updated_at": "2024-08-07T22:49:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1706531361",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706531361"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": 46,
      "original_start_line": 44,
      "start_side": "RIGHT",
      "line": 47,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706536603",
      "pull_request_review_id": 2219808525,
      "id": 1706536603,
      "node_id": "PRRC_kwDOABII585lt66b",
      "diff_hunk": "@@ -654,6 +682,36 @@ static RPCHelpMan gettxspendingprevout()\n                 const CTransaction* spendingTx = mempool.GetConflictTx(prevout);\n                 if (spendingTx != nullptr) {\n                     o.pushKV(\"spendingtxid\", spendingTx->GetHash().ToString());\n+                } else if (mempool_only.value_or(false)) {\n+                    // do nothing",
      "path": "src/rpc/mempool.cpp",
      "position": 1,
      "original_position": 68,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "40e44e96c38593210877f0b5d062e71a8dd292a5",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Suggestion: Clarify the conditional branches and state of `mempool_only` later in the code:\r\n```suggestion\r\n                    // do nothing if only mempool querying is allowed\r\n```",
      "created_at": "2024-08-07T07:41:43Z",
      "updated_at": "2024-08-07T22:49:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1706536603",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706536603"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 686,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706544932",
      "pull_request_review_id": 2219808525,
      "id": 1706544932,
      "node_id": "PRRC_kwDOABII585lt88k",
      "diff_hunk": "@@ -654,6 +682,36 @@ static RPCHelpMan gettxspendingprevout()\n                 const CTransaction* spendingTx = mempool.GetConflictTx(prevout);\n                 if (spendingTx != nullptr) {\n                     o.pushKV(\"spendingtxid\", spendingTx->GetHash().ToString());\n+                } else if (mempool_only.value_or(false)) {\n+                    // do nothing\n+                } else if (g_txospenderindex) {\n+                    // no spending tx in mempool, query txospender index\n+                    uint256 spendingtxid;\n+                    if (g_txospenderindex->FindSpender(prevout, spendingtxid)) {\n+                        o.pushKV(\"spendingtxid\", spendingtxid.GetHex());\n+                        if (!f_txospenderindex_ready) {\n+                            // warn if index is not ready as the spending tx that we found may be stale (it may be reorged out)\n+                            UniValue warnings(UniValue::VARR);\n+                            warnings.push_back(\"txospenderindex is still being synced.\");\n+                            o.pushKV(\"warnings\", warnings);\n+                        }\n+                    } else if (!f_txospenderindex_ready) {\n+                        if (mempool_only.has_value()) {  // NOTE: value is false here",
      "path": "src/rpc/mempool.cpp",
      "position": 1,
      "original_position": 81,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "40e44e96c38593210877f0b5d062e71a8dd292a5",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Clarification here and a few lines below:\r\n```suggestion\r\n                        if (mempool_only.has_value()) {  // NOTE: caller explicitly set value to false\r\n```",
      "created_at": "2024-08-07T07:48:06Z",
      "updated_at": "2024-08-07T22:49:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1706544932",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706544932"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 699,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706576719",
      "pull_request_review_id": 2219808525,
      "id": 1706576719,
      "node_id": "PRRC_kwDOABII585luEtP",
      "diff_hunk": "@@ -597,6 +598,11 @@ static RPCHelpMan gettxspendingprevout()\n                     },\n                 },\n             },\n+            {\"options\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                {\n+                    {\"mempool_only\", RPCArg::Type::BOOL, RPCArg::DefaultHint{\"true if txospenderindex unavailable, otherwise false\"}, \"If true, txospenderindex will not be used even if mempool lacks a relevant spend. If false and txospenderindex is unavailable, throws an exception if any outpoint lacks a mempool spend.\"},",
      "path": "src/rpc/mempool.cpp",
      "position": 1,
      "original_position": 14,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "40e44e96c38593210877f0b5d062e71a8dd292a5",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Description could be simplified:\r\n```suggestion\r\n                    {\"mempool_only\", RPCArg::Type::BOOL, RPCArg::DefaultHint{\"true if txospenderindex unavailable, otherwise false\"}, \"If false and mempool lacks relevant spend, txospenderindex will be used (throws exception if unavailable).\"},\r\n```",
      "created_at": "2024-08-07T08:11:16Z",
      "updated_at": "2024-08-07T22:49:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1706576719",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706576719"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 603,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706582935",
      "pull_request_review_id": 2219808525,
      "id": 1706582935,
      "node_id": "PRRC_kwDOABII585luGOX",
      "diff_hunk": "@@ -641,6 +664,11 @@ static RPCHelpMan gettxspendingprevout()\n                 prevouts.emplace_back(txid, nOutput);\n             }\n \n+            bool f_txospenderindex_ready{false};\n+            if (g_txospenderindex && !mempool_only.value_or(false)) {\n+                f_txospenderindex_ready = g_txospenderindex->BlockUntilSyncedToCurrentChain();\n+            }",
      "path": "src/rpc/mempool.cpp",
      "position": 1,
      "original_position": 58,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "40e44e96c38593210877f0b5d062e71a8dd292a5",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Could make `const`:\r\n```suggestion\r\n            const bool f_txospenderindex_ready = !mempool_only.value_or(false) &&\r\n                g_txospenderindex && g_txospenderindex->BlockUntilSyncedToCurrentChain();\r\n```",
      "created_at": "2024-08-07T08:15:30Z",
      "updated_at": "2024-08-07T22:49:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1706582935",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706582935"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": 667,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 670,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706624715",
      "pull_request_review_id": 2219808525,
      "id": 1706624715,
      "node_id": "PRRC_kwDOABII585luQbL",
      "diff_hunk": "@@ -0,0 +1,110 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <common/args.h>\n+#include <index/disktxpos.h>\n+#include <index/txospenderindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};\n+\n+std::unique_ptr<TxoSpenderIndex> g_txospenderindex;\n+\n+/** Access to the txo spender index database (indexes/txospenderindex/) */\n+class TxoSpenderIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    bool WriteSpenderInfos(const std::vector<std::pair<COutPoint, uint256>>& items);\n+    bool EraseSpenderInfos(const std::vector<COutPoint>& items);\n+};\n+\n+TxoSpenderIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) : BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"txospenderindex\", n_cache_size, f_memory, f_wipe)\n+{\n+}\n+\n+TxoSpenderIndex::TxoSpenderIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"txospenderindex\"), m_db(std::make_unique<TxoSpenderIndex::DB>(n_cache_size, f_memory, f_wipe))\n+{\n+}\n+\n+TxoSpenderIndex::~TxoSpenderIndex() {}\n+\n+bool TxoSpenderIndex::DB::WriteSpenderInfos(const std::vector<std::pair<COutPoint, uint256>>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& [outpoint, hash] : items) {\n+        batch.Write(std::make_pair(DB_TXOSPENDERINDEX, outpoint), hash);\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+bool TxoSpenderIndex::DB::EraseSpenderInfos(const std::vector<COutPoint>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& outpoint : items) {\n+        batch.Erase(std::make_pair(DB_TXOSPENDERINDEX, outpoint));\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+bool TxoSpenderIndex::CustomAppend(const interfaces::BlockInfo& block)\n+{\n+    std::vector<std::pair<COutPoint, uint256>> items;\n+    items.reserve(block.data->vtx.size());\n+\n+    for (const auto& tx : block.data->vtx) {\n+        if (tx->IsCoinBase()) {\n+            continue;\n+        }\n+        for (const auto& input : tx->vin) {\n+            items.emplace_back(input.prevout, tx->GetHash());\n+        }\n+    }\n+    return m_db->WriteSpenderInfos(items);\n+}\n+\n+bool TxoSpenderIndex::CustomRewind(const interfaces::BlockKey& current_tip, const interfaces::BlockKey& new_tip)\n+{\n+    LOCK(cs_main);\n+    const CBlockIndex* iter_tip{m_chainstate->m_blockman.LookupBlockIndex(current_tip.hash)};\n+    const CBlockIndex* new_tip_index{m_chainstate->m_blockman.LookupBlockIndex(new_tip.hash)};\n+\n+    do {\n+        CBlock block;\n+        if (!m_chainstate->m_blockman.ReadBlockFromDisk(block, *iter_tip)) {\n+            LogError(\"Failed to read block %s from disk\\n\", iter_tip->GetBlockHash().ToString());\n+            return false;\n+        }\n+        std::vector<COutPoint> items;",
      "path": "src/index/txospenderindex.cpp",
      "position": 1,
      "original_position": 84,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "40e44e96c38593210877f0b5d062e71a8dd292a5",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Similarly to `CustomAppend`:\r\n```suggestion\r\n        std::vector<COutPoint> items;\r\n        items.reserve(block.vtx.size());\r\n```",
      "created_at": "2024-08-07T08:44:32Z",
      "updated_at": "2024-08-07T22:49:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1706624715",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706624715"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 127,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706997273",
      "pull_request_review_id": 2219808525,
      "id": 1706997273,
      "node_id": "PRRC_kwDOABII585lvrYZ",
      "diff_hunk": "@@ -0,0 +1,110 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <common/args.h>\n+#include <index/disktxpos.h>\n+#include <index/txospenderindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};\n+\n+std::unique_ptr<TxoSpenderIndex> g_txospenderindex;\n+\n+/** Access to the txo spender index database (indexes/txospenderindex/) */\n+class TxoSpenderIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    bool WriteSpenderInfos(const std::vector<std::pair<COutPoint, uint256>>& items);\n+    bool EraseSpenderInfos(const std::vector<COutPoint>& items);\n+};\n+\n+TxoSpenderIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) : BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"txospenderindex\", n_cache_size, f_memory, f_wipe)\n+{\n+}\n+\n+TxoSpenderIndex::TxoSpenderIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"txospenderindex\"), m_db(std::make_unique<TxoSpenderIndex::DB>(n_cache_size, f_memory, f_wipe))\n+{\n+}\n+\n+TxoSpenderIndex::~TxoSpenderIndex() {}\n+\n+bool TxoSpenderIndex::DB::WriteSpenderInfos(const std::vector<std::pair<COutPoint, uint256>>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& [outpoint, hash] : items) {\n+        batch.Write(std::make_pair(DB_TXOSPENDERINDEX, outpoint), hash);\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+bool TxoSpenderIndex::DB::EraseSpenderInfos(const std::vector<COutPoint>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& outpoint : items) {\n+        batch.Erase(std::make_pair(DB_TXOSPENDERINDEX, outpoint));\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+bool TxoSpenderIndex::CustomAppend(const interfaces::BlockInfo& block)\n+{\n+    std::vector<std::pair<COutPoint, uint256>> items;\n+    items.reserve(block.data->vtx.size());\n+\n+    for (const auto& tx : block.data->vtx) {\n+        if (tx->IsCoinBase()) {\n+            continue;\n+        }\n+        for (const auto& input : tx->vin) {\n+            items.emplace_back(input.prevout, tx->GetHash());\n+        }\n+    }\n+    return m_db->WriteSpenderInfos(items);\n+}\n+\n+bool TxoSpenderIndex::CustomRewind(const interfaces::BlockKey& current_tip, const interfaces::BlockKey& new_tip)\n+{\n+    LOCK(cs_main);\n+    const CBlockIndex* iter_tip{m_chainstate->m_blockman.LookupBlockIndex(current_tip.hash)};\n+    const CBlockIndex* new_tip_index{m_chainstate->m_blockman.LookupBlockIndex(new_tip.hash)};\n+\n+    do {\n+        CBlock block;\n+        if (!m_chainstate->m_blockman.ReadBlockFromDisk(block, *iter_tip)) {\n+            LogError(\"Failed to read block %s from disk\\n\", iter_tip->GetBlockHash().ToString());\n+            return false;\n+        }\n+        std::vector<COutPoint> items;\n+        for (const auto& tx : block.vtx) {\n+            if (tx->IsCoinBase()) {\n+                continue;\n+            }\n+            for (const auto& input : tx->vin) {\n+                items.emplace_back(input.prevout);\n+            }\n+        }\n+        if (!m_db->EraseSpenderInfos(items)) {\n+            LogError(\"Failed to erase indexed data for disconnected block %s from disk\\n\", iter_tip->GetBlockHash().ToString());\n+            return false;\n+        }\n+\n+        iter_tip = iter_tip->GetAncestor(iter_tip->nHeight - 1);\n+    } while (new_tip_index != iter_tip);\n+\n+    return true;\n+}\n+\n+bool TxoSpenderIndex::FindSpender(const COutPoint& txo, uint256& tx_hash) const\n+{\n+    return m_db->Read(std::make_pair(DB_TXOSPENDERINDEX, txo), tx_hash);\n+}\n+\n+\n+BaseIndex::DB& TxoSpenderIndex::GetDB() const { return *m_db; }",
      "path": "src/index/txospenderindex.cpp",
      "position": 1,
      "original_position": 110,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "40e44e96c38593210877f0b5d062e71a8dd292a5",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "(nit: Double newline is inconsistent with the rest of the file)",
      "created_at": "2024-08-07T13:25:35Z",
      "updated_at": "2024-08-07T22:49:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1706997273",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706997273"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": 107,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 159,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707040077",
      "pull_request_review_id": 2219808525,
      "id": 1707040077,
      "node_id": "PRRC_kwDOABII585lv11N",
      "diff_hunk": "@@ -654,6 +682,36 @@ static RPCHelpMan gettxspendingprevout()\n                 const CTransaction* spendingTx = mempool.GetConflictTx(prevout);\n                 if (spendingTx != nullptr) {\n                     o.pushKV(\"spendingtxid\", spendingTx->GetHash().ToString());\n+                } else if (mempool_only.value_or(false)) {\n+                    // do nothing\n+                } else if (g_txospenderindex) {\n+                    // no spending tx in mempool, query txospender index\n+                    uint256 spendingtxid;\n+                    if (g_txospenderindex->FindSpender(prevout, spendingtxid)) {\n+                        o.pushKV(\"spendingtxid\", spendingtxid.GetHex());",
      "path": "src/rpc/mempool.cpp",
      "position": 1,
      "original_position": 73,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "40e44e96c38593210877f0b5d062e71a8dd292a5",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "If other `FindSpender` suggestion is taken:\r\n```suggestion\r\n                   if (auto spending_txid{g_txospenderindex->FindSpender(prevout)}) {\r\n                        o.pushKV(\"spendingtxid\", spending_txid->GetHex());\r\n```",
      "created_at": "2024-08-07T13:50:17Z",
      "updated_at": "2024-08-07T22:49:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1707040077",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707040077"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": 689,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 691,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1708031905",
      "pull_request_review_id": 2219808525,
      "id": 1708031905,
      "node_id": "PRRC_kwDOABII585lzn-h",
      "diff_hunk": "@@ -0,0 +1,110 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <common/args.h>\n+#include <index/disktxpos.h>\n+#include <index/txospenderindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};",
      "path": "src/index/txospenderindex.cpp",
      "position": 16,
      "original_position": 13,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "40e44e96c38593210877f0b5d062e71a8dd292a5",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "(Saw this was somewhat covered in https://github.com/bitcoin/bitcoin/pull/24539#discussion_r864081172). Maybe document here?\r\n```suggestion\r\n// \"Namespace\" within LevelDB, separate from the one used by BaseIndex.\r\nconstexpr uint8_t DB_TXOSPENDERINDEX{'s'};\r\n```\r\n",
      "created_at": "2024-08-07T22:33:41Z",
      "updated_at": "2024-08-07T22:49:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1708031905",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1708031905"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 16,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1725795513",
      "pull_request_review_id": 2252007696,
      "id": 1725795513,
      "node_id": "PRRC_kwDOABII585m3Yy5",
      "diff_hunk": "@@ -654,6 +679,35 @@ static RPCHelpMan gettxspendingprevout()\n                 const CTransaction* spendingTx = mempool.GetConflictTx(prevout);\n                 if (spendingTx != nullptr) {\n                     o.pushKV(\"spendingtxid\", spendingTx->GetHash().ToString());\n+                } else if (mempool_only.value_or(false)) {\n+                    // do nothing, caller has selected to only query the mempool\n+                } else if (g_txospenderindex) {\n+                    // no spending tx in mempool, query txospender index\n+                    if (auto spendingTxId{g_txospenderindex->FindSpender(prevout)}) {",
      "path": "src/rpc/mempool.cpp",
      "position": 1,
      "original_position": 68,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "20b259332ff1d2e6ca6b291ffeda00b51497bbed",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#coding-style-c calls for snake_case and `Txid` is the name of the type in this codebase so `spending_txid` would fit better.",
      "created_at": "2024-08-21T21:55:12Z",
      "updated_at": "2024-08-21T22:14:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1725795513",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1725795513"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 686,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1725799275",
      "pull_request_review_id": 2252007696,
      "id": 1725799275,
      "node_id": "PRRC_kwDOABII585m3Ztr",
      "diff_hunk": "@@ -0,0 +1,114 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <common/args.h>\n+#include <index/txospenderindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <validation.h>\n+\n+// LeveLDB key prefix. We only have one key for now but it will make it easier to add others if needed.\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};\n+\n+std::unique_ptr<TxoSpenderIndex> g_txospenderindex;\n+\n+/** Access to the txo spender index database (indexes/txospenderindex/) */\n+class TxoSpenderIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    bool WriteSpenderInfos(const std::vector<std::pair<COutPoint, uint256>>& items);\n+    bool EraseSpenderInfos(const std::vector<COutPoint>& items);\n+};\n+\n+TxoSpenderIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) : BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"txospenderindex\", n_cache_size, f_memory, f_wipe)",
      "path": "src/index/txospenderindex.cpp",
      "position": 1,
      "original_position": 26,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "20b259332ff1d2e6ca6b291ffeda00b51497bbed",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: I like how you responded to https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1704599014 but my primary intention was actually doing:\r\n```suggestion\r\nTxoSpenderIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe)\r\n    : BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"txospenderindex\", n_cache_size, f_memory, f_wipe)\r\n```",
      "created_at": "2024-08-21T22:00:08Z",
      "updated_at": "2024-08-21T22:14:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1725799275",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1725799275"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1725805158",
      "pull_request_review_id": 2252007696,
      "id": 1725805158,
      "node_id": "PRRC_kwDOABII585m3bJm",
      "diff_hunk": "@@ -0,0 +1,82 @@\n+// Copyright (c) 2017-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <index/txospenderindex.h>\n+#include <test/util/setup_common.h>\n+#include <util/time.h>\n+#include <validation.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_AUTO_TEST_SUITE(txospenderindex_tests)\n+\n+BOOST_FIXTURE_TEST_CASE(txospenderindex_initial_sync, TestChain100Setup)\n+{\n+    TxoSpenderIndex txospenderindex(interfaces::MakeChain(m_node), 1 << 20, true);\n+    BOOST_REQUIRE(txospenderindex.Init());\n+\n+    // Mine blocks for coinbase maturity, so we can spend some coinbase outputs in the test.\n+     for (int i = 0; i < 50; i++) {\n+         std::vector<CMutableTransaction> no_txns;\n+         CreateAndProcessBlock(no_txns, this->m_coinbase_txns[i]->vout[0].scriptPubKey);\n+     }\n+    std::vector<COutPoint> spent(10);\n+    std::vector<CMutableTransaction> spender(spent.size());\n+\n+    for (size_t i = 0; i < spent.size(); i++) {\n+        spent[i] = COutPoint(this->m_coinbase_txns[i]->GetHash(), 0);\n+        spender[i].version = 1;\n+        spender[i].vin.resize(1);\n+        spender[i].vin[0].prevout.hash = spent[i].hash;\n+        spender[i].vin[0].prevout.n = spent[i].n;\n+        spender[i].vout.resize(1);\n+        spender[i].vout[0].nValue = this->m_coinbase_txns[i]->GetValueOut();\n+        spender[i].vout[0].scriptPubKey = this->m_coinbase_txns[i]->vout[0].scriptPubKey;\n+\n+        // Sign:\n+        std::vector<unsigned char> vchSig;\n+        const uint256 hash = SignatureHash(this->m_coinbase_txns[i]->vout[0].scriptPubKey, spender[i], 0, SIGHASH_ALL, 0, SigVersion::BASE);\n+        coinbaseKey.Sign(hash, vchSig);\n+        vchSig.push_back((unsigned char)SIGHASH_ALL);\n+        spender[i].vin[0].scriptSig << vchSig;\n+    }\n+\n+    CreateAndProcessBlock(spender, this->m_coinbase_txns[0]->vout[0].scriptPubKey);\n+\n+    // Transaction should not be found in the index before it is started.\n+    for (const auto& outpoint : spent) {\n+        BOOST_CHECK(!txospenderindex.FindSpender(outpoint).has_value());\n+    }\n+\n+    // BlockUntilSyncedToCurrentChain should return false before txospenderindex is started.\n+    BOOST_CHECK(!txospenderindex.BlockUntilSyncedToCurrentChain());\n+\n+    BOOST_REQUIRE(txospenderindex.StartBackgroundSync());\n+\n+    // Allow tx index to catch up with the block index.\n+    constexpr auto timeout{10s};\n+    const auto time_start{SteadyClock::now()};\n+    while (!txospenderindex.BlockUntilSyncedToCurrentChain()) {\n+        BOOST_REQUIRE(time_start + timeout > SteadyClock::now());\n+        UninterruptibleSleep(std::chrono::milliseconds{100});\n+    }\n+    for (size_t i = 0; i < spent.size(); i++) {\n+        auto txId{txospenderindex.FindSpender(spent[i])};\n+        BOOST_CHECK(txId.has_value() && txId.value() == spender[i].GetHash());",
      "path": "src/test/txospenderindex_tests.cpp",
      "position": 1,
      "original_position": 67,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "20b259332ff1d2e6ca6b291ffeda00b51497bbed",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Should also use either snake_case `tx_id` or preferably `txid` to be consistent with the `Txid` type.\r\n\r\nCould rely on `.value()` [throwing exception](https://en.cppreference.com/w/cpp/utility/optional/value) if not set and avoid the naming altogether.\r\n\r\n\\+ Slightly better for error messages etc to use `BOOST_CHECK_EQUAL`.\r\n\r\n```suggestion\r\n        BOOST_CHECK_EQUAL(txospenderindex.FindSpender(spent[i]).value(), spender[i].GetHash());\r\n```",
      "created_at": "2024-08-21T22:08:10Z",
      "updated_at": "2024-08-21T22:14:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1725805158",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1725805158"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": 66,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726455725",
      "pull_request_review_id": 2253645526,
      "id": 1726455725,
      "node_id": "PRRC_kwDOABII585m55-t",
      "diff_hunk": "@@ -0,0 +1,110 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <common/args.h>\n+#include <index/disktxpos.h>\n+#include <index/txospenderindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};\n+\n+std::unique_ptr<TxoSpenderIndex> g_txospenderindex;\n+\n+/** Access to the txo spender index database (indexes/txospenderindex/) */\n+class TxoSpenderIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    bool WriteSpenderInfos(const std::vector<std::pair<COutPoint, uint256>>& items);\n+    bool EraseSpenderInfos(const std::vector<COutPoint>& items);\n+};\n+\n+TxoSpenderIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) : BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"txospenderindex\", n_cache_size, f_memory, f_wipe)\n+{\n+}\n+\n+TxoSpenderIndex::TxoSpenderIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"txospenderindex\"), m_db(std::make_unique<TxoSpenderIndex::DB>(n_cache_size, f_memory, f_wipe))\n+{\n+}\n+\n+TxoSpenderIndex::~TxoSpenderIndex() {}",
      "path": "src/index/txospenderindex.cpp",
      "position": 1,
      "original_position": 36,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "2f80cd2d5f0ef533a1ca20084c350f57f0d022ae",
      "in_reply_to_id": 1706465407,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done in https://github.com/bitcoin/bitcoin/pull/24539/commits/20b259332ff1d2e6ca6b291ffeda00b51497bbed",
      "created_at": "2024-08-22T06:54:05Z",
      "updated_at": "2024-08-22T06:54:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1726455725",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726455725"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 36,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726456027",
      "pull_request_review_id": 2253645908,
      "id": 1726456027,
      "node_id": "PRRC_kwDOABII585m56Db",
      "diff_hunk": "@@ -0,0 +1,110 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <common/args.h>\n+#include <index/disktxpos.h>\n+#include <index/txospenderindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};\n+\n+std::unique_ptr<TxoSpenderIndex> g_txospenderindex;\n+\n+/** Access to the txo spender index database (indexes/txospenderindex/) */\n+class TxoSpenderIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    bool WriteSpenderInfos(const std::vector<std::pair<COutPoint, uint256>>& items);\n+    bool EraseSpenderInfos(const std::vector<COutPoint>& items);\n+};\n+\n+TxoSpenderIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) : BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"txospenderindex\", n_cache_size, f_memory, f_wipe)\n+{\n+}\n+\n+TxoSpenderIndex::TxoSpenderIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"txospenderindex\"), m_db(std::make_unique<TxoSpenderIndex::DB>(n_cache_size, f_memory, f_wipe))\n+{\n+}\n+\n+TxoSpenderIndex::~TxoSpenderIndex() {}\n+\n+bool TxoSpenderIndex::DB::WriteSpenderInfos(const std::vector<std::pair<COutPoint, uint256>>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& [outpoint, hash] : items) {\n+        batch.Write(std::make_pair(DB_TXOSPENDERINDEX, outpoint), hash);\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+bool TxoSpenderIndex::DB::EraseSpenderInfos(const std::vector<COutPoint>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& outpoint : items) {\n+        batch.Erase(std::make_pair(DB_TXOSPENDERINDEX, outpoint));\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+bool TxoSpenderIndex::CustomAppend(const interfaces::BlockInfo& block)\n+{\n+    std::vector<std::pair<COutPoint, uint256>> items;\n+    items.reserve(block.data->vtx.size());\n+\n+    for (const auto& tx : block.data->vtx) {\n+        if (tx->IsCoinBase()) {\n+            continue;\n+        }\n+        for (const auto& input : tx->vin) {\n+            items.emplace_back(input.prevout, tx->GetHash());\n+        }\n+    }\n+    return m_db->WriteSpenderInfos(items);\n+}\n+\n+bool TxoSpenderIndex::CustomRewind(const interfaces::BlockKey& current_tip, const interfaces::BlockKey& new_tip)\n+{\n+    LOCK(cs_main);\n+    const CBlockIndex* iter_tip{m_chainstate->m_blockman.LookupBlockIndex(current_tip.hash)};\n+    const CBlockIndex* new_tip_index{m_chainstate->m_blockman.LookupBlockIndex(new_tip.hash)};\n+\n+    do {\n+        CBlock block;\n+        if (!m_chainstate->m_blockman.ReadBlockFromDisk(block, *iter_tip)) {\n+            LogError(\"Failed to read block %s from disk\\n\", iter_tip->GetBlockHash().ToString());\n+            return false;\n+        }\n+        std::vector<COutPoint> items;\n+        for (const auto& tx : block.vtx) {\n+            if (tx->IsCoinBase()) {\n+                continue;\n+            }\n+            for (const auto& input : tx->vin) {\n+                items.emplace_back(input.prevout);\n+            }\n+        }\n+        if (!m_db->EraseSpenderInfos(items)) {\n+            LogError(\"Failed to erase indexed data for disconnected block %s from disk\\n\", iter_tip->GetBlockHash().ToString());\n+            return false;\n+        }\n+\n+        iter_tip = iter_tip->GetAncestor(iter_tip->nHeight - 1);\n+    } while (new_tip_index != iter_tip);\n+\n+    return true;\n+}\n+\n+bool TxoSpenderIndex::FindSpender(const COutPoint& txo, uint256& tx_hash) const\n+{\n+    return m_db->Read(std::make_pair(DB_TXOSPENDERINDEX, txo), tx_hash);\n+}",
      "path": "src/index/txospenderindex.cpp",
      "position": 1,
      "original_position": 107,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "40e44e96c38593210877f0b5d062e71a8dd292a5",
      "in_reply_to_id": 1706479714,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done in https://github.com/bitcoin/bitcoin/pull/24539/commits/20b259332ff1d2e6ca6b291ffeda00b51497bbed",
      "created_at": "2024-08-22T06:54:18Z",
      "updated_at": "2024-08-22T06:54:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1726456027",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726456027"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": 104,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 157,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726456158",
      "pull_request_review_id": 2253646084,
      "id": 1726456158,
      "node_id": "PRRC_kwDOABII585m56Fe",
      "diff_hunk": "@@ -0,0 +1,110 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <common/args.h>\n+#include <index/disktxpos.h>",
      "path": "src/index/txospenderindex.cpp",
      "position": 1,
      "original_position": 7,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "40e44e96c38593210877f0b5d062e71a8dd292a5",
      "in_reply_to_id": 1706495582,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done in https://github.com/bitcoin/bitcoin/pull/24539/commits/20b259332ff1d2e6ca6b291ffeda00b51497bbed",
      "created_at": "2024-08-22T06:54:25Z",
      "updated_at": "2024-08-22T06:54:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1726456158",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726456158"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": 5,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 7,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726456332",
      "pull_request_review_id": 2253646346,
      "id": 1726456332,
      "node_id": "PRRC_kwDOABII585m56IM",
      "diff_hunk": "@@ -0,0 +1,110 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <common/args.h>\n+#include <index/disktxpos.h>\n+#include <index/txospenderindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};\n+\n+std::unique_ptr<TxoSpenderIndex> g_txospenderindex;\n+\n+/** Access to the txo spender index database (indexes/txospenderindex/) */\n+class TxoSpenderIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    bool WriteSpenderInfos(const std::vector<std::pair<COutPoint, uint256>>& items);\n+    bool EraseSpenderInfos(const std::vector<COutPoint>& items);\n+};\n+\n+TxoSpenderIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) : BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"txospenderindex\", n_cache_size, f_memory, f_wipe)\n+{\n+}\n+\n+TxoSpenderIndex::TxoSpenderIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"txospenderindex\"), m_db(std::make_unique<TxoSpenderIndex::DB>(n_cache_size, f_memory, f_wipe))\n+{\n+}\n+\n+TxoSpenderIndex::~TxoSpenderIndex() {}\n+\n+bool TxoSpenderIndex::DB::WriteSpenderInfos(const std::vector<std::pair<COutPoint, uint256>>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& [outpoint, hash] : items) {\n+        batch.Write(std::make_pair(DB_TXOSPENDERINDEX, outpoint), hash);",
      "path": "src/index/txospenderindex.cpp",
      "position": 1,
      "original_position": 42,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "40e44e96c38593210877f0b5d062e71a8dd292a5",
      "in_reply_to_id": 1706507458,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done in https://github.com/bitcoin/bitcoin/pull/24539/commits/20b259332ff1d2e6ca6b291ffeda00b51497bbed",
      "created_at": "2024-08-22T06:54:34Z",
      "updated_at": "2024-08-22T06:54:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1726456332",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726456332"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726456688",
      "pull_request_review_id": 2253646745,
      "id": 1726456688,
      "node_id": "PRRC_kwDOABII585m56Nw",
      "diff_hunk": "@@ -641,6 +664,11 @@ static RPCHelpMan gettxspendingprevout()\n                 prevouts.emplace_back(txid, nOutput);\n             }\n \n+            bool f_txospenderindex_ready{false};\n+            if (g_txospenderindex && !mempool_only.value_or(false)) {\n+                f_txospenderindex_ready = g_txospenderindex->BlockUntilSyncedToCurrentChain();\n+            }",
      "path": "src/rpc/mempool.cpp",
      "position": 1,
      "original_position": 58,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "40e44e96c38593210877f0b5d062e71a8dd292a5",
      "in_reply_to_id": 1706582935,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done in https://github.com/bitcoin/bitcoin/pull/24539/commits/20b259332ff1d2e6ca6b291ffeda00b51497bbed",
      "created_at": "2024-08-22T06:54:48Z",
      "updated_at": "2024-08-22T06:54:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1726456688",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726456688"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": 667,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 670,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726457244",
      "pull_request_review_id": 2253647456,
      "id": 1726457244,
      "node_id": "PRRC_kwDOABII585m56Wc",
      "diff_hunk": "@@ -0,0 +1,110 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <common/args.h>\n+#include <index/disktxpos.h>\n+#include <index/txospenderindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};\n+\n+std::unique_ptr<TxoSpenderIndex> g_txospenderindex;\n+\n+/** Access to the txo spender index database (indexes/txospenderindex/) */\n+class TxoSpenderIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    bool WriteSpenderInfos(const std::vector<std::pair<COutPoint, uint256>>& items);\n+    bool EraseSpenderInfos(const std::vector<COutPoint>& items);\n+};\n+\n+TxoSpenderIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) : BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"txospenderindex\", n_cache_size, f_memory, f_wipe)\n+{\n+}\n+\n+TxoSpenderIndex::TxoSpenderIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"txospenderindex\"), m_db(std::make_unique<TxoSpenderIndex::DB>(n_cache_size, f_memory, f_wipe))\n+{\n+}\n+\n+TxoSpenderIndex::~TxoSpenderIndex() {}\n+\n+bool TxoSpenderIndex::DB::WriteSpenderInfos(const std::vector<std::pair<COutPoint, uint256>>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& [outpoint, hash] : items) {\n+        batch.Write(std::make_pair(DB_TXOSPENDERINDEX, outpoint), hash);\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+bool TxoSpenderIndex::DB::EraseSpenderInfos(const std::vector<COutPoint>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& outpoint : items) {\n+        batch.Erase(std::make_pair(DB_TXOSPENDERINDEX, outpoint));\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+bool TxoSpenderIndex::CustomAppend(const interfaces::BlockInfo& block)\n+{\n+    std::vector<std::pair<COutPoint, uint256>> items;\n+    items.reserve(block.data->vtx.size());\n+\n+    for (const auto& tx : block.data->vtx) {\n+        if (tx->IsCoinBase()) {\n+            continue;\n+        }\n+        for (const auto& input : tx->vin) {\n+            items.emplace_back(input.prevout, tx->GetHash());\n+        }\n+    }\n+    return m_db->WriteSpenderInfos(items);\n+}\n+\n+bool TxoSpenderIndex::CustomRewind(const interfaces::BlockKey& current_tip, const interfaces::BlockKey& new_tip)\n+{\n+    LOCK(cs_main);\n+    const CBlockIndex* iter_tip{m_chainstate->m_blockman.LookupBlockIndex(current_tip.hash)};\n+    const CBlockIndex* new_tip_index{m_chainstate->m_blockman.LookupBlockIndex(new_tip.hash)};\n+\n+    do {\n+        CBlock block;\n+        if (!m_chainstate->m_blockman.ReadBlockFromDisk(block, *iter_tip)) {\n+            LogError(\"Failed to read block %s from disk\\n\", iter_tip->GetBlockHash().ToString());\n+            return false;\n+        }\n+        std::vector<COutPoint> items;\n+        for (const auto& tx : block.vtx) {\n+            if (tx->IsCoinBase()) {\n+                continue;\n+            }\n+            for (const auto& input : tx->vin) {\n+                items.emplace_back(input.prevout);\n+            }\n+        }\n+        if (!m_db->EraseSpenderInfos(items)) {\n+            LogError(\"Failed to erase indexed data for disconnected block %s from disk\\n\", iter_tip->GetBlockHash().ToString());\n+            return false;\n+        }\n+\n+        iter_tip = iter_tip->GetAncestor(iter_tip->nHeight - 1);\n+    } while (new_tip_index != iter_tip);\n+\n+    return true;\n+}\n+\n+bool TxoSpenderIndex::FindSpender(const COutPoint& txo, uint256& tx_hash) const\n+{\n+    return m_db->Read(std::make_pair(DB_TXOSPENDERINDEX, txo), tx_hash);\n+}\n+\n+\n+BaseIndex::DB& TxoSpenderIndex::GetDB() const { return *m_db; }",
      "path": "src/index/txospenderindex.cpp",
      "position": 1,
      "original_position": 110,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "40e44e96c38593210877f0b5d062e71a8dd292a5",
      "in_reply_to_id": 1706997273,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done in https://github.com/bitcoin/bitcoin/pull/24539/commits/20b259332ff1d2e6ca6b291ffeda00b51497bbed",
      "created_at": "2024-08-22T06:55:14Z",
      "updated_at": "2024-08-22T06:55:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1726457244",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726457244"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": 107,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 159,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726457390",
      "pull_request_review_id": 2253647641,
      "id": 1726457390,
      "node_id": "PRRC_kwDOABII585m56Yu",
      "diff_hunk": "@@ -654,6 +682,36 @@ static RPCHelpMan gettxspendingprevout()\n                 const CTransaction* spendingTx = mempool.GetConflictTx(prevout);\n                 if (spendingTx != nullptr) {\n                     o.pushKV(\"spendingtxid\", spendingTx->GetHash().ToString());\n+                } else if (mempool_only.value_or(false)) {\n+                    // do nothing\n+                } else if (g_txospenderindex) {\n+                    // no spending tx in mempool, query txospender index\n+                    uint256 spendingtxid;\n+                    if (g_txospenderindex->FindSpender(prevout, spendingtxid)) {\n+                        o.pushKV(\"spendingtxid\", spendingtxid.GetHex());",
      "path": "src/rpc/mempool.cpp",
      "position": 1,
      "original_position": 73,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "40e44e96c38593210877f0b5d062e71a8dd292a5",
      "in_reply_to_id": 1707040077,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done  in https://github.com/bitcoin/bitcoin/pull/24539/commits/20b259332ff1d2e6ca6b291ffeda00b51497bbed",
      "created_at": "2024-08-22T06:55:21Z",
      "updated_at": "2024-08-22T06:55:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1726457390",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726457390"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": 689,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 691,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726459734",
      "pull_request_review_id": 2253650619,
      "id": 1726459734,
      "node_id": "PRRC_kwDOABII585m569W",
      "diff_hunk": "@@ -0,0 +1,110 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <common/args.h>\n+#include <index/disktxpos.h>\n+#include <index/txospenderindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};\n+\n+std::unique_ptr<TxoSpenderIndex> g_txospenderindex;\n+\n+/** Access to the txo spender index database (indexes/txospenderindex/) */\n+class TxoSpenderIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    bool WriteSpenderInfos(const std::vector<std::pair<COutPoint, uint256>>& items);\n+    bool EraseSpenderInfos(const std::vector<COutPoint>& items);\n+};\n+\n+TxoSpenderIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) : BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"txospenderindex\", n_cache_size, f_memory, f_wipe)\n+{\n+}\n+\n+TxoSpenderIndex::TxoSpenderIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"txospenderindex\"), m_db(std::make_unique<TxoSpenderIndex::DB>(n_cache_size, f_memory, f_wipe))\n+{\n+}\n+\n+TxoSpenderIndex::~TxoSpenderIndex() {}\n+\n+bool TxoSpenderIndex::DB::WriteSpenderInfos(const std::vector<std::pair<COutPoint, uint256>>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& [outpoint, hash] : items) {\n+        batch.Write(std::make_pair(DB_TXOSPENDERINDEX, outpoint), hash);\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+bool TxoSpenderIndex::DB::EraseSpenderInfos(const std::vector<COutPoint>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& outpoint : items) {\n+        batch.Erase(std::make_pair(DB_TXOSPENDERINDEX, outpoint));\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+bool TxoSpenderIndex::CustomAppend(const interfaces::BlockInfo& block)\n+{\n+    std::vector<std::pair<COutPoint, uint256>> items;\n+    items.reserve(block.data->vtx.size());\n+\n+    for (const auto& tx : block.data->vtx) {\n+        if (tx->IsCoinBase()) {\n+            continue;\n+        }\n+        for (const auto& input : tx->vin) {\n+            items.emplace_back(input.prevout, tx->GetHash());\n+        }\n+    }\n+    return m_db->WriteSpenderInfos(items);\n+}\n+\n+bool TxoSpenderIndex::CustomRewind(const interfaces::BlockKey& current_tip, const interfaces::BlockKey& new_tip)\n+{\n+    LOCK(cs_main);\n+    const CBlockIndex* iter_tip{m_chainstate->m_blockman.LookupBlockIndex(current_tip.hash)};\n+    const CBlockIndex* new_tip_index{m_chainstate->m_blockman.LookupBlockIndex(new_tip.hash)};\n+\n+    do {\n+        CBlock block;\n+        if (!m_chainstate->m_blockman.ReadBlockFromDisk(block, *iter_tip)) {\n+            LogError(\"Failed to read block %s from disk\\n\", iter_tip->GetBlockHash().ToString());\n+            return false;\n+        }\n+        std::vector<COutPoint> items;",
      "path": "src/index/txospenderindex.cpp",
      "position": 1,
      "original_position": 84,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "40e44e96c38593210877f0b5d062e71a8dd292a5",
      "in_reply_to_id": 1706624715,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done in https://github.com/bitcoin/bitcoin/pull/24539/commits/20b259332ff1d2e6ca6b291ffeda00b51497bbed",
      "created_at": "2024-08-22T06:57:00Z",
      "updated_at": "2024-08-22T06:57:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1726459734",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726459734"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 127,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726460114",
      "pull_request_review_id": 2253651112,
      "id": 1726460114,
      "node_id": "PRRC_kwDOABII585m57DS",
      "diff_hunk": "@@ -0,0 +1,110 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <common/args.h>\n+#include <index/disktxpos.h>\n+#include <index/txospenderindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};",
      "path": "src/index/txospenderindex.cpp",
      "position": 16,
      "original_position": 13,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "40e44e96c38593210877f0b5d062e71a8dd292a5",
      "in_reply_to_id": 1708031905,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done in https://github.com/bitcoin/bitcoin/pull/24539/commits/20b259332ff1d2e6ca6b291ffeda00b51497bbed",
      "created_at": "2024-08-22T06:57:17Z",
      "updated_at": "2024-08-22T06:57:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1726460114",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726460114"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 16,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1727703220",
      "pull_request_review_id": 2255485851,
      "id": 1727703220,
      "node_id": "PRRC_kwDOABII585m-qi0",
      "diff_hunk": "@@ -0,0 +1,110 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <common/args.h>\n+#include <index/disktxpos.h>\n+#include <index/txospenderindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};",
      "path": "src/index/txospenderindex.cpp",
      "position": 16,
      "original_position": 13,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "40e44e96c38593210877f0b5d062e71a8dd292a5",
      "in_reply_to_id": 1708031905,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Better than my suggestion, thanks!",
      "created_at": "2024-08-22T19:32:49Z",
      "updated_at": "2024-08-22T19:32:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1727703220",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1727703220"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 16,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1739909596",
      "pull_request_review_id": 2274131198,
      "id": 1739909596,
      "node_id": "PRRC_kwDOABII585ntOnc",
      "diff_hunk": "@@ -0,0 +1,82 @@\n+// Copyright (c) 2017-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <index/txospenderindex.h>\n+#include <test/util/setup_common.h>\n+#include <util/time.h>\n+#include <validation.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_AUTO_TEST_SUITE(txospenderindex_tests)\n+\n+BOOST_FIXTURE_TEST_CASE(txospenderindex_initial_sync, TestChain100Setup)\n+{\n+    TxoSpenderIndex txospenderindex(interfaces::MakeChain(m_node), 1 << 20, true);\n+    BOOST_REQUIRE(txospenderindex.Init());\n+\n+    // Mine blocks for coinbase maturity, so we can spend some coinbase outputs in the test.\n+     for (int i = 0; i < 50; i++) {\n+         std::vector<CMutableTransaction> no_txns;\n+         CreateAndProcessBlock(no_txns, this->m_coinbase_txns[i]->vout[0].scriptPubKey);\n+     }\n+    std::vector<COutPoint> spent(10);\n+    std::vector<CMutableTransaction> spender(spent.size());\n+\n+    for (size_t i = 0; i < spent.size(); i++) {\n+        spent[i] = COutPoint(this->m_coinbase_txns[i]->GetHash(), 0);\n+        spender[i].version = 1;\n+        spender[i].vin.resize(1);\n+        spender[i].vin[0].prevout.hash = spent[i].hash;\n+        spender[i].vin[0].prevout.n = spent[i].n;\n+        spender[i].vout.resize(1);\n+        spender[i].vout[0].nValue = this->m_coinbase_txns[i]->GetValueOut();\n+        spender[i].vout[0].scriptPubKey = this->m_coinbase_txns[i]->vout[0].scriptPubKey;\n+\n+        // Sign:\n+        std::vector<unsigned char> vchSig;\n+        const uint256 hash = SignatureHash(this->m_coinbase_txns[i]->vout[0].scriptPubKey, spender[i], 0, SIGHASH_ALL, 0, SigVersion::BASE);\n+        coinbaseKey.Sign(hash, vchSig);\n+        vchSig.push_back((unsigned char)SIGHASH_ALL);\n+        spender[i].vin[0].scriptSig << vchSig;\n+    }\n+\n+    CreateAndProcessBlock(spender, this->m_coinbase_txns[0]->vout[0].scriptPubKey);\n+\n+    // Transaction should not be found in the index before it is started.\n+    for (const auto& outpoint : spent) {\n+        BOOST_CHECK(!txospenderindex.FindSpender(outpoint).has_value());\n+    }\n+\n+    // BlockUntilSyncedToCurrentChain should return false before txospenderindex is started.\n+    BOOST_CHECK(!txospenderindex.BlockUntilSyncedToCurrentChain());\n+\n+    BOOST_REQUIRE(txospenderindex.StartBackgroundSync());\n+\n+    // Allow tx index to catch up with the block index.\n+    constexpr auto timeout{10s};\n+    const auto time_start{SteadyClock::now()};\n+    while (!txospenderindex.BlockUntilSyncedToCurrentChain()) {\n+        BOOST_REQUIRE(time_start + timeout > SteadyClock::now());\n+        UninterruptibleSleep(std::chrono::milliseconds{100});\n+    }\n+    for (size_t i = 0; i < spent.size(); i++) {\n+        auto txId{txospenderindex.FindSpender(spent[i])};\n+        BOOST_CHECK(txId.has_value() && txId.value() == spender[i].GetHash());",
      "path": "src/test/txospenderindex_tests.cpp",
      "position": 1,
      "original_position": 67,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "20b259332ff1d2e6ca6b291ffeda00b51497bbed",
      "in_reply_to_id": 1725805158,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "(\r\nIf support for printing `std::optional` is added as in [pending PR 16545](https://github.com/bitcoin/bitcoin/pull/16545/files#diff-d4a2fb26adedc27f16bd3778424fa94c473342a695b228220a1810119028be5bR49), one could even write:\r\n```suggestion\r\n        BOOST_CHECK_EQUAL(txospenderindex.FindSpender(spent[i]), spender[i].GetHash());\r\n```\r\n)",
      "created_at": "2024-08-31T19:29:44Z",
      "updated_at": "2024-08-31T19:29:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1739909596",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1739909596"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": 66,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1783548346",
      "pull_request_review_id": 2341436782,
      "id": 1783548346,
      "node_id": "PRRC_kwDOABII585qTsm6",
      "diff_hunk": "@@ -0,0 +1,110 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <common/args.h>\n+#include <index/disktxpos.h>\n+#include <index/txospenderindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};",
      "path": "src/index/txospenderindex.cpp",
      "position": 16,
      "original_position": 13,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "40e44e96c38593210877f0b5d062e71a8dd292a5",
      "in_reply_to_id": 1708031905,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "(Feel free to resolve https://github.com/bitcoin/bitcoin/pull/24539/files#r1708031905).",
      "created_at": "2024-10-01T21:23:40Z",
      "updated_at": "2024-10-01T22:40:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1783548346",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1783548346"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 16,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1783550973",
      "pull_request_review_id": 2341436782,
      "id": 1783550973,
      "node_id": "PRRC_kwDOABII585qTtP9",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <common/args.h>\n+#include <crypto/siphash.h>\n+#include <index/disktxpos.h>\n+#include <index/txospenderindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <random.h>\n+#include <uint256.h>\n+#include <validation.h>\n+\n+// LeveLDB key prefix. We only have one key for now but it will make it easier to add others if needed.\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};\n+\n+std::unique_ptr<TxoSpenderIndex> g_txospenderindex;\n+\n+TxoSpenderIndex::TxoSpenderIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"txospenderindex\")\n+{\n+    fs::path path{gArgs.GetDataDirNet() / \"indexes\" / \"txospenderindex\"};\n+    fs::create_directories(path);\n+\n+    m_db = std::make_unique<TxoSpenderIndex::DB>(path / \"db\", n_cache_size, f_memory, f_wipe);\n+    if (!m_db->Read(\"siphash_key\", siphash_key)) {\n+        FastRandomContext rng(false);\n+        siphash_key = {rng.rand64(), rng.rand64()};\n+        assert(m_db->Write(\"siphash_key\", siphash_key));\n+    }\n+}\n+\n+TxoSpenderIndex::~TxoSpenderIndex() = default;\n+\n+uint64_t TxoSpenderIndex::CreateIndex(const COutPoint& vout) const\n+{\n+    return SipHashUint256Extra(siphash_key.first, siphash_key.second, vout.hash.ToUint256(), vout.n);\n+}\n+\n+bool TxoSpenderIndex::WriteSpenderInfos(const std::vector<std::pair<COutPoint, CDiskTxPos>>& items)\n+{\n+    CDBBatch batch(*m_db);\n+    for (const auto& [outpoint, pos] : items) {\n+        std::vector<CDiskTxPos> positions;\n+        std::pair<uint8_t, uint64_t> key{DB_TXOSPENDERINDEX, CreateIndex(outpoint)};\n+        if (m_db->Exists(key)) {\n+            if (!m_db->Read(key, positions)) {\n+                LogError(\"%s: Cannot read current state; tx spender index may be corrupted\\n\", __func__);\n+            }\n+        }\n+        if (std::find(positions.begin(), positions.end(), pos) == positions.end()) {\n+            positions.push_back(pos);\n+            batch.Write(key, positions);\n+        }\n+    }\n+    return m_db->WriteBatch(batch);\n+}\n+\n+\n+bool TxoSpenderIndex::EraseSpenderInfos(const std::vector<COutPoint>& items)\n+{\n+    CDBBatch batch(*m_db);\n+    for (const auto& outpoint : items) {\n+        std::vector<CDiskTxPos> positions;\n+        std::pair<uint8_t, uint64_t> key{DB_TXOSPENDERINDEX, CreateIndex(outpoint)};\n+        if (!m_db->Read(key, positions)) {\n+            LogWarning(\"%s: could not read expected entry\", __func__);",
      "path": "src/index/txospenderindex.cpp",
      "position": 1,
      "original_position": 68,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "93e1cafc3f8a7f5b36e495d7eb68c19acdab5809",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Manually adding `__func__` to new log lines is discouraged since `-logsourcelocations` CLI arg was added.\r\n```suggestion\r\n            LogWarning(\"Could not read expected entry\");\r\n```\r\nHere and elsewhere in the file.",
      "created_at": "2024-10-01T21:26:42Z",
      "updated_at": "2024-10-01T22:40:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1783550973",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1783550973"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1783554867",
      "pull_request_review_id": 2341436782,
      "id": 1783554867,
      "node_id": "PRRC_kwDOABII585qTuMz",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <common/args.h>\n+#include <crypto/siphash.h>\n+#include <index/disktxpos.h>\n+#include <index/txospenderindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <random.h>\n+#include <uint256.h>\n+#include <validation.h>\n+\n+// LeveLDB key prefix. We only have one key for now but it will make it easier to add others if needed.\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};\n+\n+std::unique_ptr<TxoSpenderIndex> g_txospenderindex;\n+\n+TxoSpenderIndex::TxoSpenderIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"txospenderindex\")\n+{\n+    fs::path path{gArgs.GetDataDirNet() / \"indexes\" / \"txospenderindex\"};\n+    fs::create_directories(path);\n+\n+    m_db = std::make_unique<TxoSpenderIndex::DB>(path / \"db\", n_cache_size, f_memory, f_wipe);\n+    if (!m_db->Read(\"siphash_key\", siphash_key)) {\n+        FastRandomContext rng(false);\n+        siphash_key = {rng.rand64(), rng.rand64()};\n+        assert(m_db->Write(\"siphash_key\", siphash_key));\n+    }\n+}\n+\n+TxoSpenderIndex::~TxoSpenderIndex() = default;\n+\n+uint64_t TxoSpenderIndex::CreateIndex(const COutPoint& vout) const\n+{\n+    return SipHashUint256Extra(siphash_key.first, siphash_key.second, vout.hash.ToUint256(), vout.n);\n+}\n+\n+bool TxoSpenderIndex::WriteSpenderInfos(const std::vector<std::pair<COutPoint, CDiskTxPos>>& items)\n+{\n+    CDBBatch batch(*m_db);\n+    for (const auto& [outpoint, pos] : items) {\n+        std::vector<CDiskTxPos> positions;\n+        std::pair<uint8_t, uint64_t> key{DB_TXOSPENDERINDEX, CreateIndex(outpoint)};\n+        if (m_db->Exists(key)) {\n+            if (!m_db->Read(key, positions)) {\n+                LogError(\"%s: Cannot read current state; tx spender index may be corrupted\\n\", __func__);\n+            }\n+        }",
      "path": "src/index/txospenderindex.cpp",
      "position": 1,
      "original_position": 51,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "93e1cafc3f8a7f5b36e495d7eb68c19acdab5809",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Maybe avoid double-lookup in Release, depending on how unlikely/harmful you feel this is?\r\n```suggestion\r\n        if (!m_db->Read(key, positions)) {\r\n            Assume(!m_db->Exists(key)); // Cannot read current state; tx spender index may be corrupted\r\n        }\r\n```",
      "created_at": "2024-10-01T21:31:25Z",
      "updated_at": "2024-10-01T22:40:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1783554867",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1783554867"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": 47,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1783555986",
      "pull_request_review_id": 2341436782,
      "id": 1783555986,
      "node_id": "PRRC_kwDOABII585qTueS",
      "diff_hunk": "@@ -0,0 +1,110 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <common/args.h>\n+#include <index/disktxpos.h>\n+#include <index/txospenderindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};\n+\n+std::unique_ptr<TxoSpenderIndex> g_txospenderindex;\n+\n+/** Access to the txo spender index database (indexes/txospenderindex/) */\n+class TxoSpenderIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    bool WriteSpenderInfos(const std::vector<std::pair<COutPoint, uint256>>& items);\n+    bool EraseSpenderInfos(const std::vector<COutPoint>& items);\n+};\n+\n+TxoSpenderIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) : BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"txospenderindex\", n_cache_size, f_memory, f_wipe)\n+{\n+}\n+\n+TxoSpenderIndex::TxoSpenderIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"txospenderindex\"), m_db(std::make_unique<TxoSpenderIndex::DB>(n_cache_size, f_memory, f_wipe))\n+{\n+}\n+\n+TxoSpenderIndex::~TxoSpenderIndex() {}\n+\n+bool TxoSpenderIndex::DB::WriteSpenderInfos(const std::vector<std::pair<COutPoint, uint256>>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& [outpoint, hash] : items) {\n+        batch.Write(std::make_pair(DB_TXOSPENDERINDEX, outpoint), hash);\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+bool TxoSpenderIndex::DB::EraseSpenderInfos(const std::vector<COutPoint>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& outpoint : items) {\n+        batch.Erase(std::make_pair(DB_TXOSPENDERINDEX, outpoint));\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+bool TxoSpenderIndex::CustomAppend(const interfaces::BlockInfo& block)\n+{\n+    std::vector<std::pair<COutPoint, uint256>> items;\n+    items.reserve(block.data->vtx.size());\n+\n+    for (const auto& tx : block.data->vtx) {\n+        if (tx->IsCoinBase()) {\n+            continue;\n+        }\n+        for (const auto& input : tx->vin) {\n+            items.emplace_back(input.prevout, tx->GetHash());\n+        }\n+    }\n+    return m_db->WriteSpenderInfos(items);\n+}\n+\n+bool TxoSpenderIndex::CustomRewind(const interfaces::BlockKey& current_tip, const interfaces::BlockKey& new_tip)\n+{\n+    LOCK(cs_main);\n+    const CBlockIndex* iter_tip{m_chainstate->m_blockman.LookupBlockIndex(current_tip.hash)};\n+    const CBlockIndex* new_tip_index{m_chainstate->m_blockman.LookupBlockIndex(new_tip.hash)};\n+\n+    do {\n+        CBlock block;\n+        if (!m_chainstate->m_blockman.ReadBlockFromDisk(block, *iter_tip)) {\n+            LogError(\"Failed to read block %s from disk\\n\", iter_tip->GetBlockHash().ToString());\n+            return false;\n+        }\n+        std::vector<COutPoint> items;",
      "path": "src/index/txospenderindex.cpp",
      "position": 1,
      "original_position": 84,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "40e44e96c38593210877f0b5d062e71a8dd292a5",
      "in_reply_to_id": 1706624715,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "(Feel free to resolve https://github.com/bitcoin/bitcoin/pull/24539/files#r1706624715).",
      "created_at": "2024-10-01T21:32:48Z",
      "updated_at": "2024-10-01T22:40:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1783555986",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1783555986"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 127,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1783556338",
      "pull_request_review_id": 2341436782,
      "id": 1783556338,
      "node_id": "PRRC_kwDOABII585qTujy",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <common/args.h>\n+#include <crypto/siphash.h>\n+#include <index/disktxpos.h>\n+#include <index/txospenderindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <random.h>\n+#include <uint256.h>\n+#include <validation.h>\n+\n+// LeveLDB key prefix. We only have one key for now but it will make it easier to add others if needed.\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};\n+\n+std::unique_ptr<TxoSpenderIndex> g_txospenderindex;\n+\n+TxoSpenderIndex::TxoSpenderIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"txospenderindex\")\n+{\n+    fs::path path{gArgs.GetDataDirNet() / \"indexes\" / \"txospenderindex\"};\n+    fs::create_directories(path);\n+\n+    m_db = std::make_unique<TxoSpenderIndex::DB>(path / \"db\", n_cache_size, f_memory, f_wipe);\n+    if (!m_db->Read(\"siphash_key\", siphash_key)) {\n+        FastRandomContext rng(false);\n+        siphash_key = {rng.rand64(), rng.rand64()};\n+        assert(m_db->Write(\"siphash_key\", siphash_key));\n+    }\n+}\n+\n+TxoSpenderIndex::~TxoSpenderIndex() = default;\n+\n+uint64_t TxoSpenderIndex::CreateIndex(const COutPoint& vout) const\n+{\n+    return SipHashUint256Extra(siphash_key.first, siphash_key.second, vout.hash.ToUint256(), vout.n);\n+}\n+\n+bool TxoSpenderIndex::WriteSpenderInfos(const std::vector<std::pair<COutPoint, CDiskTxPos>>& items)\n+{\n+    CDBBatch batch(*m_db);\n+    for (const auto& [outpoint, pos] : items) {\n+        std::vector<CDiskTxPos> positions;\n+        std::pair<uint8_t, uint64_t> key{DB_TXOSPENDERINDEX, CreateIndex(outpoint)};\n+        if (m_db->Exists(key)) {\n+            if (!m_db->Read(key, positions)) {\n+                LogError(\"%s: Cannot read current state; tx spender index may be corrupted\\n\", __func__);\n+            }\n+        }\n+        if (std::find(positions.begin(), positions.end(), pos) == positions.end()) {\n+            positions.push_back(pos);\n+            batch.Write(key, positions);\n+        }\n+    }\n+    return m_db->WriteBatch(batch);\n+}\n+\n+\n+bool TxoSpenderIndex::EraseSpenderInfos(const std::vector<COutPoint>& items)\n+{\n+    CDBBatch batch(*m_db);\n+    for (const auto& outpoint : items) {\n+        std::vector<CDiskTxPos> positions;\n+        std::pair<uint8_t, uint64_t> key{DB_TXOSPENDERINDEX, CreateIndex(outpoint)};\n+        if (!m_db->Read(key, positions)) {\n+            LogWarning(\"%s: could not read expected entry\", __func__);\n+            continue;\n+        }\n+        if (positions.size() > 1) {\n+            // there are collisions: find the position of the tx that spends the outpoint we want to erase\n+            // this is expensive but extremely uncommon\n+            size_t index = std::numeric_limits<size_t>::max();\n+            for (size_t i = 0; i < positions.size(); i++) {\n+                CTransactionRef tx;\n+                if (!ReadTransaction(positions[i], tx)) continue;\n+                for (const auto& input : tx->vin) {\n+                    if (input.prevout == outpoint) {\n+                        index = i;\n+                        break;\n+                    }\n+                }\n+            }\n+            if (index != std::numeric_limits<size_t>::max()) {\n+                // remove it from the list\n+                positions.erase(positions.begin() + index);\n+                batch.Write(key, positions);\n+            }\n+        } else {\n+            batch.Erase(key);\n+        }\n+    }\n+    return m_db->WriteBatch(batch);\n+}\n+\n+bool TxoSpenderIndex::CustomAppend(const interfaces::BlockInfo& block)\n+{\n+    std::vector<std::pair<COutPoint, CDiskTxPos>> items;\n+    items.reserve(block.data->vtx.size());\n+\n+    CDiskTxPos pos({block.file_number, block.data_pos}, GetSizeOfCompactSize(block.data->vtx.size()));\n+    for (const auto& tx : block.data->vtx) {\n+        if (!tx->IsCoinBase()) {\n+            for (const auto& input : tx->vin) {\n+                items.emplace_back(input.prevout, pos);\n+            }\n+        }\n+        pos.nTxOffset += ::GetSerializeSize(TX_WITH_WITNESS(*tx));\n+    }\n+\n+    return WriteSpenderInfos(items);\n+}\n+\n+bool TxoSpenderIndex::CustomRewind(const interfaces::BlockRef& current_tip, const interfaces::BlockRef& new_tip)\n+{\n+    LOCK(cs_main);\n+    const CBlockIndex* iter_tip{m_chainstate->m_blockman.LookupBlockIndex(current_tip.hash)};\n+    const CBlockIndex* new_tip_index{m_chainstate->m_blockman.LookupBlockIndex(new_tip.hash)};\n+\n+    do {\n+        CBlock block;\n+        if (!m_chainstate->m_blockman.ReadBlockFromDisk(block, *iter_tip)) {\n+            LogError(\"Failed to read block %s from disk\\n\", iter_tip->GetBlockHash().ToString());\n+            return false;\n+        }\n+        std::vector<COutPoint> items;\n+        items.reserve(block.vtx.size());\n+        for (const auto& tx : block.vtx) {\n+            if (tx->IsCoinBase()) {\n+                continue;\n+            }\n+            for (const auto& input : tx->vin) {\n+                items.emplace_back(input.prevout);\n+            }\n+        }\n+        if (!EraseSpenderInfos(items)) {\n+            LogError(\"Failed to erase indexed data for disconnected block %s from disk\\n\", iter_tip->GetBlockHash().ToString());\n+            return false;\n+        }\n+\n+        iter_tip = iter_tip->GetAncestor(iter_tip->nHeight - 1);\n+    } while (new_tip_index != iter_tip);\n+\n+    return true;\n+}\n+\n+bool TxoSpenderIndex::ReadTransaction(const CDiskTxPos& postx, CTransactionRef& tx) const",
      "path": "src/index/txospenderindex.cpp",
      "position": 1,
      "original_position": 148,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "93e1cafc3f8a7f5b36e495d7eb68c19acdab5809",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: More consistent with type name and snake_case variable naming convention.\r\n```suggestion\r\nbool TxoSpenderIndex::ReadTransaction(const CDiskTxPos& tx_pos, CTransactionRef& tx) const\r\n```",
      "created_at": "2024-10-01T21:33:13Z",
      "updated_at": "2024-10-01T22:40:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1783556338",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1783556338"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1783558667",
      "pull_request_review_id": 2341436782,
      "id": 1783558667,
      "node_id": "PRRC_kwDOABII585qTvIL",
      "diff_hunk": "@@ -0,0 +1,49 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INDEX_TXOSPENDERINDEX_H\n+#define BITCOIN_INDEX_TXOSPENDERINDEX_H\n+\n+#include <index/base.h>\n+#include <index/disktxpos.h>\n+\n+static constexpr bool DEFAULT_TXOSPENDERINDEX{false};\n+\n+/**\n+ * TxoSpenderIndex is used to look up which transaction spent a given output.\n+ * The index is written to a LevelDB database and, for each input of each transaction in a block,\n+ * records the outpoint that is spent and the hash of the spending transaction.\n+ */\n+class TxoSpenderIndex final : public BaseIndex\n+{\n+private:\n+    std::unique_ptr<BaseIndex::DB> m_db;\n+    std::pair<uint64_t, uint64_t> siphash_key;",
      "path": "src/index/txospenderindex.h",
      "position": 1,
      "original_position": 22,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "93e1cafc3f8a7f5b36e495d7eb68c19acdab5809",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Should at least have `m_`-prefix (possibly also distinguishing it as a \"salt\" instead of a \"key\", but I understand key is consistent with SipHash terminology).\r\n```suggestion\r\n    std::pair<uint64_t, uint64_t> m_siphash_salt;\r\n```\r\n\r\nIt's unfortunate that `SaltedOutpointHasher` is not directly usable here. Would require serialization support at the very least.",
      "created_at": "2024-10-01T21:36:05Z",
      "updated_at": "2024-10-01T22:40:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1783558667",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1783558667"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1783559400",
      "pull_request_review_id": 2341436782,
      "id": 1783559400,
      "node_id": "PRRC_kwDOABII585qTvTo",
      "diff_hunk": "@@ -0,0 +1,49 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INDEX_TXOSPENDERINDEX_H\n+#define BITCOIN_INDEX_TXOSPENDERINDEX_H\n+\n+#include <index/base.h>\n+#include <index/disktxpos.h>\n+\n+static constexpr bool DEFAULT_TXOSPENDERINDEX{false};\n+\n+/**\n+ * TxoSpenderIndex is used to look up which transaction spent a given output.\n+ * The index is written to a LevelDB database and, for each input of each transaction in a block,\n+ * records the outpoint that is spent and the hash of the spending transaction.\n+ */\n+class TxoSpenderIndex final : public BaseIndex\n+{\n+private:\n+    std::unique_ptr<BaseIndex::DB> m_db;\n+    std::pair<uint64_t, uint64_t> siphash_key;\n+    uint64_t CreateIndex(const COutPoint& vout) const;",
      "path": "src/index/txospenderindex.h",
      "position": 1,
      "original_position": 23,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "93e1cafc3f8a7f5b36e495d7eb68c19acdab5809",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Consider renaming function to `CreateKey` since underlying LevelDB is key/value store. \"Index\" also collides with the `TxoSpenderIndex` name itself.",
      "created_at": "2024-10-01T21:37:03Z",
      "updated_at": "2024-10-01T22:40:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1783559400",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1783559400"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1789195290",
      "pull_request_review_id": 2350579465,
      "id": 1789195290,
      "node_id": "PRRC_kwDOABII585qpPQa",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <common/args.h>\n+#include <crypto/siphash.h>\n+#include <index/disktxpos.h>\n+#include <index/txospenderindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <random.h>\n+#include <uint256.h>\n+#include <validation.h>\n+\n+// LeveLDB key prefix. We only have one key for now but it will make it easier to add others if needed.\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};\n+\n+std::unique_ptr<TxoSpenderIndex> g_txospenderindex;\n+\n+TxoSpenderIndex::TxoSpenderIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"txospenderindex\")\n+{\n+    fs::path path{gArgs.GetDataDirNet() / \"indexes\" / \"txospenderindex\"};\n+    fs::create_directories(path);\n+\n+    m_db = std::make_unique<TxoSpenderIndex::DB>(path / \"db\", n_cache_size, f_memory, f_wipe);\n+    if (!m_db->Read(\"siphash_key\", siphash_key)) {\n+        FastRandomContext rng(false);\n+        siphash_key = {rng.rand64(), rng.rand64()};\n+        assert(m_db->Write(\"siphash_key\", siphash_key));\n+    }\n+}\n+\n+TxoSpenderIndex::~TxoSpenderIndex() = default;\n+\n+uint64_t TxoSpenderIndex::CreateIndex(const COutPoint& vout) const\n+{\n+    return SipHashUint256Extra(siphash_key.first, siphash_key.second, vout.hash.ToUint256(), vout.n);\n+}\n+\n+bool TxoSpenderIndex::WriteSpenderInfos(const std::vector<std::pair<COutPoint, CDiskTxPos>>& items)\n+{\n+    CDBBatch batch(*m_db);\n+    for (const auto& [outpoint, pos] : items) {\n+        std::vector<CDiskTxPos> positions;\n+        std::pair<uint8_t, uint64_t> key{DB_TXOSPENDERINDEX, CreateIndex(outpoint)};\n+        if (m_db->Exists(key)) {\n+            if (!m_db->Read(key, positions)) {\n+                LogError(\"%s: Cannot read current state; tx spender index may be corrupted\\n\", __func__);\n+            }\n+        }\n+        if (std::find(positions.begin(), positions.end(), pos) == positions.end()) {\n+            positions.push_back(pos);\n+            batch.Write(key, positions);\n+        }\n+    }\n+    return m_db->WriteBatch(batch);\n+}\n+\n+\n+bool TxoSpenderIndex::EraseSpenderInfos(const std::vector<COutPoint>& items)\n+{\n+    CDBBatch batch(*m_db);\n+    for (const auto& outpoint : items) {\n+        std::vector<CDiskTxPos> positions;\n+        std::pair<uint8_t, uint64_t> key{DB_TXOSPENDERINDEX, CreateIndex(outpoint)};\n+        if (!m_db->Read(key, positions)) {\n+            LogWarning(\"%s: could not read expected entry\", __func__);",
      "path": "src/index/txospenderindex.cpp",
      "position": 1,
      "original_position": 68,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "93e1cafc3f8a7f5b36e495d7eb68c19acdab5809",
      "in_reply_to_id": 1783550973,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done in https://github.com/bitcoin/bitcoin/pull/24539/commits/00ea9012534bdfb0d39c0d2d95103a3645047fd9",
      "created_at": "2024-10-06T18:18:05Z",
      "updated_at": "2024-10-06T18:18:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1789195290",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1789195290"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1789195458",
      "pull_request_review_id": 2350579531,
      "id": 1789195458,
      "node_id": "PRRC_kwDOABII585qpPTC",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <common/args.h>\n+#include <crypto/siphash.h>\n+#include <index/disktxpos.h>\n+#include <index/txospenderindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <random.h>\n+#include <uint256.h>\n+#include <validation.h>\n+\n+// LeveLDB key prefix. We only have one key for now but it will make it easier to add others if needed.\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};\n+\n+std::unique_ptr<TxoSpenderIndex> g_txospenderindex;\n+\n+TxoSpenderIndex::TxoSpenderIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"txospenderindex\")\n+{\n+    fs::path path{gArgs.GetDataDirNet() / \"indexes\" / \"txospenderindex\"};\n+    fs::create_directories(path);\n+\n+    m_db = std::make_unique<TxoSpenderIndex::DB>(path / \"db\", n_cache_size, f_memory, f_wipe);\n+    if (!m_db->Read(\"siphash_key\", siphash_key)) {\n+        FastRandomContext rng(false);\n+        siphash_key = {rng.rand64(), rng.rand64()};\n+        assert(m_db->Write(\"siphash_key\", siphash_key));\n+    }\n+}\n+\n+TxoSpenderIndex::~TxoSpenderIndex() = default;\n+\n+uint64_t TxoSpenderIndex::CreateIndex(const COutPoint& vout) const\n+{\n+    return SipHashUint256Extra(siphash_key.first, siphash_key.second, vout.hash.ToUint256(), vout.n);\n+}\n+\n+bool TxoSpenderIndex::WriteSpenderInfos(const std::vector<std::pair<COutPoint, CDiskTxPos>>& items)\n+{\n+    CDBBatch batch(*m_db);\n+    for (const auto& [outpoint, pos] : items) {\n+        std::vector<CDiskTxPos> positions;\n+        std::pair<uint8_t, uint64_t> key{DB_TXOSPENDERINDEX, CreateIndex(outpoint)};\n+        if (m_db->Exists(key)) {\n+            if (!m_db->Read(key, positions)) {\n+                LogError(\"%s: Cannot read current state; tx spender index may be corrupted\\n\", __func__);\n+            }\n+        }",
      "path": "src/index/txospenderindex.cpp",
      "position": 1,
      "original_position": 51,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "93e1cafc3f8a7f5b36e495d7eb68c19acdab5809",
      "in_reply_to_id": 1783554867,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Collisions are supposed to be extremely rare, I'd rather keep the check as is.",
      "created_at": "2024-10-06T18:18:36Z",
      "updated_at": "2024-10-06T18:18:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1789195458",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1789195458"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": 47,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1789195511",
      "pull_request_review_id": 2350579549,
      "id": 1789195511,
      "node_id": "PRRC_kwDOABII585qpPT3",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <common/args.h>\n+#include <crypto/siphash.h>\n+#include <index/disktxpos.h>\n+#include <index/txospenderindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <random.h>\n+#include <uint256.h>\n+#include <validation.h>\n+\n+// LeveLDB key prefix. We only have one key for now but it will make it easier to add others if needed.\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};\n+\n+std::unique_ptr<TxoSpenderIndex> g_txospenderindex;\n+\n+TxoSpenderIndex::TxoSpenderIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"txospenderindex\")\n+{\n+    fs::path path{gArgs.GetDataDirNet() / \"indexes\" / \"txospenderindex\"};\n+    fs::create_directories(path);\n+\n+    m_db = std::make_unique<TxoSpenderIndex::DB>(path / \"db\", n_cache_size, f_memory, f_wipe);\n+    if (!m_db->Read(\"siphash_key\", siphash_key)) {\n+        FastRandomContext rng(false);\n+        siphash_key = {rng.rand64(), rng.rand64()};\n+        assert(m_db->Write(\"siphash_key\", siphash_key));\n+    }\n+}\n+\n+TxoSpenderIndex::~TxoSpenderIndex() = default;\n+\n+uint64_t TxoSpenderIndex::CreateIndex(const COutPoint& vout) const\n+{\n+    return SipHashUint256Extra(siphash_key.first, siphash_key.second, vout.hash.ToUint256(), vout.n);\n+}\n+\n+bool TxoSpenderIndex::WriteSpenderInfos(const std::vector<std::pair<COutPoint, CDiskTxPos>>& items)\n+{\n+    CDBBatch batch(*m_db);\n+    for (const auto& [outpoint, pos] : items) {\n+        std::vector<CDiskTxPos> positions;\n+        std::pair<uint8_t, uint64_t> key{DB_TXOSPENDERINDEX, CreateIndex(outpoint)};\n+        if (m_db->Exists(key)) {\n+            if (!m_db->Read(key, positions)) {\n+                LogError(\"%s: Cannot read current state; tx spender index may be corrupted\\n\", __func__);\n+            }\n+        }\n+        if (std::find(positions.begin(), positions.end(), pos) == positions.end()) {\n+            positions.push_back(pos);\n+            batch.Write(key, positions);\n+        }\n+    }\n+    return m_db->WriteBatch(batch);\n+}\n+\n+\n+bool TxoSpenderIndex::EraseSpenderInfos(const std::vector<COutPoint>& items)\n+{\n+    CDBBatch batch(*m_db);\n+    for (const auto& outpoint : items) {\n+        std::vector<CDiskTxPos> positions;\n+        std::pair<uint8_t, uint64_t> key{DB_TXOSPENDERINDEX, CreateIndex(outpoint)};\n+        if (!m_db->Read(key, positions)) {\n+            LogWarning(\"%s: could not read expected entry\", __func__);\n+            continue;\n+        }\n+        if (positions.size() > 1) {\n+            // there are collisions: find the position of the tx that spends the outpoint we want to erase\n+            // this is expensive but extremely uncommon\n+            size_t index = std::numeric_limits<size_t>::max();\n+            for (size_t i = 0; i < positions.size(); i++) {\n+                CTransactionRef tx;\n+                if (!ReadTransaction(positions[i], tx)) continue;\n+                for (const auto& input : tx->vin) {\n+                    if (input.prevout == outpoint) {\n+                        index = i;\n+                        break;\n+                    }\n+                }\n+            }\n+            if (index != std::numeric_limits<size_t>::max()) {\n+                // remove it from the list\n+                positions.erase(positions.begin() + index);\n+                batch.Write(key, positions);\n+            }\n+        } else {\n+            batch.Erase(key);\n+        }\n+    }\n+    return m_db->WriteBatch(batch);\n+}\n+\n+bool TxoSpenderIndex::CustomAppend(const interfaces::BlockInfo& block)\n+{\n+    std::vector<std::pair<COutPoint, CDiskTxPos>> items;\n+    items.reserve(block.data->vtx.size());\n+\n+    CDiskTxPos pos({block.file_number, block.data_pos}, GetSizeOfCompactSize(block.data->vtx.size()));\n+    for (const auto& tx : block.data->vtx) {\n+        if (!tx->IsCoinBase()) {\n+            for (const auto& input : tx->vin) {\n+                items.emplace_back(input.prevout, pos);\n+            }\n+        }\n+        pos.nTxOffset += ::GetSerializeSize(TX_WITH_WITNESS(*tx));\n+    }\n+\n+    return WriteSpenderInfos(items);\n+}\n+\n+bool TxoSpenderIndex::CustomRewind(const interfaces::BlockRef& current_tip, const interfaces::BlockRef& new_tip)\n+{\n+    LOCK(cs_main);\n+    const CBlockIndex* iter_tip{m_chainstate->m_blockman.LookupBlockIndex(current_tip.hash)};\n+    const CBlockIndex* new_tip_index{m_chainstate->m_blockman.LookupBlockIndex(new_tip.hash)};\n+\n+    do {\n+        CBlock block;\n+        if (!m_chainstate->m_blockman.ReadBlockFromDisk(block, *iter_tip)) {\n+            LogError(\"Failed to read block %s from disk\\n\", iter_tip->GetBlockHash().ToString());\n+            return false;\n+        }\n+        std::vector<COutPoint> items;\n+        items.reserve(block.vtx.size());\n+        for (const auto& tx : block.vtx) {\n+            if (tx->IsCoinBase()) {\n+                continue;\n+            }\n+            for (const auto& input : tx->vin) {\n+                items.emplace_back(input.prevout);\n+            }\n+        }\n+        if (!EraseSpenderInfos(items)) {\n+            LogError(\"Failed to erase indexed data for disconnected block %s from disk\\n\", iter_tip->GetBlockHash().ToString());\n+            return false;\n+        }\n+\n+        iter_tip = iter_tip->GetAncestor(iter_tip->nHeight - 1);\n+    } while (new_tip_index != iter_tip);\n+\n+    return true;\n+}\n+\n+bool TxoSpenderIndex::ReadTransaction(const CDiskTxPos& postx, CTransactionRef& tx) const",
      "path": "src/index/txospenderindex.cpp",
      "position": 1,
      "original_position": 148,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "93e1cafc3f8a7f5b36e495d7eb68c19acdab5809",
      "in_reply_to_id": 1783556338,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done https://github.com/bitcoin/bitcoin/pull/24539/commits/00ea9012534bdfb0d39c0d2d95103a3645047fd9",
      "created_at": "2024-10-06T18:18:44Z",
      "updated_at": "2024-10-06T18:18:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1789195511",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1789195511"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1789195564",
      "pull_request_review_id": 2350579572,
      "id": 1789195564,
      "node_id": "PRRC_kwDOABII585qpPUs",
      "diff_hunk": "@@ -0,0 +1,49 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INDEX_TXOSPENDERINDEX_H\n+#define BITCOIN_INDEX_TXOSPENDERINDEX_H\n+\n+#include <index/base.h>\n+#include <index/disktxpos.h>\n+\n+static constexpr bool DEFAULT_TXOSPENDERINDEX{false};\n+\n+/**\n+ * TxoSpenderIndex is used to look up which transaction spent a given output.\n+ * The index is written to a LevelDB database and, for each input of each transaction in a block,\n+ * records the outpoint that is spent and the hash of the spending transaction.\n+ */\n+class TxoSpenderIndex final : public BaseIndex\n+{\n+private:\n+    std::unique_ptr<BaseIndex::DB> m_db;\n+    std::pair<uint64_t, uint64_t> siphash_key;",
      "path": "src/index/txospenderindex.h",
      "position": 1,
      "original_position": 22,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "93e1cafc3f8a7f5b36e495d7eb68c19acdab5809",
      "in_reply_to_id": 1783558667,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "changed in https://github.com/bitcoin/bitcoin/pull/24539/commits/00ea9012534bdfb0d39c0d2d95103a3645047fd9",
      "created_at": "2024-10-06T18:18:58Z",
      "updated_at": "2024-10-06T18:18:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1789195564",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1789195564"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1789195642",
      "pull_request_review_id": 2350579597,
      "id": 1789195642,
      "node_id": "PRRC_kwDOABII585qpPV6",
      "diff_hunk": "@@ -0,0 +1,49 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INDEX_TXOSPENDERINDEX_H\n+#define BITCOIN_INDEX_TXOSPENDERINDEX_H\n+\n+#include <index/base.h>\n+#include <index/disktxpos.h>\n+\n+static constexpr bool DEFAULT_TXOSPENDERINDEX{false};\n+\n+/**\n+ * TxoSpenderIndex is used to look up which transaction spent a given output.\n+ * The index is written to a LevelDB database and, for each input of each transaction in a block,\n+ * records the outpoint that is spent and the hash of the spending transaction.\n+ */\n+class TxoSpenderIndex final : public BaseIndex\n+{\n+private:\n+    std::unique_ptr<BaseIndex::DB> m_db;\n+    std::pair<uint64_t, uint64_t> siphash_key;\n+    uint64_t CreateIndex(const COutPoint& vout) const;",
      "path": "src/index/txospenderindex.h",
      "position": 1,
      "original_position": 23,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "93e1cafc3f8a7f5b36e495d7eb68c19acdab5809",
      "in_reply_to_id": 1783559400,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done  in https://github.com/bitcoin/bitcoin/pull/24539/commits/00ea9012534bdfb0d39c0d2d95103a3645047fd9",
      "created_at": "2024-10-06T18:19:07Z",
      "updated_at": "2024-10-06T18:19:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r1789195642",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1789195642"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2156683220",
      "pull_request_review_id": 2942451284,
      "id": 2156683220,
      "node_id": "PRRC_kwDOABII586AjF_U",
      "diff_hunk": "@@ -0,0 +1,46 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INDEX_TXOSPENDERINDEX_H\n+#define BITCOIN_INDEX_TXOSPENDERINDEX_H\n+\n+#include <index/base.h>\n+\n+static constexpr bool DEFAULT_TXOSPENDERINDEX{false};\n+\n+/**\n+ * TxoSpenderIndex is used to look up which transaction spent a given output.\n+ * The index is written to a LevelDB database and, for each input of each transaction in a block,\n+ * records the outpoint that is spent and the hash of the spending transaction.\n+ */\n+class TxoSpenderIndex final : public BaseIndex\n+{\n+protected:\n+    class DB;\n+\n+private:\n+    const std::unique_ptr<DB> m_db;\n+\n+    bool AllowPrune() const override { return false; }\n+\n+protected:\n+    bool CustomAppend(const interfaces::BlockInfo& block) override;",
      "path": "src/index/txospenderindex.h",
      "position": 31,
      "original_position": 28,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "16b5cb0b9d343de1080ec4761bd8f20d668059ee",
      "in_reply_to_id": 1028544839,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": ">  So yes technically txospenderindex does not require txindex but could it really be usable in practice without it \r\n\r\nI'm not following here. How does the `txindex` help in this scenario? ",
      "created_at": "2025-06-19T10:31:32Z",
      "updated_at": "2025-06-19T13:37:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r2156683220",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2156683220"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 31,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2156711594",
      "pull_request_review_id": 2942451284,
      "id": 2156711594,
      "node_id": "PRRC_kwDOABII586AjM6q",
      "diff_hunk": "@@ -608,6 +609,11 @@ static RPCHelpMan gettxspendingprevout()\n                     },\n                 },\n             },\n+            {\"options\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                {\n+                    {\"mempool_only\", RPCArg::Type::BOOL, RPCArg::DefaultHint{\"true if txospenderindex unavailable, otherwise false\"}, \"If false and empool lacks a relevant spend, use txospenderindex (throws an exception if not available).\"},",
      "path": "src/rpc/mempool.cpp",
      "position": 1,
      "original_position": 14,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "94babbe6c15a3d5f99ade498808bfee44d4cd604",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit (type): `s/empool/mempool/`",
      "created_at": "2025-06-19T10:49:22Z",
      "updated_at": "2025-06-19T13:37:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r2156711594",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2156711594"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 614,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2156765639",
      "pull_request_review_id": 2942451284,
      "id": 2156765639,
      "node_id": "PRRC_kwDOABII586AjaHH",
      "diff_hunk": "@@ -513,6 +515,7 @@ void SetupServerArgs(ArgsManager& argsman, bool can_listen_ipc)\n     argsman.AddArg(\"-shutdownnotify=<cmd>\", \"Execute command immediately before beginning shutdown. The need for shutdown may be urgent, so be careful not to delay it long (if the command doesn't require interaction with the server, consider having it fork into the background).\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n #endif\n     argsman.AddArg(\"-txindex\", strprintf(\"Maintain a full transaction index, used by the getrawtransaction rpc call (default: %u)\", DEFAULT_TXINDEX), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    argsman.AddArg(\"-txospenderindex\", strprintf(\"Maintain a transaction output spender index, used by the gettxospender rpc call (default: %u)\", DEFAULT_TXOSPENDERINDEX), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "path": "src/init.cpp",
      "position": 1,
      "original_position": 20,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "94babbe6c15a3d5f99ade498808bfee44d4cd604",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I guess you mean used by the `gettxspendingprevout`  call?",
      "created_at": "2025-06-19T11:23:11Z",
      "updated_at": "2025-06-19T13:37:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r2156765639",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2156765639"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 518,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2156779448",
      "pull_request_review_id": 2942451284,
      "id": 2156779448,
      "node_id": "PRRC_kwDOABII586Ajde4",
      "diff_hunk": "@@ -665,6 +690,35 @@ static RPCHelpMan gettxspendingprevout()\n                 const CTransaction* spendingTx = mempool.GetConflictTx(prevout);\n                 if (spendingTx != nullptr) {\n                     o.pushKV(\"spendingtxid\", spendingTx->GetHash().ToString());\n+                } else if (mempool_only.value_or(false)) {\n+                    // do nothing, caller has selected to only query the mempool\n+                } else if (g_txospenderindex) {\n+                    // no spending tx in mempool, query txospender index\n+                    if (auto spending_txid{g_txospenderindex->FindSpender(prevout)}) {\n+                        o.pushKV(\"spendingtxid\", spending_txid->GetHex());\n+                        if (!f_txospenderindex_ready) {\n+                            // warn if index is not ready as the spending tx that we found may be stale (it may be reorged out)\n+                            UniValue warnings(UniValue::VARR);\n+                            warnings.push_back(\"txospenderindex is still being synced.\");\n+                            o.pushKV(\"warnings\", warnings);\n+                        }\n+                    } else if (!f_txospenderindex_ready) {\n+                        if (mempool_only.has_value()) {  // NOTE: caller explicitly set value to false\n+                            throw JSONRPCError(RPC_MISC_ERROR, strprintf(\"No spending tx for the outpoint %s:%d found, and txospenderindex is still being synced.\", prevout.hash.GetHex(), prevout.n));\n+                        } else {\n+                            UniValue warnings(UniValue::VARR);\n+                            warnings.push_back(\"txospenderindex is still being synced.\");\n+                            o.pushKV(\"warnings\", warnings);\n+                        }\n+                    }\n+                } else {\n+                    if (mempool_only.has_value()) {  // NOTE: caller explicitly set value to false\n+                        throw JSONRPCError(RPC_MISC_ERROR, strprintf(\"No spending tx for the outpoint %s:%d in mempool, and txospenderindex is unavailable.\", prevout.hash.GetHex(), prevout.n));\n+                    } else {\n+                        UniValue warnings(UniValue::VARR);\n+                        warnings.push_back(\"txospenderindex is unavailable.\");",
      "path": "src/rpc/mempool.cpp",
      "position": 103,
      "original_position": 90,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "94babbe6c15a3d5f99ade498808bfee44d4cd604",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Do we really want to warn in this case? After all the current behaviour does not change. Is there a scenario where the warning might be useful?",
      "created_at": "2025-06-19T11:32:15Z",
      "updated_at": "2025-06-19T13:37:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r2156779448",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2156779448"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 730,
      "original_line": 730,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2156783042",
      "pull_request_review_id": 2942451284,
      "id": 2156783042,
      "node_id": "PRRC_kwDOABII586AjeXC",
      "diff_hunk": "@@ -652,6 +675,8 @@ static RPCHelpMan gettxspendingprevout()\n                 prevouts.emplace_back(txid, nOutput);\n             }\n \n+            const bool f_txospenderindex_ready = !mempool_only.value_or(false) && g_txospenderindex && g_txospenderindex->BlockUntilSyncedToCurrentChain();",
      "path": "src/rpc/mempool.cpp",
      "position": 1,
      "original_position": 55,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "94babbe6c15a3d5f99ade498808bfee44d4cd604",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: We usually don't prefix bool values with `f_` anymore and maybe this could be better scoped after the `else if (g_txospenderindex)`.",
      "created_at": "2025-06-19T11:34:31Z",
      "updated_at": "2025-06-19T13:37:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r2156783042",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2156783042"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 678,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2156851006",
      "pull_request_review_id": 2942451284,
      "id": 2156851006,
      "node_id": "PRRC_kwDOABII586Aju8-",
      "diff_hunk": "@@ -0,0 +1,81 @@\n+// Copyright (c) 2017-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <index/txospenderindex.h>\n+#include <test/util/setup_common.h>\n+#include <util/time.h>\n+#include <validation.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_AUTO_TEST_SUITE(txospenderindex_tests)\n+\n+BOOST_FIXTURE_TEST_CASE(txospenderindex_initial_sync, TestChain100Setup)\n+{\n+    TxoSpenderIndex txospenderindex(interfaces::MakeChain(m_node), 1 << 20, true);\n+    BOOST_REQUIRE(txospenderindex.Init());\n+\n+    // Mine blocks for coinbase maturity, so we can spend some coinbase outputs in the test.\n+     for (int i = 0; i < 50; i++) {\n+         std::vector<CMutableTransaction> no_txns;\n+         CreateAndProcessBlock(no_txns, this->m_coinbase_txns[i]->vout[0].scriptPubKey);\n+     }\n+    std::vector<COutPoint> spent(10);\n+    std::vector<CMutableTransaction> spender(spent.size());\n+\n+    for (size_t i = 0; i < spent.size(); i++) {\n+        spent[i] = COutPoint(this->m_coinbase_txns[i]->GetHash(), 0);\n+        spender[i].version = 1;\n+        spender[i].vin.resize(1);\n+        spender[i].vin[0].prevout.hash = spent[i].hash;\n+        spender[i].vin[0].prevout.n = spent[i].n;\n+        spender[i].vout.resize(1);\n+        spender[i].vout[0].nValue = this->m_coinbase_txns[i]->GetValueOut();\n+        spender[i].vout[0].scriptPubKey = this->m_coinbase_txns[i]->vout[0].scriptPubKey;\n+\n+        // Sign:\n+        std::vector<unsigned char> vchSig;\n+        const uint256 hash = SignatureHash(this->m_coinbase_txns[i]->vout[0].scriptPubKey, spender[i], 0, SIGHASH_ALL, 0, SigVersion::BASE);\n+        coinbaseKey.Sign(hash, vchSig);\n+        vchSig.push_back((unsigned char)SIGHASH_ALL);\n+        spender[i].vin[0].scriptSig << vchSig;\n+    }\n+\n+    CreateAndProcessBlock(spender, this->m_coinbase_txns[0]->vout[0].scriptPubKey);\n+\n+    // Transaction should not be found in the index before it is started.\n+    for (const auto& outpoint : spent) {\n+        BOOST_CHECK(!txospenderindex.FindSpender(outpoint).has_value());\n+    }\n+\n+    // BlockUntilSyncedToCurrentChain should return false before txospenderindex is started.\n+    BOOST_CHECK(!txospenderindex.BlockUntilSyncedToCurrentChain());\n+\n+    BOOST_REQUIRE(txospenderindex.StartBackgroundSync());",
      "path": "src/test/txospenderindex_tests.cpp",
      "position": 56,
      "original_position": 56,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "94babbe6c15a3d5f99ade498808bfee44d4cd604",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think it would be more robust and preferable for a unit test to just call `Sync()` directly.",
      "created_at": "2025-06-19T12:05:03Z",
      "updated_at": "2025-06-19T13:37:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r2156851006",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2156851006"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 56,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2156911107",
      "pull_request_review_id": 2942451284,
      "id": 2156911107,
      "node_id": "PRRC_kwDOABII586Aj9oD",
      "diff_hunk": "@@ -94,6 +107,77 @@ def create_tx(**kwargs):\n         self.log.info(\"Missing txid\")\n         assert_raises_rpc_error(-3, \"Missing txid\", self.nodes[0].gettxspendingprevout, [{'vout' : 3}])\n \n+        self.generate(self.wallet, 1)\n+        # spending transactions are found in the index of nodes 0 and 1 but not node 2\n+        result = self.nodes[0].gettxspendingprevout([ {'txid' : confirmed_utxo['txid'], 'vout' : 0}, {'txid' : txidA, 'vout' : 1} ])\n+        assert_equal(result, [ {'txid' : confirmed_utxo['txid'], 'vout' : 0, 'spendingtxid' : txidA}, {'txid' : txidA, 'vout' : 1, 'spendingtxid' : txidC} ])\n+        result = self.nodes[1].gettxspendingprevout([ {'txid' : confirmed_utxo['txid'], 'vout' : 0}, {'txid' : txidA, 'vout' : 1} ])\n+        assert_equal(result, [ {'txid' : confirmed_utxo['txid'], 'vout' : 0, 'spendingtxid' : txidA}, {'txid' : txidA, 'vout' : 1, 'spendingtxid' : txidC} ])\n+        result = self.nodes[2].gettxspendingprevout([ {'txid' : confirmed_utxo['txid'], 'vout' : 0}, {'txid' : txidA, 'vout' : 1} ])\n+        assert_equal(result, [ {'txid' : confirmed_utxo['txid'], 'vout' : 0, 'warnings': ['txospenderindex is unavailable.']}, {'txid' : txidA, 'vout' : 1, 'warnings': ['txospenderindex is unavailable.']} ])\n+\n+\n+        self.log.info(\"Check that our txospenderindex is updated when a reorg replaces a spending transaction\")\n+        confirmed_utxo = self.wallet.get_utxo(mark_as_spent = False)\n+        tx1 = create_tx(utxos_to_spend=[confirmed_utxo], num_outputs=1)\n+        self.generate(self.wallet, 1)\n+        # tx1 is confirmed, and indexed in txospenderindex as spending our utxo\n+        assert not tx1[\"txid\"] in self.nodes[0].getrawmempool()\n+        result = self.nodes[0].gettxspendingprevout([ {'txid' : confirmed_utxo['txid'], 'vout' : 0} ])\n+        assert_equal(result, [ {'txid' : confirmed_utxo['txid'], 'vout' : 0, 'spendingtxid' : tx1[\"txid\"]} ])\n+        # replace tx1 with tx2\n+        self.nodes[0].invalidateblock(self.nodes[0].getbestblockhash())\n+        self.nodes[1].invalidateblock(self.nodes[1].getbestblockhash())\n+        self.nodes[2].invalidateblock(self.nodes[2].getbestblockhash())\n+        assert tx1[\"txid\"] in self.nodes[0].getrawmempool()\n+        assert tx1[\"txid\"] in self.nodes[1].getrawmempool()\n+        tx2 = create_tx(utxos_to_spend=[confirmed_utxo], num_outputs=2)\n+        assert tx2[\"txid\"] in self.nodes[0].getrawmempool()\n+\n+        # check that when we find tx2 when we look in the mempool for a tx spending our output\n+        result = self.nodes[0].gettxspendingprevout([ {'txid' : confirmed_utxo['txid'], 'vout' : 0} ])\n+        assert_equal(result, [ {'txid' : confirmed_utxo['txid'], 'vout' : 0, 'spendingtxid' : tx2[\"txid\"]} ])\n+\n+        # check that our txospenderindex has been updated\n+        self.generate(self.wallet, 1)\n+        result = self.nodes[0].gettxspendingprevout([ {'txid' : confirmed_utxo['txid'], 'vout' : 0} ])\n+        assert_equal(result, [ {'txid' : confirmed_utxo['txid'], 'vout' : 0, 'spendingtxid' : tx2[\"txid\"]} ])\n+\n+        self.log.info(\"Check that our txospenderindex is updated when a reorg cancels a spending transaction\")\n+        confirmed_utxo = self.wallet.get_utxo(mark_as_spent = False)\n+        tx1 = create_tx(utxos_to_spend=[confirmed_utxo], num_outputs=1)\n+        tx2 = create_tx(utxos_to_spend=[tx1[\"new_utxos\"][0]], num_outputs=1)\n+        # tx1 spends our utxo, tx2 spends tx1\n+        self.generate(self.wallet, 1)\n+        # tx1 and tx2 are confirmed, and indexed in txospenderindex\n+        result = self.nodes[0].gettxspendingprevout([ {'txid' : confirmed_utxo['txid'], 'vout' : 0} ])\n+        assert_equal(result, [ {'txid' : confirmed_utxo['txid'], 'vout' : 0, 'spendingtxid' : tx1[\"txid\"]} ])\n+        result = self.nodes[0].gettxspendingprevout([ {'txid' : tx1['txid'], 'vout' : 0} ])\n+        assert_equal(result, [ {'txid' : tx1['txid'], 'vout' : 0, 'spendingtxid' : tx2[\"txid\"]} ])\n+        # replace tx1 with tx3",
      "path": "test/functional/rpc_mempool_info.py",
      "position": 89,
      "original_position": 89,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "94babbe6c15a3d5f99ade498808bfee44d4cd604",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'm a bit confused why you are testing two reorgs here. What is not covered in the first one, that is covered in this one?",
      "created_at": "2025-06-19T12:33:14Z",
      "updated_at": "2025-06-19T13:37:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r2156911107",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2156911107"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 157,
      "original_line": 157,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2156984795",
      "pull_request_review_id": 2942451284,
      "id": 2156984795,
      "node_id": "PRRC_kwDOABII586AkPnb",
      "diff_hunk": "@@ -690,12 +697,18 @@ static RPCHelpMan gettxspendingprevout()\n                 const CTransaction* spendingTx = mempool.GetConflictTx(prevout);\n                 if (spendingTx != nullptr) {\n                     o.pushKV(\"spendingtxid\", spendingTx->GetHash().ToString());\n+                    if (return_spending_tx) {",
      "path": "src/rpc/mempool.cpp",
      "position": 1,
      "original_position": 46,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "f3e5a7f20fb2e19509b94adc9428e8cf4951a000",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think you'd want to check `return_spending_tx && *return_spending_tx` here, though maybe just use a boolean directly?",
      "created_at": "2025-06-19T13:07:48Z",
      "updated_at": "2025-06-19T13:37:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r2156984795",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2156984795"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 700,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2166289365",
      "pull_request_review_id": 2957453895,
      "id": 2166289365,
      "node_id": "PRRC_kwDOABII586BHvPV",
      "diff_hunk": "@@ -0,0 +1,181 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <common/args.h>\n+#include <crypto/siphash.h>\n+#include <index/disktxpos.h>\n+#include <index/txospenderindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <random.h>\n+#include <uint256.h>\n+#include <validation.h>\n+\n+// LeveLDB key prefix. We only have one key for now but it will make it easier to add others if needed.",
      "path": "src/index/txospenderindex.cpp",
      "position": 1,
      "original_position": 15,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "f3e5a7f20fb2e19509b94adc9428e8cf4951a000",
      "in_reply_to_id": null,
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "LeveLDB -> LevelDB [typo in comment “LeveLDB key prefix”]",
      "created_at": "2025-06-25T09:40:42Z",
      "updated_at": "2025-06-25T09:40:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r2166289365",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2166289365"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2178238384",
      "pull_request_review_id": 2976475790,
      "id": 2178238384,
      "node_id": "PRRC_kwDOABII586B1Uew",
      "diff_hunk": "@@ -608,6 +609,11 @@ static RPCHelpMan gettxspendingprevout()\n                     },\n                 },\n             },\n+            {\"options\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                {\n+                    {\"mempool_only\", RPCArg::Type::BOOL, RPCArg::DefaultHint{\"true if txospenderindex unavailable, otherwise false\"}, \"If false and empool lacks a relevant spend, use txospenderindex (throws an exception if not available).\"},",
      "path": "src/rpc/mempool.cpp",
      "position": 1,
      "original_position": 14,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "94babbe6c15a3d5f99ade498808bfee44d4cd604",
      "in_reply_to_id": 2156711594,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks, fixed in https://github.com/bitcoin/bitcoin/pull/24539/commits/d5980f39f934a8e251ddaf6801d23bd5a4bcb3ef",
      "created_at": "2025-07-01T17:59:15Z",
      "updated_at": "2025-07-01T17:59:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r2178238384",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2178238384"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 614,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2178238458",
      "pull_request_review_id": 2976475902,
      "id": 2178238458,
      "node_id": "PRRC_kwDOABII586B1Uf6",
      "diff_hunk": "@@ -513,6 +515,7 @@ void SetupServerArgs(ArgsManager& argsman, bool can_listen_ipc)\n     argsman.AddArg(\"-shutdownnotify=<cmd>\", \"Execute command immediately before beginning shutdown. The need for shutdown may be urgent, so be careful not to delay it long (if the command doesn't require interaction with the server, consider having it fork into the background).\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n #endif\n     argsman.AddArg(\"-txindex\", strprintf(\"Maintain a full transaction index, used by the getrawtransaction rpc call (default: %u)\", DEFAULT_TXINDEX), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    argsman.AddArg(\"-txospenderindex\", strprintf(\"Maintain a transaction output spender index, used by the gettxospender rpc call (default: %u)\", DEFAULT_TXOSPENDERINDEX), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "path": "src/init.cpp",
      "position": 1,
      "original_position": 20,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "94babbe6c15a3d5f99ade498808bfee44d4cd604",
      "in_reply_to_id": 2156765639,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks, fixed in https://github.com/bitcoin/bitcoin/pull/24539/commits/d5980f39f934a8e251ddaf6801d23bd5a4bcb3ef",
      "created_at": "2025-07-01T17:59:18Z",
      "updated_at": "2025-07-01T17:59:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r2178238458",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2178238458"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 518,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2178244200",
      "pull_request_review_id": 2976485804,
      "id": 2178244200,
      "node_id": "PRRC_kwDOABII586B1V5o",
      "diff_hunk": "@@ -652,6 +675,8 @@ static RPCHelpMan gettxspendingprevout()\n                 prevouts.emplace_back(txid, nOutput);\n             }\n \n+            const bool f_txospenderindex_ready = !mempool_only.value_or(false) && g_txospenderindex && g_txospenderindex->BlockUntilSyncedToCurrentChain();",
      "path": "src/rpc/mempool.cpp",
      "position": 1,
      "original_position": 55,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "94babbe6c15a3d5f99ade498808bfee44d4cd604",
      "in_reply_to_id": 2156783042,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done in https://github.com/bitcoin/bitcoin/pull/24539/commits/d5980f39f934a8e251ddaf6801d23bd5a4bcb3ef. Moving this does not work (maybe a conflict with the mempool lock ?) I'll investigate.",
      "created_at": "2025-07-01T18:01:51Z",
      "updated_at": "2025-07-01T18:01:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r2178244200",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2178244200"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 678,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2178248747",
      "pull_request_review_id": 2976492913,
      "id": 2178248747,
      "node_id": "PRRC_kwDOABII586B1XAr",
      "diff_hunk": "@@ -94,6 +107,77 @@ def create_tx(**kwargs):\n         self.log.info(\"Missing txid\")\n         assert_raises_rpc_error(-3, \"Missing txid\", self.nodes[0].gettxspendingprevout, [{'vout' : 3}])\n \n+        self.generate(self.wallet, 1)\n+        # spending transactions are found in the index of nodes 0 and 1 but not node 2\n+        result = self.nodes[0].gettxspendingprevout([ {'txid' : confirmed_utxo['txid'], 'vout' : 0}, {'txid' : txidA, 'vout' : 1} ])\n+        assert_equal(result, [ {'txid' : confirmed_utxo['txid'], 'vout' : 0, 'spendingtxid' : txidA}, {'txid' : txidA, 'vout' : 1, 'spendingtxid' : txidC} ])\n+        result = self.nodes[1].gettxspendingprevout([ {'txid' : confirmed_utxo['txid'], 'vout' : 0}, {'txid' : txidA, 'vout' : 1} ])\n+        assert_equal(result, [ {'txid' : confirmed_utxo['txid'], 'vout' : 0, 'spendingtxid' : txidA}, {'txid' : txidA, 'vout' : 1, 'spendingtxid' : txidC} ])\n+        result = self.nodes[2].gettxspendingprevout([ {'txid' : confirmed_utxo['txid'], 'vout' : 0}, {'txid' : txidA, 'vout' : 1} ])\n+        assert_equal(result, [ {'txid' : confirmed_utxo['txid'], 'vout' : 0, 'warnings': ['txospenderindex is unavailable.']}, {'txid' : txidA, 'vout' : 1, 'warnings': ['txospenderindex is unavailable.']} ])\n+\n+\n+        self.log.info(\"Check that our txospenderindex is updated when a reorg replaces a spending transaction\")\n+        confirmed_utxo = self.wallet.get_utxo(mark_as_spent = False)\n+        tx1 = create_tx(utxos_to_spend=[confirmed_utxo], num_outputs=1)\n+        self.generate(self.wallet, 1)\n+        # tx1 is confirmed, and indexed in txospenderindex as spending our utxo\n+        assert not tx1[\"txid\"] in self.nodes[0].getrawmempool()\n+        result = self.nodes[0].gettxspendingprevout([ {'txid' : confirmed_utxo['txid'], 'vout' : 0} ])\n+        assert_equal(result, [ {'txid' : confirmed_utxo['txid'], 'vout' : 0, 'spendingtxid' : tx1[\"txid\"]} ])\n+        # replace tx1 with tx2\n+        self.nodes[0].invalidateblock(self.nodes[0].getbestblockhash())\n+        self.nodes[1].invalidateblock(self.nodes[1].getbestblockhash())\n+        self.nodes[2].invalidateblock(self.nodes[2].getbestblockhash())\n+        assert tx1[\"txid\"] in self.nodes[0].getrawmempool()\n+        assert tx1[\"txid\"] in self.nodes[1].getrawmempool()\n+        tx2 = create_tx(utxos_to_spend=[confirmed_utxo], num_outputs=2)\n+        assert tx2[\"txid\"] in self.nodes[0].getrawmempool()\n+\n+        # check that when we find tx2 when we look in the mempool for a tx spending our output\n+        result = self.nodes[0].gettxspendingprevout([ {'txid' : confirmed_utxo['txid'], 'vout' : 0} ])\n+        assert_equal(result, [ {'txid' : confirmed_utxo['txid'], 'vout' : 0, 'spendingtxid' : tx2[\"txid\"]} ])\n+\n+        # check that our txospenderindex has been updated\n+        self.generate(self.wallet, 1)\n+        result = self.nodes[0].gettxspendingprevout([ {'txid' : confirmed_utxo['txid'], 'vout' : 0} ])\n+        assert_equal(result, [ {'txid' : confirmed_utxo['txid'], 'vout' : 0, 'spendingtxid' : tx2[\"txid\"]} ])\n+\n+        self.log.info(\"Check that our txospenderindex is updated when a reorg cancels a spending transaction\")\n+        confirmed_utxo = self.wallet.get_utxo(mark_as_spent = False)\n+        tx1 = create_tx(utxos_to_spend=[confirmed_utxo], num_outputs=1)\n+        tx2 = create_tx(utxos_to_spend=[tx1[\"new_utxos\"][0]], num_outputs=1)\n+        # tx1 spends our utxo, tx2 spends tx1\n+        self.generate(self.wallet, 1)\n+        # tx1 and tx2 are confirmed, and indexed in txospenderindex\n+        result = self.nodes[0].gettxspendingprevout([ {'txid' : confirmed_utxo['txid'], 'vout' : 0} ])\n+        assert_equal(result, [ {'txid' : confirmed_utxo['txid'], 'vout' : 0, 'spendingtxid' : tx1[\"txid\"]} ])\n+        result = self.nodes[0].gettxspendingprevout([ {'txid' : tx1['txid'], 'vout' : 0} ])\n+        assert_equal(result, [ {'txid' : tx1['txid'], 'vout' : 0, 'spendingtxid' : tx2[\"txid\"]} ])\n+        # replace tx1 with tx3",
      "path": "test/functional/rpc_mempool_info.py",
      "position": 89,
      "original_position": 89,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "94babbe6c15a3d5f99ade498808bfee44d4cd604",
      "in_reply_to_id": 2156911107,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Correct but I wanted to have 2 explicit tests: one when a spending tx is replaced, the other when it is cancelled.",
      "created_at": "2025-07-01T18:03:36Z",
      "updated_at": "2025-07-01T18:03:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r2178248747",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2178248747"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 157,
      "original_line": 157,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2178249989",
      "pull_request_review_id": 2976494898,
      "id": 2178249989,
      "node_id": "PRRC_kwDOABII586B1XUF",
      "diff_hunk": "@@ -690,12 +697,18 @@ static RPCHelpMan gettxspendingprevout()\n                 const CTransaction* spendingTx = mempool.GetConflictTx(prevout);\n                 if (spendingTx != nullptr) {\n                     o.pushKV(\"spendingtxid\", spendingTx->GetHash().ToString());\n+                    if (return_spending_tx) {",
      "path": "src/rpc/mempool.cpp",
      "position": 1,
      "original_position": 46,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "f3e5a7f20fb2e19509b94adc9428e8cf4951a000",
      "in_reply_to_id": 2156984795,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Sorry I don't understand this ?",
      "created_at": "2025-07-01T18:04:14Z",
      "updated_at": "2025-07-01T18:04:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r2178249989",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2178249989"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 700,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2178267285",
      "pull_request_review_id": 2976524644,
      "id": 2178267285,
      "node_id": "PRRC_kwDOABII586B1biV",
      "diff_hunk": "@@ -665,6 +690,35 @@ static RPCHelpMan gettxspendingprevout()\n                 const CTransaction* spendingTx = mempool.GetConflictTx(prevout);\n                 if (spendingTx != nullptr) {\n                     o.pushKV(\"spendingtxid\", spendingTx->GetHash().ToString());\n+                } else if (mempool_only.value_or(false)) {\n+                    // do nothing, caller has selected to only query the mempool\n+                } else if (g_txospenderindex) {\n+                    // no spending tx in mempool, query txospender index\n+                    if (auto spending_txid{g_txospenderindex->FindSpender(prevout)}) {\n+                        o.pushKV(\"spendingtxid\", spending_txid->GetHex());\n+                        if (!f_txospenderindex_ready) {\n+                            // warn if index is not ready as the spending tx that we found may be stale (it may be reorged out)\n+                            UniValue warnings(UniValue::VARR);\n+                            warnings.push_back(\"txospenderindex is still being synced.\");\n+                            o.pushKV(\"warnings\", warnings);\n+                        }\n+                    } else if (!f_txospenderindex_ready) {\n+                        if (mempool_only.has_value()) {  // NOTE: caller explicitly set value to false\n+                            throw JSONRPCError(RPC_MISC_ERROR, strprintf(\"No spending tx for the outpoint %s:%d found, and txospenderindex is still being synced.\", prevout.hash.GetHex(), prevout.n));\n+                        } else {\n+                            UniValue warnings(UniValue::VARR);\n+                            warnings.push_back(\"txospenderindex is still being synced.\");\n+                            o.pushKV(\"warnings\", warnings);\n+                        }\n+                    }\n+                } else {\n+                    if (mempool_only.has_value()) {  // NOTE: caller explicitly set value to false\n+                        throw JSONRPCError(RPC_MISC_ERROR, strprintf(\"No spending tx for the outpoint %s:%d in mempool, and txospenderindex is unavailable.\", prevout.hash.GetHex(), prevout.n));\n+                    } else {\n+                        UniValue warnings(UniValue::VARR);\n+                        warnings.push_back(\"txospenderindex is unavailable.\");",
      "path": "src/rpc/mempool.cpp",
      "position": 103,
      "original_position": 90,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "94babbe6c15a3d5f99ade498808bfee44d4cd604",
      "in_reply_to_id": 2156779448,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It may help users figure out they've made a mistake in their setup/configuration ? ",
      "created_at": "2025-07-01T18:12:42Z",
      "updated_at": "2025-07-01T18:12:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r2178267285",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2178267285"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 730,
      "original_line": 730,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2178272887",
      "pull_request_review_id": 2976535744,
      "id": 2178272887,
      "node_id": "PRRC_kwDOABII586B1c53",
      "diff_hunk": "@@ -0,0 +1,46 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INDEX_TXOSPENDERINDEX_H\n+#define BITCOIN_INDEX_TXOSPENDERINDEX_H\n+\n+#include <index/base.h>\n+\n+static constexpr bool DEFAULT_TXOSPENDERINDEX{false};\n+\n+/**\n+ * TxoSpenderIndex is used to look up which transaction spent a given output.\n+ * The index is written to a LevelDB database and, for each input of each transaction in a block,\n+ * records the outpoint that is spent and the hash of the spending transaction.\n+ */\n+class TxoSpenderIndex final : public BaseIndex\n+{\n+protected:\n+    class DB;\n+\n+private:\n+    const std::unique_ptr<DB> m_db;\n+\n+    bool AllowPrune() const override { return false; }\n+\n+protected:\n+    bool CustomAppend(const interfaces::BlockInfo& block) override;",
      "path": "src/index/txospenderindex.h",
      "position": 31,
      "original_position": 28,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "16b5cb0b9d343de1080ec4761bd8f20d668059ee",
      "in_reply_to_id": 1028544839,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It did help when the index returned a tx id, it does not anymore.",
      "created_at": "2025-07-01T18:15:10Z",
      "updated_at": "2025-07-01T18:15:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r2178272887",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2178272887"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 31,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2194840399",
      "pull_request_review_id": 3001259597,
      "id": 2194840399,
      "node_id": "PRRC_kwDOABII586C0ptP",
      "diff_hunk": "@@ -690,12 +697,18 @@ static RPCHelpMan gettxspendingprevout()\n                 const CTransaction* spendingTx = mempool.GetConflictTx(prevout);\n                 if (spendingTx != nullptr) {\n                     o.pushKV(\"spendingtxid\", spendingTx->GetHash().ToString());\n+                    if (return_spending_tx) {",
      "path": "src/rpc/mempool.cpp",
      "position": 1,
      "original_position": 46,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "f3e5a7f20fb2e19509b94adc9428e8cf4951a000",
      "in_reply_to_id": 2156984795,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The way I read it you are currently just checking if the field is set, not if it is set to true. At least providing \"return_spending_tx\":false in the cli still provides the full transaction.",
      "created_at": "2025-07-09T12:01:27Z",
      "updated_at": "2025-07-09T12:01:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r2194840399",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2194840399"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 700,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2194916715",
      "pull_request_review_id": 3001380497,
      "id": 2194916715,
      "node_id": "PRRC_kwDOABII586C08Vr",
      "diff_hunk": "@@ -665,6 +690,35 @@ static RPCHelpMan gettxspendingprevout()\n                 const CTransaction* spendingTx = mempool.GetConflictTx(prevout);\n                 if (spendingTx != nullptr) {\n                     o.pushKV(\"spendingtxid\", spendingTx->GetHash().ToString());\n+                } else if (mempool_only.value_or(false)) {\n+                    // do nothing, caller has selected to only query the mempool\n+                } else if (g_txospenderindex) {\n+                    // no spending tx in mempool, query txospender index\n+                    if (auto spending_txid{g_txospenderindex->FindSpender(prevout)}) {\n+                        o.pushKV(\"spendingtxid\", spending_txid->GetHex());\n+                        if (!f_txospenderindex_ready) {\n+                            // warn if index is not ready as the spending tx that we found may be stale (it may be reorged out)\n+                            UniValue warnings(UniValue::VARR);\n+                            warnings.push_back(\"txospenderindex is still being synced.\");\n+                            o.pushKV(\"warnings\", warnings);\n+                        }\n+                    } else if (!f_txospenderindex_ready) {\n+                        if (mempool_only.has_value()) {  // NOTE: caller explicitly set value to false\n+                            throw JSONRPCError(RPC_MISC_ERROR, strprintf(\"No spending tx for the outpoint %s:%d found, and txospenderindex is still being synced.\", prevout.hash.GetHex(), prevout.n));\n+                        } else {\n+                            UniValue warnings(UniValue::VARR);\n+                            warnings.push_back(\"txospenderindex is still being synced.\");\n+                            o.pushKV(\"warnings\", warnings);\n+                        }\n+                    }\n+                } else {\n+                    if (mempool_only.has_value()) {  // NOTE: caller explicitly set value to false\n+                        throw JSONRPCError(RPC_MISC_ERROR, strprintf(\"No spending tx for the outpoint %s:%d in mempool, and txospenderindex is unavailable.\", prevout.hash.GetHex(), prevout.n));\n+                    } else {\n+                        UniValue warnings(UniValue::VARR);\n+                        warnings.push_back(\"txospenderindex is unavailable.\");",
      "path": "src/rpc/mempool.cpp",
      "position": 103,
      "original_position": 90,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "94babbe6c15a3d5f99ade498808bfee44d4cd604",
      "in_reply_to_id": 2156779448,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes, I just wasn't sure if this is really useful. There are many other ways something could be misconfigured. We'd also be warning here now on what continues to be just normal working behaviour. Clients should be querying `getindexinfo` first anway in my opinion, but then again, I am also not sure what exactly the precedent is here. Maybe add a note to pass `\"mempool_only\":true` to silence the warning?",
      "created_at": "2025-07-09T12:35:31Z",
      "updated_at": "2025-07-09T12:35:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r2194916715",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2194916715"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 730,
      "original_line": 730,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2209316365",
      "pull_request_review_id": 3023239719,
      "id": 2209316365,
      "node_id": "PRRC_kwDOABII586Dr34N",
      "diff_hunk": "@@ -0,0 +1,167 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <common/args.h>\n+#include <crypto/siphash.h>\n+#include <index/disktxpos.h>\n+#include <index/txospenderindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <random.h>\n+#include <uint256.h>\n+#include <validation.h>\n+\n+// LevelDB key prefix. We only have one key for now but it will make it easier to add others if needed.\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};\n+\n+std::unique_ptr<TxoSpenderIndex> g_txospenderindex;\n+\n+struct DBKey {\n+    uint64_t hash;\n+    CDiskTxPos pos;\n+\n+    explicit DBKey(const uint64_t& hash_in, const CDiskTxPos& pos_in) : hash(hash_in), pos(pos_in) {}\n+\n+    SERIALIZE_METHODS(DBKey, obj)\n+    {\n+        uint8_t prefix{DB_TXOSPENDERINDEX};\n+        READWRITE(prefix);\n+        if (prefix != DB_TXOSPENDERINDEX) {\n+            throw std::ios_base::failure(\"Invalid format for spender index DB key\");\n+        }\n+        READWRITE(obj.hash);\n+        READWRITE(obj.pos);\n+    }\n+};\n+\n+TxoSpenderIndex::TxoSpenderIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"txospenderindex\")\n+{\n+    fs::path path{gArgs.GetDataDirNet() / \"indexes\" / \"txospenderindex\"};\n+    fs::create_directories(path);\n+\n+    m_db = std::make_unique<TxoSpenderIndex::DB>(path / \"db\", n_cache_size, f_memory, f_wipe);\n+    if (!m_db->Read(\"siphash_key\", m_siphash_key)) {\n+        FastRandomContext rng(false);\n+        m_siphash_key = {rng.rand64(), rng.rand64()};\n+        assert(m_db->Write(\"siphash_key\", m_siphash_key));\n+    }\n+}\n+\n+TxoSpenderIndex::~TxoSpenderIndex() = default;\n+\n+interfaces::Chain::NotifyOptions TxoSpenderIndex::CustomOptions()\n+{\n+    interfaces::Chain::NotifyOptions options;\n+    options.disconnect_data = true;\n+    return options;\n+}\n+\n+uint64_t CreateKeyPrefix(std::pair<uint64_t, uint64_t> siphash_key, const COutPoint& vout)\n+{\n+    return SipHashUint256Extra(siphash_key.first, siphash_key.second, vout.hash.ToUint256(), vout.n);\n+}\n+\n+DBKey CreateKey(std::pair<uint64_t, uint64_t> siphash_key, const COutPoint& vout, const CDiskTxPos& pos)\n+{\n+    return DBKey(CreateKeyPrefix(siphash_key, vout), pos);\n+}\n+\n+bool TxoSpenderIndex::WriteSpenderInfos(const std::vector<std::pair<COutPoint, CDiskTxPos>>& items)\n+{\n+    CDBBatch batch(*m_db);\n+    for (const auto& [outpoint, pos] : items) {\n+        DBKey key(CreateKey(m_siphash_key, outpoint, pos));\n+        // key is hash(spent outpoint) | disk pos, value is empty\n+        batch.Write(key, \"\");\n+    }\n+    return m_db->WriteBatch(batch);\n+}\n+\n+\n+bool TxoSpenderIndex::EraseSpenderInfos(const std::vector<std::pair<COutPoint, CDiskTxPos>>& items)\n+{\n+    CDBBatch batch(*m_db);\n+    for (const auto& [outpoint, pos] : items) {\n+        batch.Erase(CreateKey(m_siphash_key, outpoint, pos));\n+    }\n+    return m_db->WriteBatch(batch);\n+}\n+\n+bool TxoSpenderIndex::CustomAppend(const interfaces::BlockInfo& block)\n+{\n+    std::vector<std::pair<COutPoint, CDiskTxPos>> items;\n+    items.reserve(block.data->vtx.size());",
      "path": "src/index/txospenderindex.cpp",
      "position": 95,
      "original_position": 95,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "9b750be5ecb0a8d063a98225c0ac997cca0885eb",
      "in_reply_to_id": null,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: `items` size will be the total number of this block's inputs (not its transactions' count), right?",
      "created_at": "2025-07-16T05:57:08Z",
      "updated_at": "2025-07-16T06:07:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r2209316365",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2209316365"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2209321522",
      "pull_request_review_id": 3023239719,
      "id": 2209321522,
      "node_id": "PRRC_kwDOABII586Dr5Iy",
      "diff_hunk": "@@ -0,0 +1,167 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <common/args.h>\n+#include <crypto/siphash.h>\n+#include <index/disktxpos.h>\n+#include <index/txospenderindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <random.h>\n+#include <uint256.h>\n+#include <validation.h>\n+\n+// LevelDB key prefix. We only have one key for now but it will make it easier to add others if needed.\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};\n+\n+std::unique_ptr<TxoSpenderIndex> g_txospenderindex;\n+\n+struct DBKey {\n+    uint64_t hash;\n+    CDiskTxPos pos;\n+\n+    explicit DBKey(const uint64_t& hash_in, const CDiskTxPos& pos_in) : hash(hash_in), pos(pos_in) {}\n+\n+    SERIALIZE_METHODS(DBKey, obj)\n+    {\n+        uint8_t prefix{DB_TXOSPENDERINDEX};\n+        READWRITE(prefix);\n+        if (prefix != DB_TXOSPENDERINDEX) {\n+            throw std::ios_base::failure(\"Invalid format for spender index DB key\");\n+        }\n+        READWRITE(obj.hash);\n+        READWRITE(obj.pos);\n+    }\n+};\n+\n+TxoSpenderIndex::TxoSpenderIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"txospenderindex\")\n+{\n+    fs::path path{gArgs.GetDataDirNet() / \"indexes\" / \"txospenderindex\"};\n+    fs::create_directories(path);\n+\n+    m_db = std::make_unique<TxoSpenderIndex::DB>(path / \"db\", n_cache_size, f_memory, f_wipe);\n+    if (!m_db->Read(\"siphash_key\", m_siphash_key)) {\n+        FastRandomContext rng(false);\n+        m_siphash_key = {rng.rand64(), rng.rand64()};\n+        assert(m_db->Write(\"siphash_key\", m_siphash_key));\n+    }\n+}\n+\n+TxoSpenderIndex::~TxoSpenderIndex() = default;\n+\n+interfaces::Chain::NotifyOptions TxoSpenderIndex::CustomOptions()\n+{\n+    interfaces::Chain::NotifyOptions options;\n+    options.disconnect_data = true;\n+    return options;\n+}\n+\n+uint64_t CreateKeyPrefix(std::pair<uint64_t, uint64_t> siphash_key, const COutPoint& vout)\n+{\n+    return SipHashUint256Extra(siphash_key.first, siphash_key.second, vout.hash.ToUint256(), vout.n);\n+}\n+\n+DBKey CreateKey(std::pair<uint64_t, uint64_t> siphash_key, const COutPoint& vout, const CDiskTxPos& pos)\n+{\n+    return DBKey(CreateKeyPrefix(siphash_key, vout), pos);\n+}\n+\n+bool TxoSpenderIndex::WriteSpenderInfos(const std::vector<std::pair<COutPoint, CDiskTxPos>>& items)\n+{\n+    CDBBatch batch(*m_db);\n+    for (const auto& [outpoint, pos] : items) {\n+        DBKey key(CreateKey(m_siphash_key, outpoint, pos));\n+        // key is hash(spent outpoint) | disk pos, value is empty\n+        batch.Write(key, \"\");\n+    }\n+    return m_db->WriteBatch(batch);\n+}\n+\n+\n+bool TxoSpenderIndex::EraseSpenderInfos(const std::vector<std::pair<COutPoint, CDiskTxPos>>& items)\n+{\n+    CDBBatch batch(*m_db);\n+    for (const auto& [outpoint, pos] : items) {\n+        batch.Erase(CreateKey(m_siphash_key, outpoint, pos));\n+    }\n+    return m_db->WriteBatch(batch);\n+}\n+\n+bool TxoSpenderIndex::CustomAppend(const interfaces::BlockInfo& block)\n+{\n+    std::vector<std::pair<COutPoint, CDiskTxPos>> items;\n+    items.reserve(block.data->vtx.size());\n+\n+    CDiskTxPos pos({block.file_number, block.data_pos}, GetSizeOfCompactSize(block.data->vtx.size()));\n+    for (const auto& tx : block.data->vtx) {\n+        if (!tx->IsCoinBase()) {\n+            for (const auto& input : tx->vin) {\n+                items.emplace_back(input.prevout, pos);\n+            }\n+        }\n+        pos.nTxOffset += ::GetSerializeSize(TX_WITH_WITNESS(*tx));\n+    }\n+\n+    return WriteSpenderInfos(items);\n+}\n+\n+bool TxoSpenderIndex::CustomRemove(const interfaces::BlockInfo& block)\n+{\n+    std::vector<std::pair<COutPoint, CDiskTxPos>> items;",
      "path": "src/index/txospenderindex.cpp",
      "position": 1,
      "original_position": 112,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "9b750be5ecb0a8d063a98225c0ac997cca0885eb",
      "in_reply_to_id": null,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Looks similar to the code above - maybe refactor into a helper function?",
      "created_at": "2025-07-16T05:59:38Z",
      "updated_at": "2025-07-16T06:07:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r2209321522",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2209321522"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 112,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2209333265",
      "pull_request_review_id": 3023239719,
      "id": 2209333265,
      "node_id": "PRRC_kwDOABII586Dr8AR",
      "diff_hunk": "@@ -0,0 +1,167 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <common/args.h>\n+#include <crypto/siphash.h>\n+#include <index/disktxpos.h>\n+#include <index/txospenderindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <random.h>\n+#include <uint256.h>\n+#include <validation.h>\n+\n+// LevelDB key prefix. We only have one key for now but it will make it easier to add others if needed.\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};\n+\n+std::unique_ptr<TxoSpenderIndex> g_txospenderindex;\n+\n+struct DBKey {\n+    uint64_t hash;\n+    CDiskTxPos pos;",
      "path": "src/index/txospenderindex.cpp",
      "position": 1,
      "original_position": 22,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "9b750be5ecb0a8d063a98225c0ac997cca0885eb",
      "in_reply_to_id": null,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Consider using `FlatFilePos` here (which contains 2 `int`s) instead of `CDiskTxPos` (which contains also the block's offset, taking an additional `int`).",
      "created_at": "2025-07-16T06:04:06Z",
      "updated_at": "2025-07-16T06:07:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r2209333265",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2209333265"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2209336131",
      "pull_request_review_id": 3023239719,
      "id": 2209336131,
      "node_id": "PRRC_kwDOABII586Dr8tD",
      "diff_hunk": "@@ -0,0 +1,167 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <common/args.h>\n+#include <crypto/siphash.h>\n+#include <index/disktxpos.h>\n+#include <index/txospenderindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <random.h>\n+#include <uint256.h>\n+#include <validation.h>\n+\n+// LevelDB key prefix. We only have one key for now but it will make it easier to add others if needed.\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};\n+\n+std::unique_ptr<TxoSpenderIndex> g_txospenderindex;\n+\n+struct DBKey {\n+    uint64_t hash;\n+    CDiskTxPos pos;\n+\n+    explicit DBKey(const uint64_t& hash_in, const CDiskTxPos& pos_in) : hash(hash_in), pos(pos_in) {}\n+\n+    SERIALIZE_METHODS(DBKey, obj)\n+    {\n+        uint8_t prefix{DB_TXOSPENDERINDEX};\n+        READWRITE(prefix);\n+        if (prefix != DB_TXOSPENDERINDEX) {\n+            throw std::ios_base::failure(\"Invalid format for spender index DB key\");\n+        }\n+        READWRITE(obj.hash);\n+        READWRITE(obj.pos);\n+    }\n+};\n+\n+TxoSpenderIndex::TxoSpenderIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"txospenderindex\")\n+{\n+    fs::path path{gArgs.GetDataDirNet() / \"indexes\" / \"txospenderindex\"};\n+    fs::create_directories(path);\n+\n+    m_db = std::make_unique<TxoSpenderIndex::DB>(path / \"db\", n_cache_size, f_memory, f_wipe);\n+    if (!m_db->Read(\"siphash_key\", m_siphash_key)) {\n+        FastRandomContext rng(false);\n+        m_siphash_key = {rng.rand64(), rng.rand64()};\n+        assert(m_db->Write(\"siphash_key\", m_siphash_key));\n+    }\n+}\n+\n+TxoSpenderIndex::~TxoSpenderIndex() = default;\n+\n+interfaces::Chain::NotifyOptions TxoSpenderIndex::CustomOptions()\n+{\n+    interfaces::Chain::NotifyOptions options;\n+    options.disconnect_data = true;\n+    return options;\n+}\n+\n+uint64_t CreateKeyPrefix(std::pair<uint64_t, uint64_t> siphash_key, const COutPoint& vout)\n+{\n+    return SipHashUint256Extra(siphash_key.first, siphash_key.second, vout.hash.ToUint256(), vout.n);\n+}\n+\n+DBKey CreateKey(std::pair<uint64_t, uint64_t> siphash_key, const COutPoint& vout, const CDiskTxPos& pos)\n+{\n+    return DBKey(CreateKeyPrefix(siphash_key, vout), pos);\n+}\n+\n+bool TxoSpenderIndex::WriteSpenderInfos(const std::vector<std::pair<COutPoint, CDiskTxPos>>& items)\n+{\n+    CDBBatch batch(*m_db);\n+    for (const auto& [outpoint, pos] : items) {\n+        DBKey key(CreateKey(m_siphash_key, outpoint, pos));\n+        // key is hash(spent outpoint) | disk pos, value is empty\n+        batch.Write(key, \"\");\n+    }\n+    return m_db->WriteBatch(batch);\n+}\n+\n+\n+bool TxoSpenderIndex::EraseSpenderInfos(const std::vector<std::pair<COutPoint, CDiskTxPos>>& items)\n+{\n+    CDBBatch batch(*m_db);\n+    for (const auto& [outpoint, pos] : items) {\n+        batch.Erase(CreateKey(m_siphash_key, outpoint, pos));\n+    }\n+    return m_db->WriteBatch(batch);\n+}\n+\n+bool TxoSpenderIndex::CustomAppend(const interfaces::BlockInfo& block)\n+{\n+    std::vector<std::pair<COutPoint, CDiskTxPos>> items;\n+    items.reserve(block.data->vtx.size());\n+\n+    CDiskTxPos pos({block.file_number, block.data_pos}, GetSizeOfCompactSize(block.data->vtx.size()));\n+    for (const auto& tx : block.data->vtx) {\n+        if (!tx->IsCoinBase()) {\n+            for (const auto& input : tx->vin) {\n+                items.emplace_back(input.prevout, pos);\n+            }\n+        }\n+        pos.nTxOffset += ::GetSerializeSize(TX_WITH_WITNESS(*tx));\n+    }\n+\n+    return WriteSpenderInfos(items);\n+}\n+\n+bool TxoSpenderIndex::CustomRemove(const interfaces::BlockInfo& block)\n+{\n+    std::vector<std::pair<COutPoint, CDiskTxPos>> items;\n+    items.reserve(block.data->vtx.size());\n+\n+    CDiskTxPos pos({block.file_number, block.data_pos}, GetSizeOfCompactSize(block.data->vtx.size()));\n+    for (const auto& tx : block.data->vtx) {\n+        if (!tx->IsCoinBase()) {\n+            for (const auto& input : tx->vin) {\n+                items.emplace_back(input.prevout, pos);\n+            }\n+        }\n+        pos.nTxOffset += ::GetSerializeSize(TX_WITH_WITNESS(*tx));\n+    }\n+\n+    return EraseSpenderInfos(items);\n+}\n+\n+bool TxoSpenderIndex::ReadTransaction(const CDiskTxPos& tx_pos, CTransactionRef& tx) const\n+{\n+    AutoFile file{m_chainstate->m_blockman.OpenBlockFile(tx_pos, true)};\n+    if (file.IsNull()) {\n+        return false;\n+    }\n+    CBlockHeader header;\n+    try {\n+        file >> header;",
      "path": "src/index/txospenderindex.cpp",
      "position": 1,
      "original_position": 136,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "9b750be5ecb0a8d063a98225c0ac997cca0885eb",
      "in_reply_to_id": null,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Do we need the header's data?",
      "created_at": "2025-07-16T06:05:05Z",
      "updated_at": "2025-07-16T06:07:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r2209336131",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2209336131"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 136,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2210633065",
      "pull_request_review_id": 3025351755,
      "id": 2210633065,
      "node_id": "PRRC_kwDOABII586Dw5Vp",
      "diff_hunk": "@@ -0,0 +1,167 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <common/args.h>\n+#include <crypto/siphash.h>\n+#include <index/disktxpos.h>\n+#include <index/txospenderindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <random.h>\n+#include <uint256.h>\n+#include <validation.h>\n+\n+// LevelDB key prefix. We only have one key for now but it will make it easier to add others if needed.\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};\n+\n+std::unique_ptr<TxoSpenderIndex> g_txospenderindex;\n+\n+struct DBKey {\n+    uint64_t hash;\n+    CDiskTxPos pos;\n+\n+    explicit DBKey(const uint64_t& hash_in, const CDiskTxPos& pos_in) : hash(hash_in), pos(pos_in) {}\n+\n+    SERIALIZE_METHODS(DBKey, obj)\n+    {\n+        uint8_t prefix{DB_TXOSPENDERINDEX};\n+        READWRITE(prefix);\n+        if (prefix != DB_TXOSPENDERINDEX) {\n+            throw std::ios_base::failure(\"Invalid format for spender index DB key\");\n+        }\n+        READWRITE(obj.hash);\n+        READWRITE(obj.pos);\n+    }\n+};\n+\n+TxoSpenderIndex::TxoSpenderIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"txospenderindex\")\n+{\n+    fs::path path{gArgs.GetDataDirNet() / \"indexes\" / \"txospenderindex\"};\n+    fs::create_directories(path);\n+\n+    m_db = std::make_unique<TxoSpenderIndex::DB>(path / \"db\", n_cache_size, f_memory, f_wipe);\n+    if (!m_db->Read(\"siphash_key\", m_siphash_key)) {\n+        FastRandomContext rng(false);\n+        m_siphash_key = {rng.rand64(), rng.rand64()};\n+        assert(m_db->Write(\"siphash_key\", m_siphash_key));\n+    }\n+}\n+\n+TxoSpenderIndex::~TxoSpenderIndex() = default;\n+\n+interfaces::Chain::NotifyOptions TxoSpenderIndex::CustomOptions()\n+{\n+    interfaces::Chain::NotifyOptions options;\n+    options.disconnect_data = true;\n+    return options;\n+}\n+\n+uint64_t CreateKeyPrefix(std::pair<uint64_t, uint64_t> siphash_key, const COutPoint& vout)\n+{\n+    return SipHashUint256Extra(siphash_key.first, siphash_key.second, vout.hash.ToUint256(), vout.n);\n+}\n+\n+DBKey CreateKey(std::pair<uint64_t, uint64_t> siphash_key, const COutPoint& vout, const CDiskTxPos& pos)\n+{\n+    return DBKey(CreateKeyPrefix(siphash_key, vout), pos);\n+}\n+\n+bool TxoSpenderIndex::WriteSpenderInfos(const std::vector<std::pair<COutPoint, CDiskTxPos>>& items)\n+{\n+    CDBBatch batch(*m_db);\n+    for (const auto& [outpoint, pos] : items) {\n+        DBKey key(CreateKey(m_siphash_key, outpoint, pos));\n+        // key is hash(spent outpoint) | disk pos, value is empty\n+        batch.Write(key, \"\");\n+    }\n+    return m_db->WriteBatch(batch);\n+}\n+\n+\n+bool TxoSpenderIndex::EraseSpenderInfos(const std::vector<std::pair<COutPoint, CDiskTxPos>>& items)\n+{\n+    CDBBatch batch(*m_db);\n+    for (const auto& [outpoint, pos] : items) {\n+        batch.Erase(CreateKey(m_siphash_key, outpoint, pos));\n+    }\n+    return m_db->WriteBatch(batch);\n+}\n+\n+bool TxoSpenderIndex::CustomAppend(const interfaces::BlockInfo& block)\n+{\n+    std::vector<std::pair<COutPoint, CDiskTxPos>> items;\n+    items.reserve(block.data->vtx.size());",
      "path": "src/index/txospenderindex.cpp",
      "position": 95,
      "original_position": 95,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "9b750be5ecb0a8d063a98225c0ac997cca0885eb",
      "in_reply_to_id": 2209316365,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Correct, I did not want to loop twice over the block's transactions to compute the actual number of spent inputs.",
      "created_at": "2025-07-16T14:40:14Z",
      "updated_at": "2025-07-16T14:40:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r2210633065",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2210633065"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2210635923",
      "pull_request_review_id": 3025356522,
      "id": 2210635923,
      "node_id": "PRRC_kwDOABII586Dw6CT",
      "diff_hunk": "@@ -0,0 +1,167 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <common/args.h>\n+#include <crypto/siphash.h>\n+#include <index/disktxpos.h>\n+#include <index/txospenderindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <random.h>\n+#include <uint256.h>\n+#include <validation.h>\n+\n+// LevelDB key prefix. We only have one key for now but it will make it easier to add others if needed.\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};\n+\n+std::unique_ptr<TxoSpenderIndex> g_txospenderindex;\n+\n+struct DBKey {\n+    uint64_t hash;\n+    CDiskTxPos pos;",
      "path": "src/index/txospenderindex.cpp",
      "position": 1,
      "original_position": 22,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "9b750be5ecb0a8d063a98225c0ac997cca0885eb",
      "in_reply_to_id": 2209333265,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "How can I find the tx without the block's offset ?",
      "created_at": "2025-07-16T14:41:19Z",
      "updated_at": "2025-07-16T14:41:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r2210635923",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2210635923"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2210901843",
      "pull_request_review_id": 3025798748,
      "id": 2210901843,
      "node_id": "PRRC_kwDOABII586Dx69T",
      "diff_hunk": "@@ -0,0 +1,167 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <common/args.h>\n+#include <crypto/siphash.h>\n+#include <index/disktxpos.h>\n+#include <index/txospenderindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <random.h>\n+#include <uint256.h>\n+#include <validation.h>\n+\n+// LevelDB key prefix. We only have one key for now but it will make it easier to add others if needed.\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};\n+\n+std::unique_ptr<TxoSpenderIndex> g_txospenderindex;\n+\n+struct DBKey {\n+    uint64_t hash;\n+    CDiskTxPos pos;",
      "path": "src/index/txospenderindex.cpp",
      "position": 1,
      "original_position": 22,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "9b750be5ecb0a8d063a98225c0ac997cca0885eb",
      "in_reply_to_id": 2209333265,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I suggest saving the transaction position on disk (without its block offset):\r\n```c++\r\nbool TxoSpenderIndex::CustomAppend(const interfaces::BlockInfo& block)\r\n{\r\n    std::vector<std::pair<COutPoint, CDiskTxPos>> items;\r\n    items.reserve(block.data->vtx.size());\r\n\r\n    FlatFilePos pos{block.file_number, block.data_pos};\r\n    pos.nPos += GetSizeOfCompactSize(block.data->vtx.size());\r\n    for (const auto& tx : block.data->vtx) {\r\n        if (!tx->IsCoinBase()) {\r\n            for (const auto& input : tx->vin) {\r\n                items.emplace_back(input.prevout, pos);\r\n            }\r\n        }\r\n        pos.nPos += ::GetSerializeSize(TX_WITH_WITNESS(*tx));\r\n    }\r\n\r\n    return WriteSpenderInfos(items);\r\n}\r\n```\r\nWDYT?",
      "created_at": "2025-07-16T16:21:20Z",
      "updated_at": "2025-07-16T16:21:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r2210901843",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2210901843"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2214083519",
      "pull_request_review_id": 3030690420,
      "id": 2214083519,
      "node_id": "PRRC_kwDOABII586D-Du_",
      "diff_hunk": "@@ -0,0 +1,167 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <common/args.h>\n+#include <crypto/siphash.h>\n+#include <index/disktxpos.h>\n+#include <index/txospenderindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <random.h>\n+#include <uint256.h>\n+#include <validation.h>\n+\n+// LevelDB key prefix. We only have one key for now but it will make it easier to add others if needed.\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};\n+\n+std::unique_ptr<TxoSpenderIndex> g_txospenderindex;\n+\n+struct DBKey {\n+    uint64_t hash;\n+    CDiskTxPos pos;",
      "path": "src/index/txospenderindex.cpp",
      "position": 1,
      "original_position": 22,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "9b750be5ecb0a8d063a98225c0ac997cca0885eb",
      "in_reply_to_id": 2209333265,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks again it's simpler like this, done  in https://github.com/bitcoin/bitcoin/pull/24539/commits/42d3aa8787d9411ad2a9c9ae9c828aa1285853ec",
      "created_at": "2025-07-17T19:06:04Z",
      "updated_at": "2025-07-17T19:06:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r2214083519",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2214083519"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2214083883",
      "pull_request_review_id": 3030691239,
      "id": 2214083883,
      "node_id": "PRRC_kwDOABII586D-D0r",
      "diff_hunk": "@@ -0,0 +1,167 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <common/args.h>\n+#include <crypto/siphash.h>\n+#include <index/disktxpos.h>\n+#include <index/txospenderindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <random.h>\n+#include <uint256.h>\n+#include <validation.h>\n+\n+// LevelDB key prefix. We only have one key for now but it will make it easier to add others if needed.\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};\n+\n+std::unique_ptr<TxoSpenderIndex> g_txospenderindex;\n+\n+struct DBKey {\n+    uint64_t hash;\n+    CDiskTxPos pos;\n+\n+    explicit DBKey(const uint64_t& hash_in, const CDiskTxPos& pos_in) : hash(hash_in), pos(pos_in) {}\n+\n+    SERIALIZE_METHODS(DBKey, obj)\n+    {\n+        uint8_t prefix{DB_TXOSPENDERINDEX};\n+        READWRITE(prefix);\n+        if (prefix != DB_TXOSPENDERINDEX) {\n+            throw std::ios_base::failure(\"Invalid format for spender index DB key\");\n+        }\n+        READWRITE(obj.hash);\n+        READWRITE(obj.pos);\n+    }\n+};\n+\n+TxoSpenderIndex::TxoSpenderIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"txospenderindex\")\n+{\n+    fs::path path{gArgs.GetDataDirNet() / \"indexes\" / \"txospenderindex\"};\n+    fs::create_directories(path);\n+\n+    m_db = std::make_unique<TxoSpenderIndex::DB>(path / \"db\", n_cache_size, f_memory, f_wipe);\n+    if (!m_db->Read(\"siphash_key\", m_siphash_key)) {\n+        FastRandomContext rng(false);\n+        m_siphash_key = {rng.rand64(), rng.rand64()};\n+        assert(m_db->Write(\"siphash_key\", m_siphash_key));\n+    }\n+}\n+\n+TxoSpenderIndex::~TxoSpenderIndex() = default;\n+\n+interfaces::Chain::NotifyOptions TxoSpenderIndex::CustomOptions()\n+{\n+    interfaces::Chain::NotifyOptions options;\n+    options.disconnect_data = true;\n+    return options;\n+}\n+\n+uint64_t CreateKeyPrefix(std::pair<uint64_t, uint64_t> siphash_key, const COutPoint& vout)\n+{\n+    return SipHashUint256Extra(siphash_key.first, siphash_key.second, vout.hash.ToUint256(), vout.n);\n+}\n+\n+DBKey CreateKey(std::pair<uint64_t, uint64_t> siphash_key, const COutPoint& vout, const CDiskTxPos& pos)\n+{\n+    return DBKey(CreateKeyPrefix(siphash_key, vout), pos);\n+}\n+\n+bool TxoSpenderIndex::WriteSpenderInfos(const std::vector<std::pair<COutPoint, CDiskTxPos>>& items)\n+{\n+    CDBBatch batch(*m_db);\n+    for (const auto& [outpoint, pos] : items) {\n+        DBKey key(CreateKey(m_siphash_key, outpoint, pos));\n+        // key is hash(spent outpoint) | disk pos, value is empty\n+        batch.Write(key, \"\");\n+    }\n+    return m_db->WriteBatch(batch);\n+}\n+\n+\n+bool TxoSpenderIndex::EraseSpenderInfos(const std::vector<std::pair<COutPoint, CDiskTxPos>>& items)\n+{\n+    CDBBatch batch(*m_db);\n+    for (const auto& [outpoint, pos] : items) {\n+        batch.Erase(CreateKey(m_siphash_key, outpoint, pos));\n+    }\n+    return m_db->WriteBatch(batch);\n+}\n+\n+bool TxoSpenderIndex::CustomAppend(const interfaces::BlockInfo& block)\n+{\n+    std::vector<std::pair<COutPoint, CDiskTxPos>> items;\n+    items.reserve(block.data->vtx.size());\n+\n+    CDiskTxPos pos({block.file_number, block.data_pos}, GetSizeOfCompactSize(block.data->vtx.size()));\n+    for (const auto& tx : block.data->vtx) {\n+        if (!tx->IsCoinBase()) {\n+            for (const auto& input : tx->vin) {\n+                items.emplace_back(input.prevout, pos);\n+            }\n+        }\n+        pos.nTxOffset += ::GetSerializeSize(TX_WITH_WITNESS(*tx));\n+    }\n+\n+    return WriteSpenderInfos(items);\n+}\n+\n+bool TxoSpenderIndex::CustomRemove(const interfaces::BlockInfo& block)\n+{\n+    std::vector<std::pair<COutPoint, CDiskTxPos>> items;",
      "path": "src/index/txospenderindex.cpp",
      "position": 1,
      "original_position": 112,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "9b750be5ecb0a8d063a98225c0ac997cca0885eb",
      "in_reply_to_id": 2209321522,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done in done  in https://github.com/bitcoin/bitcoin/pull/24539/commits/42d3aa8787d9411ad2a9c9ae9c828aa1285853ec",
      "created_at": "2025-07-17T19:06:13Z",
      "updated_at": "2025-07-17T19:06:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r2214083883",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2214083883"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 112,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2214085643",
      "pull_request_review_id": 3030695265,
      "id": 2214085643,
      "node_id": "PRRC_kwDOABII586D-EQL",
      "diff_hunk": "@@ -0,0 +1,167 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <common/args.h>\n+#include <crypto/siphash.h>\n+#include <index/disktxpos.h>\n+#include <index/txospenderindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <random.h>\n+#include <uint256.h>\n+#include <validation.h>\n+\n+// LevelDB key prefix. We only have one key for now but it will make it easier to add others if needed.\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};\n+\n+std::unique_ptr<TxoSpenderIndex> g_txospenderindex;\n+\n+struct DBKey {\n+    uint64_t hash;\n+    CDiskTxPos pos;\n+\n+    explicit DBKey(const uint64_t& hash_in, const CDiskTxPos& pos_in) : hash(hash_in), pos(pos_in) {}\n+\n+    SERIALIZE_METHODS(DBKey, obj)\n+    {\n+        uint8_t prefix{DB_TXOSPENDERINDEX};\n+        READWRITE(prefix);\n+        if (prefix != DB_TXOSPENDERINDEX) {\n+            throw std::ios_base::failure(\"Invalid format for spender index DB key\");\n+        }\n+        READWRITE(obj.hash);\n+        READWRITE(obj.pos);\n+    }\n+};\n+\n+TxoSpenderIndex::TxoSpenderIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"txospenderindex\")\n+{\n+    fs::path path{gArgs.GetDataDirNet() / \"indexes\" / \"txospenderindex\"};\n+    fs::create_directories(path);\n+\n+    m_db = std::make_unique<TxoSpenderIndex::DB>(path / \"db\", n_cache_size, f_memory, f_wipe);\n+    if (!m_db->Read(\"siphash_key\", m_siphash_key)) {\n+        FastRandomContext rng(false);\n+        m_siphash_key = {rng.rand64(), rng.rand64()};\n+        assert(m_db->Write(\"siphash_key\", m_siphash_key));\n+    }\n+}\n+\n+TxoSpenderIndex::~TxoSpenderIndex() = default;\n+\n+interfaces::Chain::NotifyOptions TxoSpenderIndex::CustomOptions()\n+{\n+    interfaces::Chain::NotifyOptions options;\n+    options.disconnect_data = true;\n+    return options;\n+}\n+\n+uint64_t CreateKeyPrefix(std::pair<uint64_t, uint64_t> siphash_key, const COutPoint& vout)\n+{\n+    return SipHashUint256Extra(siphash_key.first, siphash_key.second, vout.hash.ToUint256(), vout.n);\n+}\n+\n+DBKey CreateKey(std::pair<uint64_t, uint64_t> siphash_key, const COutPoint& vout, const CDiskTxPos& pos)\n+{\n+    return DBKey(CreateKeyPrefix(siphash_key, vout), pos);\n+}\n+\n+bool TxoSpenderIndex::WriteSpenderInfos(const std::vector<std::pair<COutPoint, CDiskTxPos>>& items)\n+{\n+    CDBBatch batch(*m_db);\n+    for (const auto& [outpoint, pos] : items) {\n+        DBKey key(CreateKey(m_siphash_key, outpoint, pos));\n+        // key is hash(spent outpoint) | disk pos, value is empty\n+        batch.Write(key, \"\");\n+    }\n+    return m_db->WriteBatch(batch);\n+}\n+\n+\n+bool TxoSpenderIndex::EraseSpenderInfos(const std::vector<std::pair<COutPoint, CDiskTxPos>>& items)\n+{\n+    CDBBatch batch(*m_db);\n+    for (const auto& [outpoint, pos] : items) {\n+        batch.Erase(CreateKey(m_siphash_key, outpoint, pos));\n+    }\n+    return m_db->WriteBatch(batch);\n+}\n+\n+bool TxoSpenderIndex::CustomAppend(const interfaces::BlockInfo& block)\n+{\n+    std::vector<std::pair<COutPoint, CDiskTxPos>> items;\n+    items.reserve(block.data->vtx.size());\n+\n+    CDiskTxPos pos({block.file_number, block.data_pos}, GetSizeOfCompactSize(block.data->vtx.size()));\n+    for (const auto& tx : block.data->vtx) {\n+        if (!tx->IsCoinBase()) {\n+            for (const auto& input : tx->vin) {\n+                items.emplace_back(input.prevout, pos);\n+            }\n+        }\n+        pos.nTxOffset += ::GetSerializeSize(TX_WITH_WITNESS(*tx));\n+    }\n+\n+    return WriteSpenderInfos(items);\n+}\n+\n+bool TxoSpenderIndex::CustomRemove(const interfaces::BlockInfo& block)\n+{\n+    std::vector<std::pair<COutPoint, CDiskTxPos>> items;\n+    items.reserve(block.data->vtx.size());\n+\n+    CDiskTxPos pos({block.file_number, block.data_pos}, GetSizeOfCompactSize(block.data->vtx.size()));\n+    for (const auto& tx : block.data->vtx) {\n+        if (!tx->IsCoinBase()) {\n+            for (const auto& input : tx->vin) {\n+                items.emplace_back(input.prevout, pos);\n+            }\n+        }\n+        pos.nTxOffset += ::GetSerializeSize(TX_WITH_WITNESS(*tx));\n+    }\n+\n+    return EraseSpenderInfos(items);\n+}\n+\n+bool TxoSpenderIndex::ReadTransaction(const CDiskTxPos& tx_pos, CTransactionRef& tx) const\n+{\n+    AutoFile file{m_chainstate->m_blockman.OpenBlockFile(tx_pos, true)};\n+    if (file.IsNull()) {\n+        return false;\n+    }\n+    CBlockHeader header;\n+    try {\n+        file >> header;",
      "path": "src/index/txospenderindex.cpp",
      "position": 1,
      "original_position": 136,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "9b750be5ecb0a8d063a98225c0ac997cca0885eb",
      "in_reply_to_id": 2209336131,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "No we just need to skip over it, done  in https://github.com/bitcoin/bitcoin/pull/24539/commits/42d3aa8787d9411ad2a9c9ae9c828aa1285853ec",
      "created_at": "2025-07-17T19:07:08Z",
      "updated_at": "2025-07-17T19:07:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r2214085643",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2214085643"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 136,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228937333",
      "pull_request_review_id": 3052290948,
      "id": 2228937333,
      "node_id": "PRRC_kwDOABII586E2uJ1",
      "diff_hunk": "@@ -690,12 +697,18 @@ static RPCHelpMan gettxspendingprevout()\n                 const CTransaction* spendingTx = mempool.GetConflictTx(prevout);\n                 if (spendingTx != nullptr) {\n                     o.pushKV(\"spendingtxid\", spendingTx->GetHash().ToString());\n+                    if (return_spending_tx) {",
      "path": "src/rpc/mempool.cpp",
      "position": 1,
      "original_position": 46,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "f3e5a7f20fb2e19509b94adc9428e8cf4951a000",
      "in_reply_to_id": 2156984795,
      "user": {
        "login": "sstone",
        "id": 1573866,
        "node_id": "MDQ6VXNlcjE1NzM4NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sstone",
        "html_url": "https://github.com/sstone",
        "followers_url": "https://api.github.com/users/sstone/followers",
        "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
        "organizations_url": "https://api.github.com/users/sstone/orgs",
        "repos_url": "https://api.github.com/users/sstone/repos",
        "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sstone/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I had forgotten this one , fixed in https://github.com/bitcoin/bitcoin/pull/24539/commits/f2a496c827442c7650e5742fdfd49147f0da0143",
      "created_at": "2025-07-24T16:01:30Z",
      "updated_at": "2025-07-24T16:01:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r2228937333",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228937333"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 700,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2348820869",
      "pull_request_review_id": 3224343678,
      "id": 2348820869,
      "node_id": "PRRC_kwDOABII586MACmF",
      "diff_hunk": "@@ -0,0 +1,159 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <common/args.h>\n+#include <crypto/siphash.h>\n+#include <index/disktxpos.h>\n+#include <index/txospenderindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <random.h>\n+#include <uint256.h>\n+#include <validation.h>\n+\n+// LevelDB key prefix. We only have one key for now but it will make it easier to add others if needed.\n+constexpr uint8_t DB_TXOSPENDERINDEX{'s'};\n+\n+std::unique_ptr<TxoSpenderIndex> g_txospenderindex;\n+\n+struct DBKey {\n+    uint64_t hash;\n+    FlatFilePos pos;\n+\n+    explicit DBKey(const uint64_t& hash_in, const FlatFilePos& pos_in) : hash(hash_in), pos(pos_in) {}\n+\n+    SERIALIZE_METHODS(DBKey, obj)\n+    {\n+        uint8_t prefix{DB_TXOSPENDERINDEX};\n+        READWRITE(prefix);\n+        if (prefix != DB_TXOSPENDERINDEX) {\n+            throw std::ios_base::failure(\"Invalid format for spender index DB key\");\n+        }\n+        READWRITE(obj.hash);\n+        READWRITE(obj.pos);\n+    }\n+};\n+\n+TxoSpenderIndex::TxoSpenderIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"txospenderindex\")\n+{\n+    fs::path path{gArgs.GetDataDirNet() / \"indexes\" / \"txospenderindex\"};\n+    fs::create_directories(path);\n+\n+    m_db = std::make_unique<TxoSpenderIndex::DB>(path / \"db\", n_cache_size, f_memory, f_wipe);\n+    if (!m_db->Read(\"siphash_key\", m_siphash_key)) {\n+        FastRandomContext rng(false);\n+        m_siphash_key = {rng.rand64(), rng.rand64()};\n+        assert(m_db->Write(\"siphash_key\", m_siphash_key));\n+    }\n+}\n+\n+TxoSpenderIndex::~TxoSpenderIndex() = default;\n+\n+interfaces::Chain::NotifyOptions TxoSpenderIndex::CustomOptions()\n+{\n+    interfaces::Chain::NotifyOptions options;\n+    options.disconnect_data = true;\n+    return options;\n+}\n+\n+uint64_t CreateKeyPrefix(std::pair<uint64_t, uint64_t> siphash_key, const COutPoint& vout)\n+{\n+    return SipHashUint256Extra(siphash_key.first, siphash_key.second, vout.hash.ToUint256(), vout.n);\n+}\n+\n+DBKey CreateKey(std::pair<uint64_t, uint64_t> siphash_key, const COutPoint& vout, const FlatFilePos& pos)",
      "path": "src/index/txospenderindex.cpp",
      "position": 66,
      "original_position": 66,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Nit: Mark this and `CreateKeyPrefix` as `static`.",
      "created_at": "2025-09-15T12:22:27Z",
      "updated_at": "2025-09-15T13:20:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r2348820869",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2348820869"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 66,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2348828075",
      "pull_request_review_id": 3224343678,
      "id": 2348828075,
      "node_id": "PRRC_kwDOABII586MAEWr",
      "diff_hunk": "@@ -0,0 +1,81 @@\n+// Copyright (c) 2017-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <index/txospenderindex.h>\n+#include <test/util/setup_common.h>\n+#include <util/time.h>\n+#include <validation.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_AUTO_TEST_SUITE(txospenderindex_tests)\n+\n+BOOST_FIXTURE_TEST_CASE(txospenderindex_initial_sync, TestChain100Setup)\n+{\n+    TxoSpenderIndex txospenderindex(interfaces::MakeChain(m_node), 1 << 20, true);\n+    BOOST_REQUIRE(txospenderindex.Init());\n+\n+    // Mine blocks for coinbase maturity, so we can spend some coinbase outputs in the test.\n+     for (int i = 0; i < 50; i++) {\n+         std::vector<CMutableTransaction> no_txns;\n+         CreateAndProcessBlock(no_txns, this->m_coinbase_txns[i]->vout[0].scriptPubKey);\n+     }",
      "path": "src/test/txospenderindex_tests.cpp",
      "position": 24,
      "original_position": 24,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Nit (format): Extra whitespace on this block.",
      "created_at": "2025-09-15T12:25:20Z",
      "updated_at": "2025-09-15T13:20:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r2348828075",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2348828075"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": 21,
      "original_start_line": 21,
      "start_side": "RIGHT",
      "line": 24,
      "original_line": 24,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2348904680",
      "pull_request_review_id": 3224343678,
      "id": 2348904680,
      "node_id": "PRRC_kwDOABII586MAXDo",
      "diff_hunk": "@@ -0,0 +1,159 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <common/args.h>\n+#include <crypto/siphash.h>\n+#include <index/disktxpos.h>\n+#include <index/txospenderindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <random.h>\n+#include <uint256.h>\n+#include <validation.h>\n+",
      "path": "src/index/txospenderindex.cpp",
      "position": 14,
      "original_position": 14,
      "commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "original_commit_id": "845b54defebc1987b9d654ea7b611a4ddebe345a",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Similar to the blockfilterindex, I would suggest a brief comment here on the schema. Something like (though this reads a bit clunky):\r\nThe database stores a siphash of a transaction out point in pairs with the flat file position on disk the transaction is stored in. It is key-only and supports retrieving a transaction by one of its input's out point.",
      "created_at": "2025-09-15T12:53:34Z",
      "updated_at": "2025-09-15T13:20:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24539#discussion_r2348904680",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2348904680"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    }
  ]
}