{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471",
    "id": 2513877394,
    "node_id": "PR_kwDOABII586V1rmS",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/32471",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/32471.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/32471.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32471",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32471/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/2b16014dfbe7e249e4929beafb4ce26415206e7a",
    "number": 32471,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "wallet/rpc: fix listdescriptors RPC fails to return descriptors with private key information when wallet contains descriptors missing any key",
    "user": {
      "login": "Eunovo",
      "id": 37949128,
      "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Eunovo",
      "html_url": "https://github.com/Eunovo",
      "followers_url": "https://api.github.com/users/Eunovo/followers",
      "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
      "organizations_url": "https://api.github.com/users/Eunovo/orgs",
      "repos_url": "https://api.github.com/users/Eunovo/repos",
      "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/Eunovo/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "_TLDR:\r\nCurrently, `listdescriptors [private=true]` will fail for a non-watch-only wallet if any descriptor has a missing private key(e.g `tr()`, `multi()`, etc.). This PR changes that while making sure `listdescriptors [private=true]` still fails if there no private keys. Closes #32078_ \r\n\r\nIn non-watch-only wallets, it's possible to import descriptors as long as at least one private key is included. It's important that users can still view these descriptors when they need to create a backupâ€”even if some private keys are missing ([#32078 (comment)](https://github.com/bitcoin/bitcoin/issues/32078#issuecomment-2781428475)). This change makes it possible to do so.\r\n\r\nThis change also helps prevent `listdescriptors true` from failing completely, because one descriptor is missing some private keys.\r\n\r\n### Notes\r\n- The new behaviour is applied to all descriptors including miniscript descriptors\r\n- `listdescriptors true` still fails for watch-only wallets to preserve existing behaviour https://github.com/bitcoin/bitcoin/pull/24361#discussion_r920801352\r\n- Wallet migration logic previously used `Descriptor::ToPrivateString()` to determine which descriptor was watchonly. This means that modifying the `ToPrivateString()` behaviour caused descriptors that were previously recognized as \"watchonly\" to be \"non-watchonly\". **In order to keep the scope of this PR limited to the RPC behaviour, this PR uses a different method to determine `watchonly` descriptors for the purpose of wallet migration.** A follow-up PR can be opened to update migration logic to exclude descriptors with some private keys from the `watchonly` migration wallet. \r\n\r\n### Relevant PRs\r\nhttps://github.com/bitcoin/bitcoin/pull/24361\r\nhttps://github.com/bitcoin/bitcoin/pull/32186\r\n\r\n### Testing\r\nFunctional tests were added to test the new behaviour\r\n\r\nEDIT\r\n**`listdescriptors [private=true]` will still fail when there are no private keys because non-watchonly wallets must have private keys and calling `listdescriptors [private=true]` for watchonly wallet returns an error**",
    "labels": [],
    "created_at": "2025-05-12T13:26:20Z",
    "updated_at": "2025-10-21T03:11:54Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "7049599f7fc959352d65c7382fafb8e48ce7cd03",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "Eunovo:list-descriptors-with-partial-keys",
      "ref": "list-descriptors-with-partial-keys",
      "sha": "2b16014dfbe7e249e4929beafb4ce26415206e7a",
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 755831492,
        "node_id": "R_kgDOLQ0SxA",
        "name": "bitcoin",
        "full_name": "Eunovo/bitcoin",
        "owner": {
          "login": "Eunovo",
          "id": 37949128,
          "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
          "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Eunovo",
          "html_url": "https://github.com/Eunovo",
          "followers_url": "https://api.github.com/users/Eunovo/followers",
          "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
          "organizations_url": "https://api.github.com/users/Eunovo/orgs",
          "repos_url": "https://api.github.com/users/Eunovo/repos",
          "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/Eunovo/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/Eunovo/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/Eunovo/bitcoin",
        "archive_url": "https://api.github.com/repos/Eunovo/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/Eunovo/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/Eunovo/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/Eunovo/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/Eunovo/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/Eunovo/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/Eunovo/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/Eunovo/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/Eunovo/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/Eunovo/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/Eunovo/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/Eunovo/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/Eunovo/bitcoin/events",
        "forks_url": "https://api.github.com/repos/Eunovo/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/Eunovo/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/Eunovo/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/Eunovo/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/Eunovo/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/Eunovo/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/Eunovo/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/Eunovo/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/Eunovo/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/Eunovo/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/Eunovo/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/Eunovo/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/Eunovo/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/Eunovo/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/Eunovo/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/Eunovo/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:Eunovo/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/Eunovo/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/Eunovo/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/Eunovo/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/Eunovo/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/Eunovo/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/Eunovo/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/Eunovo/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/Eunovo/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/Eunovo/bitcoin/hooks",
        "svn_url": "https://github.com/Eunovo/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "forks_count": 1,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 254784,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-10-21T02:53:26Z",
        "created_at": "2024-02-11T07:44:19Z",
        "updated_at": "2025-05-02T08:08:35Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "0eeae4d174a41c3fc2eae41e76b929fa3114d6f3",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 38054,
        "stargazers_count": 86325,
        "watchers_count": 86325,
        "size": 295070,
        "default_branch": "master",
        "open_issues_count": 819,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-10-19T14:45:52Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-10-21T03:09:57Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 176,
    "deletions": 69,
    "changed_files": 10,
    "commits": 6,
    "review_comments": 70,
    "comments": 22
  },
  "events": [
    {
      "event": "commented",
      "id": 2872576131,
      "node_id": "IC_kwDOABII586rOAiD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2872576131",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-12T13:26:23Z",
      "updated_at": "2025-10-21T02:53:39Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/32471.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept NACK | [vicjuma](https://github.com/bitcoin/bitcoin/pull/32471#issuecomment-2877434573) |\n| Concept ACK | [achow101](https://github.com/bitcoin/bitcoin/pull/32471#pullrequestreview-3094495318) |\n| Stale ACK | [Sjors](https://github.com/bitcoin/bitcoin/pull/32471#issuecomment-3245132183), [rkrux](https://github.com/bitcoin/bitcoin/pull/32471#pullrequestreview-3303950151) |\n\nIf your review is incorrectly listed, please react with ðŸ‘Ž to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#bitcoin-core/gui/872](https://github.com/bitcoin-core/gui/pull/872) (Menu action to export a watchonly wallet by achow101)\n* [#32489](https://github.com/bitcoin/bitcoin/pull/32489) (wallet: Add `exportwatchonlywallet` RPC to export a watchonly version of a wallet by achow101)\n* [#31734](https://github.com/bitcoin/bitcoin/pull/31734) (miniscript: account for all `StringType` variants in `Miniscriptdescriptor::ToString()` by pythcoiner)\n* [#31713](https://github.com/bitcoin/bitcoin/pull/31713) (miniscript refactor: Remove unique_ptr-indirection (#30866 follow-up) by hodlinator)\n* [#30243](https://github.com/bitcoin/bitcoin/pull/30243) (descriptors: taproot partial descriptors by Eunovo)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#issuecomment-2872576131",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32471"
    },
    {
      "event": "commented",
      "id": 2872611218,
      "node_id": "IC_kwDOABII586rOJGS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2872611218",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-12T13:35:50Z",
      "updated_at": "2025-05-12T13:35:50Z",
      "author_association": "MEMBER",
      "body": "```bash\r\n/Users/runner/work/bitcoin/bitcoin/src/test/fuzz/miniscript.cpp:1040:42: error: no matching member function for call to 'ToString'\r\n    std::optional<std::string> str{node->ToString(parser_ctx)};\r\n                                   ~~~~~~^~~~~~~~\r\n/Users/runner/work/bitcoin/bitcoin/src/script/miniscript.h:830:17: note: candidate function template not viable: requires 2 arguments, but 1 was provided\r\n    std::string ToString(const CTx& ctx, bool& has_priv_key) const {\r\n                ^\r\n/Users/runner/work/bitcoin/bitcoin/src/test/fuzz/miniscript.cpp:1248:31: error: no matching member function for call to 'ToString'\r\n    const auto str2 = parsed->ToString(parser_ctx);\r\n                      ~~~~~~~~^~~~~~~~\r\n/Users/runner/work/bitcoin/bitcoin/src/script/miniscript.h:830:17: note: candidate function template not viable: requires 2 arguments, but 1 was provided\r\n    std::string ToString(const CTx& ctx, bool& has_priv_key) const {\r\n                ^\r\n2 errors generated.\r\n```",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#issuecomment-2872611218",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32471"
    },
    {
      "event": "labeled",
      "id": 17617032239,
      "node_id": "LE_lADOABII5862NchizwAAAAQaDpQv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17617032239",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-12T13:38:46Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2872620899,
      "node_id": "IC_kwDOABII586rOLdj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2872620899",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-12T13:38:48Z",
      "updated_at": "2025-05-12T13:38:48Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\nðŸš§ At least one of the CI tasks failed.\n<sub>Task `tidy`: https://github.com/bitcoin/bitcoin/runs/42059781761</sub>\n<sub>LLM reason (âœ¨ experimental): The CI failure is due to build errors in `miniscript.cpp` related to the `ToString` function call.\n</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#issuecomment-2872620899",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32471"
    },
    {
      "event": "convert_to_draft",
      "id": 17617267965,
      "node_id": "CTDE_lADOABII5862NchizwAAAAQaEiz9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17617267965",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-12T13:50:54Z"
    },
    {
      "event": "commented",
      "id": 2872665572,
      "node_id": "IC_kwDOABII586rOWXk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2872665572",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-12T13:51:15Z",
      "updated_at": "2025-05-12T13:51:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "Putting draft while I fix some issues with the fuzz tests",
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#issuecomment-2872665572",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32471"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17617624693,
      "node_id": "HRFPE_lADOABII5862NchizwAAAAQaF551",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17617624693",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1ff2b0013302b8ceae5901248371e1e478c2e02c",
      "commit_url": "https://api.github.com/repos/Eunovo/bitcoin/commits/1ff2b0013302b8ceae5901248371e1e478c2e02c",
      "created_at": "2025-05-12T14:09:18Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17622447572,
      "node_id": "HRFPE_lADOABII5862NchizwAAAAQaYTXU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17622447572",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "4f4ca3a5cfeac3f46af7670c2bd031acb2e37f90",
      "commit_url": "https://api.github.com/repos/Eunovo/bitcoin/commits/4f4ca3a5cfeac3f46af7670c2bd031acb2e37f90",
      "created_at": "2025-05-12T19:14:48Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17634745559,
      "node_id": "HRFPE_lADOABII5862NchizwAAAAQbHNzX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17634745559",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "bb14e8ac7d38f3698d76ea3d6dce09e1387d59f3",
      "commit_url": "https://api.github.com/repos/Eunovo/bitcoin/commits/bb14e8ac7d38f3698d76ea3d6dce09e1387d59f3",
      "created_at": "2025-05-13T12:35:59Z"
    },
    {
      "event": "unlabeled",
      "id": 17637726892,
      "node_id": "UNLE_lADOABII5862NchizwAAAAQbSlqs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17637726892",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-13T15:13:22Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "ready_for_review",
      "id": 17638552615,
      "node_id": "RFRE_lADOABII5862NchizwAAAAQbVvQn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17638552615",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-13T16:01:31Z"
    },
    {
      "event": "commented",
      "id": 2877123412,
      "node_id": "IC_kwDOABII586rfWtU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2877123412",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-13T16:02:24Z",
      "updated_at": "2025-05-13T16:02:24Z",
      "author_association": "CONTRIBUTOR",
      "body": "cc @rkrux @sipa ",
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#issuecomment-2877123412",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32471"
    },
    {
      "event": "mentioned",
      "id": 17638567439,
      "node_id": "MEE_lADOABII5862NchizwAAAAQbVy4P",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17638567439",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-13T16:02:25Z"
    },
    {
      "event": "subscribed",
      "id": 17638567460,
      "node_id": "SE_lADOABII5862NchizwAAAAQbVy4k",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17638567460",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-13T16:02:25Z"
    },
    {
      "event": "mentioned",
      "id": 17638567503,
      "node_id": "MEE_lADOABII5862NchizwAAAAQbVy5P",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17638567503",
      "actor": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-13T16:02:26Z"
    },
    {
      "event": "subscribed",
      "id": 17638567520,
      "node_id": "SE_lADOABII5862NchizwAAAAQbVy5g",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17638567520",
      "actor": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-13T16:02:26Z"
    },
    {
      "event": "commented",
      "id": 2877413827,
      "node_id": "IC_kwDOABII586rgdnD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2877413827",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-13T17:32:49Z",
      "updated_at": "2025-05-13T17:32:49Z",
      "author_association": "MEMBER",
      "body": "Concept NACK\r\n\r\nThe purpose of the `private` argument is to show the private keys. If there are no private keys to show, I think it is a reasonable error to say that, rather than just showing the public descriptors. I think changing the behavior could result in a footgun where people use it thinking that they are being shown private keys when they actually are not.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#issuecomment-2877413827",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32471"
    },
    {
      "event": "commented",
      "id": 2877434573,
      "node_id": "IC_kwDOABII586rgirN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2877434573",
      "actor": {
        "login": "vicjuma",
        "id": 30392363,
        "node_id": "MDQ6VXNlcjMwMzkyMzYz",
        "avatar_url": "https://avatars.githubusercontent.com/u/30392363?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vicjuma",
        "html_url": "https://github.com/vicjuma",
        "followers_url": "https://api.github.com/users/vicjuma/followers",
        "following_url": "https://api.github.com/users/vicjuma/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vicjuma/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vicjuma/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vicjuma/subscriptions",
        "organizations_url": "https://api.github.com/users/vicjuma/orgs",
        "repos_url": "https://api.github.com/users/vicjuma/repos",
        "events_url": "https://api.github.com/users/vicjuma/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vicjuma/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-13T17:40:20Z",
      "updated_at": "2025-05-13T17:40:20Z",
      "author_association": "NONE",
      "body": "Concept NACK\r\n\r\nIt's unclear why someone should receive public keys with `private=true`. Why not just use the default command, `bitcoin-cli listdescriptors`, which already shows public keys? I assume the user is certain about the nature of the descriptors they have in their wallet. Maybe if I do not fully understand this PR.\r\n",
      "user": {
        "login": "vicjuma",
        "id": 30392363,
        "node_id": "MDQ6VXNlcjMwMzkyMzYz",
        "avatar_url": "https://avatars.githubusercontent.com/u/30392363?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vicjuma",
        "html_url": "https://github.com/vicjuma",
        "followers_url": "https://api.github.com/users/vicjuma/followers",
        "following_url": "https://api.github.com/users/vicjuma/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vicjuma/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vicjuma/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vicjuma/subscriptions",
        "organizations_url": "https://api.github.com/users/vicjuma/orgs",
        "repos_url": "https://api.github.com/users/vicjuma/repos",
        "events_url": "https://api.github.com/users/vicjuma/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vicjuma/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#issuecomment-2877434573",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32471"
    },
    {
      "event": "commented",
      "id": 2877510396,
      "node_id": "IC_kwDOABII586rg1L8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2877510396",
      "actor": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-13T18:10:25Z",
      "updated_at": "2025-05-13T18:22:17Z",
      "author_association": "CONTRIBUTOR",
      "body": ">  If there are no private keys to show, I think it is a reasonable error to say that, rather than just showing the public descriptors.\r\n\r\nI have not checked this PR yet but the original intention came from this issue: https://github.com/bitcoin/bitcoin/issues/32078#issuecomment-2781428475\r\n\r\nThe idea was to show results for descriptors that don't have _all_ the private keys but do have at least one. This is not for the case when the descriptor doesn't have _any_ private key.\r\n\r\nI do like how the `importdescriptors` RPC returns a warning when the descriptor contains partial private keys: https://github.com/bitcoin/bitcoin/issues/32078#issuecomment-2783608466. Maybe a similar warning can be returned in this case for `listdescriptors true` as well - to avoid the footgun.\r\n```\r\n[\r\n  {\r\n    \"success\": true,\r\n    \"warnings\": [\r\n      \"Not all private keys provided. Some wallet functionality may return unexpected errors\"\r\n    ]\r\n  }\r\n]\r\n```\r\n\r\nAlso, if the `importdescriptors` RPC allows importing a descriptor with partial private keys, then it seems reasonable to me to list that descriptor in the response of `listdescriptors true` with those partial private keys. Is there any other way to see those partial private keys?\r\n\r\nRegardless of the above point, I do feel that preventing `listdescriptors true` from failing completely in the case a descriptor is missing few private keys is helpful for the user as the other descriptors with all the private keys will be returned in the response.\r\n> This change also helps prevent listdescriptors true from failing completely, because one descriptor is missing some private keys.",
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#issuecomment-2877510396",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32471"
    },
    {
      "event": "commented",
      "id": 2877558632,
      "node_id": "IC_kwDOABII586rhA9o",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2877558632",
      "actor": {
        "login": "vicjuma",
        "id": 30392363,
        "node_id": "MDQ6VXNlcjMwMzkyMzYz",
        "avatar_url": "https://avatars.githubusercontent.com/u/30392363?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vicjuma",
        "html_url": "https://github.com/vicjuma",
        "followers_url": "https://api.github.com/users/vicjuma/followers",
        "following_url": "https://api.github.com/users/vicjuma/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vicjuma/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vicjuma/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vicjuma/subscriptions",
        "organizations_url": "https://api.github.com/users/vicjuma/orgs",
        "repos_url": "https://api.github.com/users/vicjuma/repos",
        "events_url": "https://api.github.com/users/vicjuma/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vicjuma/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-13T18:29:06Z",
      "updated_at": "2025-05-13T18:29:06Z",
      "author_association": "NONE",
      "body": "Maybe `-rpcwallet=<wallet>` will come in handy in this situation where you would have to use a different wallet for these situations to prevent the conflicts. ",
      "user": {
        "login": "vicjuma",
        "id": 30392363,
        "node_id": "MDQ6VXNlcjMwMzkyMzYz",
        "avatar_url": "https://avatars.githubusercontent.com/u/30392363?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vicjuma",
        "html_url": "https://github.com/vicjuma",
        "followers_url": "https://api.github.com/users/vicjuma/followers",
        "following_url": "https://api.github.com/users/vicjuma/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vicjuma/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vicjuma/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vicjuma/subscriptions",
        "organizations_url": "https://api.github.com/users/vicjuma/orgs",
        "repos_url": "https://api.github.com/users/vicjuma/repos",
        "events_url": "https://api.github.com/users/vicjuma/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vicjuma/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#issuecomment-2877558632",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32471"
    },
    {
      "event": "commented",
      "id": 2877610128,
      "node_id": "IC_kwDOABII586rhNiQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2877610128",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-13T18:50:48Z",
      "updated_at": "2025-05-13T18:50:48Z",
      "author_association": "MEMBER",
      "body": "> The idea was to show results for descriptors that don't have all the private keys but do have at least one.\r\n\r\nI think that's fine to show a result, but I don't think we should show any result if there are no private keys at all.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#issuecomment-2877610128",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32471"
    },
    {
      "event": "commented",
      "id": 2878821724,
      "node_id": "IC_kwDOABII586rl1Vc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2878821724",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-14T06:19:20Z",
      "updated_at": "2025-05-14T06:19:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Concept NACK\r\n> \r\n> The purpose of the `private` argument is to show the private keys. If there are no private keys to show, I think it is a reasonable error to say that, rather than just showing the public descriptors. I think changing the behavior could result in a footgun where people use it thinking that they are being shown private keys when they actually are not.\r\n\r\nI think there has been a misunderstanding. **There are private keys to show.** This  PR doesn't change the behaviour of `listdescriptors true` RPC to show any result when there are no private keys. Non-watchonly wallet descriptors must have at least one private key. The RPC still fails for watch only wallets",
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#issuecomment-2878821724",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32471"
    },
    {
      "event": "commented",
      "id": 2878828270,
      "node_id": "IC_kwDOABII586rl27u",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2878828270",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-14T06:22:16Z",
      "updated_at": "2025-05-14T06:22:16Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I think that's fine to show a result, but I don't think we should show any result if there are no private keys at all.\r\n\r\nNo result is shown if there are no private keys",
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#issuecomment-2878828270",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32471"
    },
    {
      "event": "commented",
      "id": 2878844076,
      "node_id": "IC_kwDOABII586rl6ys",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2878844076",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-14T06:29:49Z",
      "updated_at": "2025-05-14T06:29:49Z",
      "author_association": "CONTRIBUTOR",
      "body": "> It's unclear why someone should receive public keys with `private=true`. Why not just use the default command, `bitcoin-cli listdescriptors`, which already shows public keys? I assume the user is certain about the nature of the descriptors they have in their wallet. Maybe if I do not fully understand this PR.\r\n\r\nIt is possible to have descriptors with missing private keys in a non-watchonly wallet. `importdescriptors` only rejects descriptors without any private keys. Trying `listdescriptors private=true` in such a wallet will throw an error, preventing the user from being able to backup their descriptors. The default command only returns public information, I believe that modifying the default command to return private information sometimes will be the wrong decision.  It's much better to allow `private=true` to work for these descriptors with some missing private keys.",
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#issuecomment-2878844076",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32471"
    },
    {
      "event": "renamed",
      "id": 17655395246,
      "node_id": "RTE_lADOABII5862NchizwAAAAQcV_Ou",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17655395246",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-14T14:48:30Z",
      "rename": {
        "from": "Fix listdescriptors true fails with 'Can't get descriptor string' in non-watch-only descriptor wallet",
        "to": "wallet/rpc: fix listdescriptors RPC fails to return descriptors with private key information when wallet contains descriptors missing any key"
      }
    },
    {
      "event": "commented",
      "id": 2897892091,
      "node_id": "IC_kwDOABII586sulL7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2897892091",
      "actor": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-21T13:02:19Z",
      "updated_at": "2025-05-21T13:09:45Z",
      "author_association": "CONTRIBUTOR",
      "body": "A similar problem happens in `gethdkeys private=true` as well and I think it's due to partial private keys when the following error is thrown:\r\n\r\n```\r\nâžœ  bitcoin git:(list-descriptors-with-partial-keys) âœ— bitcoinclireg -named gethdkeys private=true\r\nerror code: -1\r\nerror message:\r\nmap::at:  key not found\r\n```\r\n\r\nIt appears to be coming from here when the `xprv` corresponding to the `xpub` can't be found: https://github.com/bitcoin/bitcoin/blob/7763e86afa045910a14ac9b2cd644927a447370b/src/wallet/rpc/wallet.cpp#L822\r\n\r\nIt's due to mismatch in the count of `wallet_xprvs` and `wallet_xpubs` calculated in the previous loop over `spkms`. \r\nI can create a separate issue later.",
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#issuecomment-2897892091",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32471"
    },
    {
      "event": "commented",
      "id": 3078633756,
      "node_id": "IC_kwDOABII5863gDkc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3078633756",
      "actor": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-16T13:30:09Z",
      "updated_at": "2025-07-16T13:30:09Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK bb14e8ac7d38f3698d76ea3d6dce09e1387d59f3\r\n\r\nStarted reviewing the PR.",
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#issuecomment-3078633756",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32471"
    },
    {
      "event": "reviewed",
      "id": 3025316172,
      "node_id": "PRR_kwDOABII5860UqlM",
      "url": null,
      "actor": null,
      "commit_id": "bb14e8ac7d38f3698d76ea3d6dce09e1387d59f3",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-07-17T15:19:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "Partial review bb14e8ac7d38f3698d76ea3d6dce09e1387d59f3",
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#pullrequestreview-3025316172",
      "submitted_at": "2025-07-17T15:19:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18700537678,
      "node_id": "HRFPE_lADOABII5862NchizwAAAARao49O",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18700537678",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6ea2cdc358d9eeff7b5c0a0039dde2079923ce58",
      "commit_url": "https://api.github.com/repos/Eunovo/bitcoin/commits/6ea2cdc358d9eeff7b5c0a0039dde2079923ce58",
      "created_at": "2025-07-18T13:11:48Z"
    },
    {
      "event": "reviewed",
      "id": 3037728992,
      "node_id": "PRR_kwDOABII5861EBDg",
      "url": null,
      "actor": null,
      "commit_id": "6ea2cdc358d9eeff7b5c0a0039dde2079923ce58",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-07-21T11:48:32Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#pullrequestreview-3037728992",
      "submitted_at": "2025-07-21T11:48:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18744820384,
      "node_id": "HRFPE_lADOABII5862NchizwAAAARdR0Kg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18744820384",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "3bee27093a084eee4caf5b9a5b7fb9cb9a18f3c2",
      "commit_url": "https://api.github.com/repos/Eunovo/bitcoin/commits/3bee27093a084eee4caf5b9a5b7fb9cb9a18f3c2",
      "created_at": "2025-07-22T07:12:11Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18744840962,
      "node_id": "HRFPE_lADOABII5862NchizwAAAARdR5MC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18744840962",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d82dcf2eaa7efb3809ae559c8f97f74403a2ccd6",
      "commit_url": "https://api.github.com/repos/Eunovo/bitcoin/commits/d82dcf2eaa7efb3809ae559c8f97f74403a2ccd6",
      "created_at": "2025-07-22T07:13:27Z"
    },
    {
      "event": "commented",
      "id": 3135054321,
      "node_id": "IC_kwDOABII58663SHx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3135054321",
      "actor": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-30T06:44:40Z",
      "updated_at": "2025-07-30T06:44:40Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for addressing the comments, I will take one final look and then a-c-k.\r\n\r\nTagging @furszy for review as he noticed this issue as well few months back.",
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#issuecomment-3135054321",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32471"
    },
    {
      "event": "mentioned",
      "id": 18892422522,
      "node_id": "MEE_lADOABII5862NchizwAAAARmE316",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18892422522",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-30T06:44:42Z"
    },
    {
      "event": "subscribed",
      "id": 18892422539,
      "node_id": "SE_lADOABII5862NchizwAAAARmE32L",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18892422539",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-30T06:44:42Z"
    },
    {
      "event": "reviewed",
      "id": 3070321358,
      "node_id": "PRR_kwDOABII5863AWLO",
      "url": null,
      "actor": null,
      "commit_id": "d82dcf2eaa7efb3809ae559c8f97f74403a2ccd6",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-07-30T08:52:08Z",
      "author_association": "MEMBER",
      "body": "Mostly happy with d82dcf2eaa7efb3809ae559c8f97f74403a2ccd6, but in  b32c2b290f8e4dcb7fe54ee4c81714a3785920a7 _descriptor: ToPrivateString() pass if  at least 1 priv key exists_ I find the miniscript change hard to follow (mostly because I find the miniscript code itself hard to follow). Can you split that out in a seperate commit that doesn't change behaviour?\r\n\r\nTested with https://github.com/Sjors/bitcoin/pull/91.\r\n\r\nAlso left some code style suggestions.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#pullrequestreview-3070321358",
      "submitted_at": "2025-07-30T08:52:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
    },
    {
      "event": "labeled",
      "id": 18927928680,
      "node_id": "LE_lADOABII5862NchizwAAAARoMUVo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18927928680",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-31T22:44:25Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18940891208,
      "node_id": "HRFPE_lADOABII5862NchizwAAAARo9xBI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18940891208",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d69d990ff69893005f936546c2b0bd781cc98ced",
      "commit_url": "https://api.github.com/repos/Eunovo/bitcoin/commits/d69d990ff69893005f936546c2b0bd781cc98ced",
      "created_at": "2025-08-01T14:21:20Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18940928422,
      "node_id": "HRFPE_lADOABII5862NchizwAAAARo96Gm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18940928422",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "37b1fdf2e6499646e715f7b0d2e174f587d00fd3",
      "commit_url": "https://api.github.com/repos/Eunovo/bitcoin/commits/37b1fdf2e6499646e715f7b0d2e174f587d00fd3",
      "created_at": "2025-08-01T14:23:29Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18941250122,
      "node_id": "HRFPE_lADOABII5862NchizwAAAARo_IpK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18941250122",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a26825c1d9e74da1418d088c664727269673093f",
      "commit_url": "https://api.github.com/repos/Eunovo/bitcoin/commits/a26825c1d9e74da1418d088c664727269673093f",
      "created_at": "2025-08-01T14:41:38Z"
    },
    {
      "event": "labeled",
      "id": 18941253250,
      "node_id": "LE_lADOABII5862NchizwAAAARo_JaC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18941253250",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-01T14:41:49Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 3144822951,
      "node_id": "IC_kwDOABII5867cjCn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3144822951",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-01T14:41:51Z",
      "updated_at": "2025-08-01T14:41:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\nðŸš§ At least one of the CI tasks failed.\n<sub>Task `ARM, unit tests, no functional tests`: https://github.com/bitcoin/bitcoin/runs/47207844179</sub>\n<sub>LLM reason (âœ¨ experimental): The CI failure is caused by an assertion failure and subprocess abortion during a benchmark test, indicating a test-related error rather than a build or compilation issue.</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#issuecomment-3144822951",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32471"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18941859979,
      "node_id": "HRFPE_lADOABII5862NchizwAAAARpBdiL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18941859979",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "45e06e05e7f8d638ecc91a1ba62e1b38a5133a2b",
      "commit_url": "https://api.github.com/repos/Eunovo/bitcoin/commits/45e06e05e7f8d638ecc91a1ba62e1b38a5133a2b",
      "created_at": "2025-08-01T15:17:34Z"
    },
    {
      "event": "unlabeled",
      "id": 18943282339,
      "node_id": "UNLE_lADOABII5862NchizwAAAARpG4yj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18943282339",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-01T16:38:44Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 18945896510,
      "node_id": "UNLE_lADOABII5862NchizwAAAARpQ3A-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18945896510",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-01T19:39:07Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 3145623139,
      "node_id": "IC_kwDOABII5867fmZj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3145623139",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-01T19:55:36Z",
      "updated_at": "2025-08-01T19:55:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Mostly happy with [d82dcf2](https://github.com/bitcoin/bitcoin/commit/d82dcf2eaa7efb3809ae559c8f97f74403a2ccd6), but in [b32c2b2](https://github.com/bitcoin/bitcoin/commit/b32c2b290f8e4dcb7fe54ee4c81714a3785920a7) _descriptor: ToPrivateString() pass if at least 1 priv key exists_ I find the miniscript change hard to follow (mostly because I find the miniscript code itself hard to follow). Can you split that out in a seperate commit that doesn't change behaviour?\r\n\r\nI split the original commit into the following commits:\r\n- https://github.com/bitcoin/bitcoin/pull/32471/commits/23431cde206bd6e18f274773f77bd914553bf2cc\r\n- https://github.com/bitcoin/bitcoin/pull/32471/commits/d2b84af58073630f87df32a7b785971fe32cb9be\r\n- https://github.com/bitcoin/bitcoin/pull/32471/commits/49f41141c674f83d0b66262a5b21aad623704264\r\n\r\nI'm not sure https://github.com/bitcoin/bitcoin/pull/32471/commits/d2b84af58073630f87df32a7b785971fe32cb9be makes the miniscript change in https://github.com/bitcoin/bitcoin/pull/32471/commits/49f41141c674f83d0b66262a5b21aad623704264 easier to follow. I still think they should be one commit, but let me know if it helps.\r\n\r\n@Sjors ",
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#issuecomment-3145623139",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32471"
    },
    {
      "event": "mentioned",
      "id": 18946109296,
      "node_id": "MEE_lADOABII5862NchizwAAAARpRq9w",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18946109296",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-01T19:56:11Z"
    },
    {
      "event": "subscribed",
      "id": 18946109318,
      "node_id": "SE_lADOABII5862NchizwAAAARpRq-G",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18946109318",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-01T19:56:11Z"
    },
    {
      "event": "reviewed",
      "id": 3083871225,
      "node_id": "PRR_kwDOABII58630CP5",
      "url": null,
      "actor": null,
      "commit_id": "45e06e05e7f8d638ecc91a1ba62e1b38a5133a2b",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-04T12:29:50Z",
      "author_association": "MEMBER",
      "body": "ACK 45e06e05e7f8d638ecc91a1ba62e1b38a5133a2b\r\n\r\nI find that the separation of 23431cde206bd6e18f274773f77bd914553bf2cc makes it easier to follow. The separation of https://github.com/bitcoin/bitcoin/commit/d2b84af58073630f87df32a7b785971fe32cb9be from https://github.com/bitcoin/bitcoin/commit/49f41141c674f83d0b66262a5b21aad623704264 is less useful, but fine by me.\r\n\r\n@achow101 can you update your concept opinion based on the updated behaviour? I think it makes sense to return a result if _any_ private key is present in descriptor, rather than all. ",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#pullrequestreview-3083871225",
      "submitted_at": "2025-08-04T12:27:14Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
    },
    {
      "event": "review_requested",
      "id": 18969354064,
      "node_id": "RRE_lADOABII5862NchizwAAAARqqV9Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18969354064",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-04T12:27:18Z",
      "requested_reviewer": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 3094495318,
      "node_id": "PRR_kwDOABII5864ckBW",
      "url": null,
      "actor": null,
      "commit_id": "45e06e05e7f8d638ecc91a1ba62e1b38a5133a2b",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-06T22:44:57Z",
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#pullrequestreview-3094495318",
      "submitted_at": "2025-08-06T22:44:57Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19057202880,
      "node_id": "HRFPE_lADOABII5862NchizwAAAARv5dbA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19057202880",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "82444869ec45573c19d5e9a85c4dda58e0ee5c46",
      "commit_url": "https://api.github.com/repos/Eunovo/bitcoin/commits/82444869ec45573c19d5e9a85c4dda58e0ee5c46",
      "created_at": "2025-08-08T15:08:13Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19057896641,
      "node_id": "HRFPE_lADOABII5862NchizwAAAARv8GzB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19057896641",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "4241edfce6f9a4a51121b39bc20040c14d220551",
      "commit_url": "https://api.github.com/repos/Eunovo/bitcoin/commits/4241edfce6f9a4a51121b39bc20040c14d220551",
      "created_at": "2025-08-08T15:53:58Z"
    },
    {
      "event": "labeled",
      "id": 19057904102,
      "node_id": "LE_lADOABII5862NchizwAAAARv8Inm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19057904102",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-08T15:54:20Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 3168379254,
      "node_id": "IC_kwDOABII58682aF2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3168379254",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-08T15:54:21Z",
      "updated_at": "2025-08-08T15:54:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\nðŸš§ At least one of the CI tasks failed.\n<sub>Task `tidy`: https://github.com/bitcoin/bitcoin/runs/47688035952</sub>\n<sub>LLM reason (âœ¨ experimental): The CI failure is caused by a clang-tidy error detecting recursive call chains in src/script/descriptor.cpp.</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#issuecomment-3168379254",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32471"
    },
    {
      "event": "unlabeled",
      "id": 19059648341,
      "node_id": "UNLE_lADOABII5862NchizwAAAARwCydV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19059648341",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-08T17:41:00Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 3170074963,
      "node_id": "IC_kwDOABII586884FT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3170074963",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-09T04:03:47Z",
      "updated_at": "2025-08-09T04:03:47Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the reviews! I have:\r\n- renamed `IsWatchOnly()` to `HavePrivateKeys()`\r\n- Added a test for `HavePrivateKeys()` to `descriptor_tests`\r\n- Removed the unnecessary asserts from `ToStringHelper()` and `ToPrivateString()`\r\n- Removed `has_priv_key` from `ToStringHelper()` and `ToSubStringHelper()` parameter lists",
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#issuecomment-3170074963",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32471"
    },
    {
      "event": "reviewed",
      "id": 3105532824,
      "node_id": "PRR_kwDOABII5865GquY",
      "url": null,
      "actor": null,
      "commit_id": "4241edfce6f9a4a51121b39bc20040c14d220551",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-11T15:00:41Z",
      "author_association": "CONTRIBUTOR",
      "body": "The miniscript code took some time for me to understand.\r\n\r\nlgtm ACK 4241edfce6f9a4a51121b39bc20040c14d220551",
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#pullrequestreview-3105532824",
      "submitted_at": "2025-08-11T12:45:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
    },
    {
      "event": "review_requested",
      "id": 19087710538,
      "node_id": "RRE_lADOABII5862NchizwAAAARxt1lK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19087710538",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-11T12:45:40Z",
      "requested_reviewer": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 19087711469,
      "node_id": "RRE_lADOABII5862NchizwAAAARxt1zt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19087711469",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-11T12:45:41Z",
      "requested_reviewer": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 3105737927,
      "node_id": "PRR_kwDOABII5865HczH",
      "url": null,
      "actor": null,
      "commit_id": "726181bf5bbf23e188156d2ec2db3e0dcb83b2ee",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-11T13:01:35Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#pullrequestreview-3105737927",
      "submitted_at": "2025-08-11T13:01:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19090843307,
      "node_id": "HRFPE_lADOABII5862NchizwAAAARx5yar",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19090843307",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "46860de809a1e9c7d0a1d716f77e9df7fb0bcd1c",
      "commit_url": "https://api.github.com/repos/Eunovo/bitcoin/commits/46860de809a1e9c7d0a1d716f77e9df7fb0bcd1c",
      "created_at": "2025-08-11T14:57:15Z"
    },
    {
      "event": "reviewed",
      "id": 3123570732,
      "node_id": "PRR_kwDOABII5866Legs",
      "url": null,
      "actor": null,
      "commit_id": "46860de809a1e9c7d0a1d716f77e9df7fb0bcd1c",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-15T10:34:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK 46860de809a1e9c7d0a1d716f77e9df7fb0bcd1c\n\n```\ngit range-diff 4241edf...46860de\n```",
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#pullrequestreview-3123570732",
      "submitted_at": "2025-08-15T10:34:51Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
    },
    {
      "event": "commented",
      "id": 3245132183,
      "node_id": "IC_kwDOABII587BbMmX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3245132183",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-02T12:33:09Z",
      "updated_at": "2025-09-02T12:33:22Z",
      "author_association": "MEMBER",
      "body": "utACK 46860de809a1e9c7d0a1d716f77e9df7fb0bcd1c\r\n\r\nI studied 4d07eff13002384ed59a3b7f592be56a25b88c15 from scratch since it had quite a few changes since my last review.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#issuecomment-3245132183",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32471"
    },
    {
      "event": "reviewed",
      "id": 3213573609,
      "node_id": "PRR_kwDOABII586_iz3p",
      "url": null,
      "actor": null,
      "commit_id": "46860de809a1e9c7d0a1d716f77e9df7fb0bcd1c",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-09-11T20:46:02Z",
      "author_association": "MEMBER",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#pullrequestreview-3213573609",
      "submitted_at": "2025-09-11T20:46:02Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
    },
    {
      "event": "review_requested",
      "id": 19646169942,
      "node_id": "RRE_lADOABII5862NchizwAAAASTAMNW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19646169942",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-11T20:46:08Z",
      "requested_reviewer": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19663162113,
      "node_id": "HRFPE_lADOABII5862NchizwAAAASUBAsB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19663162113",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "4d1d565784d52f9446ce0268a136e30f06aaf932",
      "commit_url": "https://api.github.com/repos/Eunovo/bitcoin/commits/4d1d565784d52f9446ce0268a136e30f06aaf932",
      "created_at": "2025-09-12T15:02:29Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19695442533,
      "node_id": "HRFPE_lADOABII5862NchizwAAAASV8Jpl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19695442533",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6630bb2b5ce9d3114315f7c6743c98b738aa6ce2",
      "commit_url": "https://api.github.com/repos/Eunovo/bitcoin/commits/6630bb2b5ce9d3114315f7c6743c98b738aa6ce2",
      "created_at": "2025-09-15T08:36:04Z"
    },
    {
      "event": "review_requested",
      "id": 19697961154,
      "node_id": "RRE_lADOABII5862NchizwAAAASWFwjC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19697961154",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-15T10:34:19Z",
      "requested_reviewer": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19742001295,
      "node_id": "HRFPE_lADOABII5862NchizwAAAASYtwiP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19742001295",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "commit_url": "https://api.github.com/repos/Eunovo/bitcoin/commits/74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "created_at": "2025-09-17T06:12:49Z"
    },
    {
      "event": "commented",
      "id": 3303403421,
      "node_id": "IC_kwDOABII587E5e-d",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3303403421",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-17T14:55:36Z",
      "updated_at": "2025-09-17T14:55:55Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased on master @https://github.com/bitcoin/bitcoin/commit/2d6a0c4649 and refactored the code the based on suggestions from @achow101 ",
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#issuecomment-3303403421",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32471"
    },
    {
      "event": "mentioned",
      "id": 19752787665,
      "node_id": "MEE_lADOABII5862NchizwAAAASZW57R",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19752787665",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-17T14:55:38Z"
    },
    {
      "event": "subscribed",
      "id": 19752787711,
      "node_id": "SE_lADOABII5862NchizwAAAASZW57_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19752787711",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-17T14:55:38Z"
    },
    {
      "event": "reviewed",
      "id": 3298207486,
      "node_id": "PRR_kwDOABII587Elqb-",
      "url": null,
      "actor": null,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-10-03T11:02:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "Requesting changes because found an issue with the `musig()` descriptor that can be fixed in this PR itself.",
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#pullrequestreview-3298207486",
      "submitted_at": "2025-10-03T11:02:13Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
    },
    {
      "event": "reviewed",
      "id": 3298499989,
      "node_id": "PRR_kwDOABII587Emx2V",
      "url": null,
      "actor": null,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-10-03T11:16:25Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#pullrequestreview-3298499989",
      "submitted_at": "2025-10-03T11:16:25Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 20099081664,
      "node_id": "HRFPE_lADOABII5862NchizwAAAASt_6XA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20099081664",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "020e0ca657eae189da8df763260e8bec97b51f8c",
      "commit_url": "https://api.github.com/repos/Eunovo/bitcoin/commits/020e0ca657eae189da8df763260e8bec97b51f8c",
      "created_at": "2025-10-05T01:34:12Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 20099092152,
      "node_id": "HRFPE_lADOABII5862NchizwAAAASt_864",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20099092152",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "8b4d4b392cadc025e86087142ddbf08d40d65ab8",
      "commit_url": "https://api.github.com/repos/Eunovo/bitcoin/commits/8b4d4b392cadc025e86087142ddbf08d40d65ab8",
      "created_at": "2025-10-05T01:38:09Z"
    },
    {
      "event": "reviewed",
      "id": 3303950151,
      "node_id": "PRR_kwDOABII587E7kdH",
      "url": null,
      "actor": null,
      "commit_id": "8b4d4b392cadc025e86087142ddbf08d40d65ab8",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-10-06T11:56:22Z",
      "author_association": "CONTRIBUTOR",
      "body": "lgtm ACK 8b4d4b3\r\n\r\nThanks for quickly addressing the comments.\r\n\r\n```zsh\r\ngit range-diff 74521dd...8b4d4b3\r\n```\r\n\r\nI have tried to think if the fix covers all the cases that could possibly arise in various descriptors containing private keys partially. Essentially, the `ToPrivateString` function of the descriptor classes returns `true` even if there is a single private key available for it, whereas the newly added `HavePrivateKeys` function returns `true` when all the private keys for the descriptor are available & hence, it's used in the wallet migration code now. \r\nVery good that the latest push also tests for the missing private keys case in the `else` block in the descriptor unit tests!\r\n\r\nNote: I have limited exposure to the `Miniscript` code as of now; I might re-review later that portion again, but looks ok right now.\r\n\r\nThis issue has popped up in my own local quite a few times where it became hard for me to continue my workflow, hope it gets checked in soon!",
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#pullrequestreview-3303950151",
      "submitted_at": "2025-10-06T11:16:01Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
    },
    {
      "event": "reviewed",
      "id": 3356372618,
      "node_id": "PRR_kwDOABII587IDi6K",
      "url": null,
      "actor": null,
      "commit_id": "8b4d4b392cadc025e86087142ddbf08d40d65ab8",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-10-20T12:59:01Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#pullrequestreview-3356372618",
      "submitted_at": "2025-10-20T12:59:01Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGYxNjljY2RhMzQ0MTc5MWU1ZWVkY2IwMzkxOTYxNGU2NjljMWNiMDc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f169ccda3441791e5eedcb03919614e669c1cb07",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f169ccda3441791e5eedcb03919614e669c1cb07",
      "tree": {
        "sha": "526787e7399d41fee0b9ab6b3c791b4d1d2f5845",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/526787e7399d41fee0b9ab6b3c791b4d1d2f5845"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/75353a016357f3ed0d2178f8432dfe495df4aa62",
          "sha": "75353a016357f3ed0d2178f8432dfe495df4aa62",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/75353a016357f3ed0d2178f8432dfe495df4aa62"
        }
      ],
      "message": "descriptors: add HavePrivateKeys()\n\nPreviously, to determine if a desc is watchonly, `ToPrivateString()`, was used.\nIt returns `false` if there is at least one pubkey in the descriptor for which\nthe provider  does not have a private key.\n\nToPrivateString() behaviour will change in the following commits to only\nreturn `false` if no priv keys could be found for the pub keys in the descriptor.\n\nHavePrivateKeys() is added here to replace the use of ToPrivateString() for determining\nif a descriptor is 'watchonly'.\n\nCo-authored-by: rkrux <rkrux.connect@gmail.com>",
      "committer": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-10-21T02:47:16Z"
      },
      "author": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-07-22T06:46:06Z"
      },
      "sha": "f169ccda3441791e5eedcb03919614e669c1cb07"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDcwZDcyNGNlZjZlYWYxMmI3ODZmYjlmYWNiOGMxMDc2YmYzMDU5NGY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/70d724cef6eaf12b786fb9facb8c1076bf30594f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/70d724cef6eaf12b786fb9facb8c1076bf30594f",
      "tree": {
        "sha": "e59a5e85383fe9de70cc86e95961426fcb8c6c9a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e59a5e85383fe9de70cc86e95961426fcb8c6c9a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f169ccda3441791e5eedcb03919614e669c1cb07",
          "sha": "f169ccda3441791e5eedcb03919614e669c1cb07",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f169ccda3441791e5eedcb03919614e669c1cb07"
        }
      ],
      "message": "wallet/migration: use HavePrivateKeys in place of ToPrivateString\n\nToPrivateString() behaviour will be modified in the following commits.\nThis change ensures that wallet migration does not break.",
      "committer": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-10-21T02:47:19Z"
      },
      "author": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-05-13T12:32:06Z"
      },
      "sha": "70d724cef6eaf12b786fb9facb8c1076bf30594f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDNlMTZlMTk3OTY4MjRlMDY5ZDQzNDQ5NDMzZThkNTU5MDg1MDU0YTc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3e16e19796824e069d43449433e8d559085054a7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3e16e19796824e069d43449433e8d559085054a7",
      "tree": {
        "sha": "9e59cab41fc85e6c52267dfdd65ce21181661f6d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9e59cab41fc85e6c52267dfdd65ce21181661f6d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/70d724cef6eaf12b786fb9facb8c1076bf30594f",
          "sha": "70d724cef6eaf12b786fb9facb8c1076bf30594f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/70d724cef6eaf12b786fb9facb8c1076bf30594f"
        }
      ],
      "message": "descriptor: refactor ToPrivateString for providers\n\nThis commit modifies the Pubkey providers to return the public string\nif private data is not available.\nThis is setup for a future commit to make Descriptor::ToPrivateString\nreturn strings with missing private key information.\n\nCo-authored-by: rkrux <rkrux.connect@gmail.com>",
      "committer": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-10-21T02:47:19Z"
      },
      "author": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-08-01T13:39:11Z"
      },
      "sha": "3e16e19796824e069d43449433e8d559085054a7"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDIzZjhiNjAzNWZmNjUzODEzNGJlM2QzZGY4YTNhYjhiYTQ3Zjg2YzA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/23f8b6035ff6538134be3d3df8a3ab8ba47f86c0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/23f8b6035ff6538134be3d3df8a3ab8ba47f86c0",
      "tree": {
        "sha": "a5bc555a5d32a3396fb762ccd19494c6cfbe16d6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a5bc555a5d32a3396fb762ccd19494c6cfbe16d6"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3e16e19796824e069d43449433e8d559085054a7",
          "sha": "3e16e19796824e069d43449433e8d559085054a7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3e16e19796824e069d43449433e8d559085054a7"
        }
      ],
      "message": "descriptor: ToPrivateString() pass if  at least 1 priv key exists\n\n- Refactor Descriptor::ToPrivateString() to allow descriptors with\n  missing private keys to be printed. Useful in descriptors with\n  multiple keys e.g tr() etc.\n- The existing behaviour of listdescriptors is preserved as much as\n  possible, if no private keys are availablle ToPrivateString will\n  return false",
      "committer": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-10-21T02:47:19Z"
      },
      "author": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-08-01T13:31:25Z"
      },
      "sha": "23f8b6035ff6538134be3d3df8a3ab8ba47f86c0"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGE1MmEzZWY5YmViOWFiZDc2NTJjNmFmYWU5N2EwMDI3MzYzNDg5YmQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a52a3ef9beb9abd7652c6afae97a0027363489bd",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a52a3ef9beb9abd7652c6afae97a0027363489bd",
      "tree": {
        "sha": "c69090a88279cdeb9920e152216fc688723a9732",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c69090a88279cdeb9920e152216fc688723a9732"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/23f8b6035ff6538134be3d3df8a3ab8ba47f86c0",
          "sha": "23f8b6035ff6538134be3d3df8a3ab8ba47f86c0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/23f8b6035ff6538134be3d3df8a3ab8ba47f86c0"
        }
      ],
      "message": "walletrpc: reject listdes with priv key on w-only wallets",
      "committer": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-10-21T02:47:19Z"
      },
      "author": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-05-12T10:55:19Z"
      },
      "sha": "a52a3ef9beb9abd7652c6afae97a0027363489bd"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDJiMTYwMTRkZmJlN2UyNDllNDkyOWJlYWZiNGNlMjY0MTUyMDZlN2E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2b16014dfbe7e249e4929beafb4ce26415206e7a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2b16014dfbe7e249e4929beafb4ce26415206e7a",
      "tree": {
        "sha": "ae3cb6f9348ed5c0da9c854055ef96175cb485e4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ae3cb6f9348ed5c0da9c854055ef96175cb485e4"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a52a3ef9beb9abd7652c6afae97a0027363489bd",
          "sha": "a52a3ef9beb9abd7652c6afae97a0027363489bd",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a52a3ef9beb9abd7652c6afae97a0027363489bd"
        }
      ],
      "message": "test: Test listdescs with priv works even with missing priv keys\n\nCo-authored-by: rkrux <rkrux.connect@gmail.com>",
      "committer": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-10-21T02:47:19Z"
      },
      "author": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-05-12T12:39:03Z"
      },
      "sha": "2b16014dfbe7e249e4929beafb4ce26415206e7a"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 20393106562,
      "node_id": "HRFPE_lADOABII5862NchizwAAAAS_hhyC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20393106562",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2b16014dfbe7e249e4929beafb4ce26415206e7a",
      "commit_url": "https://api.github.com/repos/Eunovo/bitcoin/commits/2b16014dfbe7e249e4929beafb4ce26415206e7a",
      "created_at": "2025-10-21T02:53:28Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2210625173",
      "pull_request_review_id": 3025316172,
      "id": 2210625173,
      "node_id": "PRRC_kwDOABII586Dw3aV",
      "diff_hunk": "@@ -111,7 +111,12 @@ struct Descriptor {\n     /** Whether this descriptor will return one scriptPubKey or multiple (aka is or is not combo) */\n     virtual bool IsSingleType() const = 0;\n \n-    /** Convert the descriptor to a private string. This fails if the provided provider does not have the relevant private keys. */\n+    /** Convert the descriptor to a private string. This uses public keys if the relevant private keys are not in the SigningProvider.\n+     *  If none of the relevant private keys are available, the output string in the \"out\" parameter will not contain any private key information,\n+     *  and this function will return \"false\".\n+     *  @param[in] provider The SigningProvider to query for private keys.\n+     *  @param[out] out The resulting descriptor string, containing private keys if available.\n+     */",
      "path": "src/script/descriptor.h",
      "position": 1,
      "original_position": 10,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "a0a458965c944434b1f3e4d83277257793435edb",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In a0a458965c944434b1f3e4d83277257793435edb \"descriptor: ToPrivateString() pass if  at least 1 priv key exists\"\r\n\r\n```diff\r\n+ @return true if at least one private key available\r\n```",
      "created_at": "2025-07-16T14:37:12Z",
      "updated_at": "2025-07-17T15:19:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2210625173",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2210625173"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": 125,
      "original_start_line": 118,
      "start_side": "RIGHT",
      "line": 127,
      "original_line": 127,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2210641706",
      "pull_request_review_id": 3025316172,
      "id": 2210641706,
      "node_id": "PRRC_kwDOABII586Dw7cq",
      "diff_hunk": "@@ -686,20 +698,23 @@ class DescriptorImpl : public Descriptor\n     std::string ToString(bool compat_format) const final\n     {\n         std::string ret;\n-        ToStringHelper(nullptr, ret, compat_format ? StringType::COMPAT : StringType::PUBLIC);\n+        bool has_priv_key;\n+        ToStringHelper(nullptr, ret, compat_format ? StringType::COMPAT : StringType::PUBLIC, has_priv_key);\n         return AddChecksum(ret);\n     }\n \n     bool ToPrivateString(const SigningProvider& arg, std::string& out) const override\n     {\n-        bool ret = ToStringHelper(&arg, out, StringType::PRIVATE);\n+        bool has_priv_key;\n+        assert(ToStringHelper(&arg, out, StringType::PRIVATE, has_priv_key));",
      "path": "src/script/descriptor.cpp",
      "position": 1,
      "original_position": 102,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "a0a458965c944434b1f3e4d83277257793435edb",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In a0a458965c944434b1f3e4d83277257793435edb \"descriptor: ToPrivateString() pass if  at least 1 priv key exists\"\r\n\r\nFine to add `assert` here because for all intents and purposes I don't suppose there would ever be a case where `ToStringHelper` returns `false` here. Perhaps we can add a helpful assert message here for debugging purposes?\r\n\r\n```diff\r\n- assert(ToStringHelper(&arg, out, StringType::PRIVATE, has_priv_key));\r\n+ assert(ToStringHelper(&arg, out, StringType::PRIVATE, has_priv_key), \"\");\r\n```",
      "created_at": "2025-07-16T14:43:35Z",
      "updated_at": "2025-07-17T15:19:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2210641706",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2210641706"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 709,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2210645024",
      "pull_request_review_id": 3025316172,
      "id": 2210645024,
      "node_id": "PRRC_kwDOABII586Dw8Qg",
      "diff_hunk": "@@ -840,10 +841,16 @@ struct Node {\n                     (node.fragment == Fragment::OR_I && node.subs[0]->fragment == Fragment::JUST_0) ||\n                     (node.fragment == Fragment::OR_I && node.subs[1]->fragment == Fragment::JUST_0));\n         };\n+        auto toString = [&ctx, &has_priv_key](Key key) -> std::string {\n+            bool tmp{false};\n+            auto key_str{ctx.ToString(key, tmp)};\n+            has_priv_key |= tmp;",
      "path": "src/script/miniscript.h",
      "position": 1,
      "original_position": 17,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "a0a458965c944434b1f3e4d83277257793435edb",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In a0a458965c944434b1f3e4d83277257793435edb \"descriptor: ToPrivateString() pass if  at least 1 priv key exists\"\r\n\r\nNot a bug but `bitwise or` for boolean operations is not ideal.\r\n```diff\r\n- has_priv_key |= tmp;\r\n+ has_priv_key = has_priv_key || tmp;\r\n```",
      "created_at": "2025-07-16T14:44:49Z",
      "updated_at": "2025-07-17T15:19:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2210645024",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2210645024"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 847,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2210652033",
      "pull_request_review_id": 3025316172,
      "id": 2210652033,
      "node_id": "PRRC_kwDOABII586Dw9-B",
      "diff_hunk": "@@ -126,6 +126,37 @@ def run_test(self):\n         }\n         assert_equal(expected, wallet.listdescriptors())\n \n+        self.log.info('Test descriptor with missing private keys')\n+        node.createwallet(wallet_name='w5', blank=True, descriptors=True)\n+        wallet = node.get_wallet_rpc('w5')\n+        tr_desc = descsum_create('tr(' + node.get_deterministic_priv_key().key +\n+                                 ',{pk(03cdabb7f2dce7bfbd8a0b9570c6fd1e712e5d64045e9d6b517b3d5072251dc204)' +\n+                                 ',pk([d34db33f/44h/0h/0h]tpubD6NzVbkrYhZ4WaWSyoBvQwbpLkojyoTZPRsgXELWz3Popb3qkjcJyJUGLnL4qHHoQvao8ESaAstxYSnhyswJ76uZPStJRJCTKvosUCJZL5B/0)})')\n+        miniscript_desc = descsum_create('wsh(and_v(v:ripemd160(095ff41131e5946f3c85f79e44adbcf8e27e080e),multi(1,' + node.get_deterministic_priv_key().key +\n+                                            ',tpubD6NzVbkrYhZ4WaWSyoBvQwbpLkojyoTZPRsgXELWz3Popb3qkjcJyJUGLnL4qHHoQvao8ESaAstxYSnhyswJ76uZPStJRJCTKvosUCJZL5B/0)))')\n+        wallet.importdescriptors([\n+            {\n+                'desc': tr_desc,\n+                'timestamp': TIME_GENESIS_BLOCK,\n+            },\n+            {\n+                'desc': miniscript_desc,\n+                'timestamp': TIME_GENESIS_BLOCK,\n+            }\n+        ])\n+        expected = {\n+            'wallet_name': 'w5',\n+            'descriptors': [\n+                {'active': False,\n+                 'desc': tr_desc,\n+                 'timestamp': TIME_GENESIS_BLOCK},\n+                {'active': False,\n+                 'desc': miniscript_desc,\n+                 'timestamp': TIME_GENESIS_BLOCK},\n+            ],\n+        }\n+        assert_equal(expected, wallet.listdescriptors(True))",
      "path": "test/functional/wallet_listdescriptors.py",
      "position": 1,
      "original_position": 33,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "bb14e8ac7d38f3698d76ea3d6dce09e1387d59f3",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In bb14e8ac7d38f3698d76ea3d6dce09e1387d59f3 \"test: Test listdescs with priv works even with missing priv keys\"\r\n\r\nNit: I prefer to only check for the data that we really want to assert on, helps in keeping the tests code cleaner as well besides being minutely faster. Checking `desc` for every imported descriptor in this case. ",
      "created_at": "2025-07-16T14:47:30Z",
      "updated_at": "2025-07-17T15:19:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2210652033",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2210652033"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": 147,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 158,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2210669794",
      "pull_request_review_id": 3025316172,
      "id": 2210669794,
      "node_id": "PRRC_kwDOABII586DxCTi",
      "diff_hunk": "@@ -485,7 +488,10 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     bool ToPrivateString(const SigningProvider& arg, std::string& out) const override\n     {\n         CExtKey key;\n-        if (!GetExtKey(arg, key)) return false;\n+        if (!GetExtKey(arg, key)) {\n+            out = ToString();",
      "path": "src/script/descriptor.cpp",
      "position": 1,
      "original_position": 30,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "a0a458965c944434b1f3e4d83277257793435edb",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In a0a458965c944434b1f3e4d83277257793435edb \"descriptor: ToPrivateString() pass if  at least 1 priv key exists\"\r\n\r\nNit: To keep it consistent with the other pubkey providers and to make it explicit here. Though a default is specified in `ToString`.\r\n```diff\r\n- out = ToString();\r\n+ out = ToString(StringType::PUBLIC);\r\n```",
      "created_at": "2025-07-16T14:54:18Z",
      "updated_at": "2025-07-17T15:19:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2210669794",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2210669794"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 492,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2213264627",
      "pull_request_review_id": 3025316172,
      "id": 2213264627,
      "node_id": "PRRC_kwDOABII586D67zz",
      "diff_hunk": "@@ -255,9 +255,9 @@ class OriginPubkeyProvider final : public PubkeyProvider\n     bool ToPrivateString(const SigningProvider& arg, std::string& ret) const override",
      "path": "src/script/descriptor.cpp",
      "position": 14,
      "original_position": 1,
      "commit_id": "2b16014dfbe7e249e4929beafb4ce26415206e7a",
      "original_commit_id": "a0a458965c944434b1f3e4d83277257793435edb",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In a0a458965c944434b1f3e4d83277257793435edb \"descriptor: ToPrivateString() pass if  at least 1 priv key exists\"\r\n\r\nIt would be helpful to update the function doc in `PubkeyProvider` struct to mention the new behaviour.",
      "created_at": "2025-07-17T12:52:24Z",
      "updated_at": "2025-07-17T15:19:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2213264627",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2213264627"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 264,
      "original_line": 264,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2213293926",
      "pull_request_review_id": 3025316172,
      "id": 2213293926,
      "node_id": "PRRC_kwDOABII586D7C9m",
      "diff_hunk": "@@ -686,20 +698,23 @@ class DescriptorImpl : public Descriptor\n     std::string ToString(bool compat_format) const final\n     {\n         std::string ret;\n-        ToStringHelper(nullptr, ret, compat_format ? StringType::COMPAT : StringType::PUBLIC);\n+        bool has_priv_key;\n+        ToStringHelper(nullptr, ret, compat_format ? StringType::COMPAT : StringType::PUBLIC, has_priv_key);",
      "path": "src/script/descriptor.cpp",
      "position": 1,
      "original_position": 94,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "a0a458965c944434b1f3e4d83277257793435edb",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In https://github.com/bitcoin/bitcoin/commit/a0a458965c944434b1f3e4d83277257793435edb \"descriptor: ToPrivateString() pass if at least 1 priv key exists\"\r\n\r\n```diff\r\n- bool has_priv_key;\r\n- ToStringHelper(nullptr, ret, compat_format ? StringType::COMPAT : StringType::PUBLIC, has_priv_key);\r\n+ bool dummy;\r\n+ ToStringHelper(nullptr, ret, compat_format ? StringType::COMPAT : StringType::PUBLIC, dummy);\r\n```\r\n\r\nBecause there is no use of this variable in `ToString`.\r\nSame for `ToNormalizedString` function down below.\r\n\r\nAn alternative could be to use a pointer for `has_priv_key` instead of reference because, as noted here, there are use cases for nullptr. The `ToStringHelper` would need to accordingly check for the presence of pointer value though.",
      "created_at": "2025-07-17T13:04:12Z",
      "updated_at": "2025-07-17T15:19:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2213293926",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2213293926"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": 701,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 702,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2213427874",
      "pull_request_review_id": 3025316172,
      "id": 2213427874,
      "node_id": "PRRC_kwDOABII586D7jqi",
      "diff_hunk": "@@ -840,10 +841,16 @@ struct Node {\n                     (node.fragment == Fragment::OR_I && node.subs[0]->fragment == Fragment::JUST_0) ||\n                     (node.fragment == Fragment::OR_I && node.subs[1]->fragment == Fragment::JUST_0));\n         };\n+        auto toString = [&ctx, &has_priv_key](Key key) -> std::string {\n+            bool tmp{false};\n+            auto key_str{ctx.ToString(key, tmp)};",
      "path": "src/script/miniscript.h",
      "position": 1,
      "original_position": 16,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "a0a458965c944434b1f3e4d83277257793435edb",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In a0a458965c944434b1f3e4d83277257793435edb \"descriptor: ToPrivateString() pass if  at least 1 priv key exists\"\r\n\r\n```diff\r\n- bool tmp{false};\r\n- auto key_str{ctx.ToString(key, tmp)};\r\n+ bool fragment_has_private_key{false};\r\n+ auto key_str{ctx.ToString(key, fragment_has_private_key)};",
      "created_at": "2025-07-17T13:58:06Z",
      "updated_at": "2025-07-17T15:19:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2213427874",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2213427874"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": 845,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 846,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2213439258",
      "pull_request_review_id": 3025316172,
      "id": 2213439258,
      "node_id": "PRRC_kwDOABII586D7mca",
      "diff_hunk": "@@ -1700,8 +1715,9 @@ struct KeyParser {\n         return key;\n     }\n \n-    std::optional<std::string> ToString(const Key& key) const\n+    std::string ToString(const Key& key, bool& has_priv_key) const\n     {\n+        has_priv_key = false;",
      "path": "src/script/descriptor.cpp",
      "position": 1,
      "original_position": 178,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "a0a458965c944434b1f3e4d83277257793435edb",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In a0a458965c944434b1f3e4d83277257793435edb \"descriptor: ToPrivateString() pass if  at least 1 priv key exists\"\r\n\r\nMaybe the pointer approach would avoid forcibly setting variables to false?",
      "created_at": "2025-07-17T14:02:27Z",
      "updated_at": "2025-07-17T15:19:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2213439258",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2213439258"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": 1718,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1720,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2213477946",
      "pull_request_review_id": 3025316172,
      "id": 2213477946,
      "node_id": "PRRC_kwDOABII586D7v46",
      "diff_hunk": "@@ -686,20 +698,23 @@ class DescriptorImpl : public Descriptor\n     std::string ToString(bool compat_format) const final\n     {\n         std::string ret;\n-        ToStringHelper(nullptr, ret, compat_format ? StringType::COMPAT : StringType::PUBLIC);\n+        bool has_priv_key;\n+        ToStringHelper(nullptr, ret, compat_format ? StringType::COMPAT : StringType::PUBLIC, has_priv_key);\n         return AddChecksum(ret);\n     }\n \n     bool ToPrivateString(const SigningProvider& arg, std::string& out) const override\n     {\n-        bool ret = ToStringHelper(&arg, out, StringType::PRIVATE);\n+        bool has_priv_key;\n+        assert(ToStringHelper(&arg, out, StringType::PRIVATE, has_priv_key));",
      "path": "src/script/descriptor.cpp",
      "position": 1,
      "original_position": 102,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "a0a458965c944434b1f3e4d83277257793435edb",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In a0a458965c944434b1f3e4d83277257793435edb \"descriptor: ToPrivateString() pass if  at least 1 priv key exists\"\r\n\r\nThis would also aid readability because under no condition `has_priv_key` can be `false` here.\r\n```cpp\r\nAssume(has_priv_key);\r\n```",
      "created_at": "2025-07-17T14:15:00Z",
      "updated_at": "2025-07-17T15:19:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2213477946",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2213477946"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 709,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2216313380",
      "pull_request_review_id": 3033939670,
      "id": 2216313380,
      "node_id": "PRRC_kwDOABII586EGkIk",
      "diff_hunk": "@@ -111,7 +111,12 @@ struct Descriptor {\n     /** Whether this descriptor will return one scriptPubKey or multiple (aka is or is not combo) */\n     virtual bool IsSingleType() const = 0;\n \n-    /** Convert the descriptor to a private string. This fails if the provided provider does not have the relevant private keys. */\n+    /** Convert the descriptor to a private string. This uses public keys if the relevant private keys are not in the SigningProvider.\n+     *  If none of the relevant private keys are available, the output string in the \"out\" parameter will not contain any private key information,\n+     *  and this function will return \"false\".\n+     *  @param[in] provider The SigningProvider to query for private keys.\n+     *  @param[out] out The resulting descriptor string, containing private keys if available.\n+     */",
      "path": "src/script/descriptor.h",
      "position": 1,
      "original_position": 10,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "a0a458965c944434b1f3e4d83277257793435edb",
      "in_reply_to_id": 2210625173,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-07-18T15:15:36Z",
      "updated_at": "2025-07-18T15:15:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2216313380",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2216313380"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": 125,
      "original_start_line": 118,
      "start_side": "RIGHT",
      "line": 127,
      "original_line": 127,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2216314444",
      "pull_request_review_id": 3033941062,
      "id": 2216314444,
      "node_id": "PRRC_kwDOABII586EGkZM",
      "diff_hunk": "@@ -686,20 +698,23 @@ class DescriptorImpl : public Descriptor\n     std::string ToString(bool compat_format) const final\n     {\n         std::string ret;\n-        ToStringHelper(nullptr, ret, compat_format ? StringType::COMPAT : StringType::PUBLIC);\n+        bool has_priv_key;\n+        ToStringHelper(nullptr, ret, compat_format ? StringType::COMPAT : StringType::PUBLIC, has_priv_key);\n         return AddChecksum(ret);\n     }\n \n     bool ToPrivateString(const SigningProvider& arg, std::string& out) const override\n     {\n-        bool ret = ToStringHelper(&arg, out, StringType::PRIVATE);\n+        bool has_priv_key;\n+        assert(ToStringHelper(&arg, out, StringType::PRIVATE, has_priv_key));",
      "path": "src/script/descriptor.cpp",
      "position": 1,
      "original_position": 102,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "a0a458965c944434b1f3e4d83277257793435edb",
      "in_reply_to_id": 2210641706,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I couldn't add an assert message, but I added a comment.",
      "created_at": "2025-07-18T15:16:07Z",
      "updated_at": "2025-07-18T15:16:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2216314444",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2216314444"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 709,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2216314650",
      "pull_request_review_id": 3033941353,
      "id": 2216314650,
      "node_id": "PRRC_kwDOABII586EGkca",
      "diff_hunk": "@@ -840,10 +841,16 @@ struct Node {\n                     (node.fragment == Fragment::OR_I && node.subs[0]->fragment == Fragment::JUST_0) ||\n                     (node.fragment == Fragment::OR_I && node.subs[1]->fragment == Fragment::JUST_0));\n         };\n+        auto toString = [&ctx, &has_priv_key](Key key) -> std::string {\n+            bool tmp{false};\n+            auto key_str{ctx.ToString(key, tmp)};\n+            has_priv_key |= tmp;",
      "path": "src/script/miniscript.h",
      "position": 1,
      "original_position": 17,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "a0a458965c944434b1f3e4d83277257793435edb",
      "in_reply_to_id": 2210645024,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-07-18T15:16:14Z",
      "updated_at": "2025-07-18T15:16:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2216314650",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2216314650"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 847,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2216314937",
      "pull_request_review_id": 3033941760,
      "id": 2216314937,
      "node_id": "PRRC_kwDOABII586EGkg5",
      "diff_hunk": "@@ -126,6 +126,37 @@ def run_test(self):\n         }\n         assert_equal(expected, wallet.listdescriptors())\n \n+        self.log.info('Test descriptor with missing private keys')\n+        node.createwallet(wallet_name='w5', blank=True, descriptors=True)\n+        wallet = node.get_wallet_rpc('w5')\n+        tr_desc = descsum_create('tr(' + node.get_deterministic_priv_key().key +\n+                                 ',{pk(03cdabb7f2dce7bfbd8a0b9570c6fd1e712e5d64045e9d6b517b3d5072251dc204)' +\n+                                 ',pk([d34db33f/44h/0h/0h]tpubD6NzVbkrYhZ4WaWSyoBvQwbpLkojyoTZPRsgXELWz3Popb3qkjcJyJUGLnL4qHHoQvao8ESaAstxYSnhyswJ76uZPStJRJCTKvosUCJZL5B/0)})')\n+        miniscript_desc = descsum_create('wsh(and_v(v:ripemd160(095ff41131e5946f3c85f79e44adbcf8e27e080e),multi(1,' + node.get_deterministic_priv_key().key +\n+                                            ',tpubD6NzVbkrYhZ4WaWSyoBvQwbpLkojyoTZPRsgXELWz3Popb3qkjcJyJUGLnL4qHHoQvao8ESaAstxYSnhyswJ76uZPStJRJCTKvosUCJZL5B/0)))')\n+        wallet.importdescriptors([\n+            {\n+                'desc': tr_desc,\n+                'timestamp': TIME_GENESIS_BLOCK,\n+            },\n+            {\n+                'desc': miniscript_desc,\n+                'timestamp': TIME_GENESIS_BLOCK,\n+            }\n+        ])\n+        expected = {\n+            'wallet_name': 'w5',\n+            'descriptors': [\n+                {'active': False,\n+                 'desc': tr_desc,\n+                 'timestamp': TIME_GENESIS_BLOCK},\n+                {'active': False,\n+                 'desc': miniscript_desc,\n+                 'timestamp': TIME_GENESIS_BLOCK},\n+            ],\n+        }\n+        assert_equal(expected, wallet.listdescriptors(True))",
      "path": "test/functional/wallet_listdescriptors.py",
      "position": 1,
      "original_position": 33,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "bb14e8ac7d38f3698d76ea3d6dce09e1387d59f3",
      "in_reply_to_id": 2210652033,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-07-18T15:16:24Z",
      "updated_at": "2025-07-18T15:16:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2216314937",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2216314937"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": 147,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 158,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2216315188",
      "pull_request_review_id": 3033942153,
      "id": 2216315188,
      "node_id": "PRRC_kwDOABII586EGkk0",
      "diff_hunk": "@@ -485,7 +488,10 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     bool ToPrivateString(const SigningProvider& arg, std::string& out) const override\n     {\n         CExtKey key;\n-        if (!GetExtKey(arg, key)) return false;\n+        if (!GetExtKey(arg, key)) {\n+            out = ToString();",
      "path": "src/script/descriptor.cpp",
      "position": 1,
      "original_position": 30,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "a0a458965c944434b1f3e4d83277257793435edb",
      "in_reply_to_id": 2210669794,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-07-18T15:16:33Z",
      "updated_at": "2025-07-18T15:16:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2216315188",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2216315188"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 492,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2216315538",
      "pull_request_review_id": 3033942651,
      "id": 2216315538,
      "node_id": "PRRC_kwDOABII586EGkqS",
      "diff_hunk": "@@ -255,9 +255,9 @@ class OriginPubkeyProvider final : public PubkeyProvider\n     bool ToPrivateString(const SigningProvider& arg, std::string& ret) const override",
      "path": "src/script/descriptor.cpp",
      "position": 14,
      "original_position": 1,
      "commit_id": "2b16014dfbe7e249e4929beafb4ce26415206e7a",
      "original_commit_id": "a0a458965c944434b1f3e4d83277257793435edb",
      "in_reply_to_id": 2213264627,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-07-18T15:16:43Z",
      "updated_at": "2025-07-18T15:16:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2216315538",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2216315538"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 264,
      "original_line": 264,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2216319131",
      "pull_request_review_id": 3033947907,
      "id": 2216319131,
      "node_id": "PRRC_kwDOABII586EGlib",
      "diff_hunk": "@@ -686,20 +698,23 @@ class DescriptorImpl : public Descriptor\n     std::string ToString(bool compat_format) const final\n     {\n         std::string ret;\n-        ToStringHelper(nullptr, ret, compat_format ? StringType::COMPAT : StringType::PUBLIC);\n+        bool has_priv_key;\n+        ToStringHelper(nullptr, ret, compat_format ? StringType::COMPAT : StringType::PUBLIC, has_priv_key);",
      "path": "src/script/descriptor.cpp",
      "position": 1,
      "original_position": 94,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "a0a458965c944434b1f3e4d83277257793435edb",
      "in_reply_to_id": 2213293926,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`ToStringHelper` now accepts a pointer to `has_priv_key` in https://github.com/bitcoin/bitcoin/pull/32471/commits/2a1f1f0e32829af43436eb4220164c1be86229bb\r\nIt does look cleaner, but there's a need to check for `nullptr` now.",
      "created_at": "2025-07-18T15:18:39Z",
      "updated_at": "2025-07-18T15:18:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2216319131",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2216319131"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": 701,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 702,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2216319565",
      "pull_request_review_id": 3033948558,
      "id": 2216319565,
      "node_id": "PRRC_kwDOABII586EGlpN",
      "diff_hunk": "@@ -840,10 +841,16 @@ struct Node {\n                     (node.fragment == Fragment::OR_I && node.subs[0]->fragment == Fragment::JUST_0) ||\n                     (node.fragment == Fragment::OR_I && node.subs[1]->fragment == Fragment::JUST_0));\n         };\n+        auto toString = [&ctx, &has_priv_key](Key key) -> std::string {\n+            bool tmp{false};\n+            auto key_str{ctx.ToString(key, tmp)};",
      "path": "src/script/miniscript.h",
      "position": 1,
      "original_position": 16,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "a0a458965c944434b1f3e4d83277257793435edb",
      "in_reply_to_id": 2213427874,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-07-18T15:18:53Z",
      "updated_at": "2025-07-18T15:18:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2216319565",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2216319565"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": 845,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 846,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2216320066",
      "pull_request_review_id": 3033949210,
      "id": 2216320066,
      "node_id": "PRRC_kwDOABII586EGlxC",
      "diff_hunk": "@@ -1700,8 +1715,9 @@ struct KeyParser {\n         return key;\n     }\n \n-    std::optional<std::string> ToString(const Key& key) const\n+    std::string ToString(const Key& key, bool& has_priv_key) const\n     {\n+        has_priv_key = false;",
      "path": "src/script/descriptor.cpp",
      "position": 1,
      "original_position": 178,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "a0a458965c944434b1f3e4d83277257793435edb",
      "in_reply_to_id": 2213439258,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-07-18T15:19:08Z",
      "updated_at": "2025-07-18T15:19:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2216320066",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2216320066"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": 1718,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1720,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2216323468",
      "pull_request_review_id": 3033953875,
      "id": 2216323468,
      "node_id": "PRRC_kwDOABII586EGmmM",
      "diff_hunk": "@@ -686,20 +698,23 @@ class DescriptorImpl : public Descriptor\n     std::string ToString(bool compat_format) const final\n     {\n         std::string ret;\n-        ToStringHelper(nullptr, ret, compat_format ? StringType::COMPAT : StringType::PUBLIC);\n+        bool has_priv_key;\n+        ToStringHelper(nullptr, ret, compat_format ? StringType::COMPAT : StringType::PUBLIC, has_priv_key);\n         return AddChecksum(ret);\n     }\n \n     bool ToPrivateString(const SigningProvider& arg, std::string& out) const override\n     {\n-        bool ret = ToStringHelper(&arg, out, StringType::PRIVATE);\n+        bool has_priv_key;\n+        assert(ToStringHelper(&arg, out, StringType::PRIVATE, has_priv_key));",
      "path": "src/script/descriptor.cpp",
      "position": 1,
      "original_position": 102,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "a0a458965c944434b1f3e4d83277257793435edb",
      "in_reply_to_id": 2213477946,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'm confused here. Can you clarify what you're suggesting?",
      "created_at": "2025-07-18T15:20:54Z",
      "updated_at": "2025-07-18T15:20:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2216323468",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2216323468"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 709,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2216402469",
      "pull_request_review_id": 3034073773,
      "id": 2216402469,
      "node_id": "PRRC_kwDOABII586EG54l",
      "diff_hunk": "@@ -686,20 +698,23 @@ class DescriptorImpl : public Descriptor\n     std::string ToString(bool compat_format) const final\n     {\n         std::string ret;\n-        ToStringHelper(nullptr, ret, compat_format ? StringType::COMPAT : StringType::PUBLIC);\n+        bool has_priv_key;\n+        ToStringHelper(nullptr, ret, compat_format ? StringType::COMPAT : StringType::PUBLIC, has_priv_key);\n         return AddChecksum(ret);\n     }\n \n     bool ToPrivateString(const SigningProvider& arg, std::string& out) const override\n     {\n-        bool ret = ToStringHelper(&arg, out, StringType::PRIVATE);\n+        bool has_priv_key;\n+        assert(ToStringHelper(&arg, out, StringType::PRIVATE, has_priv_key));",
      "path": "src/script/descriptor.cpp",
      "position": 1,
      "original_position": 102,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "a0a458965c944434b1f3e4d83277257793435edb",
      "in_reply_to_id": 2213477946,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I had something like this in mind because in all the descriptors that can be added in a non-watch-only wallet, there must be at least 1 private key that is available. So, it seemed reasonable to me to add an `Assume` here on `has_priv_key` being true. I don't suppose `ToPrivateString` function would be called in any case for a watch-only wallet.\r\n```diff\r\ndiff --git a/src/script/descriptor.cpp b/src/script/descriptor.cpp\r\nindex bd85ddd9e2..b22bf3fa4a 100644\r\n--- a/src/script/descriptor.cpp\r\n+++ b/src/script/descriptor.cpp\r\n@@ -710,6 +710,7 @@ public:\r\n         // ToStringHelper should never fail for StringType::PRIVATE,\r\n         // because it falls back to StringType::PUBLIC when no private ke\r\ny is available.\r\n         assert(ToStringHelper(&arg, out, StringType::PRIVATE, &has_priv_k\r\ney));\r\n+        Assume(has_priv_key);\r\n         out = AddChecksum(out);\r\n         return has_priv_key;\r\n     }\r\n```\r\n\r\nThe `descriptor_tests` unit test did fail for one case when I used an `assert` instead, the functional tests though pass on my system. Maybe I have missed some use case due to which it fails. \r\n```bash\r\ntest/descriptor_tests.cpp:212: info: check parse_priv->ToPrivateString(keys_priv, prv1) has passed\r\ntest/descriptor_tests.cpp:216: info: check 'Private ser: combo(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1)#p5326pcv Private desc: combo(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1)' has passed\r\nAssertion failed: (has_priv_key), function ToPrivateString, file descriptor.cpp, line 713.\r\nunknown location:0: fatal error: in \"descriptor_tests/descriptor_test\": signal: SIGABRT (application abort requested)\r\ntest/descriptor_tests.cpp:218: last checkpoint\r\ntest/descriptor_tests.cpp:518: Leaving test case \"descriptor_test\"; testing time: 1795us\r\n```\r\n\r\nISTM that the unit test case is more contrived than the functional tests as the below check fails.\r\n```cpp\r\nBOOST_CHECK(!parse_priv->ToPrivateString(keys_pub, prv1));\r\n```\r\n\r\nYou can ignore if this doesn't make sense.",
      "created_at": "2025-07-18T16:01:10Z",
      "updated_at": "2025-07-18T16:01:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2216402469",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2216402469"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 709,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2217261456",
      "pull_request_review_id": 3035313761,
      "id": 2217261456,
      "node_id": "PRRC_kwDOABII586EKLmQ",
      "diff_hunk": "@@ -686,20 +698,23 @@ class DescriptorImpl : public Descriptor\n     std::string ToString(bool compat_format) const final\n     {\n         std::string ret;\n-        ToStringHelper(nullptr, ret, compat_format ? StringType::COMPAT : StringType::PUBLIC);\n+        bool has_priv_key;\n+        ToStringHelper(nullptr, ret, compat_format ? StringType::COMPAT : StringType::PUBLIC, has_priv_key);\n         return AddChecksum(ret);\n     }\n \n     bool ToPrivateString(const SigningProvider& arg, std::string& out) const override\n     {\n-        bool ret = ToStringHelper(&arg, out, StringType::PRIVATE);\n+        bool has_priv_key;\n+        assert(ToStringHelper(&arg, out, StringType::PRIVATE, has_priv_key));",
      "path": "src/script/descriptor.cpp",
      "position": 1,
      "original_position": 102,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "a0a458965c944434b1f3e4d83277257793435edb",
      "in_reply_to_id": 2213477946,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`ToPrivateString` will be called on a non-watch-only wallet when the user tries RPC `listdescriptors[private=true]`. In this case, `has_priv_key` will be `false` and the RPC call should fail as expected.",
      "created_at": "2025-07-19T09:48:18Z",
      "updated_at": "2025-07-19T09:48:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2217261456",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2217261456"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 709,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2218957649",
      "pull_request_review_id": 3037728992,
      "id": 2218957649,
      "node_id": "PRRC_kwDOABII586EQptR",
      "diff_hunk": "@@ -721,9 +721,27 @@ std::optional<MigrationData> LegacyDataSPKM::MigrateToDescriptor()\n \n         std::vector<CScript> desc_spks;\n \n-        // Make the descriptor string with private keys\n-        std::string desc_str;\n-        bool watchonly = !desc->ToPrivateString(*this, desc_str);\n+        size_t privkey_count{0};\n+        std::set<CPubKey> pubkeys;\n+        std::set<CExtPubKey> ext_pubkeys;\n+        desc->GetPubKeys(pubkeys, ext_pubkeys);\n+        auto output_type{desc->GetOutputType()};\n+        for (auto pubkey : pubkeys) {\n+            CKey key;\n+            if (GetKey(pubkey.GetID(), key)) {\n+                privkey_count += 1;\n+            } else if (output_type.has_value() && *output_type == OutputType::BECH32M && GetKeyByXOnly(XOnlyPubKey(pubkey), key)) {\n+                privkey_count += 1;\n+            }\n+        }\n+        for (auto extpubkey : ext_pubkeys) {\n+            CKey key;\n+            if (GetKey(extpubkey.pubkey.GetID(), key)) {\n+                privkey_count += 1;\n+            }\n+        }\n+        size_t pubkey_count{pubkeys.size() + ext_pubkeys.size()};\n+        bool watchonly{privkey_count == 0 || pubkey_count > privkey_count};",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": 1,
      "original_position": 27,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "2551fdfdd662dfb4077c3059b437acf56bdbaf5b",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 2551fdfdd662dfb4077c3059b437acf56bdbaf5b \"wallet/migration: use count private key count to identify watchonly descs\"\r\n\r\nThis evaluation ofÂ `watchonly`Â at a barebones level looks great to me! Though maybe we can put this inside aÂ `IsWatchOnly`Â function in theÂ Descriptor{Impl}Â class? Reading all these details in the migration flow might be distracting, and moreover this generic function might have its own use cases separate from this later. Following patch builds and tests fine on my system. I have added few minor renaming changes as well. \r\n\r\n<details open>\r\n<summary>Descriptor IsWatchOnly()</summary>\r\n\r\n```diff\r\ndiff --git a/src/script/descriptor.cpp b/src/script/descriptor.cpp\r\nindex bd85ddd9e2..bf67b8c43e 100644\r\n--- a/src/script/descriptor.cpp\r\n+++ b/src/script/descriptor.cpp\r\n@@ -646,6 +646,31 @@ public:\r\n         return false;\r\n     }\r\n \r\n+    bool IsWatchOnly(const SigningProvider& arg) const override\r\n+    {\r\n+        size_t privkey_count{0};\r\n+        std::set<CPubKey> pubkeys;\r\n+        std::set<CExtPubKey> ext_pubkeys;\r\n+        this->GetPubKeys(pubkeys, ext_pubkeys);\r\n+        auto output_type{this->GetOutputType()};\r\n+        for (auto pubkey : pubkeys) {\r\n+            CKey key;\r\n+            if (arg.GetKey(pubkey.GetID(), key)) {\r\n+                privkey_count += 1;\r\n+            } else if (output_type.has_value() && *output_type == OutputType::BECH32M && arg.GetKeyByXOnly(XOnlyPubKey(pubkey), key)) {\r\n+                privkey_count += 1;\r\n+            }\r\n+        }\r\n+        for (auto extpubkey : ext_pubkeys) {\r\n+            CKey dummy;\r\n+            if (arg.GetKey(extpubkey.pubkey.GetID(), dummy)) {\r\n+                privkey_count += 1;\r\n+            }\r\n+        }\r\n+        size_t pubkey_count{pubkeys.size() + ext_pubkeys.size()};\r\n+        return (privkey_count == 0 || pubkey_count > privkey_count);\r\n+    }\r\n+\r\n     // NOLINTNEXTLINE(misc-no-recursion)\r\n     virtual bool ToStringSubScriptHelper(const SigningProvider* arg, std::string& ret, const StringType type, bool* has_priv_key, const DescriptorCache* cache = nullptr) const\r\n     {\r\ndiff --git a/src/script/descriptor.h b/src/script/descriptor.h\r\nindex 09e9840645..f2e40b7f7a 100644\r\n--- a/src/script/descriptor.h\r\n+++ b/src/script/descriptor.h\r\n@@ -111,6 +111,9 @@ struct Descriptor {\r\n     /** Whether this descriptor will return one scriptPubKey or multiple (aka is or is not combo) */\r\n     virtual bool IsSingleType() const = 0;\r\n \r\n+    /** Whether this descriptor doesn't contain any private key material */\r\n+    virtual bool IsWatchOnly(const SigningProvider& provider) const = 0;\r\n+\r\n     /** Convert the descriptor to a private string. This uses public keys if the relevant private keys are not in the SigningProvider.\r\n      *  If none of the relevant private keys are available, the output string in the \"out\" parameter will not contain any private key information,\r\n      *  and this function will return \"false\".\r\ndiff --git a/src/wallet/scriptpubkeyman.cpp b/src/wallet/scriptpubkeyman.cpp\r\nindex 117fdd3a5e..e403bf3bbe 100644\r\n--- a/src/wallet/scriptpubkeyman.cpp\r\n+++ b/src/wallet/scriptpubkeyman.cpp\r\n@@ -721,27 +721,7 @@ std::optional<MigrationData> LegacyDataSPKM::MigrateToDescriptor()\r\n \r\n         std::vector<CScript> desc_spks;\r\n \r\n-        size_t privkey_count{0};\r\n-        std::set<CPubKey> pubkeys;\r\n-        std::set<CExtPubKey> ext_pubkeys;\r\n-        desc->GetPubKeys(pubkeys, ext_pubkeys);\r\n-        auto output_type{desc->GetOutputType()};\r\n-        for (auto pubkey : pubkeys) {\r\n-            CKey key;\r\n-            if (GetKey(pubkey.GetID(), key)) {\r\n-                privkey_count += 1;\r\n-            } else if (output_type.has_value() && *output_type == OutputType::BECH32M && GetKeyByXOnly(XOnlyPubKey(pubkey), key)) {\r\n-                privkey_count += 1;\r\n-            }\r\n-        }\r\n-        for (auto extpubkey : ext_pubkeys) {\r\n-            CKey key;\r\n-            if (GetKey(extpubkey.pubkey.GetID(), key)) {\r\n-                privkey_count += 1;\r\n-            }\r\n-        }\r\n-        size_t pubkey_count{pubkeys.size() + ext_pubkeys.size()};\r\n-        bool watchonly{privkey_count == 0 || pubkey_count > privkey_count};\r\n+        bool watchonly = desc->IsWatchOnly(*this);\r\n         if (watchonly && !m_storage.IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\r\n             out.watch_descs.emplace_back(desc->ToString(), creation_time);\r\n \r\ndiff --git a/src/wallet/test/walletload_tests.cpp b/src/wallet/test/walletload_tests.cpp\r\nindex 0c69849d0b..29f174be81 100644\r\n--- a/src/wallet/test/walletload_tests.cpp\r\n+++ b/src/wallet/test/walletload_tests.cpp\r\n@@ -26,6 +26,7 @@ public:\r\n     bool IsRange() const override { return false; }\r\n     bool IsSolvable() const override { return false; }\r\n     bool IsSingleType() const override { return true; }\r\n+    bool IsWatchOnly(const SigningProvider&) const override { return false; }\r\n     bool ToPrivateString(const SigningProvider& provider, std::string& out) const override { return false; }\r\n     bool ToNormalizedString(const SigningProvider& provider, std::string& out, const DescriptorCache* cache = nullptr) const override { return false; }\r\n     bool Expand(int pos, const SigningProvider& provider, std::vector<CScript>& output_scripts, FlatSigningProvider& out, DescriptorCache* write_cache = nullptr) const override { return false; };\r\n\r\n```\r\n</details>",
      "created_at": "2025-07-21T11:45:12Z",
      "updated_at": "2025-07-22T05:42:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2218957649",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2218957649"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": 724,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 744,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2218970582",
      "pull_request_review_id": 3037747449,
      "id": 2218970582,
      "node_id": "PRRC_kwDOABII586EQs3W",
      "diff_hunk": "@@ -686,20 +698,23 @@ class DescriptorImpl : public Descriptor\n     std::string ToString(bool compat_format) const final\n     {\n         std::string ret;\n-        ToStringHelper(nullptr, ret, compat_format ? StringType::COMPAT : StringType::PUBLIC);\n+        bool has_priv_key;\n+        ToStringHelper(nullptr, ret, compat_format ? StringType::COMPAT : StringType::PUBLIC, has_priv_key);\n         return AddChecksum(ret);\n     }\n \n     bool ToPrivateString(const SigningProvider& arg, std::string& out) const override\n     {\n-        bool ret = ToStringHelper(&arg, out, StringType::PRIVATE);\n+        bool has_priv_key;\n+        assert(ToStringHelper(&arg, out, StringType::PRIVATE, has_priv_key));",
      "path": "src/script/descriptor.cpp",
      "position": 1,
      "original_position": 102,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "a0a458965c944434b1f3e4d83277257793435edb",
      "in_reply_to_id": 2213477946,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Sorry but I don't understand how the second statement follows the first one above. \r\nFor a non-watch-only wallet, isn't it guaranteed that there must be at least one private key, which should turn `has_priv_key` to `true`?",
      "created_at": "2025-07-21T11:51:25Z",
      "updated_at": "2025-07-21T11:51:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2218970582",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2218970582"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 709,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2221456230",
      "pull_request_review_id": 3041474745,
      "id": 2221456230,
      "node_id": "PRRC_kwDOABII586EaLtm",
      "diff_hunk": "@@ -721,9 +721,27 @@ std::optional<MigrationData> LegacyDataSPKM::MigrateToDescriptor()\n \n         std::vector<CScript> desc_spks;\n \n-        // Make the descriptor string with private keys\n-        std::string desc_str;\n-        bool watchonly = !desc->ToPrivateString(*this, desc_str);\n+        size_t privkey_count{0};\n+        std::set<CPubKey> pubkeys;\n+        std::set<CExtPubKey> ext_pubkeys;\n+        desc->GetPubKeys(pubkeys, ext_pubkeys);\n+        auto output_type{desc->GetOutputType()};\n+        for (auto pubkey : pubkeys) {\n+            CKey key;\n+            if (GetKey(pubkey.GetID(), key)) {\n+                privkey_count += 1;\n+            } else if (output_type.has_value() && *output_type == OutputType::BECH32M && GetKeyByXOnly(XOnlyPubKey(pubkey), key)) {\n+                privkey_count += 1;\n+            }\n+        }\n+        for (auto extpubkey : ext_pubkeys) {\n+            CKey key;\n+            if (GetKey(extpubkey.pubkey.GetID(), key)) {\n+                privkey_count += 1;\n+            }\n+        }\n+        size_t pubkey_count{pubkeys.size() + ext_pubkeys.size()};\n+        bool watchonly{privkey_count == 0 || pubkey_count > privkey_count};",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": 1,
      "original_position": 27,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "2551fdfdd662dfb4077c3059b437acf56bdbaf5b",
      "in_reply_to_id": 2218957649,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Nice idea. Added you as Co-author in the relevant commit.",
      "created_at": "2025-07-22T07:14:04Z",
      "updated_at": "2025-07-22T07:14:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2221456230",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2221456230"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": 724,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 744,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2221504575",
      "pull_request_review_id": 3041543394,
      "id": 2221504575,
      "node_id": "PRRC_kwDOABII586EaXg_",
      "diff_hunk": "@@ -686,20 +698,23 @@ class DescriptorImpl : public Descriptor\n     std::string ToString(bool compat_format) const final\n     {\n         std::string ret;\n-        ToStringHelper(nullptr, ret, compat_format ? StringType::COMPAT : StringType::PUBLIC);\n+        bool has_priv_key;\n+        ToStringHelper(nullptr, ret, compat_format ? StringType::COMPAT : StringType::PUBLIC, has_priv_key);\n         return AddChecksum(ret);\n     }\n \n     bool ToPrivateString(const SigningProvider& arg, std::string& out) const override\n     {\n-        bool ret = ToStringHelper(&arg, out, StringType::PRIVATE);\n+        bool has_priv_key;\n+        assert(ToStringHelper(&arg, out, StringType::PRIVATE, has_priv_key));",
      "path": "src/script/descriptor.cpp",
      "position": 1,
      "original_position": 102,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "a0a458965c944434b1f3e4d83277257793435edb",
      "in_reply_to_id": 2213477946,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I forgot about the guard I added in https://github.com/bitcoin/bitcoin/pull/32471/commits/4202dca524aeef13e09380804c483d7c5402092d\r\n\r\nYou are right in the sense that it's not possible for a watch-only to even get to `ToPrivateString()` through the rpc; we could assert `has_priv_key` here. However, the descriptor unit tests often call `ToPrivateString()` on watch-only descriptors; asserting `has_priv_key` causes the tests to fail.",
      "created_at": "2025-07-22T07:35:42Z",
      "updated_at": "2025-07-22T07:36:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2221504575",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2221504575"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 709,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2221513192",
      "pull_request_review_id": 3041554660,
      "id": 2221513192,
      "node_id": "PRRC_kwDOABII586EaZno",
      "diff_hunk": "@@ -686,20 +698,23 @@ class DescriptorImpl : public Descriptor\n     std::string ToString(bool compat_format) const final\n     {\n         std::string ret;\n-        ToStringHelper(nullptr, ret, compat_format ? StringType::COMPAT : StringType::PUBLIC);\n+        bool has_priv_key;\n+        ToStringHelper(nullptr, ret, compat_format ? StringType::COMPAT : StringType::PUBLIC, has_priv_key);\n         return AddChecksum(ret);\n     }\n \n     bool ToPrivateString(const SigningProvider& arg, std::string& out) const override\n     {\n-        bool ret = ToStringHelper(&arg, out, StringType::PRIVATE);\n+        bool has_priv_key;\n+        assert(ToStringHelper(&arg, out, StringType::PRIVATE, has_priv_key));",
      "path": "src/script/descriptor.cpp",
      "position": 1,
      "original_position": 102,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "a0a458965c944434b1f3e4d83277257793435edb",
      "in_reply_to_id": 2213477946,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "To add this assertion, we will have to remove those checks, and I haven't seen the advantage in doing that.",
      "created_at": "2025-07-22T07:38:26Z",
      "updated_at": "2025-07-22T07:38:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2221513192",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2221513192"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 709,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2221936637",
      "pull_request_review_id": 3042159221,
      "id": 2221936637,
      "node_id": "PRRC_kwDOABII586EcA_9",
      "diff_hunk": "@@ -686,20 +698,23 @@ class DescriptorImpl : public Descriptor\n     std::string ToString(bool compat_format) const final\n     {\n         std::string ret;\n-        ToStringHelper(nullptr, ret, compat_format ? StringType::COMPAT : StringType::PUBLIC);\n+        bool has_priv_key;\n+        ToStringHelper(nullptr, ret, compat_format ? StringType::COMPAT : StringType::PUBLIC, has_priv_key);\n         return AddChecksum(ret);\n     }\n \n     bool ToPrivateString(const SigningProvider& arg, std::string& out) const override\n     {\n-        bool ret = ToStringHelper(&arg, out, StringType::PRIVATE);\n+        bool has_priv_key;\n+        assert(ToStringHelper(&arg, out, StringType::PRIVATE, has_priv_key));",
      "path": "src/script/descriptor.cpp",
      "position": 1,
      "original_position": 102,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "a0a458965c944434b1f3e4d83277257793435edb",
      "in_reply_to_id": 2213477946,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> However, the descriptor unit tests often call ToPrivateString() on watch-only descriptors\r\n\r\nYeah, I don't know why this was done.\r\n\r\n> To add this assertion, we will have to remove those checks, and I haven't seen the advantage in doing that.\r\n\r\nAgree, doesn't need to be done right now.",
      "created_at": "2025-07-22T09:47:55Z",
      "updated_at": "2025-07-22T09:47:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2221936637",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2221936637"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 709,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2241845825",
      "pull_request_review_id": 3070321358,
      "id": 2241845825,
      "node_id": "PRRC_kwDOABII586Fn9pB",
      "diff_hunk": "@@ -111,6 +111,9 @@ struct Descriptor {\n     /** Whether this descriptor will return one scriptPubKey or multiple (aka is or is not combo) */\n     virtual bool IsSingleType() const = 0;\n \n+    /** Whether this descriptor contains any private key material */",
      "path": "src/script/descriptor.h",
      "position": 1,
      "original_position": 4,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "2c0a84f1e2ebe98bcf5066acb0de0ba5138c2101",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 2c0a84f1e2ebe98bcf5066acb0de0ba5138c2101 _descriptors: add IsWatchOnly()_: this doesn't describe the actual behavior. IIUC:\r\n\r\n```cpp\r\n/** Whether this descriptor is missing any private key material */\r\n```",
      "created_at": "2025-07-30T08:01:01Z",
      "updated_at": "2025-07-30T08:52:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2241845825",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2241845825"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 114,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2241891588",
      "pull_request_review_id": 3070321358,
      "id": 2241891588,
      "node_id": "PRRC_kwDOABII586FoI0E",
      "diff_hunk": "@@ -626,6 +626,31 @@ class DescriptorImpl : public Descriptor\n         return true;\n     }\n \n+    bool IsWatchOnly(const SigningProvider& arg) const override\n+    {\n+        size_t privkey_count{0};\n+        std::set<CPubKey> pubkeys;\n+        std::set<CExtPubKey> ext_pubkeys;\n+        this->GetPubKeys(pubkeys, ext_pubkeys);\n+        auto output_type{this->GetOutputType()};\n+        for (auto pubkey : pubkeys) {\n+            CKey key;\n+            if (arg.GetKey(pubkey.GetID(), key)) {\n+                privkey_count += 1;\n+            } else if (output_type.has_value() && *output_type == OutputType::BECH32M && arg.GetKeyByXOnly(XOnlyPubKey(pubkey), key)) {",
      "path": "src/script/descriptor.cpp",
      "position": 1,
      "original_position": 15,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "2c0a84f1e2ebe98bcf5066acb0de0ba5138c2101",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In https://github.com/bitcoin/bitcoin/commit/2c0a84f1e2ebe98bcf5066acb0de0ba5138c2101 descriptors: add IsWatchOnly(): since c++17 you can safely compare std::optional<T> with T, see item 21 here: https://en.cppreference.com/w/cpp/utility/optional/operator_cmp.html\r\n\r\nI also find it easier to read if `privkey_count` and `pubkey_count` are tracked in the same manner, but feel free to ignore:\r\n\r\n```diff\r\ndiff --git a/src/script/descriptor.cpp b/src/script/descriptor.cpp\r\nindex 98ae29ceb3..a86b4743b3 100644\r\n--- a/src/script/descriptor.cpp\r\n+++ b/src/script/descriptor.cpp\r\n@@ -628,26 +628,27 @@ public:\r\n\r\n     bool IsWatchOnly(const SigningProvider& arg) const override\r\n     {\r\n+        size_t pubkey_count{0};\r\n         size_t privkey_count{0};\r\n         std::set<CPubKey> pubkeys;\r\n         std::set<CExtPubKey> ext_pubkeys;\r\n         this->GetPubKeys(pubkeys, ext_pubkeys);\r\n-        auto output_type{this->GetOutputType()};\r\n-        for (auto pubkey : pubkeys) {\r\n-            CKey key;\r\n-            if (arg.GetKey(pubkey.GetID(), key)) {\r\n+        for (const CPubKey pubkey : pubkeys) {\r\n+            pubkey_count++;\r\n+            CKey dummy;\r\n+            if (arg.GetKey(pubkey.GetID(), dummy)) {\r\n                 privkey_count += 1;\r\n-            } else if (output_type.has_value() && *output_type == OutputType::BECH32M && arg.GetKeyByXOnly(XOnlyPubKey(pubkey), key)) {\r\n+            } else if (this->GetOutputType() == OutputType::BECH32M && arg.GetKeyByXOnly(XOnlyPubKey(pubkey), dummy)) {\r\n                 privkey_count += 1;\r\n             }\r\n         }\r\n-        for (auto extpubkey : ext_pubkeys) {\r\n+        for (const CExtPubKey extpubkey : ext_pubkeys) {\r\n+            pubkey_count++;\r\n             CKey dummy;\r\n             if (arg.GetKey(extpubkey.pubkey.GetID(), dummy)) {\r\n                 privkey_count += 1;\r\n             }\r\n         }\r\n-        size_t pubkey_count{pubkeys.size() + ext_pubkeys.size()};\r\n         return (privkey_count == 0 || pubkey_count > privkey_count);\r\n     }\r\n```\r\n",
      "created_at": "2025-07-30T08:19:31Z",
      "updated_at": "2025-07-30T08:52:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2241891588",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2241891588"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 640,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2241953374",
      "pull_request_review_id": 3070321358,
      "id": 2241953374,
      "node_id": "PRRC_kwDOABII586FoX5e",
      "diff_hunk": "@@ -188,7 +188,7 @@ struct KeyConverter {\n         return g_testdata->pkmap.at(keyid);\n     }\n \n-    std::optional<std::string> ToString(const Key& key) const {\n+    std::string ToString(const Key& key, bool* has_priv_key = nullptr) const {",
      "path": "src/test/miniscript_tests.cpp",
      "position": 1,
      "original_position": 5,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "b32c2b290f8e4dcb7fe54ee4c81714a3785920a7",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In b32c2b290f8e4dcb7fe54ee4c81714a3785920a7 _descriptor: ToPrivateString() pass if  at least 1 priv key exists_:\r\n\r\nTo preserve existing behaviour:\r\n\r\n```cpp\r\nif (has_priv_key) *has_priv_key = true;\r\n```\r\n\r\nIt's a bit worrying that the test passes whether I set this to `false` or `true`. But that's a pre-existing issue, as the following change to the original code doesn't break the test either:\r\n\r\n```diff\r\ndiff --git a/src/test/miniscript_tests.cpp b/src/test/miniscript_tests.cpp\r\nindex 0a32727f37..0989f0c50a 100644\r\n--- a/src/test/miniscript_tests.cpp\r\n+++ b/src/test/miniscript_tests.cpp\r\n@@ -189,7 +189,7 @@ struct KeyConverter {\r\n     }\r\n\r\n     std::optional<std::string> ToString(const Key& key) const {\r\n-        return HexStr(ToPKBytes(key));\r\n+        return {};\r\n     }\r\n\r\n     miniscript::MiniscriptContext MsContext() const {\r\n```\r\n\r\ncc @darosior ",
      "created_at": "2025-07-30T08:44:53Z",
      "updated_at": "2025-07-30T08:52:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2241953374",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2241953374"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 191,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2248763843",
      "pull_request_review_id": 3080406553,
      "id": 2248763843,
      "node_id": "PRRC_kwDOABII586GCWnD",
      "diff_hunk": "@@ -626,6 +626,31 @@ class DescriptorImpl : public Descriptor\n         return true;\n     }\n \n+    bool IsWatchOnly(const SigningProvider& arg) const override\n+    {\n+        size_t privkey_count{0};\n+        std::set<CPubKey> pubkeys;\n+        std::set<CExtPubKey> ext_pubkeys;\n+        this->GetPubKeys(pubkeys, ext_pubkeys);\n+        auto output_type{this->GetOutputType()};\n+        for (auto pubkey : pubkeys) {\n+            CKey key;\n+            if (arg.GetKey(pubkey.GetID(), key)) {\n+                privkey_count += 1;\n+            } else if (output_type.has_value() && *output_type == OutputType::BECH32M && arg.GetKeyByXOnly(XOnlyPubKey(pubkey), key)) {",
      "path": "src/script/descriptor.cpp",
      "position": 1,
      "original_position": 15,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "2c0a84f1e2ebe98bcf5066acb0de0ba5138c2101",
      "in_reply_to_id": 2241891588,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I didn't use this patch, but I put some effort into making the code more readable.",
      "created_at": "2025-08-01T19:52:07Z",
      "updated_at": "2025-08-01T19:52:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2248763843",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2248763843"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 640,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2248764330",
      "pull_request_review_id": 3080407309,
      "id": 2248764330,
      "node_id": "PRRC_kwDOABII586GCWuq",
      "diff_hunk": "@@ -111,6 +111,9 @@ struct Descriptor {\n     /** Whether this descriptor will return one scriptPubKey or multiple (aka is or is not combo) */\n     virtual bool IsSingleType() const = 0;\n \n+    /** Whether this descriptor contains any private key material */",
      "path": "src/script/descriptor.h",
      "position": 1,
      "original_position": 4,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "2c0a84f1e2ebe98bcf5066acb0de0ba5138c2101",
      "in_reply_to_id": 2241845825,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks for this. I've updated the comment.",
      "created_at": "2025-08-01T19:52:27Z",
      "updated_at": "2025-08-01T19:52:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2248764330",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2248764330"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 114,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2248786530",
      "pull_request_review_id": 3080439588,
      "id": 2248786530,
      "node_id": "PRRC_kwDOABII586GCcJi",
      "diff_hunk": "@@ -188,7 +188,7 @@ struct KeyConverter {\n         return g_testdata->pkmap.at(keyid);\n     }\n \n-    std::optional<std::string> ToString(const Key& key) const {\n+    std::string ToString(const Key& key, bool* has_priv_key = nullptr) const {",
      "path": "src/test/miniscript_tests.cpp",
      "position": 1,
      "original_position": 5,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "b32c2b290f8e4dcb7fe54ee4c81714a3785920a7",
      "in_reply_to_id": 2241953374,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`has_priv_key` is only relevant when `ToPrivateString` is called on an actual Descriptor instance. IIUC, this test doesn't do that, so the value of `has_priv_key` does not matter here.\r\nI'm not sure we should set it here, apart from the fact that it doesn't affect the test, the string returned doesn't have a private key.",
      "created_at": "2025-08-01T20:06:56Z",
      "updated_at": "2025-08-01T20:06:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2248786530",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2248786530"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 191,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2251274240",
      "pull_request_review_id": 3083871225,
      "id": 2251274240,
      "node_id": "PRRC_kwDOABII586GL7gA",
      "diff_hunk": "@@ -841,6 +841,38 @@ class DescriptorImpl : public Descriptor\n         return true;\n     }\n \n+    bool IsWatchOnly(const SigningProvider& arg) const override\n+    {\n+        std::set<CPubKey> pubkeys;\n+        std::set<CExtPubKey> ext_pubkeys;\n+        this->GetPubKeys(pubkeys, ext_pubkeys);\n+        auto output_type{this->GetOutputType()};\n+\n+        size_t pubkey_count{pubkeys.size() + ext_pubkeys.size()};\n+        size_t privkey_count{0};\n+\n+        if (pubkey_count == 0) {\n+            return true;\n+        }\n+\n+        for (auto pubkey : pubkeys) {\n+            CKey key;\n+            if (arg.GetKey(pubkey.GetID(), key)) {\n+                privkey_count += 1;\n+            } else if (output_type.has_value() && output_type == OutputType::BECH32M && arg.GetKeyByXOnly(XOnlyPubKey(pubkey), key)) {",
      "path": "src/script/descriptor.cpp",
      "position": 1,
      "original_position": 22,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "64213213b3691c9d93de95f880f820a640cd3c35",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 64213213b3691c9d93de95f880f820a640cd3c35 _descriptors: add IsWatchOnly()_: nit: you don't need `output_type.has_value()`",
      "created_at": "2025-08-04T12:03:40Z",
      "updated_at": "2025-08-04T12:27:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2251274240",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2251274240"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 862,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2251304473",
      "pull_request_review_id": 3083871225,
      "id": 2251304473,
      "node_id": "PRRC_kwDOABII586GMC4Z",
      "diff_hunk": "@@ -124,10 +124,13 @@ struct ParserContext {\n         return a < b;\n     }\n \n-    std::optional<std::string> ToString(const Key& key) const\n+    std::string ToString(const Key& key, bool* has_priv_key) const\n     {\n         auto it = TEST_DATA.dummy_key_idx_map.find(key);\n-        if (it == TEST_DATA.dummy_key_idx_map.end()) return {};\n+        if (it == TEST_DATA.dummy_key_idx_map.end()) {",
      "path": "src/test/fuzz/miniscript.cpp",
      "position": 10,
      "original_position": 9,
      "commit_id": "2b16014dfbe7e249e4929beafb4ce26415206e7a",
      "original_commit_id": "49f41141c674f83d0b66262a5b21aad623704264",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 49f41141c674f83d0b66262a5b21aad623704264 _descriptor: ToPrivateString() pass if  at least 1 priv key exists_: maybe for good measure:\r\n\r\n```cpp\r\n*has_priv_key = false;\r\n```\r\n\r\nIn both places it seems better to check that `priv_key` exists, even if that's always the case in this fuzzer. IIUC in that case you can leave out `tmp{false}` and just pass `nullptr` below.",
      "created_at": "2025-08-04T12:16:46Z",
      "updated_at": "2025-08-04T12:27:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2251304473",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2251304473"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 131,
      "original_line": 131,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2258440013",
      "pull_request_review_id": 3094495318,
      "id": 2258440013,
      "node_id": "PRRC_kwDOABII586GnQ9N",
      "diff_hunk": "@@ -841,6 +841,38 @@ class DescriptorImpl : public Descriptor\n         return true;\n     }\n \n+    bool IsWatchOnly(const SigningProvider& arg) const override",
      "path": "src/script/descriptor.cpp",
      "position": 1,
      "original_position": 4,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "64213213b3691c9d93de95f880f820a640cd3c35",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 64213213b3691c9d93de95f880f820a640cd3c35 \"descriptors: add IsWatchOnly()\"\r\n\r\nI think this function can be vastly simplified by calling `GetPrivKey` on all the `PubkeyProvider`, and `IsWatchOnly` on all subdescriptors.\r\n\r\nnit: I don't like this function name since whether the descriptor is watchonly depends on the contents of the provided parameter. It's not a property like a `Is*` name implies. Watchonly also is not a property applied to descriptors as private keys are not actually part of the descriptor. Perhaps something like `HavePrivateKeys` instead.",
      "created_at": "2025-08-06T22:24:26Z",
      "updated_at": "2025-08-06T22:44:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2258440013",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2258440013"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 844,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2258450650",
      "pull_request_review_id": 3094495318,
      "id": 2258450650,
      "node_id": "PRRC_kwDOABII586GnTja",
      "diff_hunk": "@@ -896,24 +896,27 @@ class DescriptorImpl : public Descriptor\n     }\n \n     // NOLINTNEXTLINE(misc-no-recursion)\n-    virtual bool ToStringSubScriptHelper(const SigningProvider* arg, std::string& ret, const StringType type, const DescriptorCache* cache = nullptr) const\n+    virtual bool ToStringSubScriptHelper(const SigningProvider* arg, std::string& ret, const StringType type, bool* has_priv_key, const DescriptorCache* cache = nullptr) const",
      "path": "src/script/descriptor.cpp",
      "position": 1,
      "original_position": 5,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "49f41141c674f83d0b66262a5b21aad623704264",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 49f41141c674f83d0b66262a5b21aad623704264 \"descriptor: ToPrivateString() pass if  at least 1 priv key exists\"\r\n\r\n`has_priv_key` should be a reference not a pointer. The pointer-ness is never used in this function.",
      "created_at": "2025-08-06T22:32:58Z",
      "updated_at": "2025-08-06T22:44:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2258450650",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2258450650"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 899,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2258451488",
      "pull_request_review_id": 3094495318,
      "id": 2258451488,
      "node_id": "PRRC_kwDOABII586GnTwg",
      "diff_hunk": "@@ -922,7 +925,8 @@ class DescriptorImpl : public Descriptor\n                     if (!pubkey->ToNormalizedString(*arg, tmp, cache)) return false;\n                     break;\n                 case StringType::PRIVATE:\n-                    if (!pubkey->ToPrivateString(*arg, tmp)) return false;\n+                    assert(has_priv_key != nullptr);",
      "path": "src/script/descriptor.cpp",
      "position": 1,
      "original_position": 36,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "49f41141c674f83d0b66262a5b21aad623704264",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 49f41141c674f83d0b66262a5b21aad623704264 \"descriptor: ToPrivateString() pass if  at least 1 priv key exists\"\r\n\r\nIf `has_priv_key` is never supposed to be null, then it should be a reference. Otherwise, this should be an `if`, we should not rely on caller behavior.",
      "created_at": "2025-08-06T22:33:42Z",
      "updated_at": "2025-08-06T22:44:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2258451488",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2258451488"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 928,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2258454050",
      "pull_request_review_id": 3094495318,
      "id": 2258454050,
      "node_id": "PRRC_kwDOABII586GnUYi",
      "diff_hunk": "@@ -949,14 +955,17 @@ class DescriptorImpl : public Descriptor\n \n     bool ToPrivateString(const SigningProvider& arg, std::string& out) const override\n     {\n-        bool ret = ToStringHelper(&arg, out, StringType::PRIVATE);\n+        bool has_priv_key{false};\n+        // ToStringHelper should never fail for StringType::PRIVATE,\n+        // because it falls back to StringType::PUBLIC when no private key is available.\n+        assert(ToStringHelper(&arg, out, StringType::PRIVATE, &has_priv_key));",
      "path": "src/script/descriptor.cpp",
      "position": 1,
      "original_position": 60,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "49f41141c674f83d0b66262a5b21aad623704264",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 49f41141c674f83d0b66262a5b21aad623704264 \"descriptor: ToPrivateString() pass if  at least 1 priv key exists\"\r\n\r\n`assert`s should not have side effects. If we are calling a function to actually do something, it should not be in an `assert`.\r\n\r\nHowever, if the return value of `ToStringHelper` is always supposed to be `true`, then it should not be returning anything anyways. Furthermore, I don't see why `ToStringHelper` doesn't return whether the string has a private key, as we are doing in this function. That would allow us to drop `has_priv_key` from all of the function.",
      "created_at": "2025-08-06T22:36:03Z",
      "updated_at": "2025-08-06T22:44:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2258454050",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2258454050"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 961,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2263255279",
      "pull_request_review_id": 3101209964,
      "id": 2263255279,
      "node_id": "PRRC_kwDOABII586G5ojv",
      "diff_hunk": "@@ -841,6 +841,38 @@ class DescriptorImpl : public Descriptor\n         return true;\n     }\n \n+    bool IsWatchOnly(const SigningProvider& arg) const override\n+    {\n+        std::set<CPubKey> pubkeys;\n+        std::set<CExtPubKey> ext_pubkeys;\n+        this->GetPubKeys(pubkeys, ext_pubkeys);\n+        auto output_type{this->GetOutputType()};\n+\n+        size_t pubkey_count{pubkeys.size() + ext_pubkeys.size()};\n+        size_t privkey_count{0};\n+\n+        if (pubkey_count == 0) {\n+            return true;\n+        }\n+\n+        for (auto pubkey : pubkeys) {\n+            CKey key;\n+            if (arg.GetKey(pubkey.GetID(), key)) {\n+                privkey_count += 1;\n+            } else if (output_type.has_value() && output_type == OutputType::BECH32M && arg.GetKeyByXOnly(XOnlyPubKey(pubkey), key)) {",
      "path": "src/script/descriptor.cpp",
      "position": 1,
      "original_position": 22,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "64213213b3691c9d93de95f880f820a640cd3c35",
      "in_reply_to_id": 2251274240,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I rewrote the function, so this comment is now outdated.",
      "created_at": "2025-08-08T15:15:40Z",
      "updated_at": "2025-08-08T15:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2263255279",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2263255279"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 862,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2263255891",
      "pull_request_review_id": 3101210786,
      "id": 2263255891,
      "node_id": "PRRC_kwDOABII586G5otT",
      "diff_hunk": "@@ -124,10 +124,13 @@ struct ParserContext {\n         return a < b;\n     }\n \n-    std::optional<std::string> ToString(const Key& key) const\n+    std::string ToString(const Key& key, bool* has_priv_key) const\n     {\n         auto it = TEST_DATA.dummy_key_idx_map.find(key);\n-        if (it == TEST_DATA.dummy_key_idx_map.end()) return {};\n+        if (it == TEST_DATA.dummy_key_idx_map.end()) {",
      "path": "src/test/fuzz/miniscript.cpp",
      "position": 10,
      "original_position": 9,
      "commit_id": "2b16014dfbe7e249e4929beafb4ce26415206e7a",
      "original_commit_id": "49f41141c674f83d0b66262a5b21aad623704264",
      "in_reply_to_id": 2251304473,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-08-08T15:15:59Z",
      "updated_at": "2025-08-08T15:15:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2263255891",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2263255891"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 131,
      "original_line": 131,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2263256815",
      "pull_request_review_id": 3101212054,
      "id": 2263256815,
      "node_id": "PRRC_kwDOABII586G5o7v",
      "diff_hunk": "@@ -841,6 +841,38 @@ class DescriptorImpl : public Descriptor\n         return true;\n     }\n \n+    bool IsWatchOnly(const SigningProvider& arg) const override",
      "path": "src/script/descriptor.cpp",
      "position": 1,
      "original_position": 4,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "64213213b3691c9d93de95f880f820a640cd3c35",
      "in_reply_to_id": 2258440013,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I was able to simplify the code as suggested, and I renamed it to `HavePrivateKeys()`",
      "created_at": "2025-08-08T15:16:30Z",
      "updated_at": "2025-08-08T15:17:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2263256815",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2263256815"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 844,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2263259783",
      "pull_request_review_id": 3101216094,
      "id": 2263259783,
      "node_id": "PRRC_kwDOABII586G5pqH",
      "diff_hunk": "@@ -896,24 +896,27 @@ class DescriptorImpl : public Descriptor\n     }\n \n     // NOLINTNEXTLINE(misc-no-recursion)\n-    virtual bool ToStringSubScriptHelper(const SigningProvider* arg, std::string& ret, const StringType type, const DescriptorCache* cache = nullptr) const\n+    virtual bool ToStringSubScriptHelper(const SigningProvider* arg, std::string& ret, const StringType type, bool* has_priv_key, const DescriptorCache* cache = nullptr) const",
      "path": "src/script/descriptor.cpp",
      "position": 1,
      "original_position": 5,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "49f41141c674f83d0b66262a5b21aad623704264",
      "in_reply_to_id": 2258450650,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The `has_priv_key` parameter has been removed.",
      "created_at": "2025-08-08T15:18:02Z",
      "updated_at": "2025-08-08T15:18:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2263259783",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2263259783"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 899,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2263262085",
      "pull_request_review_id": 3101219193,
      "id": 2263262085,
      "node_id": "PRRC_kwDOABII586G5qOF",
      "diff_hunk": "@@ -922,7 +925,8 @@ class DescriptorImpl : public Descriptor\n                     if (!pubkey->ToNormalizedString(*arg, tmp, cache)) return false;\n                     break;\n                 case StringType::PRIVATE:\n-                    if (!pubkey->ToPrivateString(*arg, tmp)) return false;\n+                    assert(has_priv_key != nullptr);",
      "path": "src/script/descriptor.cpp",
      "position": 1,
      "original_position": 36,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "49f41141c674f83d0b66262a5b21aad623704264",
      "in_reply_to_id": 2258451488,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2025-08-08T15:19:12Z",
      "updated_at": "2025-08-08T15:19:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2263262085",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2263262085"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 928,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2263265747",
      "pull_request_review_id": 3101224228,
      "id": 2263265747,
      "node_id": "PRRC_kwDOABII586G5rHT",
      "diff_hunk": "@@ -949,14 +955,17 @@ class DescriptorImpl : public Descriptor\n \n     bool ToPrivateString(const SigningProvider& arg, std::string& out) const override\n     {\n-        bool ret = ToStringHelper(&arg, out, StringType::PRIVATE);\n+        bool has_priv_key{false};\n+        // ToStringHelper should never fail for StringType::PRIVATE,\n+        // because it falls back to StringType::PUBLIC when no private key is available.\n+        assert(ToStringHelper(&arg, out, StringType::PRIVATE, &has_priv_key));",
      "path": "src/script/descriptor.cpp",
      "position": 1,
      "original_position": 60,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "49f41141c674f83d0b66262a5b21aad623704264",
      "in_reply_to_id": 2258454050,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I refactored the code as suggested and was able to drop `has_priv_key` from the parameter list. Now, `has_priv_key` is returned if `type == StringType::PRIVATE`.",
      "created_at": "2025-08-08T15:21:03Z",
      "updated_at": "2025-08-08T15:21:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2263265747",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2263265747"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 961,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2266517443",
      "pull_request_review_id": 3105532824,
      "id": 2266517443,
      "node_id": "PRRC_kwDOABII586HGE_D",
      "diff_hunk": "@@ -1418,24 +1425,34 @@ class TRDescriptor final : public DescriptorImpl\n     }\n     bool ToStringSubScriptHelper(const SigningProvider* arg, std::string& ret, const StringType type, const DescriptorCache* cache = nullptr) const override\n     {\n-        if (m_depths.empty()) return true;\n+        if (m_depths.empty()) {\n+            // If there are no sub-descriptors and a PRIVATE string\n+            // is requested, return `false` to indicate that the presence\n+            // of a private key depends solely on the internal key, not on\n+            // any sub-descriptor. This ensures correct behavior for",
      "path": "src/script/descriptor.cpp",
      "position": 1,
      "original_position": 73,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "deed439bff638abfc298a3b9c4f3d9f75fa18244",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In deed439bff638abfc298a3b9c4f3d9f75fa18244 \"descriptor: ToPrivateString() pass if  at least 1 priv key exists\"\r\n\r\nMicro nit if retouched\r\n\r\n```diff\r\n-            // of a private key depends solely on the internal key, not on\r\n-            // any sub-descriptor. This ensures correct behavior for\r\n+           // of a private key depends solely on the internal key (which is checked\r\n+           // in the caller), not on any sub-descriptor. This ensures correct behavior for\r\n```",
      "created_at": "2025-08-11T12:13:17Z",
      "updated_at": "2025-08-11T12:45:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2266517443",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2266517443"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": 1431,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1432,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2266532474",
      "pull_request_review_id": 3105532824,
      "id": 2266532474,
      "node_id": "PRRC_kwDOABII586HGIp6",
      "diff_hunk": "@@ -2104,7 +2120,7 @@ struct KeyParser {\n         return key;\n     }\n \n-    std::optional<std::string> ToString(const Key& key) const\n+    std::string ToString(const Key& key, bool* has_priv_key = nullptr) const",
      "path": "src/script/descriptor.cpp",
      "position": 1,
      "original_position": 137,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "deed439bff638abfc298a3b9c4f3d9f75fa18244",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In https://github.com/bitcoin/bitcoin/commit/deed439bff638abfc298a3b9c4f3d9f75fa18244 \"descriptor: ToPrivateString() pass if at least 1 priv key exists\"\r\n\r\nNit: \r\n```diff\r\ndiff --git a/src/script/descriptor.cpp b/src/script/descriptor.cpp\r\nindex b6539ab12e..028a7299e5 100644\r\n--- a/src/script/descriptor.cpp\r\n+++ b/src/script/descriptor.cpp\r\n@@ -2120,7 +2120,7 @@ struct KeyParser {\r\n         return key;\r\n     }\r\n \r\n-    std::string ToString(const Key& key, bool* has_priv_key = nullptr) const\r\n+    std::string ToString(const Key& key, bool*) const\r\n     {\r\n         return m_keys.at(key).at(0)->ToString();\r\n     }\r\n```",
      "created_at": "2025-08-11T12:20:05Z",
      "updated_at": "2025-08-11T12:45:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2266532474",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2266532474"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2123,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2266618881",
      "pull_request_review_id": 3105532824,
      "id": 2266618881,
      "node_id": "PRRC_kwDOABII586HGdwB",
      "diff_hunk": "@@ -1524,11 +1541,12 @@ class StringMaker {\n     StringMaker(const SigningProvider* arg LIFETIMEBOUND, const std::vector<std::unique_ptr<PubkeyProvider>>& pubkeys LIFETIMEBOUND, bool priv)\n         : m_arg(arg), m_pubkeys(pubkeys), m_private(priv) {}\n \n-    std::optional<std::string> ToString(uint32_t key) const\n+    std::string ToString(uint32_t key, bool* has_priv_key = nullptr) const\n     {\n         std::string ret;\n         if (m_private) {\n-            if (!m_pubkeys[key]->ToPrivateString(*m_arg, ret)) return {};\n+            assert(has_priv_key != nullptr);",
      "path": "src/script/descriptor.cpp",
      "position": 1,
      "original_position": 112,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "deed439bff638abfc298a3b9c4f3d9f75fa18244",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In https://github.com/bitcoin/bitcoin/commit/deed439bff638abfc298a3b9c4f3d9f75fa18244 \"descriptor: ToPrivateString() pass if at least 1 priv key exists\"\r\n\r\nLooks like the same argument applies here too?\r\n\r\nhttps://github.com/bitcoin/bitcoin/pull/32471#discussion_r2258451488\r\n\r\n> If has_priv_key is never supposed to be null, then it should be a reference.",
      "created_at": "2025-08-11T12:44:21Z",
      "updated_at": "2025-08-11T12:45:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2266618881",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2266618881"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1548,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2266678381",
      "pull_request_review_id": 3105737927,
      "id": 2266678381,
      "node_id": "PRRC_kwDOABII586HGsRt",
      "diff_hunk": "@@ -111,6 +111,13 @@ struct Descriptor {\n     /** Whether this descriptor will return one scriptPubKey or multiple (aka is or is not combo) */\n     virtual bool IsSingleType() const = 0;\n \n+    /** Whether the given provider has all private keys required by this descriptor.\n+     * @return `false` if the descriptor doesn't have any keys or subdescriptors,\n+     *         or if the provider does not have all private keys required by\n+     *         the descriptor.\n+     */\n+    virtual bool HavePrivateKeys(const SigningProvider& provider) const = 0;",
      "path": "src/script/descriptor.h",
      "position": 10,
      "original_position": 9,
      "commit_id": "2b16014dfbe7e249e4929beafb4ce26415206e7a",
      "original_commit_id": "726181bf5bbf23e188156d2ec2db3e0dcb83b2ee",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 726181bf5bbf23e188156d2ec2db3e0dcb83b2ee \"descriptors: add HavePrivateKeys()\"\r\n\r\nNaming nit because the function is a part of a singular `Descriptor` class, but I see there is a combination of `Have*` (not my preference) and `Has*` functions in the singular object classes in the codebase, so feel free to ignore.\r\n  \r\n```diff\r\n- virtual bool HavePrivateKeys(const SigningProvider& provider) const = 0;\r\n+ virtual bool HasPrivateKeys(const SigningProvider& provider) const = 0;\r\n```",
      "created_at": "2025-08-11T13:01:35Z",
      "updated_at": "2025-08-11T13:24:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2266678381",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2266678381"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 119,
      "original_line": 119,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2267126692",
      "pull_request_review_id": 3106416524,
      "id": 2267126692,
      "node_id": "PRRC_kwDOABII586HIZuk",
      "diff_hunk": "@@ -1418,24 +1425,34 @@ class TRDescriptor final : public DescriptorImpl\n     }\n     bool ToStringSubScriptHelper(const SigningProvider* arg, std::string& ret, const StringType type, const DescriptorCache* cache = nullptr) const override\n     {\n-        if (m_depths.empty()) return true;\n+        if (m_depths.empty()) {\n+            // If there are no sub-descriptors and a PRIVATE string\n+            // is requested, return `false` to indicate that the presence\n+            // of a private key depends solely on the internal key, not on\n+            // any sub-descriptor. This ensures correct behavior for",
      "path": "src/script/descriptor.cpp",
      "position": 1,
      "original_position": 73,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "deed439bff638abfc298a3b9c4f3d9f75fa18244",
      "in_reply_to_id": 2266517443,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-08-11T15:25:56Z",
      "updated_at": "2025-08-11T15:25:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2267126692",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2267126692"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": 1431,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1432,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2267127107",
      "pull_request_review_id": 3106416943,
      "id": 2267127107,
      "node_id": "PRRC_kwDOABII586HIZ1D",
      "diff_hunk": "@@ -2104,7 +2120,7 @@ struct KeyParser {\n         return key;\n     }\n \n-    std::optional<std::string> ToString(const Key& key) const\n+    std::string ToString(const Key& key, bool* has_priv_key = nullptr) const",
      "path": "src/script/descriptor.cpp",
      "position": 1,
      "original_position": 137,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "deed439bff638abfc298a3b9c4f3d9f75fa18244",
      "in_reply_to_id": 2266532474,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-08-11T15:26:04Z",
      "updated_at": "2025-08-11T15:26:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2267127107",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2267127107"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2123,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2267127646",
      "pull_request_review_id": 3106417614,
      "id": 2267127646,
      "node_id": "PRRC_kwDOABII586HIZ9e",
      "diff_hunk": "@@ -1524,11 +1541,12 @@ class StringMaker {\n     StringMaker(const SigningProvider* arg LIFETIMEBOUND, const std::vector<std::unique_ptr<PubkeyProvider>>& pubkeys LIFETIMEBOUND, bool priv)\n         : m_arg(arg), m_pubkeys(pubkeys), m_private(priv) {}\n \n-    std::optional<std::string> ToString(uint32_t key) const\n+    std::string ToString(uint32_t key, bool* has_priv_key = nullptr) const\n     {\n         std::string ret;\n         if (m_private) {\n-            if (!m_pubkeys[key]->ToPrivateString(*m_arg, ret)) return {};\n+            assert(has_priv_key != nullptr);",
      "path": "src/script/descriptor.cpp",
      "position": 1,
      "original_position": 112,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "deed439bff638abfc298a3b9c4f3d9f75fa18244",
      "in_reply_to_id": 2266618881,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed",
      "created_at": "2025-08-11T15:26:17Z",
      "updated_at": "2025-08-11T15:26:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2267127646",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2267127646"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1548,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2342296606",
      "pull_request_review_id": 3213573609,
      "id": 2342296606,
      "node_id": "PRRC_kwDOABII586LnJwe",
      "diff_hunk": "@@ -885,13 +885,16 @@ class DescriptorImpl : public Descriptor\n     virtual bool ToStringSubScriptHelper(const SigningProvider* arg, std::string& ret, const StringType type, const DescriptorCache* cache = nullptr) const\n     {\n         size_t pos = 0;\n+        bool has_priv_key{false};",
      "path": "src/script/descriptor.cpp",
      "position": 1,
      "original_position": 4,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "4d07eff13002384ed59a3b7f592be56a25b88c15",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 4d07eff13002384ed59a3b7f592be56a25b88c15 \"descriptor: ToPrivateString() pass if  at least 1 priv key \r\n\r\n`has_priv_key` is a misnomer since for public strings, it has a completely different meaning. I would prefer naming this something more generic, like `any_success`, here and elsewhere.",
      "created_at": "2025-09-11T20:43:09Z",
      "updated_at": "2025-09-11T20:46:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2342296606",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2342296606"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 888,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2342299196",
      "pull_request_review_id": 3213573609,
      "id": 2342299196,
      "node_id": "PRRC_kwDOABII586LnKY8",
      "diff_hunk": "@@ -1418,24 +1425,34 @@ class TRDescriptor final : public DescriptorImpl\n     }\n     bool ToStringSubScriptHelper(const SigningProvider* arg, std::string& ret, const StringType type, const DescriptorCache* cache = nullptr) const override\n     {\n-        if (m_depths.empty()) return true;\n+        if (m_depths.empty()) {\n+            // If there are no sub-descriptors and a PRIVATE string\n+            // is requested, return `false` to indicate that the presence\n+            // of a private key depends solely on the internal key (which is checked\n+            // in the caller), not on any sub-descriptor. This ensures correct behavior for\n+            // descriptors like tr(internal_key) when checking for private keys.\n+            return type == StringType::PRIVATE ? false : true;",
      "path": "src/script/descriptor.cpp",
      "position": 1,
      "original_position": 75,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "4d07eff13002384ed59a3b7f592be56a25b88c15",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 4d07eff13002384ed59a3b7f592be56a25b88c15 \"descriptor: ToPrivateString() pass if  at least 1 priv key exists\"\r\n\r\nnit: can be simplified to\r\n\r\n```suggestion\r\n            return type != StringType::PRIVATE\r\n```",
      "created_at": "2025-09-11T20:44:24Z",
      "updated_at": "2025-09-11T20:46:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2342299196",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2342299196"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1434,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2342300386",
      "pull_request_review_id": 3213573609,
      "id": 2342300386,
      "node_id": "PRRC_kwDOABII586LnKri",
      "diff_hunk": "@@ -825,7 +825,7 @@ struct Node {\n     }\n \n     template<typename CTx>\n-    std::optional<std::string> ToString(const CTx& ctx) const {\n+    std::string ToString(const CTx& ctx, bool* has_priv_key = nullptr) const {",
      "path": "src/script/miniscript.h",
      "position": 1,
      "original_position": 5,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "4d07eff13002384ed59a3b7f592be56a25b88c15",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 4d07eff13002384ed59a3b7f592be56a25b88c15 \"descriptor: ToPrivateString() pass if  at least 1 priv key exists\"\r\n\r\n`has_priv_key` does not need to be a pointer here.",
      "created_at": "2025-09-11T20:45:01Z",
      "updated_at": "2025-09-11T20:46:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2342300386",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2342300386"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 828,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2344526783",
      "pull_request_review_id": 3217133646,
      "id": 2344526783,
      "node_id": "PRRC_kwDOABII586LvqO_",
      "diff_hunk": "@@ -885,13 +885,16 @@ class DescriptorImpl : public Descriptor\n     virtual bool ToStringSubScriptHelper(const SigningProvider* arg, std::string& ret, const StringType type, const DescriptorCache* cache = nullptr) const\n     {\n         size_t pos = 0;\n+        bool has_priv_key{false};",
      "path": "src/script/descriptor.cpp",
      "position": 1,
      "original_position": 4,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "4d07eff13002384ed59a3b7f592be56a25b88c15",
      "in_reply_to_id": 2342296606,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think changing `has_priv_key` to `any_success` might make line 897 more confusing.\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/4d07eff13002384ed59a3b7f592be56a25b88c15/src/script/descriptor.cpp#L897",
      "created_at": "2025-09-12T15:02:09Z",
      "updated_at": "2025-09-12T15:02:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2344526783",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2344526783"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 888,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2344539645",
      "pull_request_review_id": 3217159508,
      "id": 2344539645,
      "node_id": "PRRC_kwDOABII586LvtX9",
      "diff_hunk": "@@ -825,7 +825,7 @@ struct Node {\n     }\n \n     template<typename CTx>\n-    std::optional<std::string> ToString(const CTx& ctx) const {\n+    std::string ToString(const CTx& ctx, bool* has_priv_key = nullptr) const {",
      "path": "src/script/miniscript.h",
      "position": 1,
      "original_position": 5,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "4d07eff13002384ed59a3b7f592be56a25b88c15",
      "in_reply_to_id": 2342300386,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I changed this to use a reference and added an overload that doesn't use the reference; callers that don't need `has_priv_key` can still do `ToString(ctx)`",
      "created_at": "2025-09-12T15:05:34Z",
      "updated_at": "2025-09-12T15:05:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2344539645",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2344539645"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 828,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2351213344",
      "pull_request_review_id": 3228036799,
      "id": 2351213344,
      "node_id": "PRRC_kwDOABII586MJKsg",
      "diff_hunk": "@@ -885,13 +885,16 @@ class DescriptorImpl : public Descriptor\n     virtual bool ToStringSubScriptHelper(const SigningProvider* arg, std::string& ret, const StringType type, const DescriptorCache* cache = nullptr) const\n     {\n         size_t pos = 0;\n+        bool has_priv_key{false};",
      "path": "src/script/descriptor.cpp",
      "position": 1,
      "original_position": 4,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "4d07eff13002384ed59a3b7f592be56a25b88c15",
      "in_reply_to_id": 2342296606,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`has_priv_key` is used only for `PRIVATE` type, consider the following that limits its usage to avoid it being considered a misnomer - related unit/functional tests pass.\r\n\r\n```diff\r\ndiff --git a/src/script/descriptor.cpp b/src/script/descriptor.cpp\r\nindex f29e73e2e6..ef977a5912 100644\r\n--- a/src/script/descriptor.cpp\r\n+++ b/src/script/descriptor.cpp\r\n@@ -891,7 +891,7 @@ public:\r\n             std::string tmp;\r\n             bool subscript_res{scriptarg->ToStringHelper(arg, tmp, type, cache)};\r\n             if (type != StringType::PRIVATE && !subscript_res) return false;\r\n-            has_priv_key = has_priv_key || subscript_res;\r\n+            if (type == StringType::PRIVATE) has_priv_key = has_priv_key || subscript_res;\r\n             ret += tmp;\r\n         }\r\n         return type == StringType::PRIVATE ? has_priv_key : true;\r\n```",
      "created_at": "2025-09-16T07:27:25Z",
      "updated_at": "2025-09-16T07:27:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2351213344",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2351213344"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 888,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2354508110",
      "pull_request_review_id": 3232939261,
      "id": 2354508110,
      "node_id": "PRRC_kwDOABII586MVvFO",
      "diff_hunk": "@@ -885,13 +885,16 @@ class DescriptorImpl : public Descriptor\n     virtual bool ToStringSubScriptHelper(const SigningProvider* arg, std::string& ret, const StringType type, const DescriptorCache* cache = nullptr) const\n     {\n         size_t pos = 0;\n+        bool has_priv_key{false};",
      "path": "src/script/descriptor.cpp",
      "position": 1,
      "original_position": 4,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "4d07eff13002384ed59a3b7f592be56a25b88c15",
      "in_reply_to_id": 2342296606,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I refactored the code a bit and changed `has_priv_key` to `any_success`.",
      "created_at": "2025-09-17T06:58:28Z",
      "updated_at": "2025-09-17T06:58:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2354508110",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2354508110"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 888,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2401352937",
      "pull_request_review_id": 3298207486,
      "id": 2401352937,
      "node_id": "PRRC_kwDOABII586PIbzp",
      "diff_hunk": "@@ -126,6 +126,29 @@ def run_test(self):\n         }\n         assert_equal(expected, wallet.listdescriptors())\n \n+        self.log.info('Test descriptor with missing private keys')\n+        node.createwallet(wallet_name='w5', blank=True, descriptors=True)\n+        wallet = node.get_wallet_rpc('w5')\n+        tr_desc = descsum_create('tr(' + node.get_deterministic_priv_key().key +\n+                                 ',{pk(03cdabb7f2dce7bfbd8a0b9570c6fd1e712e5d64045e9d6b517b3d5072251dc204)' +\n+                                 ',pk([d34db33f/44h/0h/0h]tpubD6NzVbkrYhZ4WaWSyoBvQwbpLkojyoTZPRsgXELWz3Popb3qkjcJyJUGLnL4qHHoQvao8ESaAstxYSnhyswJ76uZPStJRJCTKvosUCJZL5B/0)})')\n+        miniscript_desc = descsum_create('wsh(and_v(v:ripemd160(095ff41131e5946f3c85f79e44adbcf8e27e080e),multi(1,' + node.get_deterministic_priv_key().key +\n+                                            ',tpubD6NzVbkrYhZ4WaWSyoBvQwbpLkojyoTZPRsgXELWz3Popb3qkjcJyJUGLnL4qHHoQvao8ESaAstxYSnhyswJ76uZPStJRJCTKvosUCJZL5B/0)))')",
      "path": "test/functional/wallet_listdescriptors.py",
      "position": 1,
      "original_position": 11,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 74521dd6d4b65007547e64bda2bfbc6fe497677f \"test: Test listdescs with priv works even with missing priv keys\"\r\n\r\nConsider importing few musig descriptors as well. Noticed this was an issue while reviewing #29675: https://github.com/bitcoin/bitcoin/pull/29675#discussion_r2330079926\r\n\r\nPlus minor refactor to use `set` for importing and asserting to make it less redundant to read.\r\n\r\n<details open>\r\n<summary>More musig tests and refactoring diff</summary>\r\n\r\n```diff\r\ndiff --git a/test/functional/wallet_listdescriptors.py b/test/functional/wallet_listdescriptors.py\r\nindex ce4859e43f..5204971e33 100755\r\n--- a/test/functional/wallet_listdescriptors.py\r\n+++ b/test/functional/wallet_listdescriptors.py\r\n@@ -127,27 +127,33 @@ class ListDescriptorsTest(BitcoinTestFramework):\r\n         assert_equal(expected, wallet.listdescriptors())\r\n \r\n         self.log.info('Test descriptor with missing private keys')\r\n-        node.createwallet(wallet_name='w5', blank=True, descriptors=True)\r\n+        node.createwallet(wallet_name='w5', blank=True)\r\n         wallet = node.get_wallet_rpc('w5')\r\n-        tr_desc = descsum_create('tr(' + node.get_deterministic_priv_key().key +\r\n-                                 ',{pk(03cdabb7f2dce7bfbd8a0b9570c6fd1e712e5d64045e9d6b517b3d5072251dc204)' +\r\n-                                 ',pk([d34db33f/44h/0h/0h]tpubD6NzVbkrYhZ4WaWSyoBvQwbpLkojyoTZPRsgXELWz3Popb3qkjcJyJUGLnL4qHHoQvao8ESaAstxYSnhyswJ76uZPStJRJCTKvosUCJZL5B/0)})')\r\n-        miniscript_desc = descsum_create('wsh(and_v(v:ripemd160(095ff41131e5946f3c85f79e44adbcf8e27e080e),multi(1,' + node.get_deterministic_priv_key().key +\r\n-                                            ',tpubD6NzVbkrYhZ4WaWSyoBvQwbpLkojyoTZPRsgXELWz3Popb3qkjcJyJUGLnL4qHHoQvao8ESaAstxYSnhyswJ76uZPStJRJCTKvosUCJZL5B/0)))')\r\n-        wallet.importdescriptors([\r\n-            {\r\n-                'desc': tr_desc,\r\n-                'timestamp': TIME_GENESIS_BLOCK,\r\n-            },\r\n-            {\r\n-                'desc': miniscript_desc,\r\n-                'timestamp': TIME_GENESIS_BLOCK,\r\n-            }\r\n-        ])\r\n+\r\n+        expected_descs = {\r\n+            descsum_create('tr(' + node.get_deterministic_priv_key().key +\r\n+                ',{pk(03cdabb7f2dce7bfbd8a0b9570c6fd1e712e5d64045e9d6b517b3d5072251dc204)' +\r\n+                ',pk([d34db33f/44h/0h/0h]tpubD6NzVbkrYhZ4WaWSyoBvQwbpLkojyoTZPRsgXELWz3Popb3qkjcJyJUGLnL4qHHoQvao8ESaAstxYSnhyswJ76uZPStJRJCTKvosUCJZL5B/0)})'),\r\n+            descsum_create('wsh(and_v(v:ripemd160(095ff41131e5946f3c85f79e44adbcf8e27e080e),multi(1,' + node.get_deterministic_priv_key().key +\r\n+                ',tpubD6NzVbkrYhZ4WaWSyoBvQwbpLkojyoTZPRsgXELWz3Popb3qkjcJyJUGLnL4qHHoQvao8ESaAstxYSnhyswJ76uZPStJRJCTKvosUCJZL5B/0)))'),\r\n+            descsum_create('tr(03dff1d77f2a671c5f36183726db2341be58feae1da2deced843240f7b502ba659,pk(musig(tprv8ZgxMBicQKsPeNLUGrbv3b7qhUk1LQJZAGMuk9gVuKh9sd4BWGp1eMsehUni6qGb8bjkdwBxCbgNGdh2bYGACK5C5dRTaif9KBKGVnSezxV,tpubD6NzVbkrYhZ4XcACN3PEwNjRpR1g4tZjBVk5pdMR2B6dbd3HYhdGVZNKofAiFZd9okBserZvv58A6tBX4pE64UpXGNTSesfUW7PpW36HuKz)/7/8/*))'),\r\n+            descsum_create('tr(03dff1d77f2a671c5f36183726db2341be58feae1da2deced843240f7b502ba659,pk(musig(tprv8ZgxMBicQKsPeNLUGrbv3b7qhUk1LQJZAGMuk9gVuKh9sd4BWGp1eMsehUni6qGb8bjkdwBxCbgNGdh2bYGACK5C5dRTaif9KBKGVnSezxV/10,tpubD6NzVbkrYhZ4XcACN3PEwNjRpR1g4tZjBVk5pdMR2B6dbd3HYhdGVZNKofAiFZd9okBserZvv58A6tBX4pE64UpXGNTSesfUW7PpW36HuKz/11)/*))'),\r\n+            descsum_create('tr(03dff1d77f2a671c5f36183726db2341be58feae1da2deced843240f7b502ba659,{pk(musig(tpubD6NzVbkrYhZ4Wo2WcFSgSqRD9QWkGxddo6WSqsVBx7uQ8QEtM7WncKDRjhFEexK119NigyCsFygA4b7sAPQxqebyFGAZ9XVV1BtcgNzbCRR,tprv8ZgxMBicQKsPen4PGtDwURYnCtVMDejyE8vVwMGhQWfVqB2FBPdekhTacDW4vmsKTsgC1wsncVqXiZdX2YFGAnKoLXYf42M78fQJFzuDYFN)/12/*),pk(musig(tprv8ZgxMBicQKsPeNLUGrbv3b7qhUk1LQJZAGMuk9gVuKh9sd4BWGp1eMsehUni6qGb8bjkdwBxCbgNGdh2bYGACK5C5dRTaif9KBKGVnSezxV,tpubD6NzVbkrYhZ4XWb6fGPjyhgLxapUhXszv7ehQYrQWDgDX4nYWcNcbgWcM2RhYo9s2mbZcfZJ8t5LzYcr24FK79zVybsw5Qj3Rtqug8jpJMy)/13/*)})')\r\n+        }\r\n+\r\n+        descs_to_import = []\r\n+        for desc in expected_descs:\r\n+            descs_to_import.append({'desc': desc, 'timestamp': TIME_GENESIS_BLOCK})\r\n+\r\n+        wallet.importdescriptors(descs_to_import)\r\n         result = wallet.listdescriptors(True)\r\n-        expected_descs = [tr_desc, miniscript_desc]\r\n         actual_descs = [d['desc'] for d in result['descriptors']]\r\n-        assert_equal(actual_descs, expected_descs)\r\n+\r\n+        assert_equal(len(actual_descs), len(expected_descs))\r\n+        for desc in actual_descs:\r\n+            if desc not in expected_descs:\r\n+                raise AssertionError(f\"{desc} missing\")\r\n+\r\n \r\n \r\n if __name__ == '__main__':\r\n\r\n```\r\n</details>",
      "created_at": "2025-10-03T09:28:44Z",
      "updated_at": "2025-10-03T11:02:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2401352937",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2401352937"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": 135,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 136,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2401362264",
      "pull_request_review_id": 3298207486,
      "id": 2401362264,
      "node_id": "PRRC_kwDOABII586PIeFY",
      "diff_hunk": "@@ -490,6 +491,9 @@ RPCHelpMan listdescriptors()\n     if (!wallet) return UniValue::VNULL;\n \n     const bool priv = !request.params[0].isNull() && request.params[0].get_bool();\n+    if (wallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) && priv) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Can't get private descriptor string for watch-only wallets\");",
      "path": "src/wallet/rpc/backup.cpp",
      "position": 13,
      "original_position": 13,
      "commit_id": "2b16014dfbe7e249e4929beafb4ce26415206e7a",
      "original_commit_id": "a797b2ab6ba69732a1b6f1b54b7785d4b802170e",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In a797b2ab6ba69732a1b6f1b54b7785d4b802170e \"walletrpc: reject listdes with priv key on w-only wallets\"\r\n\r\nNit: To make it explicit in the error that the request params combination is invalid.\r\n```diff\r\n- throw JSONRPCError(RPC_WALLET_ERROR, \"Can't get private descriptor string for watch-only wallets\");\r\n+ throw JSONRPCError(RPC_WALLET_ERROR, \"Invalid request to get private descriptor string for watch-only wallets\");\r\n``` ",
      "created_at": "2025-10-03T09:32:46Z",
      "updated_at": "2025-10-03T11:02:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2401362264",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2401362264"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 495,
      "original_line": 495,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2401425187",
      "pull_request_review_id": 3298207486,
      "id": 2401425187,
      "node_id": "PRRC_kwDOABII586PItcj",
      "diff_hunk": "@@ -126,6 +126,29 @@ def run_test(self):\n         }\n         assert_equal(expected, wallet.listdescriptors())\n \n+        self.log.info('Test descriptor with missing private keys')\n+        node.createwallet(wallet_name='w5', blank=True, descriptors=True)\n+        wallet = node.get_wallet_rpc('w5')\n+        tr_desc = descsum_create('tr(' + node.get_deterministic_priv_key().key +\n+                                 ',{pk(03cdabb7f2dce7bfbd8a0b9570c6fd1e712e5d64045e9d6b517b3d5072251dc204)' +\n+                                 ',pk([d34db33f/44h/0h/0h]tpubD6NzVbkrYhZ4WaWSyoBvQwbpLkojyoTZPRsgXELWz3Popb3qkjcJyJUGLnL4qHHoQvao8ESaAstxYSnhyswJ76uZPStJRJCTKvosUCJZL5B/0)})')\n+        miniscript_desc = descsum_create('wsh(and_v(v:ripemd160(095ff41131e5946f3c85f79e44adbcf8e27e080e),multi(1,' + node.get_deterministic_priv_key().key +\n+                                            ',tpubD6NzVbkrYhZ4WaWSyoBvQwbpLkojyoTZPRsgXELWz3Popb3qkjcJyJUGLnL4qHHoQvao8ESaAstxYSnhyswJ76uZPStJRJCTKvosUCJZL5B/0)))')",
      "path": "test/functional/wallet_listdescriptors.py",
      "position": 1,
      "original_position": 11,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "in_reply_to_id": 2401352937,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "There appears to be an issue with the following MuSig descriptor that fails the test:\r\n\r\nOne of the MuSig portion in the descriptor doesn't contain any private key for which the `listdescriptors(true)` returns a `pk()` instead of defaulting to the public keys whereas the `listdescriptors()` works fine.\r\n\r\n```python\r\n        desc = descsum_create('tr(03dff1d77f2a671c5f36183726db2341be58feae1da2deced843240f7b502ba659,{pk(musig(tpubD6NzVbkrYhZ4Wo2WcFSgSqRD9QWkGxddo6WSqsVBx7uQ8QEtM7WncKDRjhFEexK119NigyCsFygA4b7sAPQxqebyFGAZ9XVV1BtcgNzbCRR,tpubD6NzVbkrYhZ4Wc3i6L6N1Pp7cyVeyMcdLrFGXGDGzCfdCa5F4Zs3EY46N72Ws8QDEUYBVwXfDfda2UKSseSdU1fsBegJBhGCZyxkf28bkQ6)/12/*),pk(musig(tprv8ZgxMBicQKsPeNLUGrbv3b7qhUk1LQJZAGMuk9gVuKh9sd4BWGp1eMsehUni6qGb8bjkdwBxCbgNGdh2bYGACK5C5dRTaif9KBKGVnSezxV,tpubD6NzVbkrYhZ4XWb6fGPjyhgLxapUhXszv7ehQYrQWDgDX4nYWcNcbgWcM2RhYo9s2mbZcfZJ8t5LzYcr24FK79zVybsw5Qj3Rtqug8jpJMy)/13/*)})')\r\n        result = wallet.importdescriptors([{\r\n            'desc': desc,\r\n            'timestamp': TIME_GENESIS_BLOCK,\r\n        }])\r\n        result = wallet.listdescriptors(True)\r\n        result = wallet.listdescriptors()\r\n```\r\n\r\nDebug Output for `result` object.\r\n```zsh\r\n2025-10-03T09:56:03.473944Z TestFramework (INFO): Test descriptor with missing private keys\r\n'tr(03dff1d77f2a671c5f36183726db2341be58feae1da2deced843240f7b502ba659,{pk(musig(tpubD6NzVbkrYhZ4Wo2WcFSgSqRD9QWkGxddo6WSqsVBx7uQ8QEtM7WncKDRjhFEexK119NigyCsFygA4b7sAPQxqebyFGAZ9XVV1BtcgNzbCRR,tpubD6NzVbkrYhZ4Wc3i6L6N1Pp7cyVeyMcdLrFGXGDGzCfdCa5F4Zs3EY46N72Ws8QDEUYBVwXfDfda2UKSseSdU1fsBegJBhGCZyxkf28bkQ6)/12/*),pk(musig(tprv8ZgxMBicQKsPeNLUGrbv3b7qhUk1LQJZAGMuk9gVuKh9sd4BWGp1eMsehUni6qGb8bjkdwBxCbgNGdh2bYGACK5C5dRTaif9KBKGVnSezxV,tpubD6NzVbkrYhZ4XWb6fGPjyhgLxapUhXszv7ehQYrQWDgDX4nYWcNcbgWcM2RhYo9s2mbZcfZJ8t5LzYcr24FK79zVybsw5Qj3Rtqug8jpJMy)/13/*)})#jd2qx33n'\r\n[{'success': True,\r\n  'warnings': ['Range not given, using default keypool range',\r\n               'Not all private keys provided. Some wallet functionality may '\r\n               'return unexpected errors']}]\r\n{'wallet_name': 'w5',\r\n 'descriptors': [{'desc': 'tr(03dff1d77f2a671c5f36183726db2341be58feae1da2deced843240f7b502ba659,{pk(),pk(musig(tprv8ZgxMBicQKsPeNLUGrbv3b7qhUk1LQJZAGMuk9gVuKh9sd4BWGp1eMsehUni6qGb8bjkdwBxCbgNGdh2bYGACK5C5dRTaif9KBKGVnSezxV,tpubD6NzVbkrYhZ4XWb6fGPjyhgLxapUhXszv7ehQYrQWDgDX4nYWcNcbgWcM2RhYo9s2mbZcfZJ8t5LzYcr24FK79zVybsw5Qj3Rtqug8jpJMy)/13/*)})#53ynphm7',\r\n                  'timestamp': 1296688602,\r\n                  'active': False,\r\n                  'range': [0, 0],\r\n                  'next': 0,\r\n                  'next_index': 0}]}\r\n{'wallet_name': 'w5',\r\n 'descriptors': [{'desc': 'tr(03dff1d77f2a671c5f36183726db2341be58feae1da2deced843240f7b502ba659,{pk(musig(tpubD6NzVbkrYhZ4Wo2WcFSgSqRD9QWkGxddo6WSqsVBx7uQ8QEtM7WncKDRjhFEexK119NigyCsFygA4b7sAPQxqebyFGAZ9XVV1BtcgNzbCRR,tpubD6NzVbkrYhZ4Wc3i6L6N1Pp7cyVeyMcdLrFGXGDGzCfdCa5F4Zs3EY46N72Ws8QDEUYBVwXfDfda2UKSseSdU1fsBegJBhGCZyxkf28bkQ6)/12/*),pk(musig(tpubD6NzVbkrYhZ4XqNGAWGWSzmxGWFwVjVTjZxh2fioKbVYi7Jx8fdbprVWsdW7mHwqjchBVas8TLZG4Xwuz4RKU4iaCqiCvoSkFCzQptqk5Y1,tpubD6NzVbkrYhZ4XWb6fGPjyhgLxapUhXszv7ehQYrQWDgDX4nYWcNcbgWcM2RhYo9s2mbZcfZJ8t5LzYcr24FK79zVybsw5Qj3Rtqug8jpJMy)/13/*)})#8396h37a',\r\n                  'timestamp': 1296688602,\r\n                  'active': False,\r\n                  'range': [0, 0],\r\n                  'next': 0,\r\n                  'next_index': 0}]}\r\n```\r\n\r\nThe following patch in `MuSigPubkeyProvider` seems to fix it.\r\n1. `out` doesn't need to be cleared if no priv keys found. For non watch-only wallets, a descriptor without any private keys can't be imported anyway so there can't be a case wherein we need to propagate this check from `MuSigPubkeyProvider` to `TrDescriptor`. \r\n\r\n**It can be assumed that any other portion of the descriptor will have a private key.**\r\n\r\nI haven't verified this^ assumption for every possible scenario and I suggest adding few more cases in this test wherein a private key is present in different portions of the `tr()` descriptor with `musig()`. Few templates for reference from #29675 PR: https://github.com/bitcoin/bitcoin/pull/29675/commits/ac599c4a9cb3b2d424932d3fd91f9eed17426827#diff-c94f9555a2569240d362a00a82764f4714f6c65283e3f96725cf2a1043a296b5R224-R238\r\n\r\n\r\n2. After this PR, `pubkey->ToPrivateString` defaults to returning the public key in `tmp`, so the subsequent `else` block is redundant now.\r\n\r\n \r\n```diff\r\ndiff --git a/src/script/descriptor.cpp b/src/script/descriptor.cpp\r\nindex 6eafcaa94c..76d4c8bb02 100644\r\n--- a/src/script/descriptor.cpp\r\n+++ b/src/script/descriptor.cpp\r\n@@ -726,17 +726,14 @@ public:\r\n             std::string tmp;\r\n             if (pubkey->ToPrivateString(arg, tmp)) {\r\n                 any_privkeys = true;\r\n-                out += tmp;\r\n-            } else {\r\n-                out += pubkey->ToString();\r\n             }\r\n+            out += tmp;\r\n         }\r\n         out += \")\";\r\n         out += FormatHDKeypath(m_path);\r\n         if (IsRangedDerivation()) {\r\n             out += \"/*\";\r\n         }\r\n-        if (!any_privkeys) out.clear();\r\n         return any_privkeys;\r\n     }\r\n     bool ToNormalizedString(const SigningProvider& arg, std::string& out, const DescriptorCache* cache = nullptr) const override\r\n```",
      "created_at": "2025-10-03T10:01:17Z",
      "updated_at": "2025-10-03T11:02:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2401425187",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2401425187"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": 135,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 136,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2401563601",
      "pull_request_review_id": 3298499989,
      "id": 2401563601,
      "node_id": "PRRC_kwDOABII586PJPPR",
      "diff_hunk": "@@ -49,7 +49,7 @@ constexpr int SIGNABLE = 1 << 3; // We can sign with this descriptor (this is no\n constexpr int DERIVE_HARDENED = 1 << 4; // The final derivation is hardened, i.e. ends with *' or *h\n constexpr int MIXED_PUBKEYS = 1 << 5;\n constexpr int XONLY_KEYS = 1 << 6; // X-only pubkeys are in use (and thus inferring/caching may swap parity of pubkeys/keyids)\n-constexpr int MISSING_PRIVKEYS = 1 << 7; // Not all private keys are available, so ToPrivateString will fail.\n+constexpr int MISSING_PRIVKEYS = 1 << 7; // Not all private keys are available, so ToPrivateString will fail and HavePrivateKeys() will return `true`.",
      "path": "src/test/descriptor_tests.cpp",
      "position": 1,
      "original_position": 5,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "in_reply_to_id": null,
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "\r\nNot all private keys are available, so ToPrivateString will fail and HavePrivateKeys() will return true. -> ... will return false. [The comment contradicts the flag name and intent â€” if private keys are missing, HavePrivateKeys() should be false; the current text stating true is likely a typo and is misleading.]\r\n",
      "created_at": "2025-10-03T11:16:25Z",
      "updated_at": "2025-10-03T11:16:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2401563601",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2401563601"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2401609688",
      "pull_request_review_id": 3298566525,
      "id": 2401609688,
      "node_id": "PRRC_kwDOABII586PJafY",
      "diff_hunk": "@@ -49,7 +49,7 @@ constexpr int SIGNABLE = 1 << 3; // We can sign with this descriptor (this is no\n constexpr int DERIVE_HARDENED = 1 << 4; // The final derivation is hardened, i.e. ends with *' or *h\n constexpr int MIXED_PUBKEYS = 1 << 5;\n constexpr int XONLY_KEYS = 1 << 6; // X-only pubkeys are in use (and thus inferring/caching may swap parity of pubkeys/keyids)\n-constexpr int MISSING_PRIVKEYS = 1 << 7; // Not all private keys are available, so ToPrivateString will fail.\n+constexpr int MISSING_PRIVKEYS = 1 << 7; // Not all private keys are available, so ToPrivateString will fail and HavePrivateKeys() will return `true`.",
      "path": "src/test/descriptor_tests.cpp",
      "position": 1,
      "original_position": 5,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "in_reply_to_id": 2401563601,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Is this comment in the code correct?\r\n\r\n------------------------\r\n`s/HavePrivateKeys/HasAllPrivateKeys` because the current implementation of `HavePrivateKeys` returns `false` immediately if a corresponding private key is not found for a public key; the function doc suggests this too - \"Whether the given provider has all private keys required by this descriptor.\"\r\n\r\nWhereas `ToPrivateString` returns `true` if any private key is found, the usage of `any_success` also suggests this. ",
      "created_at": "2025-10-03T11:41:03Z",
      "updated_at": "2025-10-03T12:08:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2401609688",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2401609688"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2404232251",
      "pull_request_review_id": 3302133873,
      "id": 2404232251,
      "node_id": "PRRC_kwDOABII586PTaw7",
      "diff_hunk": "@@ -126,6 +126,29 @@ def run_test(self):\n         }\n         assert_equal(expected, wallet.listdescriptors())\n \n+        self.log.info('Test descriptor with missing private keys')\n+        node.createwallet(wallet_name='w5', blank=True, descriptors=True)\n+        wallet = node.get_wallet_rpc('w5')\n+        tr_desc = descsum_create('tr(' + node.get_deterministic_priv_key().key +\n+                                 ',{pk(03cdabb7f2dce7bfbd8a0b9570c6fd1e712e5d64045e9d6b517b3d5072251dc204)' +\n+                                 ',pk([d34db33f/44h/0h/0h]tpubD6NzVbkrYhZ4WaWSyoBvQwbpLkojyoTZPRsgXELWz3Popb3qkjcJyJUGLnL4qHHoQvao8ESaAstxYSnhyswJ76uZPStJRJCTKvosUCJZL5B/0)})')\n+        miniscript_desc = descsum_create('wsh(and_v(v:ripemd160(095ff41131e5946f3c85f79e44adbcf8e27e080e),multi(1,' + node.get_deterministic_priv_key().key +\n+                                            ',tpubD6NzVbkrYhZ4WaWSyoBvQwbpLkojyoTZPRsgXELWz3Popb3qkjcJyJUGLnL4qHHoQvao8ESaAstxYSnhyswJ76uZPStJRJCTKvosUCJZL5B/0)))')",
      "path": "test/functional/wallet_listdescriptors.py",
      "position": 1,
      "original_position": 11,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "in_reply_to_id": 2401352937,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks for pointing this out.\r\n\r\n> 1. `out` doesn't need to be cleared if no priv keys found. For non watch-only wallets, a descriptor without any private keys can't be imported anyway so there can't be a case wherein we need to propagate this check from `MuSigPubkeyProvider` to `TrDescriptor`.\r\n\r\nYes, there must be a private key somewhere in the descriptor, so the `MusigPubkeyProvider` should not clear the string.\r\n\r\nI used your patch and added you as co-author.",
      "created_at": "2025-10-05T01:37:05Z",
      "updated_at": "2025-10-05T01:37:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2404232251",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2404232251"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": 135,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 136,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2404232564",
      "pull_request_review_id": 3302134195,
      "id": 2404232564,
      "node_id": "PRRC_kwDOABII586PTa10",
      "diff_hunk": "@@ -49,7 +49,7 @@ constexpr int SIGNABLE = 1 << 3; // We can sign with this descriptor (this is no\n constexpr int DERIVE_HARDENED = 1 << 4; // The final derivation is hardened, i.e. ends with *' or *h\n constexpr int MIXED_PUBKEYS = 1 << 5;\n constexpr int XONLY_KEYS = 1 << 6; // X-only pubkeys are in use (and thus inferring/caching may swap parity of pubkeys/keyids)\n-constexpr int MISSING_PRIVKEYS = 1 << 7; // Not all private keys are available, so ToPrivateString will fail.\n+constexpr int MISSING_PRIVKEYS = 1 << 7; // Not all private keys are available, so ToPrivateString will fail and HavePrivateKeys() will return `true`.",
      "path": "src/test/descriptor_tests.cpp",
      "position": 1,
      "original_position": 5,
      "commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "original_commit_id": "74521dd6d4b65007547e64bda2bfbc6fe497677f",
      "in_reply_to_id": 2401563601,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I have updated the comment.",
      "created_at": "2025-10-05T01:39:04Z",
      "updated_at": "2025-10-05T01:39:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2404232564",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2404232564"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2404232718",
      "pull_request_review_id": 3302134348,
      "id": 2404232718,
      "node_id": "PRRC_kwDOABII586PTa4O",
      "diff_hunk": "@@ -490,6 +491,9 @@ RPCHelpMan listdescriptors()\n     if (!wallet) return UniValue::VNULL;\n \n     const bool priv = !request.params[0].isNull() && request.params[0].get_bool();\n+    if (wallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) && priv) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Can't get private descriptor string for watch-only wallets\");",
      "path": "src/wallet/rpc/backup.cpp",
      "position": 13,
      "original_position": 13,
      "commit_id": "2b16014dfbe7e249e4929beafb4ce26415206e7a",
      "original_commit_id": "a797b2ab6ba69732a1b6f1b54b7785d4b802170e",
      "in_reply_to_id": 2401362264,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I don't believe the suggested message is an improvement, so I will leave it as is.",
      "created_at": "2025-10-05T01:40:00Z",
      "updated_at": "2025-10-05T01:40:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2404232718",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2404232718"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 495,
      "original_line": 495,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2444943716",
      "pull_request_review_id": 3356372618,
      "id": 2444943716,
      "node_id": "PRRC_kwDOABII586RuuFk",
      "diff_hunk": "@@ -841,6 +848,24 @@ class DescriptorImpl : public Descriptor\n         return true;\n     }\n \n+    // NOLINTNEXTLINE(misc-no-recursion)\n+    bool HavePrivateKeys(const SigningProvider& arg) const override\n+    {\n+        if (m_pubkey_args.empty() && m_subdescriptor_args.empty()) return false;\n+\n+        for (const auto& sub: m_subdescriptor_args) {\n+            if (!sub->HavePrivateKeys(arg)) return false;\n+        }\n+\n+        for (const auto& pubkey : m_pubkey_args) {\n+            FlatSigningProvider provider;\n+            pubkey->GetPrivKey(0, arg, provider);\n+            if (provider.keys.empty()) return false;\n+        }",
      "path": "src/script/descriptor.cpp",
      "position": 101,
      "original_position": 85,
      "commit_id": "2b16014dfbe7e249e4929beafb4ce26415206e7a",
      "original_commit_id": "8b4d4b392cadc025e86087142ddbf08d40d65ab8",
      "in_reply_to_id": null,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Could reuse one temporary provider to reduce alloc churn.\r\n\r\n```suggestion\r\n       FlatSigningProvider tmp_provider;\r\n        for (const auto& pubkey : m_pubkey_args) {\r\n            tmp_provider.keys.clear();\r\n            pubkey->GetPrivKey(0, arg, tmp_provider);\r\n            if (tmp_provider.keys.empty()) return false;\r\n        }\r\n```",
      "created_at": "2025-10-20T12:58:55Z",
      "updated_at": "2025-10-20T12:59:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2444943716",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2444943716"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": 861,
      "original_start_line": 860,
      "start_side": "RIGHT",
      "line": 865,
      "original_line": 865,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2446616256",
      "pull_request_review_id": 3358625851,
      "id": 2446616256,
      "node_id": "PRRC_kwDOABII586R1GbA",
      "diff_hunk": "@@ -841,6 +848,24 @@ class DescriptorImpl : public Descriptor\n         return true;\n     }\n \n+    // NOLINTNEXTLINE(misc-no-recursion)\n+    bool HavePrivateKeys(const SigningProvider& arg) const override\n+    {\n+        if (m_pubkey_args.empty() && m_subdescriptor_args.empty()) return false;\n+\n+        for (const auto& sub: m_subdescriptor_args) {\n+            if (!sub->HavePrivateKeys(arg)) return false;\n+        }\n+\n+        for (const auto& pubkey : m_pubkey_args) {\n+            FlatSigningProvider provider;\n+            pubkey->GetPrivKey(0, arg, provider);\n+            if (provider.keys.empty()) return false;\n+        }",
      "path": "src/script/descriptor.cpp",
      "position": 101,
      "original_position": 85,
      "commit_id": "2b16014dfbe7e249e4929beafb4ce26415206e7a",
      "original_commit_id": "8b4d4b392cadc025e86087142ddbf08d40d65ab8",
      "in_reply_to_id": 2444943716,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-10-21T03:11:54Z",
      "updated_at": "2025-10-21T03:11:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32471#discussion_r2446616256",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2446616256"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32471"
        }
      },
      "start_line": 861,
      "original_start_line": 860,
      "start_side": "RIGHT",
      "line": 865,
      "original_line": 865,
      "side": "RIGHT"
    }
  ]
}