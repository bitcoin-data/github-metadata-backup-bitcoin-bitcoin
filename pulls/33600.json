{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33600",
    "id": 2904373202,
    "node_id": "PR_kwDOABII586tHTfS",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/33600",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/33600.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/33600.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33600",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33600/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33600/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33600/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/faa9d10c84bc6b465cbca266468990cc716b4300",
    "number": 33600,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "refactor: Construct g_verify_flag_names on first use",
    "user": {
      "login": "maflcko",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maflcko",
      "html_url": "https://github.com/maflcko",
      "followers_url": "https://api.github.com/users/maflcko/followers",
      "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
      "organizations_url": "https://api.github.com/users/maflcko/orgs",
      "repos_url": "https://api.github.com/users/maflcko/repos",
      "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/maflcko/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "The current usage of the `g_verify_flag_names` map seems fine and I can not see a static initialization order fiasco here.\r\n\r\nHowever, it seems brittle to hope this remains the case in the future. Also, it triggers a msan false-positive in the fuzz CI task. (C.f https://github.com/bitcoin-core/qa-assets/actions/runs/18352815555/job/52413137315?pr=241#step:7:5245)\r\n\r\nSo just apply the \"Construct on first use\" idiom.",
    "labels": [
      {
        "id": 135961,
        "node_id": "MDU6TGFiZWwxMzU5NjE=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
        "name": "Refactoring",
        "color": "E6F6D6",
        "default": false
      }
    ],
    "created_at": "2025-10-10T15:05:43Z",
    "updated_at": "2025-10-13T20:57:37Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "800796be54b99cc437fc7faa1b6224da179e80bb",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "maflcko:2510-cofu",
      "ref": "2510-cofu",
      "sha": "faa9d10c84bc6b465cbca266468990cc716b4300",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 40046254,
        "node_id": "MDEwOlJlcG9zaXRvcnk0MDA0NjI1NA==",
        "name": "bitcoin-core",
        "full_name": "maflcko/bitcoin-core",
        "owner": {
          "login": "maflcko",
          "id": 6399679,
          "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/maflcko",
          "html_url": "https://github.com/maflcko",
          "followers_url": "https://api.github.com/users/maflcko/followers",
          "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
          "organizations_url": "https://api.github.com/users/maflcko/orgs",
          "repos_url": "https://api.github.com/users/maflcko/repos",
          "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/maflcko/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/maflcko/bitcoin-core",
        "fork": true,
        "url": "https://api.github.com/repos/maflcko/bitcoin-core",
        "archive_url": "https://api.github.com/repos/maflcko/bitcoin-core/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/maflcko/bitcoin-core/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/maflcko/bitcoin-core/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/maflcko/bitcoin-core/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/maflcko/bitcoin-core/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/maflcko/bitcoin-core/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/maflcko/bitcoin-core/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/maflcko/bitcoin-core/contributors",
        "deployments_url": "https://api.github.com/repos/maflcko/bitcoin-core/deployments",
        "downloads_url": "https://api.github.com/repos/maflcko/bitcoin-core/downloads",
        "events_url": "https://api.github.com/repos/maflcko/bitcoin-core/events",
        "forks_url": "https://api.github.com/repos/maflcko/bitcoin-core/forks",
        "git_commits_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/tags%7B/sha%7D",
        "git_url": "git://github.com/maflcko/bitcoin-core.git",
        "issue_comment_url": "https://api.github.com/repos/maflcko/bitcoin-core/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/maflcko/bitcoin-core/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/maflcko/bitcoin-core/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/maflcko/bitcoin-core/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/maflcko/bitcoin-core/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/maflcko/bitcoin-core/languages",
        "merges_url": "https://api.github.com/repos/maflcko/bitcoin-core/merges",
        "milestones_url": "https://api.github.com/repos/maflcko/bitcoin-core/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/maflcko/bitcoin-core/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/maflcko/bitcoin-core/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/maflcko/bitcoin-core/releases%7B/id%7D",
        "ssh_url": "git@github.com:maflcko/bitcoin-core.git",
        "stargazers_url": "https://api.github.com/repos/maflcko/bitcoin-core/stargazers",
        "statuses_url": "https://api.github.com/repos/maflcko/bitcoin-core/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/maflcko/bitcoin-core/subscribers",
        "subscription_url": "https://api.github.com/repos/maflcko/bitcoin-core/subscription",
        "tags_url": "https://api.github.com/repos/maflcko/bitcoin-core/tags",
        "teams_url": "https://api.github.com/repos/maflcko/bitcoin-core/teams",
        "trees_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/maflcko/bitcoin-core.git",
        "hooks_url": "https://api.github.com/repos/maflcko/bitcoin-core/hooks",
        "svn_url": "https://github.com/maflcko/bitcoin-core",
        "homepage": "",
        "language": "C++",
        "forks_count": 10,
        "stargazers_count": 25,
        "watchers_count": 25,
        "size": 261363,
        "default_branch": "master",
        "open_issues_count": 14,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-10-13T12:59:35Z",
        "created_at": "2015-08-01T12:42:47Z",
        "updated_at": "2025-08-07T03:03:35Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "becf1500131805bd6a47486cd5bc5bdb55839211",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 38021,
        "stargazers_count": 86135,
        "watchers_count": 86135,
        "size": 294840,
        "default_branch": "master",
        "open_issues_count": 832,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-10-13T13:07:34Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-10-13T20:40:10Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33600"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 30,
    "deletions": 26,
    "changed_files": 3,
    "commits": 1,
    "review_comments": 4,
    "comments": 3
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhYTlkMTBjODRiYzZiNDY1Y2JjYTI2NjQ2ODk5MGNjNzE2YjQzMDA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faa9d10c84bc6b465cbca266468990cc716b4300",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/faa9d10c84bc6b465cbca266468990cc716b4300",
      "tree": {
        "sha": "66485a412f483a24bdce5d43d0035b53b336ab60",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/66485a412f483a24bdce5d43d0035b53b336ab60"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree 66485a412f483a24bdce5d43d0035b53b336ab60\nparent cd1b7fa1ff7c6a4f85693cb413be17cd67647043\nauthor MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1760108284 +0200\ncommitter MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1760108260 +0200\n\nrefactor: Construct g_verify_flag_names on first use\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgqxY/aMPiuXoCFn6iAEyAhvUqFX\njanTudd31Jtt35ct0AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQIRtSOk1d5s4HWBgYkKtbIc4oysjPR2boY3hVmWjySaM4CTifYW/ooYflX06S4EZsb\nrp5rtocq3NVuTDNTfEgQk=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cd1b7fa1ff7c6a4f85693cb413be17cd67647043",
          "sha": "cd1b7fa1ff7c6a4f85693cb413be17cd67647043",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/cd1b7fa1ff7c6a4f85693cb413be17cd67647043"
        }
      ],
      "message": "refactor: Construct g_verify_flag_names on first use",
      "committer": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2025-10-10T14:57:40Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2025-10-10T14:58:04Z"
      },
      "sha": "faa9d10c84bc6b465cbca266468990cc716b4300"
    },
    {
      "event": "labeled",
      "id": 20210270614,
      "node_id": "LE_lADOABII587Q0I4RzwAAAAS0oEGW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20210270614",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-10T15:05:47Z",
      "label": {
        "name": "Refactoring",
        "color": "E6F6D6"
      }
    },
    {
      "event": "commented",
      "id": 3390662266,
      "node_id": "IC_kwDOABII587KGWZ6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3390662266",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-10T15:05:49Z",
      "updated_at": "2025-10-13T18:44:16Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/33600.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [kevkevinpal](https://github.com/bitcoin/bitcoin/pull/33600#issuecomment-3394837857), [janb84](https://github.com/bitcoin/bitcoin/pull/33600#pullrequestreview-3331335695), [stickies-v](https://github.com/bitcoin/bitcoin/pull/33600#pullrequestreview-3332643263) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33600#issuecomment-3390662266",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33600"
    },
    {
      "event": "commented",
      "id": 3391921802,
      "node_id": "IC_kwDOABII587KLJ6K",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3391921802",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-10T19:08:27Z",
      "updated_at": "2025-10-10T19:08:27Z",
      "author_association": "MEMBER",
      "body": "<details><summary>for reference, the msan false positive CI logs</summary>\r\n\r\nmaster:\r\n\r\n```\r\n...\r\n+ /ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/test/fuzz/test_runner.py -j16 -l DEBUG /ci_container_base/ci/scratch/qa-assets/fuzz_corpora/ --empty_min_time=60\r\n==11639==WARNING: MemorySanitizer: use-of-uninitialized-value\r\n    #0 0xaaaad25c2408 in SetArgs(int, char**) /ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/src/test/fuzz/util/./test/fuzz/fuzz.cpp:52:5\r\n    #1 0xaaaad25c2408 in LLVMFuzzerInitialize /ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/src/test/fuzz/util/./test/fuzz/fuzz.cpp:223:5\r\n    #2 0xaaaad193a1dc in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) (/ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/bin/fuzz+0xe4a1dc) (BuildId: d44700e52b2315b458e122acf4a7dd36326c741c)\r\n    #3 0xaaaad19660f4 in main (/ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/bin/fuzz+0xe760f4) (BuildId: d44700e52b2315b458e122acf4a7dd36326c741c)\r\n    #4 0xffff87fb84c0  (/lib/aarch64-linux-gnu/libc.so.6+0x284c0) (BuildId: d6c205bda1b6e91815f8fef45bdf56bc2239c37e)\r\n    #5 0xffff87fb8594 in __libc_start_main (/lib/aarch64-linux-gnu/libc.so.6+0x28594) (BuildId: d6c205bda1b6e91815f8fef45bdf56bc2239c37e)\r\n    #6 0xaaaad1931aec in _start (/ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/bin/fuzz+0xe41aec) (BuildId: d44700e52b2315b458e122acf4a7dd36326c741c)\r\n\r\n  Member fields were destroyed\r\n    #0 0xaaaad19a4b34 in __sanitizer_dtor_callback_fields (/ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/bin/fuzz+0xeb4b34) (BuildId: d44700e52b2315b458e122acf4a7dd36326c741c)\r\n    #1 0xaaaad192b7ec in std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::~basic_string() /cxx_build/include/c++/v1/string:903:3\r\n    #2 0xaaaad192b7ec in std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::~basic_string() /cxx_build/include/c++/v1/string:1208:3\r\n    #3 0xaaaad192b7ec in std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, script_verify_flag_name>::~pair() /cxx_build/include/c++/v1/__utility/pair.h:90:8\r\n    #4 0xaaaad192b7ec in __cxx_global_var_init.18 /ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/src/./script/interpreter.cpp:2167:54\r\n    #5 0xaaaad192b7ec in _GLOBAL__sub_I_interpreter.cpp /ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/src/./script/interpreter.cpp\r\n    #6 0xffff87fb8610 in __libc_start_main (/lib/aarch64-linux-gnu/libc.so.6+0x28610) (BuildId: d6c205bda1b6e91815f8fef45bdf56bc2239c37e)\r\n    #7 0xaaaad1931aec in _start (/ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/bin/fuzz+0xe41aec) (BuildId: d44700e52b2315b458e122acf4a7dd36326c741c)\r\n\r\nSUMMARY: MemorySanitizer: use-of-uninitialized-value /ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/src/test/fuzz/util/./test/fuzz/fuzz.cpp:52:5 in SetArgs(int, char**)\r\nExiting\r\nTraceback (most recent call last):\r\n  File \"/ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/test/fuzz/test_runner.py\", line 404, in <module>\r\n    main()\r\n  File \"/ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/test/fuzz/test_runner.py\", line 111, in main\r\n    test_list_all = parse_test_list(\r\n                    ^^^^^^^^^^^^^^^^\r\n  File \"/ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/test/fuzz/test_runner.py\", line 390, in parse_test_list\r\n    test_list_all = subprocess.run(\r\n                    ^^^^^^^^^^^^^^^\r\n  File \"/usr/lib/python3.12/subprocess.py\", line 571, in run\r\n    raise CalledProcessError(retcode, process.args,\r\nsubprocess.CalledProcessError: Command '/ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/bin/fuzz' returned non-zero exit status 1.\r\nCommand '['./ci/test/02_run_container.sh']' returned non-zero exit status 1.\r\n```\r\n\r\nThis pull:\r\n\r\n(all good)\r\n\r\n\r\n\r\n</details>",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33600#issuecomment-3391921802",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33600"
    },
    {
      "event": "commented",
      "id": 3394837857,
      "node_id": "IC_kwDOABII587KWR1h",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3394837857",
      "actor": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-12T16:29:03Z",
      "updated_at": "2025-10-12T16:29:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK [faa9d10](https://github.com/bitcoin/bitcoin/pull/33600/commits/faa9d10c84bc6b465cbca266468990cc716b4300)\r\n\r\nLooks good to me, makes sense to follow the construct on first use idiom.\r\n\r\nI also did a quick grep to see if `g_verify_flag_names` was used anywhere else, and it was not",
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33600#issuecomment-3394837857",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33600"
    },
    {
      "event": "reviewed",
      "id": 3331335695,
      "node_id": "PRR_kwDOABII587GkCYP",
      "url": null,
      "actor": null,
      "commit_id": "faa9d10c84bc6b465cbca266468990cc716b4300",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-10-13T12:01:00Z",
      "author_association": "CONTRIBUTOR",
      "body": "lgtm ACK faa9d10c84bc6b465cbca266468990cc716b4300\r\n\r\nPR refactors `g_verify_flag_names` init to use the \"Construct on first use\" Idiom to  prevent a \"static initialization order fiasco\" error. This currently gives some false positives,  imho a valid change to remove the false positives and to prevent a \"static initialization order fiasco\" type of error in the future.\r\n\r\n- code review ✅\r\n- build en tests run ✅",
      "user": {
        "login": "janb84",
        "id": 608446,
        "node_id": "MDQ6VXNlcjYwODQ0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/608446?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janb84",
        "html_url": "https://github.com/janb84",
        "followers_url": "https://api.github.com/users/janb84/followers",
        "following_url": "https://api.github.com/users/janb84/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janb84/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janb84/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janb84/subscriptions",
        "organizations_url": "https://api.github.com/users/janb84/orgs",
        "repos_url": "https://api.github.com/users/janb84/repos",
        "events_url": "https://api.github.com/users/janb84/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janb84/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33600#pullrequestreview-3331335695",
      "submitted_at": "2025-10-13T12:01:00Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33600"
    },
    {
      "event": "reviewed",
      "id": 3332643263,
      "node_id": "PRR_kwDOABII587GpBm_",
      "url": null,
      "actor": null,
      "commit_id": "faa9d10c84bc6b465cbca266468990cc716b4300",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-10-13T18:44:28Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK faa9d10c84bc6b465cbca266468990cc716b4300 \r\n\r\nI would prefer the [`constexpr` approach](https://github.com/bitcoin/bitcoin/pull/33600#discussion_r2427048878), but either approach is acceptable to me.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33600#pullrequestreview-3332643263",
      "submitted_at": "2025-10-13T18:44:13Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33600"
    },
    {
      "event": "reviewed",
      "id": 3327936385,
      "node_id": "PRR_kwDOABII587GXEeB",
      "url": null,
      "actor": null,
      "commit_id": "faa9d10c84bc6b465cbca266468990cc716b4300",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-10-13T20:57:37Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33600#pullrequestreview-3327936385",
      "submitted_at": "2025-10-13T20:57:37Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33600"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2423373072",
      "pull_request_review_id": 3327936385,
      "id": 2423373072,
      "node_id": "PRRC_kwDOABII586Qcb0Q",
      "diff_hunk": "@@ -50,7 +50,7 @@ typedef std::vector<unsigned char> valtype;\n static CFeeRate g_dust{DUST_RELAY_TX_FEE};\n static bool g_bare_multi{DEFAULT_PERMIT_BAREMULTISIG};\n \n-static const std::map<std::string, script_verify_flag_name>& mapFlagNames = g_verify_flag_names;\n+static const std::map<std::string, script_verify_flag_name>& mapFlagNames = ScriptFlagNamesToEnum();",
      "path": "src/test/transaction_tests.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "faa9d10c84bc6b465cbca266468990cc716b4300",
      "original_commit_id": "faa9d10c84bc6b465cbca266468990cc716b4300",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`static const auto& mFN = SFNTE();` ?",
      "created_at": "2025-10-12T07:06:54Z",
      "updated_at": "2025-10-13T20:57:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33600#discussion_r2423373072",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2423373072"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 53,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2427048878",
      "pull_request_review_id": 3332643263,
      "id": 2427048878,
      "node_id": "PRRC_kwDOABII586QqdOu",
      "diff_hunk": "@@ -2163,31 +2163,35 @@ size_t CountWitnessSigOps(const CScript& scriptSig, const CScript& scriptPubKey,\n     return 0;\n }\n \n+const std::map<std::string, script_verify_flag_name>& ScriptFlagNamesToEnum()\n+{\n #define FLAG_NAME(flag) {std::string(#flag), SCRIPT_VERIFY_##flag}\n-const std::map<std::string, script_verify_flag_name> g_verify_flag_names{\n-    FLAG_NAME(P2SH),\n-    FLAG_NAME(STRICTENC),\n-    FLAG_NAME(DERSIG),\n-    FLAG_NAME(LOW_S),\n-    FLAG_NAME(SIGPUSHONLY),\n-    FLAG_NAME(MINIMALDATA),\n-    FLAG_NAME(NULLDUMMY),\n-    FLAG_NAME(DISCOURAGE_UPGRADABLE_NOPS),\n-    FLAG_NAME(CLEANSTACK),\n-    FLAG_NAME(MINIMALIF),\n-    FLAG_NAME(NULLFAIL),\n-    FLAG_NAME(CHECKLOCKTIMEVERIFY),\n-    FLAG_NAME(CHECKSEQUENCEVERIFY),\n-    FLAG_NAME(WITNESS),\n-    FLAG_NAME(DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM),\n-    FLAG_NAME(WITNESS_PUBKEYTYPE),\n-    FLAG_NAME(CONST_SCRIPTCODE),\n-    FLAG_NAME(TAPROOT),\n-    FLAG_NAME(DISCOURAGE_UPGRADABLE_PUBKEYTYPE),\n-    FLAG_NAME(DISCOURAGE_OP_SUCCESS),\n-    FLAG_NAME(DISCOURAGE_UPGRADABLE_TAPROOT_VERSION),\n-};\n+    static const std::map<std::string, script_verify_flag_name> g_names_to_enum{\n+        FLAG_NAME(P2SH),",
      "path": "src/script/interpreter.cpp",
      "position": 31,
      "original_position": 31,
      "commit_id": "faa9d10c84bc6b465cbca266468990cc716b4300",
      "original_commit_id": "faa9d10c84bc6b465cbca266468990cc716b4300",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "An alternative approach would be to use a `constexpr` array and make the whole thing compile-time? As a nice benefit, removes the `FLAG_NAME` macro which imo doesn't simplify things enough to be worth it.\r\n\r\n<details>\r\n<summary>git diff on faa9d10c84</summary>\r\n\r\n```diff\r\ndiff --git a/src/script/interpreter.cpp b/src/script/interpreter.cpp\r\nindex abd99fc365..731c0a070f 100644\r\n--- a/src/script/interpreter.cpp\r\n+++ b/src/script/interpreter.cpp\r\n@@ -2163,36 +2163,6 @@ size_t CountWitnessSigOps(const CScript& scriptSig, const CScript& scriptPubKey,\r\n     return 0;\r\n }\r\n \r\n-const std::map<std::string, script_verify_flag_name>& ScriptFlagNamesToEnum()\r\n-{\r\n-#define FLAG_NAME(flag) {std::string(#flag), SCRIPT_VERIFY_##flag}\r\n-    static const std::map<std::string, script_verify_flag_name> g_names_to_enum{\r\n-        FLAG_NAME(P2SH),\r\n-        FLAG_NAME(STRICTENC),\r\n-        FLAG_NAME(DERSIG),\r\n-        FLAG_NAME(LOW_S),\r\n-        FLAG_NAME(SIGPUSHONLY),\r\n-        FLAG_NAME(MINIMALDATA),\r\n-        FLAG_NAME(NULLDUMMY),\r\n-        FLAG_NAME(DISCOURAGE_UPGRADABLE_NOPS),\r\n-        FLAG_NAME(CLEANSTACK),\r\n-        FLAG_NAME(MINIMALIF),\r\n-        FLAG_NAME(NULLFAIL),\r\n-        FLAG_NAME(CHECKLOCKTIMEVERIFY),\r\n-        FLAG_NAME(CHECKSEQUENCEVERIFY),\r\n-        FLAG_NAME(WITNESS),\r\n-        FLAG_NAME(DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM),\r\n-        FLAG_NAME(WITNESS_PUBKEYTYPE),\r\n-        FLAG_NAME(CONST_SCRIPTCODE),\r\n-        FLAG_NAME(TAPROOT),\r\n-        FLAG_NAME(DISCOURAGE_UPGRADABLE_PUBKEYTYPE),\r\n-        FLAG_NAME(DISCOURAGE_OP_SUCCESS),\r\n-        FLAG_NAME(DISCOURAGE_UPGRADABLE_TAPROOT_VERSION),\r\n-    };\r\n-#undef FLAG_NAME\r\n-    return g_names_to_enum;\r\n-}\r\n-\r\n std::vector<std::string> GetScriptFlagNames(script_verify_flags flags)\r\n {\r\n     std::vector<std::string> res;\r\n@@ -2200,9 +2170,9 @@ std::vector<std::string> GetScriptFlagNames(script_verify_flags flags)\r\n         return res;\r\n     }\r\n     script_verify_flags leftover = flags;\r\n-    for (const auto& [name, flag] : ScriptFlagNamesToEnum()) {\r\n+    for (const auto& [name, flag] : SCRIPT_FLAG_NAMES) {\r\n         if ((flags & flag) != 0) {\r\n-            res.push_back(name);\r\n+            res.emplace_back(name);\r\n             leftover &= ~flag;\r\n         }\r\n     }\r\ndiff --git a/src/script/interpreter.h b/src/script/interpreter.h\r\nindex 7f8a1f7a41..04611bc5d6 100644\r\n--- a/src/script/interpreter.h\r\n+++ b/src/script/interpreter.h\r\n@@ -381,7 +381,29 @@ size_t CountWitnessSigOps(const CScript& scriptSig, const CScript& scriptPubKey,\r\n \r\n int FindAndDelete(CScript& script, const CScript& b);\r\n \r\n-const std::map<std::string, script_verify_flag_name>& ScriptFlagNamesToEnum();\r\n+inline constexpr std::array SCRIPT_FLAG_NAMES{std::to_array<std::pair<std::string_view, script_verify_flag_name>>({\r\n+    {\"CHECKLOCKTIMEVERIFY\", SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY},\r\n+    {\"CHECKSEQUENCEVERIFY\", SCRIPT_VERIFY_CHECKSEQUENCEVERIFY},\r\n+    {\"CLEANSTACK\", SCRIPT_VERIFY_CLEANSTACK},\r\n+    {\"CONST_SCRIPTCODE\", SCRIPT_VERIFY_CONST_SCRIPTCODE},\r\n+    {\"DERSIG\", SCRIPT_VERIFY_DERSIG},\r\n+    {\"DISCOURAGE_OP_SUCCESS\", SCRIPT_VERIFY_DISCOURAGE_OP_SUCCESS},\r\n+    {\"DISCOURAGE_UPGRADABLE_NOPS\", SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS},\r\n+    {\"DISCOURAGE_UPGRADABLE_PUBKEYTYPE\", SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_PUBKEYTYPE},\r\n+    {\"DISCOURAGE_UPGRADABLE_TAPROOT_VERSION\", SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_TAPROOT_VERSION},\r\n+    {\"DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM\", SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM},\r\n+    {\"LOW_S\", SCRIPT_VERIFY_LOW_S},\r\n+    {\"MINIMALDATA\", SCRIPT_VERIFY_MINIMALDATA},\r\n+    {\"MINIMALIF\", SCRIPT_VERIFY_MINIMALIF},\r\n+    {\"NULLDUMMY\", SCRIPT_VERIFY_NULLDUMMY},\r\n+    {\"NULLFAIL\", SCRIPT_VERIFY_NULLFAIL},\r\n+    {\"P2SH\", SCRIPT_VERIFY_P2SH},\r\n+    {\"SIGPUSHONLY\", SCRIPT_VERIFY_SIGPUSHONLY},\r\n+    {\"STRICTENC\", SCRIPT_VERIFY_STRICTENC},\r\n+    {\"TAPROOT\", SCRIPT_VERIFY_TAPROOT},\r\n+    {\"WITNESS\", SCRIPT_VERIFY_WITNESS},\r\n+    {\"WITNESS_PUBKEYTYPE\", SCRIPT_VERIFY_WITNESS_PUBKEYTYPE},\r\n+})};\r\n \r\n std::vector<std::string> GetScriptFlagNames(script_verify_flags flags);\r\n \r\ndiff --git a/src/test/transaction_tests.cpp b/src/test/transaction_tests.cpp\r\nindex 0ab9fbb479..e234153825 100644\r\n--- a/src/test/transaction_tests.cpp\r\n+++ b/src/test/transaction_tests.cpp\r\n@@ -50,7 +50,6 @@ typedef std::vector<unsigned char> valtype;\r\n static CFeeRate g_dust{DUST_RELAY_TX_FEE};\r\n static bool g_bare_multi{DEFAULT_PERMIT_BAREMULTISIG};\r\n \r\n-static const std::map<std::string, script_verify_flag_name>& mapFlagNames = ScriptFlagNamesToEnum();\r\n \r\n script_verify_flags ParseScriptFlags(std::string strFlags)\r\n {\r\n@@ -60,20 +59,21 @@ script_verify_flags ParseScriptFlags(std::string strFlags)\r\n     std::vector<std::string> words = SplitString(strFlags, ',');\r\n     for (const std::string& word : words)\r\n     {\r\n-        if (!mapFlagNames.count(word)) {\r\n+        auto it = std::ranges::find(SCRIPT_FLAG_NAMES, word, &decltype(SCRIPT_FLAG_NAMES)::value_type::first);\r\n+        if (it == SCRIPT_FLAG_NAMES.end()) {\r\n             BOOST_ERROR(\"Bad test: unknown verification flag '\" << word << \"'\");\r\n             continue;\r\n         }\r\n-        flags |= mapFlagNames.at(word);\r\n+        flags |= it->second;\r\n     }\r\n     return flags;\r\n }\r\n \r\n-// Check that all flags in STANDARD_SCRIPT_VERIFY_FLAGS are present in mapFlagNames.\r\n-bool CheckMapFlagNames()\r\n+// Check that all flags in STANDARD_SCRIPT_VERIFY_FLAGS are present in SCRIPT_FLAG_NAMES.\r\n+bool CheckScriptFlagNames()\r\n {\r\n     script_verify_flags standard_flags_missing{STANDARD_SCRIPT_VERIFY_FLAGS};\r\n-    for (const auto& pair : mapFlagNames) {\r\n+    for (const auto& pair : SCRIPT_FLAG_NAMES) {\r\n         standard_flags_missing &= ~(pair.second);\r\n     }\r\n     return standard_flags_missing == 0;\r\n@@ -142,11 +142,11 @@ script_verify_flags FillFlags(script_verify_flags flags)\r\n // Exclude each possible script verify flag from flags. Returns a set of these flag combinations\r\n // that are valid and without duplicates. For example: if flags=1111 and the 4 possible flags are\r\n // 0001, 0010, 0100, and 1000, this should return the set {0111, 1011, 1101, 1110}.\r\n-// Assumes that mapFlagNames contains all script verify flags.\r\n+// Assumes that SCRIPT_FLAG_NAMES contains all script verify flags.\r\n std::set<script_verify_flags> ExcludeIndividualFlags(script_verify_flags flags)\r\n {\r\n     std::set<script_verify_flags> flags_combos;\r\n-    for (const auto& pair : mapFlagNames) {\r\n+    for (const auto& pair : SCRIPT_FLAG_NAMES) {\r\n         script_verify_flags flags_excluding_one = TrimFlags(flags & ~(pair.second));\r\n         if (flags != flags_excluding_one) {\r\n             flags_combos.insert(flags_excluding_one);\r\n@@ -159,7 +159,7 @@ BOOST_FIXTURE_TEST_SUITE(transaction_tests, BasicTestingSetup)\r\n \r\n BOOST_AUTO_TEST_CASE(tx_valid)\r\n {\r\n-    BOOST_CHECK_MESSAGE(CheckMapFlagNames(), \"mapFlagNames is missing a script verification flag\");\r\n+    BOOST_CHECK_MESSAGE(CheckScriptFlagNames(), \"SCRIPT_FLAG_NAMES is missing a script verification flag\");\r\n     // Read tests from test/data/tx_valid.json\r\n     UniValue tests = read_json(json_tests::tx_valid);\r\n \r\n@@ -223,7 +223,7 @@ BOOST_AUTO_TEST_CASE(tx_valid)\r\n                                 \"Tx unexpectedly failed: \" << strTest);\r\n \r\n             // Backwards compatibility of script verification flags: Removing any flag(s) should not invalidate a valid transaction\r\n-            for (const auto& [name, flag] : mapFlagNames) {\r\n+            for (const auto& [name, flag] : SCRIPT_FLAG_NAMES) {\r\n                 // Removing individual flags\r\n                 script_verify_flags flags = TrimFlags(~(verify_flags | flag));\r\n                 if (!CheckTxScripts(tx, mapprevOutScriptPubKeys, mapprevOutValues, flags, txdata, strTest, /*expect_valid=*/true)) {\r\n@@ -314,7 +314,7 @@ BOOST_AUTO_TEST_CASE(tx_invalid)\r\n                                 \"Tx unexpectedly passed: \" << strTest);\r\n \r\n             // Backwards compatibility of script verification flags: Adding any flag(s) should not validate an invalid transaction\r\n-            for (const auto& [name, flag] : mapFlagNames) {\r\n+            for (const auto& [name, flag] : SCRIPT_FLAG_NAMES) {\r\n                 script_verify_flags flags = FillFlags(verify_flags | flag);\r\n                 // Adding individual flags\r\n                 if (!CheckTxScripts(tx, mapprevOutScriptPubKeys, mapprevOutValues, flags, txdata, strTest, /*expect_valid=*/false)) {\r\n\r\n```\r\n</details>",
      "created_at": "2025-10-13T18:32:40Z",
      "updated_at": "2025-10-13T18:44:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33600#discussion_r2427048878",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2427048878"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2170,
      "original_line": 2170,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2427284052",
      "pull_request_review_id": 3327936385,
      "id": 2427284052,
      "node_id": "PRRC_kwDOABII586QrWpU",
      "diff_hunk": "@@ -2163,31 +2163,35 @@ size_t CountWitnessSigOps(const CScript& scriptSig, const CScript& scriptPubKey,\n     return 0;\n }\n \n+const std::map<std::string, script_verify_flag_name>& ScriptFlagNamesToEnum()\n+{\n #define FLAG_NAME(flag) {std::string(#flag), SCRIPT_VERIFY_##flag}\n-const std::map<std::string, script_verify_flag_name> g_verify_flag_names{\n-    FLAG_NAME(P2SH),\n-    FLAG_NAME(STRICTENC),\n-    FLAG_NAME(DERSIG),\n-    FLAG_NAME(LOW_S),\n-    FLAG_NAME(SIGPUSHONLY),\n-    FLAG_NAME(MINIMALDATA),\n-    FLAG_NAME(NULLDUMMY),\n-    FLAG_NAME(DISCOURAGE_UPGRADABLE_NOPS),\n-    FLAG_NAME(CLEANSTACK),\n-    FLAG_NAME(MINIMALIF),\n-    FLAG_NAME(NULLFAIL),\n-    FLAG_NAME(CHECKLOCKTIMEVERIFY),\n-    FLAG_NAME(CHECKSEQUENCEVERIFY),\n-    FLAG_NAME(WITNESS),\n-    FLAG_NAME(DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM),\n-    FLAG_NAME(WITNESS_PUBKEYTYPE),\n-    FLAG_NAME(CONST_SCRIPTCODE),\n-    FLAG_NAME(TAPROOT),\n-    FLAG_NAME(DISCOURAGE_UPGRADABLE_PUBKEYTYPE),\n-    FLAG_NAME(DISCOURAGE_OP_SUCCESS),\n-    FLAG_NAME(DISCOURAGE_UPGRADABLE_TAPROOT_VERSION),\n-};\n+    static const std::map<std::string, script_verify_flag_name> g_names_to_enum{\n+        FLAG_NAME(P2SH),",
      "path": "src/script/interpreter.cpp",
      "position": 31,
      "original_position": 31,
      "commit_id": "faa9d10c84bc6b465cbca266468990cc716b4300",
      "original_commit_id": "faa9d10c84bc6b465cbca266468990cc716b4300",
      "in_reply_to_id": 2427048878,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The value of the `FLAG_NAME` macro is that it makes any typos in the strings that would cause a mismatch with the enum names an immediate compile time error. It also makes it easier to type and easier to review. Massive -1 on dropping it. C++26 reflection would be better, when it's available, of course.",
      "created_at": "2025-10-13T20:35:20Z",
      "updated_at": "2025-10-13T20:57:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33600#discussion_r2427284052",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2427284052"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2170,
      "original_line": 2170,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2427318037",
      "pull_request_review_id": 3327936385,
      "id": 2427318037,
      "node_id": "PRRC_kwDOABII586Qre8V",
      "diff_hunk": "@@ -2163,31 +2163,35 @@ size_t CountWitnessSigOps(const CScript& scriptSig, const CScript& scriptPubKey,\n     return 0;\n }\n \n+const std::map<std::string, script_verify_flag_name>& ScriptFlagNamesToEnum()\n+{\n #define FLAG_NAME(flag) {std::string(#flag), SCRIPT_VERIFY_##flag}\n-const std::map<std::string, script_verify_flag_name> g_verify_flag_names{\n-    FLAG_NAME(P2SH),\n-    FLAG_NAME(STRICTENC),\n-    FLAG_NAME(DERSIG),\n-    FLAG_NAME(LOW_S),\n-    FLAG_NAME(SIGPUSHONLY),\n-    FLAG_NAME(MINIMALDATA),\n-    FLAG_NAME(NULLDUMMY),\n-    FLAG_NAME(DISCOURAGE_UPGRADABLE_NOPS),\n-    FLAG_NAME(CLEANSTACK),\n-    FLAG_NAME(MINIMALIF),\n-    FLAG_NAME(NULLFAIL),\n-    FLAG_NAME(CHECKLOCKTIMEVERIFY),\n-    FLAG_NAME(CHECKSEQUENCEVERIFY),\n-    FLAG_NAME(WITNESS),\n-    FLAG_NAME(DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM),\n-    FLAG_NAME(WITNESS_PUBKEYTYPE),\n-    FLAG_NAME(CONST_SCRIPTCODE),\n-    FLAG_NAME(TAPROOT),\n-    FLAG_NAME(DISCOURAGE_UPGRADABLE_PUBKEYTYPE),\n-    FLAG_NAME(DISCOURAGE_OP_SUCCESS),\n-    FLAG_NAME(DISCOURAGE_UPGRADABLE_TAPROOT_VERSION),\n-};\n+    static const std::map<std::string, script_verify_flag_name> g_names_to_enum{\n+        FLAG_NAME(P2SH),",
      "path": "src/script/interpreter.cpp",
      "position": 31,
      "original_position": 31,
      "commit_id": "faa9d10c84bc6b465cbca266468990cc716b4300",
      "original_commit_id": "faa9d10c84bc6b465cbca266468990cc716b4300",
      "in_reply_to_id": 2427048878,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I had a look at this approach too. With C++20, I believe you can ensure the array is sorted at compile time with:\r\n\r\n```c++\r\ntemplate<typename V, size_t N>\r\nconsteval auto SortedArray(const std::array<V,N>& pairs)\r\n{\r\n    std::array<V,N> result = pairs;\r\n    std::sort(result.begin(), result.end());\r\n    return result;\r\n}\r\n#define FLAG_NAME(flag) std::pair<std::string_view, script_verify_flag_name>{#flag, SCRIPT_VERIFY_##flag}\r\nconstexpr auto g_verify_flag_names = SortedArray(std::array{\r\n    FLAG_NAME(P2SH),\r\n    ...\r\n});\r\n```\r\n\r\nwhich lets the compiler avoid one source of bugs. `static_assert(std::ranges::is_sorted(g_verify_flag_names))` might be equally effective though. `std::ranges:binary_search` then lets you do lookups essentially the same way `map` does, though I suppose with only up to ~60 entries, that doesn't matter that much.\r\n\r\nHaving the initialization be private to interpreter.cpp and exposing functions that (a) converts flags to a string, (b) looks up a flag from a string, (c) return a span over the array seem like it would cover all the uses for the info.",
      "created_at": "2025-10-13T20:56:39Z",
      "updated_at": "2025-10-13T20:57:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33600#discussion_r2427318037",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2427318037"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2170,
      "original_line": 2170,
      "side": "RIGHT"
    }
  ]
}