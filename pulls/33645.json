{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33645",
    "id": 2925353202,
    "node_id": "PR_kwDOABII586uXVjy",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/33645",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/33645.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/33645.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33645",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33645/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33645/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33645/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/8bde358a6b116181d143da852f6821b5666ba970",
    "number": 33645,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "refactor: optimize: avoid allocations in script & policy verification",
    "user": {
      "login": "Raimo33",
      "id": 104778891,
      "node_id": "U_kgDOBj7Miw",
      "avatar_url": "https://avatars.githubusercontent.com/u/104778891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Raimo33",
      "html_url": "https://github.com/Raimo33",
      "followers_url": "https://api.github.com/users/Raimo33/followers",
      "following_url": "https://api.github.com/users/Raimo33/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/Raimo33/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/Raimo33/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/Raimo33/subscriptions",
      "organizations_url": "https://api.github.com/users/Raimo33/orgs",
      "repos_url": "https://api.github.com/users/Raimo33/repos",
      "events_url": "https://api.github.com/users/Raimo33/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/Raimo33/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "## Summary\r\n\r\nCurrently, some policy and script related methods are inefficiently allocating/reallocating containers where it is completely unnecessary. \r\n\r\nThis PR aims at optimizing policy verifications by reducing redundant heap allocations without losing performance even in worst case scenarios, effectively reducing the overall memory footprint.\r\n\r\n## Details\r\n\r\n- 62b04f556b6ff265b43df3596a29dc40c993bf47 modernizes loop iteration, making it more compiler friendly\r\n- 4dc7608669bc11aa4c3abc193af1f38aef82bc82 moves container outside the loop, avoiding needless `std::vector<>` allocations\r\n\r\n[...]\r\n\r\n## Benchmarks\r\n\r\n```shell\r\ntaskset -c 1 build/bin/bench_bitcoin --filter='CCoinsCaching' --min-time=30000\r\n```\r\n\r\nbefore:\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|              669.62 |        1,493,392.03 |    0.0% |     33.00 | `CCoinsCaching`\r\n\r\nafter:\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|              580.19 |        1,723,586.69 |    0.1% |     32.97 | `CCoinsCaching`\r\n\r\ncompared to master:\r\n\r\n- `CCoinsCaching` **+15%** improvement",
    "labels": [
      {
        "id": 135961,
        "node_id": "MDU6TGFiZWwxMzU5NjE=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
        "name": "Refactoring",
        "color": "E6F6D6",
        "default": false
      }
    ],
    "created_at": "2025-10-17T18:43:21Z",
    "updated_at": "2025-10-24T08:55:10Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "4fdf9cc15ad26da3b18d946c980b041219bb935b",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "Raimo33:optimize-tx-policy-verification",
      "ref": "optimize-tx-policy-verification",
      "sha": "8bde358a6b116181d143da852f6821b5666ba970",
      "user": {
        "login": "Raimo33",
        "id": 104778891,
        "node_id": "U_kgDOBj7Miw",
        "avatar_url": "https://avatars.githubusercontent.com/u/104778891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Raimo33",
        "html_url": "https://github.com/Raimo33",
        "followers_url": "https://api.github.com/users/Raimo33/followers",
        "following_url": "https://api.github.com/users/Raimo33/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Raimo33/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Raimo33/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Raimo33/subscriptions",
        "organizations_url": "https://api.github.com/users/Raimo33/orgs",
        "repos_url": "https://api.github.com/users/Raimo33/repos",
        "events_url": "https://api.github.com/users/Raimo33/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Raimo33/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1046546111,
        "node_id": "R_kgDOPmEGvw",
        "name": "bitcoinknots",
        "full_name": "Raimo33/bitcoinknots",
        "owner": {
          "login": "Raimo33",
          "id": 104778891,
          "node_id": "U_kgDOBj7Miw",
          "avatar_url": "https://avatars.githubusercontent.com/u/104778891?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Raimo33",
          "html_url": "https://github.com/Raimo33",
          "followers_url": "https://api.github.com/users/Raimo33/followers",
          "following_url": "https://api.github.com/users/Raimo33/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/Raimo33/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/Raimo33/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/Raimo33/subscriptions",
          "organizations_url": "https://api.github.com/users/Raimo33/orgs",
          "repos_url": "https://api.github.com/users/Raimo33/repos",
          "events_url": "https://api.github.com/users/Raimo33/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/Raimo33/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/Raimo33/bitcoinknots",
        "description": "Bitcoin Knots enhanced Bitcoin node/wallet software",
        "fork": true,
        "url": "https://api.github.com/repos/Raimo33/bitcoinknots",
        "archive_url": "https://api.github.com/repos/Raimo33/bitcoinknots/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/Raimo33/bitcoinknots/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/Raimo33/bitcoinknots/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/Raimo33/bitcoinknots/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/Raimo33/bitcoinknots/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/Raimo33/bitcoinknots/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/Raimo33/bitcoinknots/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/Raimo33/bitcoinknots/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/Raimo33/bitcoinknots/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/Raimo33/bitcoinknots/contributors",
        "deployments_url": "https://api.github.com/repos/Raimo33/bitcoinknots/deployments",
        "downloads_url": "https://api.github.com/repos/Raimo33/bitcoinknots/downloads",
        "events_url": "https://api.github.com/repos/Raimo33/bitcoinknots/events",
        "forks_url": "https://api.github.com/repos/Raimo33/bitcoinknots/forks",
        "git_commits_url": "https://api.github.com/repos/Raimo33/bitcoinknots/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/Raimo33/bitcoinknots/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/Raimo33/bitcoinknots/git/tags%7B/sha%7D",
        "git_url": "git://github.com/Raimo33/bitcoinknots.git",
        "issue_comment_url": "https://api.github.com/repos/Raimo33/bitcoinknots/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/Raimo33/bitcoinknots/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/Raimo33/bitcoinknots/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/Raimo33/bitcoinknots/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/Raimo33/bitcoinknots/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/Raimo33/bitcoinknots/languages",
        "merges_url": "https://api.github.com/repos/Raimo33/bitcoinknots/merges",
        "milestones_url": "https://api.github.com/repos/Raimo33/bitcoinknots/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/Raimo33/bitcoinknots/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/Raimo33/bitcoinknots/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/Raimo33/bitcoinknots/releases%7B/id%7D",
        "ssh_url": "git@github.com:Raimo33/bitcoinknots.git",
        "stargazers_url": "https://api.github.com/repos/Raimo33/bitcoinknots/stargazers",
        "statuses_url": "https://api.github.com/repos/Raimo33/bitcoinknots/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/Raimo33/bitcoinknots/subscribers",
        "subscription_url": "https://api.github.com/repos/Raimo33/bitcoinknots/subscription",
        "tags_url": "https://api.github.com/repos/Raimo33/bitcoinknots/tags",
        "teams_url": "https://api.github.com/repos/Raimo33/bitcoinknots/teams",
        "trees_url": "https://api.github.com/repos/Raimo33/bitcoinknots/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/Raimo33/bitcoinknots.git",
        "hooks_url": "https://api.github.com/repos/Raimo33/bitcoinknots/hooks",
        "svn_url": "https://github.com/Raimo33/bitcoinknots",
        "homepage": "",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 256357,
        "default_branch": "29.x-knots",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-10-24T08:55:09Z",
        "created_at": "2025-08-28T21:05:09Z",
        "updated_at": "2025-09-07T02:35:56Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "f6ba97cea1d36683fa8c1ebde78af3772d00ec12",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 38073,
        "stargazers_count": 86383,
        "watchers_count": 86383,
        "size": 295166,
        "default_branch": "master",
        "open_issues_count": 746,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-10-24T08:05:39Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-10-24T08:05:47Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33645"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": true,
    "additions": 48,
    "deletions": 44,
    "changed_files": 11,
    "commits": 7,
    "review_comments": 2,
    "comments": 17
  },
  "events": [
    {
      "event": "labeled",
      "id": 20350549063,
      "node_id": "LE_lADOABII587SPCJozwAAAAS8_LxH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20350549063",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-17T18:43:24Z",
      "label": {
        "name": "Refactoring",
        "color": "E6F6D6"
      }
    },
    {
      "event": "commented",
      "id": 3416688733,
      "node_id": "IC_kwDOABII587Lpohd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3416688733",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-17T18:43:27Z",
      "updated_at": "2025-10-23T19:55:48Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/33645.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [cedwies](https://github.com/bitcoin/bitcoin/pull/33645#pullrequestreview-3362906716) |\n| Approach NACK | [l0rinc](https://github.com/bitcoin/bitcoin/pull/33645#issuecomment-3438881388) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#29060](https://github.com/bitcoin/bitcoin/pull/29060) (Policy: Report debug message why inputs are non standard by ismaelsadeeq)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33645#issuecomment-3416688733",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33645"
    },
    {
      "event": "subscribed",
      "id": 20359743033,
      "node_id": "SE_lADOABII587SPCJozwAAAAS9iQY5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20359743033",
      "actor": {
        "login": "nervana21",
        "id": 205626986,
        "node_id": "U_kgDODEGeag",
        "avatar_url": "https://avatars.githubusercontent.com/u/205626986?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nervana21",
        "html_url": "https://github.com/nervana21",
        "followers_url": "https://api.github.com/users/nervana21/followers",
        "following_url": "https://api.github.com/users/nervana21/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nervana21/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nervana21/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nervana21/subscriptions",
        "organizations_url": "https://api.github.com/users/nervana21/orgs",
        "repos_url": "https://api.github.com/users/nervana21/repos",
        "events_url": "https://api.github.com/users/nervana21/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nervana21/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-18T12:01:23Z"
    },
    {
      "event": "reviewed",
      "id": 3362906716,
      "node_id": "PRR_kwDOABII587IceJc",
      "url": null,
      "actor": null,
      "commit_id": "5d4b008728e13e923cd9d9315620b486c92b225b",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-10-21T23:03:41Z",
      "author_association": "NONE",
      "body": "Concept ACK\n\n- reusing vector capacity across loop iterations is makes sense\n- no functional or policy logic changes introduced\n- Code refactoring (range-based loops, variable renames) improves readability\n\nHere is my bench on MacOS M2 MAX:\n\n**Before:**\n|               ns/op |                op/s |    err% |     total | benchmark\n|--------------------:|--------------------:|--------:|----------:|:----------\n|          134,805.18 |            7,418.11 |    0.7% |      3.30 | `AssembleBlock`\n|              338.44 |        2,954,694.93 |    0.5% |      3.29 | `CCoinsCaching`\n\n**After:**\n|               ns/op |                op/s |    err% |     total | benchmark\n|--------------------:|--------------------:|--------:|----------:|:----------\n|          134,100.45 |            7,457.10 |    0.1% |      3.29 | `AssembleBlock`\n|              286.00 |        3,496,467.59 |    0.3% |      3.29 | `CCoinsCaching`\n\nNot so sure about the `Assemble Block` bench though. Doesn't it measure block assembly  **_after_** admission, therefore not timing the policy checks you changed?",
      "user": {
        "login": "cedwies",
        "id": 141683552,
        "node_id": "U_kgDOCHHrYA",
        "avatar_url": "https://avatars.githubusercontent.com/u/141683552?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cedwies",
        "html_url": "https://github.com/cedwies",
        "followers_url": "https://api.github.com/users/cedwies/followers",
        "following_url": "https://api.github.com/users/cedwies/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cedwies/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cedwies/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cedwies/subscriptions",
        "organizations_url": "https://api.github.com/users/cedwies/orgs",
        "repos_url": "https://api.github.com/users/cedwies/repos",
        "events_url": "https://api.github.com/users/cedwies/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cedwies/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33645#pullrequestreview-3362906716",
      "submitted_at": "2025-10-21T23:03:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33645"
    },
    {
      "event": "commented",
      "id": 3430818448,
      "node_id": "IC_kwDOABII587MfiKQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3430818448",
      "actor": {
        "login": "Raimo33",
        "id": 104778891,
        "node_id": "U_kgDOBj7Miw",
        "avatar_url": "https://avatars.githubusercontent.com/u/104778891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Raimo33",
        "html_url": "https://github.com/Raimo33",
        "followers_url": "https://api.github.com/users/Raimo33/followers",
        "following_url": "https://api.github.com/users/Raimo33/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Raimo33/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Raimo33/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Raimo33/subscriptions",
        "organizations_url": "https://api.github.com/users/Raimo33/orgs",
        "repos_url": "https://api.github.com/users/Raimo33/repos",
        "events_url": "https://api.github.com/users/Raimo33/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Raimo33/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-22T07:25:01Z",
      "updated_at": "2025-10-22T07:25:01Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Not so sure about the `Assemble Block` bench though. Doesn't it measure block assembly  **_after_** admission, therefore not timing the policy checks you changed?\n\nThanks for the review & benchmarks. I'm positive about the fact that the `AssembleBlock` bench calls some of the impacted functions. I've not delved into details, and I think it's irrelevant considering performance is the same.\n\n",
      "user": {
        "login": "Raimo33",
        "id": 104778891,
        "node_id": "U_kgDOBj7Miw",
        "avatar_url": "https://avatars.githubusercontent.com/u/104778891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Raimo33",
        "html_url": "https://github.com/Raimo33",
        "followers_url": "https://api.github.com/users/Raimo33/followers",
        "following_url": "https://api.github.com/users/Raimo33/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Raimo33/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Raimo33/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Raimo33/subscriptions",
        "organizations_url": "https://api.github.com/users/Raimo33/orgs",
        "repos_url": "https://api.github.com/users/Raimo33/repos",
        "events_url": "https://api.github.com/users/Raimo33/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Raimo33/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33645#issuecomment-3430818448",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33645"
    },
    {
      "event": "commented",
      "id": 3432095621,
      "node_id": "IC_kwDOABII587MkZ-F",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3432095621",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-22T12:22:22Z",
      "updated_at": "2025-10-22T12:22:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "I don't really see any speedup for `AssembleBlock`\r\n<img width=\"679\" height=\"476\" alt=\"image\" src=\"https://github.com/user-attachments/assets/fc804b80-241b-446f-bfc1-28b222d3190e\" />\r\n\r\nChange: gcc=-0.71%, clang=-0.82%\r\n\r\n------\r\n\r\n`CCoinsCaching` does seem to be improved a bit\r\n<img width=\"664\" height=\"477\" alt=\"image\" src=\"https://github.com/user-attachments/assets/fc248746-1716-41b1-ae0c-ac08b6c3dbd5\" />\r\n\r\nChange: gcc=+18.87%, clang=+11.79%\r\n\r\n\r\n------\r\n\r\n\r\n<details>\r\n<summary>Benchmark</summary>\r\n\r\n```bash\r\n for compiler in gcc clang; do \\\r\n  if [ \"$compiler\" = \"gcc\" ]; then CC=gcc; CXX=g++; COMP_VER=$(gcc -dumpfullversion); \\\r\n  else CC=clang; CXX=clang++; COMP_VER=$(clang -dumpversion); fi && \\\r\n  echo \"> Compiler: $compiler $COMP_VER\" && \\\r\n  for commit in 64a7c7cbb975cb3c3f25a3f784779f32cd95ebaa aa4c5b81ce686a160a883394f00a38604d81ccdd 7ef44fe6876dcf69f043df82a944e36a8a787b16 5d4b008728e13e923cd9d9315620b486c92b225b; do \\\r\n    git fetch origin $commit >/dev/null 2>&1 && git checkout $commit >/dev/null 2>&1 && git log -1 --pretty='%h %s' && \\\r\n    rm -rf build && \\\r\n    cmake -B build -DBUILD_BENCH=ON -DENABLE_IPC=OFF -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_C_COMPILER=$CC -DCMAKE_CXX_COMPILER=$CXX >/dev/null 2>&1 && \\\r\n    cmake --build build -j$(nproc) >/dev/null 2>&1 && \\\r\n    for i in 1 2; do \\\r\n      build/bin/bench_bitcoin -filter='AssembleBlock|CCoinsCaching' -min-time=5000; \\\r\n    done; \\\r\n  done; \\\r\ndone\r\n```\r\n\r\n</details>\r\n\r\n<details>\r\n<summary>Measurements</summary>\r\n\r\n> Compiler: gcc 15.0.1\r\n\r\n64a7c7cbb9 Merge bitcoin/bitcoin#33558: ci: Use native platform for win-cross task\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|          332,700.15 |            3,005.71 |    0.1% |    2,892,252.71 |    1,193,396.57 |  2.424 |     262,758.41 |    0.4% |      5.31 | `AssembleBlock`\r\n|              613.60 |        1,629,733.71 |    0.1% |        5,790.00 |        2,204.34 |  2.627 |         819.00 |    0.1% |      5.50 | `CCoinsCaching`\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|          333,387.37 |            2,999.51 |    0.0% |    2,889,152.01 |    1,195,756.63 |  2.416 |     262,647.34 |    0.4% |      5.32 | `AssembleBlock`\r\n|              620.71 |        1,611,064.09 |    0.1% |        5,790.00 |        2,229.94 |  2.596 |         819.00 |    0.2% |      5.51 | `CCoinsCaching`\r\n\r\naa4c5b81ce refactor: use range-based iteration\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|          336,394.98 |            2,972.70 |    0.0% |    2,892,400.57 |    1,206,262.36 |  2.398 |     262,630.80 |    0.4% |      5.31 | `AssembleBlock`\r\n|              525.13 |        1,904,279.72 |    0.1% |        5,229.00 |        1,886.12 |  2.772 |         802.00 |    0.1% |      5.50 | `CCoinsCaching`\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|          336,470.91 |            2,972.03 |    0.1% |    2,887,727.08 |    1,206,756.91 |  2.393 |     262,840.00 |    0.4% |      5.21 | `AssembleBlock`\r\n|              605.07 |        1,652,703.31 |    0.0% |        5,759.00 |        2,173.77 |  2.649 |         816.00 |    0.1% |      5.48 | `CCoinsCaching`\r\n\r\n7ef44fe687 refactor: rename script stack\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|          332,237.42 |            3,009.90 |    0.0% |    2,891,082.62 |    1,191,956.55 |  2.425 |     262,820.66 |    0.4% |      5.31 | `AssembleBlock`\r\n|              525.33 |        1,903,566.06 |    0.1% |        5,229.00 |        1,887.29 |  2.771 |         802.00 |    0.1% |      5.50 | `CCoinsCaching`\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|          330,947.55 |            3,021.63 |    0.0% |    2,888,455.08 |    1,187,248.72 |  2.433 |     262,606.41 |    0.4% |      5.30 | `AssembleBlock`\r\n|              526.32 |        1,899,969.76 |    0.0% |        5,229.00 |        1,890.73 |  2.766 |         802.00 |    0.1% |      5.50 | `CCoinsCaching`\r\n\r\n5d4b008728 optimize: reuse containers across iterations\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|          334,038.19 |            2,993.67 |    0.0% |    2,894,146.80 |    1,198,114.94 |  2.416 |     262,962.33 |    0.5% |      5.31 | `AssembleBlock`\r\n|              562.38 |        1,778,156.15 |    0.1% |        5,412.00 |        2,019.23 |  2.680 |         736.00 |    0.0% |      5.49 | `CCoinsCaching`\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|          336,807.71 |            2,969.05 |    0.0% |    2,894,460.95 |    1,208,318.07 |  2.395 |     262,725.50 |    0.4% |      5.31 | `AssembleBlock`\r\n|              482.11 |        2,074,216.12 |    0.0% |        4,882.00 |        1,731.89 |  2.819 |         722.00 |    0.0% |      5.50 | `CCoinsCaching`\r\n\r\n> Compiler: clang 22.0.0\r\n\r\n64a7c7cbb9 Merge bitcoin/bitcoin#33558: ci: Use native platform for win-cross task\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|          316,532.30 |            3,159.24 |    0.0% |    2,799,107.72 |    1,135,483.03 |  2.465 |     252,868.15 |    0.4% |      5.29 | `AssembleBlock`\r\n|              482.62 |        2,072,038.85 |    0.2% |        4,715.00 |        1,733.69 |  2.720 |         688.00 |    0.2% |      5.51 | `CCoinsCaching`\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|          319,172.99 |            3,133.10 |    0.1% |    2,804,493.20 |    1,145,219.92 |  2.449 |     252,971.35 |    0.4% |      5.29 | `AssembleBlock`\r\n|              484.08 |        2,065,772.51 |    0.1% |        4,715.00 |        1,738.81 |  2.712 |         688.00 |    0.1% |      5.50 | `CCoinsCaching`\r\n\r\naa4c5b81ce refactor: use range-based iteration\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|          319,298.02 |            3,131.87 |    0.1% |    2,806,937.58 |    1,145,187.88 |  2.451 |     253,098.73 |    0.4% |      5.29 | `AssembleBlock`\r\n|              491.35 |        2,035,216.81 |    0.1% |        4,686.00 |        1,765.17 |  2.655 |         687.00 |    0.2% |      5.51 | `CCoinsCaching`\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|          319,413.24 |            3,130.74 |    0.1% |    2,798,169.36 |    1,145,659.16 |  2.442 |     252,777.51 |    0.4% |      5.29 | `AssembleBlock`\r\n|              496.25 |        2,015,105.84 |    0.0% |        4,686.00 |        1,782.54 |  2.629 |         687.00 |    0.2% |      5.50 | `CCoinsCaching`\r\n\r\n7ef44fe687 refactor: rename script stack\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|          319,993.93 |            3,125.06 |    0.1% |    2,801,660.61 |    1,147,280.13 |  2.442 |     252,912.30 |    0.4% |      5.30 | `AssembleBlock`\r\n|              489.84 |        2,041,475.07 |    0.1% |        4,686.00 |        1,759.79 |  2.663 |         687.00 |    0.2% |      5.49 | `CCoinsCaching`\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|          317,083.74 |            3,153.74 |    0.1% |    2,802,373.03 |    1,136,973.75 |  2.465 |     252,921.05 |    0.4% |      5.29 | `AssembleBlock`\r\n|              490.88 |        2,037,151.54 |    0.1% |        4,686.00 |        1,763.06 |  2.658 |         687.00 |    0.2% |      5.50 | `CCoinsCaching`\r\n\r\n5d4b008728 optimize: reuse containers across iterations\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|          321,831.90 |            3,107.21 |    0.1% |    2,804,969.78 |    1,154,021.10 |  2.431 |     252,995.03 |    0.4% |      5.30 | `AssembleBlock`\r\n|              432.01 |        2,314,757.74 |    0.0% |        4,301.00 |        1,551.96 |  2.771 |         608.00 |    0.0% |      5.41 | `CCoinsCaching`\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|          319,109.25 |            3,133.72 |    0.1% |    2,797,937.98 |    1,144,492.87 |  2.445 |     252,714.07 |    0.4% |      5.30 | `AssembleBlock`\r\n|              432.73 |        2,310,885.42 |    0.3% |        4,301.00 |        1,554.58 |  2.767 |         608.00 |    0.0% |      5.42 | `CCoinsCaching`\r\n\r\n</details>\r\n\r\n----\r\n\r\nBut the code seems more complicated than before - is there a way to retain the speedup without complicating the code (i.e. minimizing the diff)?",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33645#issuecomment-3432095621",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33645"
    },
    {
      "event": "commented",
      "id": 3432164685,
      "node_id": "IC_kwDOABII587Mkq1N",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3432164685",
      "actor": {
        "login": "cedwies",
        "id": 141683552,
        "node_id": "U_kgDOCHHrYA",
        "avatar_url": "https://avatars.githubusercontent.com/u/141683552?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cedwies",
        "html_url": "https://github.com/cedwies",
        "followers_url": "https://api.github.com/users/cedwies/followers",
        "following_url": "https://api.github.com/users/cedwies/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cedwies/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cedwies/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cedwies/subscriptions",
        "organizations_url": "https://api.github.com/users/cedwies/orgs",
        "repos_url": "https://api.github.com/users/cedwies/repos",
        "events_url": "https://api.github.com/users/cedwies/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cedwies/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-22T12:40:14Z",
      "updated_at": "2025-10-22T12:42:17Z",
      "author_association": "NONE",
      "body": "> > Not so sure about the `Assemble Block` bench though. Doesn't it measure block assembly  **_after_** admission, therefore not timing the policy checks you changed?\r\n> \r\n> Thanks for the review & benchmarks. I'm positive about the fact that the `AssembleBlock` bench calls some of the impacted functions. I've not delved into details, and I think it's irrelevant considering performance is the same.\r\n\r\nIt _does_ call code on the policy path, but only during setup, not during the timed region.\r\nIn `static void AssembleBlock(benchmark::Bench& bench)` in `src/bench/block_assemble.cpp`\r\n```cpp\r\n    bench.run([&] {\r\n        PrepareBlock(test_setup->m_node, options);\r\n    });\r\n```\r\nDon't want to be nitpicking here, but just want to point out that if a bench is presented as **evidence** of a performance claim (faster/slower/same), it should measure the code which was changed. Fine if we use it as a sanity-check, just wanted to mention that `AssembleBlock` is (AFAIK) expected to stay the same, since no timed code changes. On the other hand `CCoinsCaching` actually times `AreInputsStandard(...)`",
      "user": {
        "login": "cedwies",
        "id": 141683552,
        "node_id": "U_kgDOCHHrYA",
        "avatar_url": "https://avatars.githubusercontent.com/u/141683552?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cedwies",
        "html_url": "https://github.com/cedwies",
        "followers_url": "https://api.github.com/users/cedwies/followers",
        "following_url": "https://api.github.com/users/cedwies/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cedwies/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cedwies/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cedwies/subscriptions",
        "organizations_url": "https://api.github.com/users/cedwies/orgs",
        "repos_url": "https://api.github.com/users/cedwies/repos",
        "events_url": "https://api.github.com/users/cedwies/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cedwies/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33645#issuecomment-3432164685",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33645"
    },
    {
      "event": "commented",
      "id": 3432193066,
      "node_id": "IC_kwDOABII587Mkxwq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3432193066",
      "actor": {
        "login": "Raimo33",
        "id": 104778891,
        "node_id": "U_kgDOBj7Miw",
        "avatar_url": "https://avatars.githubusercontent.com/u/104778891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Raimo33",
        "html_url": "https://github.com/Raimo33",
        "followers_url": "https://api.github.com/users/Raimo33/followers",
        "following_url": "https://api.github.com/users/Raimo33/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Raimo33/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Raimo33/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Raimo33/subscriptions",
        "organizations_url": "https://api.github.com/users/Raimo33/orgs",
        "repos_url": "https://api.github.com/users/Raimo33/repos",
        "events_url": "https://api.github.com/users/Raimo33/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Raimo33/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-22T12:47:24Z",
      "updated_at": "2025-10-22T12:47:24Z",
      "author_association": "CONTRIBUTOR",
      "body": "@l0rinc @cedwies the bench is not presented as evidence. it is presented as a transparent way of saying performance hasn't degraded. the PR body clearly states that it remained the same. I included it for the sake of transparency.",
      "user": {
        "login": "Raimo33",
        "id": 104778891,
        "node_id": "U_kgDOBj7Miw",
        "avatar_url": "https://avatars.githubusercontent.com/u/104778891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Raimo33",
        "html_url": "https://github.com/Raimo33",
        "followers_url": "https://api.github.com/users/Raimo33/followers",
        "following_url": "https://api.github.com/users/Raimo33/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Raimo33/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Raimo33/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Raimo33/subscriptions",
        "organizations_url": "https://api.github.com/users/Raimo33/orgs",
        "repos_url": "https://api.github.com/users/Raimo33/repos",
        "events_url": "https://api.github.com/users/Raimo33/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Raimo33/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33645#issuecomment-3432193066",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33645"
    },
    {
      "event": "mentioned",
      "id": 20430450391,
      "node_id": "MEE_lADOABII587SPCJozwAAAATBv-7X",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20430450391",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-22T12:47:25Z"
    },
    {
      "event": "subscribed",
      "id": 20430450478,
      "node_id": "SE_lADOABII587SPCJozwAAAATBv-8u",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20430450478",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-22T12:47:25Z"
    },
    {
      "event": "mentioned",
      "id": 20430450524,
      "node_id": "MEE_lADOABII587SPCJozwAAAATBv-9c",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20430450524",
      "actor": {
        "login": "cedwies",
        "id": 141683552,
        "node_id": "U_kgDOCHHrYA",
        "avatar_url": "https://avatars.githubusercontent.com/u/141683552?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cedwies",
        "html_url": "https://github.com/cedwies",
        "followers_url": "https://api.github.com/users/cedwies/followers",
        "following_url": "https://api.github.com/users/cedwies/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cedwies/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cedwies/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cedwies/subscriptions",
        "organizations_url": "https://api.github.com/users/cedwies/orgs",
        "repos_url": "https://api.github.com/users/cedwies/repos",
        "events_url": "https://api.github.com/users/cedwies/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cedwies/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-22T12:47:25Z"
    },
    {
      "event": "subscribed",
      "id": 20430450553,
      "node_id": "SE_lADOABII587SPCJozwAAAATBv-95",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20430450553",
      "actor": {
        "login": "cedwies",
        "id": 141683552,
        "node_id": "U_kgDOCHHrYA",
        "avatar_url": "https://avatars.githubusercontent.com/u/141683552?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cedwies",
        "html_url": "https://github.com/cedwies",
        "followers_url": "https://api.github.com/users/cedwies/followers",
        "following_url": "https://api.github.com/users/cedwies/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cedwies/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cedwies/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cedwies/subscriptions",
        "organizations_url": "https://api.github.com/users/cedwies/orgs",
        "repos_url": "https://api.github.com/users/cedwies/repos",
        "events_url": "https://api.github.com/users/cedwies/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cedwies/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-22T12:47:25Z"
    },
    {
      "event": "commented",
      "id": 3432352303,
      "node_id": "IC_kwDOABII587MlYov",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3432352303",
      "actor": {
        "login": "cedwies",
        "id": 141683552,
        "node_id": "U_kgDOCHHrYA",
        "avatar_url": "https://avatars.githubusercontent.com/u/141683552?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cedwies",
        "html_url": "https://github.com/cedwies",
        "followers_url": "https://api.github.com/users/cedwies/followers",
        "following_url": "https://api.github.com/users/cedwies/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cedwies/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cedwies/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cedwies/subscriptions",
        "organizations_url": "https://api.github.com/users/cedwies/orgs",
        "repos_url": "https://api.github.com/users/cedwies/repos",
        "events_url": "https://api.github.com/users/cedwies/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cedwies/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-22T13:23:54Z",
      "updated_at": "2025-10-22T13:25:14Z",
      "author_association": "NONE",
      "body": "> But the code seems more complicated than before - is there a way to retain the speedup without complicating the code (i.e. minimizing the diff)?\r\n\r\nIt is more complicated. I would:\r\n\r\nKeep: \r\n- change from index-based to range-based loops.\r\n- In `AreInputsStandard(...)`: Move `vSolutions` outside the for loop (this brings the performance gain in `CCoinsCaching`)\r\n- In `IsWitnessStandard(...)`: Keep the variable name change from `stack` to `script_stack`\r\n\r\nDiscard to minimize diff (these changes don't give a (relevant) performance gain):\r\n- In `AreInputsStandard(...)`: Don't move the `stack` outside the for loop\r\n- In `IsWitnessStandard(...)`: Don't move `stack` and `witnessprogram` outside the for loop\r\n- In `SpendsNonAnchorWitnessProg(...)`: Don't move `stack` outside the for loop.\r\n\r\nOptional: Add a comment/hint to clarify that moving `vSolutions` outside the loop is intentional?\r\n\r\n\r\nThis way we minimize the diff, avoiding making the code more complicated than necessary, while taking advantage of the performance gain. Happy to hear your thoughts.\r\n\r\n\r\n",
      "user": {
        "login": "cedwies",
        "id": 141683552,
        "node_id": "U_kgDOCHHrYA",
        "avatar_url": "https://avatars.githubusercontent.com/u/141683552?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cedwies",
        "html_url": "https://github.com/cedwies",
        "followers_url": "https://api.github.com/users/cedwies/followers",
        "following_url": "https://api.github.com/users/cedwies/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cedwies/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cedwies/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cedwies/subscriptions",
        "organizations_url": "https://api.github.com/users/cedwies/orgs",
        "repos_url": "https://api.github.com/users/cedwies/repos",
        "events_url": "https://api.github.com/users/cedwies/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cedwies/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33645#issuecomment-3432352303",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33645"
    },
    {
      "event": "commented",
      "id": 3432572647,
      "node_id": "IC_kwDOABII587MmObn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3432572647",
      "actor": {
        "login": "Raimo33",
        "id": 104778891,
        "node_id": "U_kgDOBj7Miw",
        "avatar_url": "https://avatars.githubusercontent.com/u/104778891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Raimo33",
        "html_url": "https://github.com/Raimo33",
        "followers_url": "https://api.github.com/users/Raimo33/followers",
        "following_url": "https://api.github.com/users/Raimo33/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Raimo33/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Raimo33/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Raimo33/subscriptions",
        "organizations_url": "https://api.github.com/users/Raimo33/orgs",
        "repos_url": "https://api.github.com/users/Raimo33/repos",
        "events_url": "https://api.github.com/users/Raimo33/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Raimo33/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-22T14:12:49Z",
      "updated_at": "2025-10-22T14:12:49Z",
      "author_association": "CONTRIBUTOR",
      "body": "> * In AreInputsStandard(...): Don't move the stack outside the for loop\r\n\r\nAgreed: it is not in the hot path (or the most likely path).\r\n\r\n> * In IsWitnessStandard(...): Don't move stack and witnessprogram outside the for loop\r\n\r\nAgreed for `stack`: it is only needed for P2SH which is unlikely\r\nDisagree for `witnessprogram`: it is used in the hot path (P2WPKH is the most likely)\r\n\r\n> * In `SpendsNonAnchorWitnessProg(...)`: Don't move `stack` outside the for loop.\r\n\r\nAgreed: it is not in the hot path (or the most likely path).\r\n",
      "user": {
        "login": "Raimo33",
        "id": 104778891,
        "node_id": "U_kgDOBj7Miw",
        "avatar_url": "https://avatars.githubusercontent.com/u/104778891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Raimo33",
        "html_url": "https://github.com/Raimo33",
        "followers_url": "https://api.github.com/users/Raimo33/followers",
        "following_url": "https://api.github.com/users/Raimo33/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Raimo33/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Raimo33/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Raimo33/subscriptions",
        "organizations_url": "https://api.github.com/users/Raimo33/orgs",
        "repos_url": "https://api.github.com/users/Raimo33/repos",
        "events_url": "https://api.github.com/users/Raimo33/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Raimo33/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33645#issuecomment-3432572647",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33645"
    },
    {
      "event": "commented",
      "id": 3432572935,
      "node_id": "IC_kwDOABII587MmOgH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3432572935",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-22T14:12:50Z",
      "updated_at": "2025-10-22T14:12:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Since std::vector only allocates on first use\r\n\r\nActually it can reallocate on every size exhaustion, i.e. every resize.\r\nI don't like the new reuse, that can actually be slower than before because now the code paths depend on each other.\r\nWouldn't reserving the vectors help here instead?",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33645#issuecomment-3432572935",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33645"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDYyYjA0ZjU1NmI2ZmYyNjViNDNkZjM1OTZhMjlkYzQwYzk5M2JmNDc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/62b04f556b6ff265b43df3596a29dc40c993bf47",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/62b04f556b6ff265b43df3596a29dc40c993bf47",
      "tree": {
        "sha": "4ad4ce1aa93243282269c79faaa555de78443417",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4ad4ce1aa93243282269c79faaa555de78443417"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/64a7c7cbb975cb3c3f25a3f784779f32cd95ebaa",
          "sha": "64a7c7cbb975cb3c3f25a3f784779f32cd95ebaa",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/64a7c7cbb975cb3c3f25a3f784779f32cd95ebaa"
        }
      ],
      "message": "refactor: use range-based iteration",
      "committer": {
        "name": "Raimo33",
        "email": "claudio.raimondi@protonmail.com",
        "date": "2025-10-22T14:30:22Z"
      },
      "author": {
        "name": "Raimo33",
        "email": "claudio.raimondi@protonmail.com",
        "date": "2025-10-17T17:12:09Z"
      },
      "sha": "62b04f556b6ff265b43df3596a29dc40c993bf47"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 20433290301,
      "node_id": "HRFPE_lADOABII587SPCJozwAAAATB60Q9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20433290301",
      "actor": {
        "login": "Raimo33",
        "id": 104778891,
        "node_id": "U_kgDOBj7Miw",
        "avatar_url": "https://avatars.githubusercontent.com/u/104778891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Raimo33",
        "html_url": "https://github.com/Raimo33",
        "followers_url": "https://api.github.com/users/Raimo33/followers",
        "following_url": "https://api.github.com/users/Raimo33/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Raimo33/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Raimo33/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Raimo33/subscriptions",
        "organizations_url": "https://api.github.com/users/Raimo33/orgs",
        "repos_url": "https://api.github.com/users/Raimo33/repos",
        "events_url": "https://api.github.com/users/Raimo33/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Raimo33/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "cedfff1db97f58181c27c54f8440b2f40ef63d35",
      "commit_url": "https://api.github.com/repos/Raimo33/bitcoinknots/commits/cedfff1db97f58181c27c54f8440b2f40ef63d35",
      "created_at": "2025-10-22T14:50:34Z"
    },
    {
      "event": "commented",
      "id": 3432829367,
      "node_id": "IC_kwDOABII587MnNG3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3432829367",
      "actor": {
        "login": "Raimo33",
        "id": 104778891,
        "node_id": "U_kgDOBj7Miw",
        "avatar_url": "https://avatars.githubusercontent.com/u/104778891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Raimo33",
        "html_url": "https://github.com/Raimo33",
        "followers_url": "https://api.github.com/users/Raimo33/followers",
        "following_url": "https://api.github.com/users/Raimo33/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Raimo33/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Raimo33/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Raimo33/subscriptions",
        "organizations_url": "https://api.github.com/users/Raimo33/orgs",
        "repos_url": "https://api.github.com/users/Raimo33/repos",
        "events_url": "https://api.github.com/users/Raimo33/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Raimo33/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-22T15:00:05Z",
      "updated_at": "2025-10-22T15:00:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "I've removed some of the less impacting changes, considering @cedwies suggestions. It now shows a 9% improvement on CCoinsCache on my end (up from a 7.7% previously)",
      "user": {
        "login": "Raimo33",
        "id": 104778891,
        "node_id": "U_kgDOBj7Miw",
        "avatar_url": "https://avatars.githubusercontent.com/u/104778891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Raimo33",
        "html_url": "https://github.com/Raimo33",
        "followers_url": "https://api.github.com/users/Raimo33/followers",
        "following_url": "https://api.github.com/users/Raimo33/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Raimo33/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Raimo33/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Raimo33/subscriptions",
        "organizations_url": "https://api.github.com/users/Raimo33/orgs",
        "repos_url": "https://api.github.com/users/Raimo33/repos",
        "events_url": "https://api.github.com/users/Raimo33/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Raimo33/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33645#issuecomment-3432829367",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33645"
    },
    {
      "event": "mentioned",
      "id": 20433503893,
      "node_id": "MEE_lADOABII587SPCJozwAAAATB7oaV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20433503893",
      "actor": {
        "login": "cedwies",
        "id": 141683552,
        "node_id": "U_kgDOCHHrYA",
        "avatar_url": "https://avatars.githubusercontent.com/u/141683552?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cedwies",
        "html_url": "https://github.com/cedwies",
        "followers_url": "https://api.github.com/users/cedwies/followers",
        "following_url": "https://api.github.com/users/cedwies/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cedwies/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cedwies/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cedwies/subscriptions",
        "organizations_url": "https://api.github.com/users/cedwies/orgs",
        "repos_url": "https://api.github.com/users/cedwies/repos",
        "events_url": "https://api.github.com/users/cedwies/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cedwies/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-22T15:00:07Z"
    },
    {
      "event": "subscribed",
      "id": 20433503947,
      "node_id": "SE_lADOABII587SPCJozwAAAATB7obL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20433503947",
      "actor": {
        "login": "cedwies",
        "id": 141683552,
        "node_id": "U_kgDOCHHrYA",
        "avatar_url": "https://avatars.githubusercontent.com/u/141683552?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cedwies",
        "html_url": "https://github.com/cedwies",
        "followers_url": "https://api.github.com/users/cedwies/followers",
        "following_url": "https://api.github.com/users/cedwies/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cedwies/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cedwies/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cedwies/subscriptions",
        "organizations_url": "https://api.github.com/users/cedwies/orgs",
        "repos_url": "https://api.github.com/users/cedwies/repos",
        "events_url": "https://api.github.com/users/cedwies/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cedwies/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-22T15:00:07Z"
    },
    {
      "event": "commented",
      "id": 3432859443,
      "node_id": "IC_kwDOABII587MnUcz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3432859443",
      "actor": {
        "login": "Raimo33",
        "id": 104778891,
        "node_id": "U_kgDOBj7Miw",
        "avatar_url": "https://avatars.githubusercontent.com/u/104778891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Raimo33",
        "html_url": "https://github.com/Raimo33",
        "followers_url": "https://api.github.com/users/Raimo33/followers",
        "following_url": "https://api.github.com/users/Raimo33/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Raimo33/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Raimo33/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Raimo33/subscriptions",
        "organizations_url": "https://api.github.com/users/Raimo33/orgs",
        "repos_url": "https://api.github.com/users/Raimo33/repos",
        "events_url": "https://api.github.com/users/Raimo33/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Raimo33/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-22T15:04:09Z",
      "updated_at": "2025-10-22T15:04:17Z",
      "author_association": "CONTRIBUTOR",
      "body": "> now the code paths depend on each other\r\n\r\nThat's not the case, at least not with the latest push:\r\n\r\n- `vSolutions` is used regardless of the code path. It's used before branching.\r\n- `witnessprogram` is used late, after a couple of branches, but this can't possibly impact performance since `std::vector` starts allocating only after first use.\r\n\r\n> Wouldn't reserving the vectors help here instead?\r\n\r\nThis was my initial intuition, but it actually goes against your previous point. `.reserve()` would mean allocating regardless of the code path. It would mean allocating even when unnecessary.",
      "user": {
        "login": "Raimo33",
        "id": 104778891,
        "node_id": "U_kgDOBj7Miw",
        "avatar_url": "https://avatars.githubusercontent.com/u/104778891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Raimo33",
        "html_url": "https://github.com/Raimo33",
        "followers_url": "https://api.github.com/users/Raimo33/followers",
        "following_url": "https://api.github.com/users/Raimo33/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Raimo33/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Raimo33/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Raimo33/subscriptions",
        "organizations_url": "https://api.github.com/users/Raimo33/orgs",
        "repos_url": "https://api.github.com/users/Raimo33/repos",
        "events_url": "https://api.github.com/users/Raimo33/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Raimo33/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33645#issuecomment-3432859443",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33645"
    },
    {
      "event": "commented",
      "id": 3433062198,
      "node_id": "IC_kwDOABII587MoF82",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3433062198",
      "actor": {
        "login": "cedwies",
        "id": 141683552,
        "node_id": "U_kgDOCHHrYA",
        "avatar_url": "https://avatars.githubusercontent.com/u/141683552?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cedwies",
        "html_url": "https://github.com/cedwies",
        "followers_url": "https://api.github.com/users/cedwies/followers",
        "following_url": "https://api.github.com/users/cedwies/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cedwies/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cedwies/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cedwies/subscriptions",
        "organizations_url": "https://api.github.com/users/cedwies/orgs",
        "repos_url": "https://api.github.com/users/cedwies/repos",
        "events_url": "https://api.github.com/users/cedwies/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cedwies/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-22T15:39:00Z",
      "updated_at": "2025-10-22T15:39:00Z",
      "author_association": "NONE",
      "body": "> Actually it can reallocate on every size exhaustion, i.e. every resize.\r\nI don't like the new reuse, that can actually be slower than before because now the code paths depend on each other.\r\nWouldn't reserving the vectors help here instead?\r\n\r\nYou are referring to iteration-to-iteration coupling? Yes, the iterations depend on each other, however in practice we still allocate less than before, so there should not be a slowdown. Are you suggesting something like:\r\n```cpp\r\nwitnessprogram.reserve(40); // segwit witness program length <= 40 bytes\r\n```\r\n? I would not use `reserve()` for `vSolutions` because it would be mostly guesswork with little payoff and hoisting alone already gets the win in performance.\r\nOr am I missing your point @l0rinc ?",
      "user": {
        "login": "cedwies",
        "id": 141683552,
        "node_id": "U_kgDOCHHrYA",
        "avatar_url": "https://avatars.githubusercontent.com/u/141683552?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cedwies",
        "html_url": "https://github.com/cedwies",
        "followers_url": "https://api.github.com/users/cedwies/followers",
        "following_url": "https://api.github.com/users/cedwies/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cedwies/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cedwies/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cedwies/subscriptions",
        "organizations_url": "https://api.github.com/users/cedwies/orgs",
        "repos_url": "https://api.github.com/users/cedwies/repos",
        "events_url": "https://api.github.com/users/cedwies/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cedwies/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33645#issuecomment-3433062198",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33645"
    },
    {
      "event": "mentioned",
      "id": 20434405957,
      "node_id": "MEE_lADOABII587SPCJozwAAAATB_EpF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20434405957",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-22T15:39:01Z"
    },
    {
      "event": "subscribed",
      "id": 20434406007,
      "node_id": "SE_lADOABII587SPCJozwAAAATB_Ep3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20434406007",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-22T15:39:02Z"
    },
    {
      "event": "commented",
      "id": 3436715527,
      "node_id": "IC_kwDOABII587M2B4H",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3436715527",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-23T12:40:31Z",
      "updated_at": "2025-10-23T12:40:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "I like the new version better, you have indeed identified an inconsistency that we could fix in a way that would make the source could also more readable.\r\n\r\nHowever, I think the current version still makes the code less readable than it was before - now the loop iterations depend on each other by reusing the same vector. However, `vSolutions` that you're reusing isn't actually needed at all (maybe that's what the compiler detected after your change). The cleaner alternative (that I also bumped into previously) is to make the vector optional:\r\n\r\n<details>\r\n<summary>Cleaner alternative</summary>\r\n\r\n```patch\r\ndiff --git a/src/addresstype.cpp b/src/addresstype.cpp\r\nindex 67e643943d..979983b705 100644\r\n--- a/src/addresstype.cpp\r\n+++ b/src/addresstype.cpp\r\n@@ -49,7 +49,7 @@ WitnessV0ScriptHash::WitnessV0ScriptHash(const CScript& in)\r\n bool ExtractDestination(const CScript& scriptPubKey, CTxDestination& addressRet)\r\n {\r\n     std::vector<valtype> vSolutions;\r\n-    TxoutType whichType = Solver(scriptPubKey, vSolutions);\r\n+    TxoutType whichType = Solver(scriptPubKey, &vSolutions);\r\n \r\n     switch (whichType) {\r\n     case TxoutType::PUBKEY: {\r\ndiff --git a/src/common/bloom.cpp b/src/common/bloom.cpp\r\nindex efb4178cab..c4133221c0 100644\r\n--- a/src/common/bloom.cpp\r\n+++ b/src/common/bloom.cpp\r\n@@ -123,8 +123,7 @@ bool CBloomFilter::IsRelevantAndUpdate(const CTransaction& tx)\r\n                     insert(COutPoint(hash, i));\r\n                 else if ((nFlags & BLOOM_UPDATE_MASK) == BLOOM_UPDATE_P2PUBKEY_ONLY)\r\n                 {\r\n-                    std::vector<std::vector<unsigned char> > vSolutions;\r\n-                    TxoutType type = Solver(txout.scriptPubKey, vSolutions);\r\n+                    TxoutType type = Solver(txout.scriptPubKey);\r\n                     if (type == TxoutType::PUBKEY || type == TxoutType::MULTISIG) {\r\n                         insert(COutPoint(hash, i));\r\n                     }\r\ndiff --git a/src/core_write.cpp b/src/core_write.cpp\r\nindex 14836f5148..4aea803997 100644\r\n--- a/src/core_write.cpp\r\n+++ b/src/core_write.cpp\r\n@@ -159,8 +159,7 @@ void ScriptToUniv(const CScript& script, UniValue& out, bool include_hex, bool i\r\n         out.pushKV(\"hex\", HexStr(script));\r\n     }\r\n \r\n-    std::vector<std::vector<unsigned char>> solns;\r\n-    const TxoutType type{Solver(script, solns)};\r\n+    const TxoutType type{Solver(script)};\r\n \r\n     if (include_address && ExtractDestination(script, address) && type != TxoutType::PUBKEY) {\r\n         out.pushKV(\"address\", EncodeDestination(address));\r\ndiff --git a/src/policy/policy.cpp b/src/policy/policy.cpp\r\nindex 454f3f9021..8f1c0e9b8d 100644\r\n--- a/src/policy/policy.cpp\r\n+++ b/src/policy/policy.cpp\r\n@@ -79,7 +79,7 @@ std::vector<uint32_t> GetDust(const CTransaction& tx, CFeeRate dust_relay_rate)\r\n bool IsStandard(const CScript& scriptPubKey, TxoutType& whichType)\r\n {\r\n     std::vector<std::vector<unsigned char> > vSolutions;\r\n-    whichType = Solver(scriptPubKey, vSolutions);\r\n+    whichType = Solver(scriptPubKey, &vSolutions);\r\n \r\n     if (whichType == TxoutType::NONSTANDARD) {\r\n         return false;\r\n@@ -220,12 +220,10 @@ bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\r\n         return false;\r\n     }\r\n \r\n-    std::vector<std::vector<unsigned char> > vSolutions;\r\n     for (const CTxIn& txin : tx.vin) {\r\n         const CTxOut& prev = mapInputs.AccessCoin(txin.prevout).out;\r\n \r\n-        vSolutions.clear();\r\n-        TxoutType whichType = Solver(prev.scriptPubKey, vSolutions);\r\n+        TxoutType whichType = Solver(prev.scriptPubKey);\r\n         if (whichType == TxoutType::NONSTANDARD || whichType == TxoutType::WITNESS_UNKNOWN) {\r\n             // WITNESS_UNKNOWN failures are typically also caught with a policy\r\n             // flag in the script interpreter, but it can be helpful to catch\r\ndiff --git a/src/rpc/rawtransaction.cpp b/src/rpc/rawtransaction.cpp\r\nindex 1a8edc594f..4d1a90bf47 100644\r\n--- a/src/rpc/rawtransaction.cpp\r\n+++ b/src/rpc/rawtransaction.cpp\r\n@@ -534,7 +534,7 @@ static RPCHelpMan decodescript()\r\n     ScriptToUniv(script, /*out=*/r, /*include_hex=*/false, /*include_address=*/true);\r\n \r\n     std::vector<std::vector<unsigned char>> solutions_data;\r\n-    const TxoutType which_type{Solver(script, solutions_data)};\r\n+    const TxoutType which_type{Solver(script, &solutions_data)};\r\n \r\n     const bool can_wrap{[&] {\r\n         switch (which_type) {\r\ndiff --git a/src/script/descriptor.cpp b/src/script/descriptor.cpp\r\nindex bd819d365a..5ba2d43576 100644\r\n--- a/src/script/descriptor.cpp\r\n+++ b/src/script/descriptor.cpp\r\n@@ -2569,7 +2569,7 @@ std::unique_ptr<DescriptorImpl> InferScript(const CScript& script, ParseScriptCo\r\n     }\r\n \r\n     std::vector<std::vector<unsigned char>> data;\r\n-    TxoutType txntype = Solver(script, data);\r\n+    TxoutType txntype = Solver(script, &data);\r\n \r\n     if (txntype == TxoutType::PUBKEY && (ctx == ParseScriptContext::TOP || ctx == ParseScriptContext::P2SH || ctx == ParseScriptContext::P2WSH)) {\r\n         CPubKey pubkey(data[0]);\r\ndiff --git a/src/script/sign.cpp b/src/script/sign.cpp\r\nindex 33cbc38be4..980ddc9abd 100644\r\n--- a/src/script/sign.cpp\r\n+++ b/src/script/sign.cpp\r\n@@ -406,7 +406,7 @@ static bool SignStep(const SigningProvider& provider, const BaseSignatureCreator\r\n     std::vector<unsigned char> sig;\r\n \r\n     std::vector<valtype> vSolutions;\r\n-    whichTypeRet = Solver(scriptPubKey, vSolutions);\r\n+    whichTypeRet = Solver(scriptPubKey, &vSolutions);\r\n \r\n     switch (whichTypeRet) {\r\n     case TxoutType::NONSTANDARD:\r\n@@ -625,7 +625,7 @@ SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nI\r\n \r\n     // Get scripts\r\n     std::vector<std::vector<unsigned char>> solutions;\r\n-    TxoutType script_type = Solver(txout.scriptPubKey, solutions);\r\n+    TxoutType script_type = Solver(txout.scriptPubKey, &solutions);\r\n     SigVersion sigversion = SigVersion::BASE;\r\n     CScript next_script = txout.scriptPubKey;\r\n \r\n@@ -636,7 +636,7 @@ SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nI\r\n         next_script = std::move(redeem_script);\r\n \r\n         // Get redeemScript type\r\n-        script_type = Solver(next_script, solutions);\r\n+        script_type = Solver(next_script, &solutions);\r\n         stack.script.pop_back();\r\n     }\r\n     if (script_type == TxoutType::WITNESS_V0_SCRIPTHASH && !stack.witness.empty() && !stack.witness.back().empty()) {\r\n@@ -646,7 +646,7 @@ SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nI\r\n         next_script = std::move(witness_script);\r\n \r\n         // Get witnessScript type\r\n-        script_type = Solver(next_script, solutions);\r\n+        script_type = Solver(next_script, &solutions);\r\n         stack.witness.pop_back();\r\n         stack.script = std::move(stack.witness);\r\n         stack.witness.clear();\r\n@@ -751,7 +751,7 @@ bool IsSegWitOutput(const SigningProvider& provider, const CScript& script)\r\n     if (script.IsWitnessProgram(version, program)) return true;\r\n     if (script.IsPayToScriptHash()) {\r\n         std::vector<valtype> solutions;\r\n-        auto whichtype = Solver(script, solutions);\r\n+        auto whichtype = Solver(script, &solutions);\r\n         if (whichtype == TxoutType::SCRIPTHASH) {\r\n             auto h160 = uint160(solutions[0]);\r\n             CScript subscript;\r\ndiff --git a/src/script/solver.cpp b/src/script/solver.cpp\r\nindex 783baf0708..2e45c7d305 100644\r\n--- a/src/script/solver.cpp\r\n+++ b/src/script/solver.cpp\r\n@@ -138,16 +138,15 @@ std::optional<std::pair<int, std::vector<std::span<const unsigned char>>>> Match\r\n     return std::pair{*threshold, std::move(keyspans)};\r\n }\r\n \r\n-TxoutType Solver(const CScript& scriptPubKey, std::vector<std::vector<unsigned char>>& vSolutionsRet)\r\n+TxoutType Solver(const CScript& scriptPubKey, std::vector<std::vector<unsigned char>>* vSolutionsRet)\r\n {\r\n-    vSolutionsRet.clear();\r\n+    if (vSolutionsRet) vSolutionsRet->clear();\r\n \r\n     // Shortcut for pay-to-script-hash, which are more constrained than the other types:\r\n     // it is always OP_HASH160 20 [20 byte hash] OP_EQUAL\r\n-    if (scriptPubKey.IsPayToScriptHash())\r\n-    {\r\n+    if (scriptPubKey.IsPayToScriptHash()) {\r\n         std::vector<unsigned char> hashBytes(scriptPubKey.begin()+2, scriptPubKey.begin()+22);\r\n-        vSolutionsRet.push_back(hashBytes);\r\n+        if (vSolutionsRet) vSolutionsRet->push_back(hashBytes);\r\n         return TxoutType::SCRIPTHASH;\r\n     }\r\n \r\n@@ -155,23 +154,25 @@ TxoutType Solver(const CScript& scriptPubKey, std::vector<std::vector<unsigned c\r\n     std::vector<unsigned char> witnessprogram;\r\n     if (scriptPubKey.IsWitnessProgram(witnessversion, witnessprogram)) {\r\n         if (witnessversion == 0 && witnessprogram.size() == WITNESS_V0_KEYHASH_SIZE) {\r\n-            vSolutionsRet.push_back(std::move(witnessprogram));\r\n+            if (vSolutionsRet) vSolutionsRet->push_back(std::move(witnessprogram));\r\n             return TxoutType::WITNESS_V0_KEYHASH;\r\n         }\r\n         if (witnessversion == 0 && witnessprogram.size() == WITNESS_V0_SCRIPTHASH_SIZE) {\r\n-            vSolutionsRet.push_back(std::move(witnessprogram));\r\n+            if (vSolutionsRet) vSolutionsRet->push_back(std::move(witnessprogram));\r\n             return TxoutType::WITNESS_V0_SCRIPTHASH;\r\n         }\r\n         if (witnessversion == 1 && witnessprogram.size() == WITNESS_V1_TAPROOT_SIZE) {\r\n-            vSolutionsRet.push_back(std::move(witnessprogram));\r\n+            if (vSolutionsRet) vSolutionsRet->push_back(std::move(witnessprogram));\r\n             return TxoutType::WITNESS_V1_TAPROOT;\r\n         }\r\n         if (scriptPubKey.IsPayToAnchor()) {\r\n             return TxoutType::ANCHOR;\r\n         }\r\n         if (witnessversion != 0) {\r\n-            vSolutionsRet.push_back(std::vector<unsigned char>{(unsigned char)witnessversion});\r\n-            vSolutionsRet.push_back(std::move(witnessprogram));\r\n+            if (vSolutionsRet) {\r\n+                vSolutionsRet->push_back(std::vector<unsigned char>{(unsigned char)witnessversion});\r\n+                vSolutionsRet->push_back(std::move(witnessprogram));\r\n+            }\r\n             return TxoutType::WITNESS_UNKNOWN;\r\n         }\r\n         return TxoutType::NONSTANDARD;\r\n@@ -188,25 +189,27 @@ TxoutType Solver(const CScript& scriptPubKey, std::vector<std::vector<unsigned c\r\n \r\n     std::vector<unsigned char> data;\r\n     if (MatchPayToPubkey(scriptPubKey, data)) {\r\n-        vSolutionsRet.push_back(std::move(data));\r\n+        if (vSolutionsRet) vSolutionsRet->push_back(std::move(data));\r\n         return TxoutType::PUBKEY;\r\n     }\r\n \r\n     if (MatchPayToPubkeyHash(scriptPubKey, data)) {\r\n-        vSolutionsRet.push_back(std::move(data));\r\n+        if (vSolutionsRet) vSolutionsRet->push_back(std::move(data));\r\n         return TxoutType::PUBKEYHASH;\r\n     }\r\n \r\n     int required;\r\n     std::vector<std::vector<unsigned char>> keys;\r\n     if (MatchMultisig(scriptPubKey, required, keys)) {\r\n-        vSolutionsRet.push_back({static_cast<unsigned char>(required)}); // safe as required is in range 1..20\r\n-        vSolutionsRet.insert(vSolutionsRet.end(), keys.begin(), keys.end());\r\n-        vSolutionsRet.push_back({static_cast<unsigned char>(keys.size())}); // safe as size is in range 1..20\r\n+        if (vSolutionsRet) {\r\n+            vSolutionsRet->push_back({static_cast<unsigned char>(required)}); // safe as required is in range 1..20\r\n+            vSolutionsRet->insert(vSolutionsRet->end(), keys.begin(), keys.end());\r\n+            vSolutionsRet->push_back({static_cast<unsigned char>(keys.size())}); // safe as size is in range 1..20\r\n+        }\r\n         return TxoutType::MULTISIG;\r\n     }\r\n \r\n-    vSolutionsRet.clear();\r\n+    if (vSolutionsRet) vSolutionsRet->clear();\r\n     return TxoutType::NONSTANDARD;\r\n }\r\n \r\ndiff --git a/src/script/solver.h b/src/script/solver.h\r\nindex d2b7fb8881..f708a00f82 100644\r\n--- a/src/script/solver.h\r\n+++ b/src/script/solver.h\r\n@@ -52,7 +52,7 @@ constexpr bool IsPushdataOp(opcodetype opcode)\r\n  * @param[out]  vSolutionsRet  Vector of parsed pubkeys and hashes\r\n  * @return                     The script type. TxoutType::NONSTANDARD represents a failed solve.\r\n  */\r\n-TxoutType Solver(const CScript& scriptPubKey, std::vector<std::vector<unsigned char>>& vSolutionsRet);\r\n+TxoutType Solver(const CScript& scriptPubKey, std::vector<std::vector<unsigned char>>* vSolutionsRet = nullptr);\r\n \r\n /** Generate a P2PK script for the given pubkey. */\r\n CScript GetScriptForRawPubKey(const CPubKey& pubkey);\r\ndiff --git a/src/test/fuzz/key.cpp b/src/test/fuzz/key.cpp\r\nindex e4bedff8b5..5660310935 100644\r\n--- a/src/test/fuzz/key.cpp\r\n+++ b/src/test/fuzz/key.cpp\r\n@@ -160,13 +160,13 @@ FUZZ_TARGET(key, .init = initialize_key)\r\n         assert(which_type_tx_multisig == TxoutType::MULTISIG);\r\n \r\n         std::vector<std::vector<unsigned char>> v_solutions_ret_tx_pubkey;\r\n-        const TxoutType outtype_tx_pubkey = Solver(tx_pubkey_script, v_solutions_ret_tx_pubkey);\r\n+        const TxoutType outtype_tx_pubkey = Solver(tx_pubkey_script, &v_solutions_ret_tx_pubkey);\r\n         assert(outtype_tx_pubkey == TxoutType::PUBKEY);\r\n         assert(v_solutions_ret_tx_pubkey.size() == 1);\r\n         assert(v_solutions_ret_tx_pubkey[0].size() == 33);\r\n \r\n         std::vector<std::vector<unsigned char>> v_solutions_ret_tx_multisig;\r\n-        const TxoutType outtype_tx_multisig = Solver(tx_multisig_script, v_solutions_ret_tx_multisig);\r\n+        const TxoutType outtype_tx_multisig = Solver(tx_multisig_script, &v_solutions_ret_tx_multisig);\r\n         assert(outtype_tx_multisig == TxoutType::MULTISIG);\r\n         assert(v_solutions_ret_tx_multisig.size() == 3);\r\n         assert(v_solutions_ret_tx_multisig[0].size() == 1);\r\ndiff --git a/src/test/fuzz/script.cpp b/src/test/fuzz/script.cpp\r\nindex dfad0b7184..38608b48be 100644\r\n--- a/src/test/fuzz/script.cpp\r\n+++ b/src/test/fuzz/script.cpp\r\n@@ -91,7 +91,8 @@ FUZZ_TARGET(script, .init = initialize_script)\r\n     (void)RecursiveDynamicUsage(script);\r\n \r\n     std::vector<std::vector<unsigned char>> solutions;\r\n-    (void)Solver(script, solutions);\r\n+    (void)Solver(script);\r\n+    (void)Solver(script, &solutions);\r\n \r\n     (void)script.HasValidOps();\r\n     (void)script.IsPayToAnchor();\r\ndiff --git a/src/test/script_standard_tests.cpp b/src/test/script_standard_tests.cpp\r\nindex 9a63426e7d..49d7b164bc 100644\r\n--- a/src/test/script_standard_tests.cpp\r\n+++ b/src/test/script_standard_tests.cpp\r\n@@ -42,14 +42,14 @@ BOOST_AUTO_TEST_CASE(script_standard_Solver_success)\r\n     // TxoutType::PUBKEY\r\n     s.clear();\r\n     s << ToByteVector(pubkeys[0]) << OP_CHECKSIG;\r\n-    BOOST_CHECK_EQUAL(Solver(s, solutions), TxoutType::PUBKEY);\r\n+    BOOST_CHECK_EQUAL(Solver(s, &solutions), TxoutType::PUBKEY);\r\n     BOOST_CHECK_EQUAL(solutions.size(), 1U);\r\n     BOOST_CHECK(solutions[0] == ToByteVector(pubkeys[0]));\r\n \r\n     // TxoutType::PUBKEYHASH\r\n     s.clear();\r\n     s << OP_DUP << OP_HASH160 << ToByteVector(pubkeys[0].GetID()) << OP_EQUALVERIFY << OP_CHECKSIG;\r\n-    BOOST_CHECK_EQUAL(Solver(s, solutions), TxoutType::PUBKEYHASH);\r\n+    BOOST_CHECK_EQUAL(Solver(s, &solutions), TxoutType::PUBKEYHASH);\r\n     BOOST_CHECK_EQUAL(solutions.size(), 1U);\r\n     BOOST_CHECK(solutions[0] == ToByteVector(pubkeys[0].GetID()));\r\n \r\n@@ -57,7 +57,7 @@ BOOST_AUTO_TEST_CASE(script_standard_Solver_success)\r\n     CScript redeemScript(s); // initialize with leftover P2PKH script\r\n     s.clear();\r\n     s << OP_HASH160 << ToByteVector(CScriptID(redeemScript)) << OP_EQUAL;\r\n-    BOOST_CHECK_EQUAL(Solver(s, solutions), TxoutType::SCRIPTHASH);\r\n+    BOOST_CHECK_EQUAL(Solver(s, &solutions), TxoutType::SCRIPTHASH);\r\n     BOOST_CHECK_EQUAL(solutions.size(), 1U);\r\n     BOOST_CHECK(solutions[0] == ToByteVector(CScriptID(redeemScript)));\r\n \r\n@@ -67,7 +67,7 @@ BOOST_AUTO_TEST_CASE(script_standard_Solver_success)\r\n         ToByteVector(pubkeys[0]) <<\r\n         ToByteVector(pubkeys[1]) <<\r\n         OP_2 << OP_CHECKMULTISIG;\r\n-    BOOST_CHECK_EQUAL(Solver(s, solutions), TxoutType::MULTISIG);\r\n+    BOOST_CHECK_EQUAL(Solver(s, &solutions), TxoutType::MULTISIG);\r\n     BOOST_CHECK_EQUAL(solutions.size(), 4U);\r\n     BOOST_CHECK(solutions[0] == std::vector<unsigned char>({1}));\r\n     BOOST_CHECK(solutions[1] == ToByteVector(pubkeys[0]));\r\n@@ -80,7 +80,7 @@ BOOST_AUTO_TEST_CASE(script_standard_Solver_success)\r\n         ToByteVector(pubkeys[1]) <<\r\n         ToByteVector(pubkeys[2]) <<\r\n         OP_3 << OP_CHECKMULTISIG;\r\n-    BOOST_CHECK_EQUAL(Solver(s, solutions), TxoutType::MULTISIG);\r\n+    BOOST_CHECK_EQUAL(Solver(s, &solutions), TxoutType::MULTISIG);\r\n     BOOST_CHECK_EQUAL(solutions.size(), 5U);\r\n     BOOST_CHECK(solutions[0] == std::vector<unsigned char>({2}));\r\n     BOOST_CHECK(solutions[1] == ToByteVector(pubkeys[0]));\r\n@@ -94,13 +94,13 @@ BOOST_AUTO_TEST_CASE(script_standard_Solver_success)\r\n         std::vector<unsigned char>({0}) <<\r\n         std::vector<unsigned char>({75}) <<\r\n         std::vector<unsigned char>({255});\r\n-    BOOST_CHECK_EQUAL(Solver(s, solutions), TxoutType::NULL_DATA);\r\n+    BOOST_CHECK_EQUAL(Solver(s, &solutions), TxoutType::NULL_DATA);\r\n     BOOST_CHECK_EQUAL(solutions.size(), 0U);\r\n \r\n     // TxoutType::WITNESS_V0_KEYHASH\r\n     s.clear();\r\n     s << OP_0 << ToByteVector(pubkeys[0].GetID());\r\n-    BOOST_CHECK_EQUAL(Solver(s, solutions), TxoutType::WITNESS_V0_KEYHASH);\r\n+    BOOST_CHECK_EQUAL(Solver(s, &solutions), TxoutType::WITNESS_V0_KEYHASH);\r\n     BOOST_CHECK_EQUAL(solutions.size(), 1U);\r\n     BOOST_CHECK(solutions[0] == ToByteVector(pubkeys[0].GetID()));\r\n \r\n@@ -111,21 +111,21 @@ BOOST_AUTO_TEST_CASE(script_standard_Solver_success)\r\n \r\n     s.clear();\r\n     s << OP_0 << ToByteVector(scriptHash);\r\n-    BOOST_CHECK_EQUAL(Solver(s, solutions), TxoutType::WITNESS_V0_SCRIPTHASH);\r\n+    BOOST_CHECK_EQUAL(Solver(s, &solutions), TxoutType::WITNESS_V0_SCRIPTHASH);\r\n     BOOST_CHECK_EQUAL(solutions.size(), 1U);\r\n     BOOST_CHECK(solutions[0] == ToByteVector(scriptHash));\r\n \r\n     // TxoutType::WITNESS_V1_TAPROOT\r\n     s.clear();\r\n     s << OP_1 << ToByteVector(uint256::ZERO);\r\n-    BOOST_CHECK_EQUAL(Solver(s, solutions), TxoutType::WITNESS_V1_TAPROOT);\r\n+    BOOST_CHECK_EQUAL(Solver(s, &solutions), TxoutType::WITNESS_V1_TAPROOT);\r\n     BOOST_CHECK_EQUAL(solutions.size(), 1U);\r\n     BOOST_CHECK(solutions[0] == ToByteVector(uint256::ZERO));\r\n \r\n     // TxoutType::WITNESS_UNKNOWN\r\n     s.clear();\r\n     s << OP_16 << ToByteVector(uint256::ONE);\r\n-    BOOST_CHECK_EQUAL(Solver(s, solutions), TxoutType::WITNESS_UNKNOWN);\r\n+    BOOST_CHECK_EQUAL(Solver(s, &solutions), TxoutType::WITNESS_UNKNOWN);\r\n     BOOST_CHECK_EQUAL(solutions.size(), 2U);\r\n     BOOST_CHECK(solutions[0] == std::vector<unsigned char>{16});\r\n     BOOST_CHECK(solutions[1] == ToByteVector(uint256::ONE));\r\n@@ -133,7 +133,7 @@ BOOST_AUTO_TEST_CASE(script_standard_Solver_success)\r\n     // TxoutType::ANCHOR\r\n     s.clear();\r\n     s << OP_1 << ANCHOR_BYTES;\r\n-    BOOST_CHECK_EQUAL(Solver(s, solutions), TxoutType::ANCHOR);\r\n+    BOOST_CHECK_EQUAL(Solver(s, &solutions), TxoutType::ANCHOR);\r\n     BOOST_CHECK(solutions.empty());\r\n \r\n     // Sanity-check IsPayToAnchor\r\n@@ -146,7 +146,7 @@ BOOST_AUTO_TEST_CASE(script_standard_Solver_success)\r\n     // TxoutType::NONSTANDARD\r\n     s.clear();\r\n     s << OP_9 << OP_ADD << OP_11 << OP_EQUAL;\r\n-    BOOST_CHECK_EQUAL(Solver(s, solutions), TxoutType::NONSTANDARD);\r\n+    BOOST_CHECK_EQUAL(Solver(s, &solutions), TxoutType::NONSTANDARD);\r\n }\r\n \r\n BOOST_AUTO_TEST_CASE(script_standard_Solver_failure)\r\n@@ -160,67 +160,67 @@ BOOST_AUTO_TEST_CASE(script_standard_Solver_failure)\r\n     // TxoutType::PUBKEY with incorrectly sized pubkey\r\n     s.clear();\r\n     s << std::vector<unsigned char>(30, 0x01) << OP_CHECKSIG;\r\n-    BOOST_CHECK_EQUAL(Solver(s, solutions), TxoutType::NONSTANDARD);\r\n+    BOOST_CHECK_EQUAL(Solver(s, &solutions), TxoutType::NONSTANDARD);\r\n \r\n     // TxoutType::PUBKEYHASH with incorrectly sized key hash\r\n     s.clear();\r\n     s << OP_DUP << OP_HASH160 << ToByteVector(pubkey) << OP_EQUALVERIFY << OP_CHECKSIG;\r\n-    BOOST_CHECK_EQUAL(Solver(s, solutions), TxoutType::NONSTANDARD);\r\n+    BOOST_CHECK_EQUAL(Solver(s, &solutions), TxoutType::NONSTANDARD);\r\n \r\n     // TxoutType::SCRIPTHASH with incorrectly sized script hash\r\n     s.clear();\r\n     s << OP_HASH160 << std::vector<unsigned char>(21, 0x01) << OP_EQUAL;\r\n-    BOOST_CHECK_EQUAL(Solver(s, solutions), TxoutType::NONSTANDARD);\r\n+    BOOST_CHECK_EQUAL(Solver(s, &solutions), TxoutType::NONSTANDARD);\r\n \r\n     // TxoutType::MULTISIG 0/2\r\n     s.clear();\r\n     s << OP_0 << ToByteVector(pubkey) << OP_1 << OP_CHECKMULTISIG;\r\n-    BOOST_CHECK_EQUAL(Solver(s, solutions), TxoutType::NONSTANDARD);\r\n+    BOOST_CHECK_EQUAL(Solver(s, &solutions), TxoutType::NONSTANDARD);\r\n \r\n     // TxoutType::MULTISIG 2/1\r\n     s.clear();\r\n     s << OP_2 << ToByteVector(pubkey) << OP_1 << OP_CHECKMULTISIG;\r\n-    BOOST_CHECK_EQUAL(Solver(s, solutions), TxoutType::NONSTANDARD);\r\n+    BOOST_CHECK_EQUAL(Solver(s, &solutions), TxoutType::NONSTANDARD);\r\n \r\n     // TxoutType::MULTISIG n = 2 with 1 pubkey\r\n     s.clear();\r\n     s << OP_1 << ToByteVector(pubkey) << OP_2 << OP_CHECKMULTISIG;\r\n-    BOOST_CHECK_EQUAL(Solver(s, solutions), TxoutType::NONSTANDARD);\r\n+    BOOST_CHECK_EQUAL(Solver(s, &solutions), TxoutType::NONSTANDARD);\r\n \r\n     // TxoutType::MULTISIG n = 1 with 0 pubkeys\r\n     s.clear();\r\n     s << OP_1 << OP_1 << OP_CHECKMULTISIG;\r\n-    BOOST_CHECK_EQUAL(Solver(s, solutions), TxoutType::NONSTANDARD);\r\n+    BOOST_CHECK_EQUAL(Solver(s, &solutions), TxoutType::NONSTANDARD);\r\n \r\n     // TxoutType::NULL_DATA with other opcodes\r\n     s.clear();\r\n     s << OP_RETURN << std::vector<unsigned char>({75}) << OP_ADD;\r\n-    BOOST_CHECK_EQUAL(Solver(s, solutions), TxoutType::NONSTANDARD);\r\n+    BOOST_CHECK_EQUAL(Solver(s, &solutions), TxoutType::NONSTANDARD);\r\n \r\n     // TxoutType::WITNESS_V0_{KEY,SCRIPT}HASH with incorrect program size (-> consensus-invalid, i.e. non-standard)\r\n     s.clear();\r\n     s << OP_0 << std::vector<unsigned char>(19, 0x01);\r\n-    BOOST_CHECK_EQUAL(Solver(s, solutions), TxoutType::NONSTANDARD);\r\n+    BOOST_CHECK_EQUAL(Solver(s, &solutions), TxoutType::NONSTANDARD);\r\n \r\n     // TxoutType::WITNESS_V1_TAPROOT with incorrect program size (-> undefined, but still policy-valid)\r\n     s.clear();\r\n     s << OP_1 << std::vector<unsigned char>(31, 0x01);\r\n-    BOOST_CHECK_EQUAL(Solver(s, solutions), TxoutType::WITNESS_UNKNOWN);\r\n+    BOOST_CHECK_EQUAL(Solver(s, &solutions), TxoutType::WITNESS_UNKNOWN);\r\n     s.clear();\r\n     s << OP_1 << std::vector<unsigned char>(33, 0x01);\r\n-    BOOST_CHECK_EQUAL(Solver(s, solutions), TxoutType::WITNESS_UNKNOWN);\r\n+    BOOST_CHECK_EQUAL(Solver(s, &solutions), TxoutType::WITNESS_UNKNOWN);\r\n \r\n     // TxoutType::ANCHOR but wrong witness version\r\n     s.clear();\r\n     s << OP_2 << ANCHOR_BYTES;\r\n     BOOST_CHECK(!s.IsPayToAnchor());\r\n-    BOOST_CHECK_EQUAL(Solver(s, solutions), TxoutType::WITNESS_UNKNOWN);\r\n+    BOOST_CHECK_EQUAL(Solver(s, &solutions), TxoutType::WITNESS_UNKNOWN);\r\n \r\n     // TxoutType::ANCHOR but wrong 2-byte data push\r\n     s.clear();\r\n     s << OP_1 << std::vector<unsigned char>{0xff, 0xff};\r\n     BOOST_CHECK(!s.IsPayToAnchor());\r\n-    BOOST_CHECK_EQUAL(Solver(s, solutions), TxoutType::WITNESS_UNKNOWN);\r\n+    BOOST_CHECK_EQUAL(Solver(s, &solutions), TxoutType::WITNESS_UNKNOWN);\r\n }\r\n \r\n BOOST_AUTO_TEST_CASE(script_standard_ExtractDestination)\r\ndiff --git a/src/test/script_tests.cpp b/src/test/script_tests.cpp\r\nindex fc4550bb7b..4e4dbd5f89 100644\r\n--- a/src/test/script_tests.cpp\r\n+++ b/src/test/script_tests.cpp\r\n@@ -1157,13 +1157,6 @@ BOOST_AUTO_TEST_CASE(script_CHECKMULTISIG23)\r\n     BOOST_CHECK_MESSAGE(err == SCRIPT_ERR_INVALID_STACK_OPERATION, ScriptErrorString(err));\r\n }\r\n \r\n-/** Return the TxoutType of a script without exposing Solver details. */\r\n-static TxoutType GetTxoutType(const CScript& output_script)\r\n-{\r\n-    std::vector<std::vector<uint8_t>> unused;\r\n-    return Solver(output_script, unused);\r\n-}\r\n-\r\n #define CHECK_SCRIPT_STATIC_SIZE(script, expected_size)                   \\\r\n     do {                                                                  \\\r\n         BOOST_CHECK_EQUAL((script).size(), (expected_size));              \\\r\n@@ -1193,14 +1186,14 @@ BOOST_AUTO_TEST_CASE(script_size_and_capacity_test)\r\n     // Small OP_RETURN has direct allocation\r\n     {\r\n         const auto script{CScript() << OP_RETURN << std::vector<uint8_t>(10, 0xaa)};\r\n-        BOOST_CHECK_EQUAL(GetTxoutType(script), TxoutType::NULL_DATA);\r\n+        BOOST_CHECK_EQUAL(Solver(script), TxoutType::NULL_DATA);\r\n         CHECK_SCRIPT_STATIC_SIZE(script, 12);\r\n     }\r\n \r\n     // P2WPKH has direct allocation\r\n     {\r\n         const auto script{GetScriptForDestination(WitnessV0KeyHash{PKHash{dummy_pubkey}})};\r\n-        BOOST_CHECK_EQUAL(GetTxoutType(script), TxoutType::WITNESS_V0_KEYHASH);\r\n+        BOOST_CHECK_EQUAL(Solver(script), TxoutType::WITNESS_V0_KEYHASH);\r\n         CHECK_SCRIPT_STATIC_SIZE(script, 22);\r\n     }\r\n \r\n@@ -1214,7 +1207,7 @@ BOOST_AUTO_TEST_CASE(script_size_and_capacity_test)\r\n     // P2PKH has direct allocation\r\n     {\r\n         const auto script{GetScriptForDestination(PKHash{dummy_pubkey})};\r\n-        BOOST_CHECK_EQUAL(GetTxoutType(script), TxoutType::PUBKEYHASH);\r\n+        BOOST_CHECK_EQUAL(Solver(script), TxoutType::PUBKEYHASH);\r\n         CHECK_SCRIPT_STATIC_SIZE(script, 25);\r\n     }\r\n \r\n@@ -1228,14 +1221,14 @@ BOOST_AUTO_TEST_CASE(script_size_and_capacity_test)\r\n     // P2TR has direct allocation\r\n     {\r\n         const auto script{GetScriptForDestination(WitnessV1Taproot{XOnlyPubKey{dummy_pubkey}})};\r\n-        BOOST_CHECK_EQUAL(GetTxoutType(script), TxoutType::WITNESS_V1_TAPROOT);\r\n+        BOOST_CHECK_EQUAL(Solver(script), TxoutType::WITNESS_V1_TAPROOT);\r\n         CHECK_SCRIPT_STATIC_SIZE(script, 34);\r\n     }\r\n \r\n     // Compressed P2PK has direct allocation\r\n     {\r\n         const auto script{GetScriptForRawPubKey(dummy_pubkey)};\r\n-        BOOST_CHECK_EQUAL(GetTxoutType(script), TxoutType::PUBKEY);\r\n+        BOOST_CHECK_EQUAL(Solver(script), TxoutType::PUBKEY);\r\n         CHECK_SCRIPT_STATIC_SIZE(script, 35);\r\n     }\r\n \r\n@@ -1246,14 +1239,14 @@ BOOST_AUTO_TEST_CASE(script_size_and_capacity_test)\r\n         const CPubKey uncompressed_pubkey{uncompressed_key.GetPubKey()};\r\n \r\n         const auto script{GetScriptForRawPubKey(uncompressed_pubkey)};\r\n-        BOOST_CHECK_EQUAL(GetTxoutType(script), TxoutType::PUBKEY);\r\n+        BOOST_CHECK_EQUAL(Solver(script), TxoutType::PUBKEY);\r\n         CHECK_SCRIPT_DYNAMIC_SIZE(script, 67, 67);\r\n     }\r\n \r\n     // Bare multisig needs extra allocation\r\n     {\r\n         const auto script{GetScriptForMultisig(1, std::vector{2, dummy_pubkey})};\r\n-        BOOST_CHECK_EQUAL(GetTxoutType(script), TxoutType::MULTISIG);\r\n+        BOOST_CHECK_EQUAL(Solver(script), TxoutType::MULTISIG);\r\n         CHECK_SCRIPT_DYNAMIC_SIZE(script, 71, 103);\r\n     }\r\n }\r\ndiff --git a/src/test/transaction_tests.cpp b/src/test/transaction_tests.cpp\r\nindex b2a70057d5..47f42fb231 100644\r\n--- a/src/test/transaction_tests.cpp\r\n+++ b/src/test/transaction_tests.cpp\r\n@@ -1125,7 +1125,6 @@ BOOST_AUTO_TEST_CASE(spends_witness_prog)\r\n     CMutableTransaction tx_create{}, tx_spend{};\r\n     tx_create.vout.emplace_back(0, CScript{});\r\n     tx_spend.vin.emplace_back(Txid{}, 0);\r\n-    std::vector<std::vector<uint8_t>> sol_dummy;\r\n \r\n     // CNoDestination, PubKeyDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash,\r\n     // WitnessV1Taproot, PayToAnchor, WitnessUnknown.\r\n@@ -1135,14 +1134,14 @@ BOOST_AUTO_TEST_CASE(spends_witness_prog)\r\n \r\n     // P2PK\r\n     tx_create.vout[0].scriptPubKey = GetScriptForDestination(PubKeyDestination{pubkey});\r\n-    BOOST_CHECK_EQUAL(Solver(tx_create.vout[0].scriptPubKey, sol_dummy), TxoutType::PUBKEY);\r\n+    BOOST_CHECK_EQUAL(Solver(tx_create.vout[0].scriptPubKey), TxoutType::PUBKEY);\r\n     tx_spend.vin[0].prevout.hash = tx_create.GetHash();\r\n     AddCoins(coins, CTransaction{tx_create}, 0, false);\r\n     BOOST_CHECK(!::SpendsNonAnchorWitnessProg(CTransaction{tx_spend}, coins));\r\n \r\n     // P2PKH\r\n     tx_create.vout[0].scriptPubKey = GetScriptForDestination(PKHash{pubkey});\r\n-    BOOST_CHECK_EQUAL(Solver(tx_create.vout[0].scriptPubKey, sol_dummy), TxoutType::PUBKEYHASH);\r\n+    BOOST_CHECK_EQUAL(Solver(tx_create.vout[0].scriptPubKey), TxoutType::PUBKEYHASH);\r\n     tx_spend.vin[0].prevout.hash = tx_create.GetHash();\r\n     AddCoins(coins, CTransaction{tx_create}, 0, false);\r\n     BOOST_CHECK(!::SpendsNonAnchorWitnessProg(CTransaction{tx_spend}, coins));\r\n@@ -1150,7 +1149,7 @@ BOOST_AUTO_TEST_CASE(spends_witness_prog)\r\n     // P2SH\r\n     auto redeem_script{CScript{} << OP_1 << OP_CHECKSIG};\r\n     tx_create.vout[0].scriptPubKey = GetScriptForDestination(ScriptHash{redeem_script});\r\n-    BOOST_CHECK_EQUAL(Solver(tx_create.vout[0].scriptPubKey, sol_dummy), TxoutType::SCRIPTHASH);\r\n+    BOOST_CHECK_EQUAL(Solver(tx_create.vout[0].scriptPubKey), TxoutType::SCRIPTHASH);\r\n     tx_spend.vin[0].prevout.hash = tx_create.GetHash();\r\n     tx_spend.vin[0].scriptSig = CScript{} << OP_0 << ToByteVector(redeem_script);\r\n     AddCoins(coins, CTransaction{tx_create}, 0, false);\r\n@@ -1160,7 +1159,7 @@ BOOST_AUTO_TEST_CASE(spends_witness_prog)\r\n     // native P2WSH\r\n     const auto witness_script{CScript{} << OP_12 << OP_HASH160 << OP_DUP << OP_EQUAL};\r\n     tx_create.vout[0].scriptPubKey = GetScriptForDestination(WitnessV0ScriptHash{witness_script});\r\n-    BOOST_CHECK_EQUAL(Solver(tx_create.vout[0].scriptPubKey, sol_dummy), TxoutType::WITNESS_V0_SCRIPTHASH);\r\n+    BOOST_CHECK_EQUAL(Solver(tx_create.vout[0].scriptPubKey), TxoutType::WITNESS_V0_SCRIPTHASH);\r\n     tx_spend.vin[0].prevout.hash = tx_create.GetHash();\r\n     AddCoins(coins, CTransaction{tx_create}, 0, false);\r\n     BOOST_CHECK(::SpendsNonAnchorWitnessProg(CTransaction{tx_spend}, coins));\r\n@@ -1168,7 +1167,7 @@ BOOST_AUTO_TEST_CASE(spends_witness_prog)\r\n     // P2SH-wrapped P2WSH\r\n     redeem_script = tx_create.vout[0].scriptPubKey;\r\n     tx_create.vout[0].scriptPubKey = GetScriptForDestination(ScriptHash(redeem_script));\r\n-    BOOST_CHECK_EQUAL(Solver(tx_create.vout[0].scriptPubKey, sol_dummy), TxoutType::SCRIPTHASH);\r\n+    BOOST_CHECK_EQUAL(Solver(tx_create.vout[0].scriptPubKey), TxoutType::SCRIPTHASH);\r\n     tx_spend.vin[0].prevout.hash = tx_create.GetHash();\r\n     tx_spend.vin[0].scriptSig = CScript{} << ToByteVector(redeem_script);\r\n     AddCoins(coins, CTransaction{tx_create}, 0, false);\r\n@@ -1178,7 +1177,7 @@ BOOST_AUTO_TEST_CASE(spends_witness_prog)\r\n \r\n     // native P2WPKH\r\n     tx_create.vout[0].scriptPubKey = GetScriptForDestination(WitnessV0KeyHash{pubkey});\r\n-    BOOST_CHECK_EQUAL(Solver(tx_create.vout[0].scriptPubKey, sol_dummy), TxoutType::WITNESS_V0_KEYHASH);\r\n+    BOOST_CHECK_EQUAL(Solver(tx_create.vout[0].scriptPubKey), TxoutType::WITNESS_V0_KEYHASH);\r\n     tx_spend.vin[0].prevout.hash = tx_create.GetHash();\r\n     AddCoins(coins, CTransaction{tx_create}, 0, false);\r\n     BOOST_CHECK(::SpendsNonAnchorWitnessProg(CTransaction{tx_spend}, coins));\r\n@@ -1186,7 +1185,7 @@ BOOST_AUTO_TEST_CASE(spends_witness_prog)\r\n     // P2SH-wrapped P2WPKH\r\n     redeem_script = tx_create.vout[0].scriptPubKey;\r\n     tx_create.vout[0].scriptPubKey = GetScriptForDestination(ScriptHash(redeem_script));\r\n-    BOOST_CHECK_EQUAL(Solver(tx_create.vout[0].scriptPubKey, sol_dummy), TxoutType::SCRIPTHASH);\r\n+    BOOST_CHECK_EQUAL(Solver(tx_create.vout[0].scriptPubKey), TxoutType::SCRIPTHASH);\r\n     tx_spend.vin[0].prevout.hash = tx_create.GetHash();\r\n     tx_spend.vin[0].scriptSig = CScript{} << ToByteVector(redeem_script);\r\n     AddCoins(coins, CTransaction{tx_create}, 0, false);\r\n@@ -1196,7 +1195,7 @@ BOOST_AUTO_TEST_CASE(spends_witness_prog)\r\n \r\n     // P2TR\r\n     tx_create.vout[0].scriptPubKey = GetScriptForDestination(WitnessV1Taproot{XOnlyPubKey{pubkey}});\r\n-    BOOST_CHECK_EQUAL(Solver(tx_create.vout[0].scriptPubKey, sol_dummy), TxoutType::WITNESS_V1_TAPROOT);\r\n+    BOOST_CHECK_EQUAL(Solver(tx_create.vout[0].scriptPubKey), TxoutType::WITNESS_V1_TAPROOT);\r\n     tx_spend.vin[0].prevout.hash = tx_create.GetHash();\r\n     AddCoins(coins, CTransaction{tx_create}, 0, false);\r\n     BOOST_CHECK(::SpendsNonAnchorWitnessProg(CTransaction{tx_spend}, coins));\r\n@@ -1204,7 +1203,7 @@ BOOST_AUTO_TEST_CASE(spends_witness_prog)\r\n     // P2SH-wrapped P2TR (undefined, non-standard)\r\n     redeem_script = tx_create.vout[0].scriptPubKey;\r\n     tx_create.vout[0].scriptPubKey = GetScriptForDestination(ScriptHash(redeem_script));\r\n-    BOOST_CHECK_EQUAL(Solver(tx_create.vout[0].scriptPubKey, sol_dummy), TxoutType::SCRIPTHASH);\r\n+    BOOST_CHECK_EQUAL(Solver(tx_create.vout[0].scriptPubKey), TxoutType::SCRIPTHASH);\r\n     tx_spend.vin[0].prevout.hash = tx_create.GetHash();\r\n     tx_spend.vin[0].scriptSig = CScript{} << ToByteVector(redeem_script);\r\n     AddCoins(coins, CTransaction{tx_create}, 0, false);\r\n@@ -1214,7 +1213,7 @@ BOOST_AUTO_TEST_CASE(spends_witness_prog)\r\n \r\n     // P2A\r\n     tx_create.vout[0].scriptPubKey = GetScriptForDestination(PayToAnchor{});\r\n-    BOOST_CHECK_EQUAL(Solver(tx_create.vout[0].scriptPubKey, sol_dummy), TxoutType::ANCHOR);\r\n+    BOOST_CHECK_EQUAL(Solver(tx_create.vout[0].scriptPubKey), TxoutType::ANCHOR);\r\n     tx_spend.vin[0].prevout.hash = tx_create.GetHash();\r\n     AddCoins(coins, CTransaction{tx_create}, 0, false);\r\n     BOOST_CHECK(!::SpendsNonAnchorWitnessProg(CTransaction{tx_spend}, coins));\r\n@@ -1222,7 +1221,7 @@ BOOST_AUTO_TEST_CASE(spends_witness_prog)\r\n     // P2SH-wrapped P2A (undefined, non-standard)\r\n     redeem_script = tx_create.vout[0].scriptPubKey;\r\n     tx_create.vout[0].scriptPubKey = GetScriptForDestination(ScriptHash(redeem_script));\r\n-    BOOST_CHECK_EQUAL(Solver(tx_create.vout[0].scriptPubKey, sol_dummy), TxoutType::SCRIPTHASH);\r\n+    BOOST_CHECK_EQUAL(Solver(tx_create.vout[0].scriptPubKey), TxoutType::SCRIPTHASH);\r\n     tx_spend.vin[0].prevout.hash = tx_create.GetHash();\r\n     tx_spend.vin[0].scriptSig = CScript{} << ToByteVector(redeem_script);\r\n     AddCoins(coins, CTransaction{tx_create}, 0, false);\r\n@@ -1231,7 +1230,7 @@ BOOST_AUTO_TEST_CASE(spends_witness_prog)\r\n \r\n     // Undefined version 1 witness program\r\n     tx_create.vout[0].scriptPubKey = GetScriptForDestination(WitnessUnknown{1, {0x42, 0x42}});\r\n-    BOOST_CHECK_EQUAL(Solver(tx_create.vout[0].scriptPubKey, sol_dummy), TxoutType::WITNESS_UNKNOWN);\r\n+    BOOST_CHECK_EQUAL(Solver(tx_create.vout[0].scriptPubKey), TxoutType::WITNESS_UNKNOWN);\r\n     tx_spend.vin[0].prevout.hash = tx_create.GetHash();\r\n     AddCoins(coins, CTransaction{tx_create}, 0, false);\r\n     BOOST_CHECK(::SpendsNonAnchorWitnessProg(CTransaction{tx_spend}, coins));\r\n@@ -1239,7 +1238,7 @@ BOOST_AUTO_TEST_CASE(spends_witness_prog)\r\n     // P2SH-wrapped undefined version 1 witness program\r\n     redeem_script = tx_create.vout[0].scriptPubKey;\r\n     tx_create.vout[0].scriptPubKey = GetScriptForDestination(ScriptHash(redeem_script));\r\n-    BOOST_CHECK_EQUAL(Solver(tx_create.vout[0].scriptPubKey, sol_dummy), TxoutType::SCRIPTHASH);\r\n+    BOOST_CHECK_EQUAL(Solver(tx_create.vout[0].scriptPubKey), TxoutType::SCRIPTHASH);\r\n     tx_spend.vin[0].prevout.hash = tx_create.GetHash();\r\n     tx_spend.vin[0].scriptSig = CScript{} << ToByteVector(redeem_script);\r\n     AddCoins(coins, CTransaction{tx_create}, 0, false);\r\n@@ -1251,7 +1250,7 @@ BOOST_AUTO_TEST_CASE(spends_witness_prog)\r\n     const auto program{ToByteVector(XOnlyPubKey{pubkey})};\r\n     for (int i{2}; i <= 16; ++i) {\r\n         tx_create.vout[0].scriptPubKey = GetScriptForDestination(WitnessUnknown{i, program});\r\n-        BOOST_CHECK_EQUAL(Solver(tx_create.vout[0].scriptPubKey, sol_dummy), TxoutType::WITNESS_UNKNOWN);\r\n+        BOOST_CHECK_EQUAL(Solver(tx_create.vout[0].scriptPubKey), TxoutType::WITNESS_UNKNOWN);\r\n         tx_spend.vin[0].prevout.hash = tx_create.GetHash();\r\n         AddCoins(coins, CTransaction{tx_create}, 0, false);\r\n         BOOST_CHECK(::SpendsNonAnchorWitnessProg(CTransaction{tx_spend}, coins));\r\n@@ -1259,7 +1258,7 @@ BOOST_AUTO_TEST_CASE(spends_witness_prog)\r\n         // It's also detected within P2SH.\r\n         redeem_script = tx_create.vout[0].scriptPubKey;\r\n         tx_create.vout[0].scriptPubKey = GetScriptForDestination(ScriptHash(redeem_script));\r\n-        BOOST_CHECK_EQUAL(Solver(tx_create.vout[0].scriptPubKey, sol_dummy), TxoutType::SCRIPTHASH);\r\n+        BOOST_CHECK_EQUAL(Solver(tx_create.vout[0].scriptPubKey), TxoutType::SCRIPTHASH);\r\n         tx_spend.vin[0].prevout.hash = tx_create.GetHash();\r\n         tx_spend.vin[0].scriptSig = CScript{} << ToByteVector(redeem_script);\r\n         AddCoins(coins, CTransaction{tx_create}, 0, false);\r\ndiff --git a/src/wallet/rpc/addresses.cpp b/src/wallet/rpc/addresses.cpp\r\nindex a04e0903b9..0ddee1fa49 100644\r\n--- a/src/wallet/rpc/addresses.cpp\r\n+++ b/src/wallet/rpc/addresses.cpp\r\n@@ -267,7 +267,7 @@ public:\r\n     {\r\n         // Always present: script type and redeemscript\r\n         std::vector<std::vector<unsigned char>> solutions_data;\r\n-        TxoutType which_type = Solver(subscript, solutions_data);\r\n+        TxoutType which_type = Solver(subscript, &solutions_data);\r\n         obj.pushKV(\"script\", GetTxnOutputType(which_type));\r\n         obj.pushKV(\"hex\", HexStr(subscript));\r\n \r\ndiff --git a/src/wallet/scriptpubkeyman.cpp b/src/wallet/scriptpubkeyman.cpp\r\nindex a78f32f890..2f23861259 100644\r\n--- a/src/wallet/scriptpubkeyman.cpp\r\n+++ b/src/wallet/scriptpubkeyman.cpp\r\n@@ -86,7 +86,7 @@ IsMineResult LegacyWalletIsMineInnerDONOTUSE(const LegacyDataSPKM& keystore, con\r\n     IsMineResult ret = IsMineResult::NO;\r\n \r\n     std::vector<valtype> vSolutions;\r\n-    TxoutType whichType = Solver(scriptPubKey, vSolutions);\r\n+    TxoutType whichType = Solver(scriptPubKey, &vSolutions);\r\n \r\n     CKeyID keyID;\r\n     switch (whichType) {\r\n@@ -350,7 +350,7 @@ bool LegacyDataSPKM::LoadWatchOnly(const CScript &dest)\r\n static bool ExtractPubKey(const CScript &dest, CPubKey& pubKeyOut)\r\n {\r\n     std::vector<std::vector<unsigned char>> solutions;\r\n-    return Solver(dest, solutions) == TxoutType::PUBKEY &&\r\n+    return Solver(dest, &solutions) == TxoutType::PUBKEY &&\r\n         (pubKeyOut = CPubKey(solutions[0])).IsFullyValid();\r\n }\r\n \r\n@@ -1346,7 +1346,7 @@ std::optional<PSBTError> DescriptorScriptPubKeyMan::FillPSBT(PartiallySignedTran\r\n \r\n             // Taproot output pubkey\r\n             std::vector<std::vector<unsigned char>> sols;\r\n-            if (Solver(script, sols) == TxoutType::WITNESS_V1_TAPROOT) {\r\n+            if (Solver(script, &sols) == TxoutType::WITNESS_V1_TAPROOT) {\r\n                 sols[0].insert(sols[0].begin(), 0x02);\r\n                 pubkeys.emplace_back(sols[0]);\r\n                 sols[0][0] = 0x03;\r\ndiff --git a/src/wallet/spend.cpp b/src/wallet/spend.cpp\r\nindex 146fb49ea7..b36925381a 100644\r\n--- a/src/wallet/spend.cpp\r\n+++ b/src/wallet/spend.cpp\r\n@@ -452,7 +452,7 @@ CoinsResult AvailableCoins(const CWallet& wallet,\r\n \r\n         // Obtain script type\r\n         std::vector<std::vector<uint8_t>> script_solutions;\r\n-        TxoutType type = Solver(output.scriptPubKey, script_solutions);\r\n+        TxoutType type = Solver(output.scriptPubKey, &script_solutions);\r\n \r\n         // If the output is P2SH and solvable, we want to know if it is\r\n         // a P2SH (legacy) or one of P2SH-P2WPKH, P2SH-P2WSH (P2SH-Segwit). We can determine\r\n@@ -462,7 +462,7 @@ CoinsResult AvailableCoins(const CWallet& wallet,\r\n         if (type == TxoutType::SCRIPTHASH && solvable) {\r\n             CScript script;\r\n             if (!provider->GetCScript(CScriptID(uint160(script_solutions[0])), script)) continue;\r\n-            type = Solver(script, script_solutions);\r\n+            type = Solver(script, &script_solutions);\r\n             is_from_p2sh = true;\r\n         }\r\n```\r\n\r\n</details>\r\n\r\n<img width=\"1470\" height=\"831\" alt=\"image\" src=\"https://github.com/user-attachments/assets/e33db442-aebf-4fc2-bf03-0c07aee6d20d\" />\r\n\r\nConcept ACK. if you decide to use my alternative, please split it into smaller, focused commits.\r\n",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33645#issuecomment-3436715527",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33645"
    },
    {
      "event": "commented",
      "id": 3436769067,
      "node_id": "IC_kwDOABII587M2O8r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3436769067",
      "actor": {
        "login": "Raimo33",
        "id": 104778891,
        "node_id": "U_kgDOBj7Miw",
        "avatar_url": "https://avatars.githubusercontent.com/u/104778891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Raimo33",
        "html_url": "https://github.com/Raimo33",
        "followers_url": "https://api.github.com/users/Raimo33/followers",
        "following_url": "https://api.github.com/users/Raimo33/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Raimo33/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Raimo33/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Raimo33/subscriptions",
        "organizations_url": "https://api.github.com/users/Raimo33/orgs",
        "repos_url": "https://api.github.com/users/Raimo33/repos",
        "events_url": "https://api.github.com/users/Raimo33/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Raimo33/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-23T12:54:29Z",
      "updated_at": "2025-10-23T12:54:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "You're right, `vSolutions` is completely unnecessary in `AreInputsStandard()`. I'm not a fan of raw pointers but in this case it seems the best practical solution overall. smart pointers or optionals don't fit quite well.\r\n\r\nI'll use your commits with small tweaks and add you as co-author for now",
      "user": {
        "login": "Raimo33",
        "id": 104778891,
        "node_id": "U_kgDOBj7Miw",
        "avatar_url": "https://avatars.githubusercontent.com/u/104778891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Raimo33",
        "html_url": "https://github.com/Raimo33",
        "followers_url": "https://api.github.com/users/Raimo33/followers",
        "following_url": "https://api.github.com/users/Raimo33/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Raimo33/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Raimo33/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Raimo33/subscriptions",
        "organizations_url": "https://api.github.com/users/Raimo33/orgs",
        "repos_url": "https://api.github.com/users/Raimo33/repos",
        "events_url": "https://api.github.com/users/Raimo33/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Raimo33/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33645#issuecomment-3436769067",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33645"
    },
    {
      "event": "renamed",
      "id": 20453963003,
      "node_id": "RTE_lADOABII587SPCJozwAAAATDJrT7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20453963003",
      "actor": {
        "login": "Raimo33",
        "id": 104778891,
        "node_id": "U_kgDOBj7Miw",
        "avatar_url": "https://avatars.githubusercontent.com/u/104778891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Raimo33",
        "html_url": "https://github.com/Raimo33",
        "followers_url": "https://api.github.com/users/Raimo33/followers",
        "following_url": "https://api.github.com/users/Raimo33/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Raimo33/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Raimo33/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Raimo33/subscriptions",
        "organizations_url": "https://api.github.com/users/Raimo33/orgs",
        "repos_url": "https://api.github.com/users/Raimo33/repos",
        "events_url": "https://api.github.com/users/Raimo33/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Raimo33/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-23T13:10:05Z",
      "rename": {
        "from": "refactor: optimize: reuse containers in transaction policy verification",
        "to": "refactor: optimize: avoid allocations in script & policy verification"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDRkYzc2MDg2NjliYzExYWE0YzNhYmMxOTNhZjFmMzhhZWY4MmJjODI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4dc7608669bc11aa4c3abc193af1f38aef82bc82",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4dc7608669bc11aa4c3abc193af1f38aef82bc82",
      "tree": {
        "sha": "a7a4d4b8b4d89679caa45bc650414cf5b3fb04a1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a7a4d4b8b4d89679caa45bc650414cf5b3fb04a1"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/62b04f556b6ff265b43df3596a29dc40c993bf47",
          "sha": "62b04f556b6ff265b43df3596a29dc40c993bf47",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/62b04f556b6ff265b43df3596a29dc40c993bf47"
        }
      ],
      "message": "refactor: optimize: reuse container across multiple iterations",
      "committer": {
        "name": "Raimo33",
        "email": "claudio.raimondi@protonmail.com",
        "date": "2025-10-23T14:31:35Z"
      },
      "author": {
        "name": "Raimo33",
        "email": "claudio.raimondi@protonmail.com",
        "date": "2025-10-22T14:33:08Z"
      },
      "sha": "4dc7608669bc11aa4c3abc193af1f38aef82bc82"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 20456624259,
      "node_id": "HRFPE_lADOABII587SPCJozwAAAATDT1CD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20456624259",
      "actor": {
        "login": "Raimo33",
        "id": 104778891,
        "node_id": "U_kgDOBj7Miw",
        "avatar_url": "https://avatars.githubusercontent.com/u/104778891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Raimo33",
        "html_url": "https://github.com/Raimo33",
        "followers_url": "https://api.github.com/users/Raimo33/followers",
        "following_url": "https://api.github.com/users/Raimo33/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Raimo33/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Raimo33/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Raimo33/subscriptions",
        "organizations_url": "https://api.github.com/users/Raimo33/orgs",
        "repos_url": "https://api.github.com/users/Raimo33/repos",
        "events_url": "https://api.github.com/users/Raimo33/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Raimo33/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "55574ee694a95f2dc60e9bc5e3fd365b63cb4bbe",
      "commit_url": "https://api.github.com/repos/Raimo33/bitcoinknots/commits/55574ee694a95f2dc60e9bc5e3fd365b63cb4bbe",
      "created_at": "2025-10-23T14:55:24Z"
    },
    {
      "event": "commented",
      "id": 3437474962,
      "node_id": "IC_kwDOABII587M47SS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3437474962",
      "actor": {
        "login": "Raimo33",
        "id": 104778891,
        "node_id": "U_kgDOBj7Miw",
        "avatar_url": "https://avatars.githubusercontent.com/u/104778891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Raimo33",
        "html_url": "https://github.com/Raimo33",
        "followers_url": "https://api.github.com/users/Raimo33/followers",
        "following_url": "https://api.github.com/users/Raimo33/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Raimo33/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Raimo33/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Raimo33/subscriptions",
        "organizations_url": "https://api.github.com/users/Raimo33/orgs",
        "repos_url": "https://api.github.com/users/Raimo33/repos",
        "events_url": "https://api.github.com/users/Raimo33/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Raimo33/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-23T14:55:28Z",
      "updated_at": "2025-10-23T14:56:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "I've found other unnecessary related memory allocations. Instead of using @l0rinc 's approach of modifying the already existing methods (adding branch complexity) I opted for defining new methods. While this increases redundancy between similar methods, it produces a smaller diff and cleaner separate paths.\r\n\r\nperformance has further improved on my end. showing +15% for `CCoinsCaching`",
      "user": {
        "login": "Raimo33",
        "id": 104778891,
        "node_id": "U_kgDOBj7Miw",
        "avatar_url": "https://avatars.githubusercontent.com/u/104778891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Raimo33",
        "html_url": "https://github.com/Raimo33",
        "followers_url": "https://api.github.com/users/Raimo33/followers",
        "following_url": "https://api.github.com/users/Raimo33/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Raimo33/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Raimo33/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Raimo33/subscriptions",
        "organizations_url": "https://api.github.com/users/Raimo33/orgs",
        "repos_url": "https://api.github.com/users/Raimo33/repos",
        "events_url": "https://api.github.com/users/Raimo33/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Raimo33/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33645#issuecomment-3437474962",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33645"
    },
    {
      "event": "mentioned",
      "id": 20456626261,
      "node_id": "MEE_lADOABII587SPCJozwAAAATDT1hV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20456626261",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-23T14:55:29Z"
    },
    {
      "event": "subscribed",
      "id": 20456626292,
      "node_id": "SE_lADOABII587SPCJozwAAAATDT1h0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20456626292",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-23T14:55:29Z"
    },
    {
      "event": "commented",
      "id": 3437509775,
      "node_id": "IC_kwDOABII587M5DyP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3437509775",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-23T15:03:05Z",
      "updated_at": "2025-10-23T15:03:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "I deliberately avoided duplication, not sure why you think that's simpler",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33645#issuecomment-3437509775",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33645"
    },
    {
      "event": "commented",
      "id": 3437544981,
      "node_id": "IC_kwDOABII587M5MYV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3437544981",
      "actor": {
        "login": "Raimo33",
        "id": 104778891,
        "node_id": "U_kgDOBj7Miw",
        "avatar_url": "https://avatars.githubusercontent.com/u/104778891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Raimo33",
        "html_url": "https://github.com/Raimo33",
        "followers_url": "https://api.github.com/users/Raimo33/followers",
        "following_url": "https://api.github.com/users/Raimo33/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Raimo33/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Raimo33/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Raimo33/subscriptions",
        "organizations_url": "https://api.github.com/users/Raimo33/orgs",
        "repos_url": "https://api.github.com/users/Raimo33/repos",
        "events_url": "https://api.github.com/users/Raimo33/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Raimo33/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-23T15:10:40Z",
      "updated_at": "2025-10-23T15:11:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I deliberately avoided duplication, not sure why you think that's simpler\n\n- wether the diff is simpler is debatable.\n- I argue that the separation of concerns makes both `Solver` and `GetScriptPubKeyType` more readable\n- theoretically the duplication approach is faster, avoiding branches that check if `vSolutions` is null\n\n",
      "user": {
        "login": "Raimo33",
        "id": 104778891,
        "node_id": "U_kgDOBj7Miw",
        "avatar_url": "https://avatars.githubusercontent.com/u/104778891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Raimo33",
        "html_url": "https://github.com/Raimo33",
        "followers_url": "https://api.github.com/users/Raimo33/followers",
        "following_url": "https://api.github.com/users/Raimo33/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Raimo33/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Raimo33/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Raimo33/subscriptions",
        "organizations_url": "https://api.github.com/users/Raimo33/orgs",
        "repos_url": "https://api.github.com/users/Raimo33/repos",
        "events_url": "https://api.github.com/users/Raimo33/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Raimo33/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33645#issuecomment-3437544981",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33645"
    },
    {
      "event": "commented",
      "id": 3438881388,
      "node_id": "IC_kwDOABII587M-Sps",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3438881388",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-23T19:55:44Z",
      "updated_at": "2025-10-23T19:55:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "Approach NACK, you're needlessly modifying critical code and needlessly duplicating existing tests for them.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33645#issuecomment-3438881388",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33645"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFmMmQwMzIxMDBhZWEyNTYxOWUzZjZjZmVhYmI2NWRhZmY4ODc4YWE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/af2d032100aea25619e3f6cfeabb65daff8878aa",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/af2d032100aea25619e3f6cfeabb65daff8878aa",
      "tree": {
        "sha": "a5e8fe590f4a251a505a50b7cf9c426fb37ae40b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a5e8fe590f4a251a505a50b7cf9c426fb37ae40b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4dc7608669bc11aa4c3abc193af1f38aef82bc82",
          "sha": "4dc7608669bc11aa4c3abc193af1f38aef82bc82",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4dc7608669bc11aa4c3abc193af1f38aef82bc82"
        }
      ],
      "message": "refactor: avoid allocations by assigning in place",
      "committer": {
        "name": "Raimo33",
        "email": "claudio.raimondi@protonmail.com",
        "date": "2025-10-24T08:36:34Z"
      },
      "author": {
        "name": "Raimo33",
        "email": "claudio.raimondi@protonmail.com",
        "date": "2025-10-23T12:58:52Z"
      },
      "sha": "af2d032100aea25619e3f6cfeabb65daff8878aa"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDEyZDYxNzMwNzllYzNmZDUxN2UyMWIyODNkYTc1NmJiMGRjYmI3ZjQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/12d6173079ec3fd517e21b283da756bb0dcbb7f4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/12d6173079ec3fd517e21b283da756bb0dcbb7f4",
      "tree": {
        "sha": "bf163d5fe0e5d38ab4d0401f99b112fee54d9350",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bf163d5fe0e5d38ab4d0401f99b112fee54d9350"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/af2d032100aea25619e3f6cfeabb65daff8878aa",
          "sha": "af2d032100aea25619e3f6cfeabb65daff8878aa",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/af2d032100aea25619e3f6cfeabb65daff8878aa"
        }
      ],
      "message": "refactor: add alternative for `IsWitnessProgram` when script is not requested",
      "committer": {
        "name": "Raimo33",
        "email": "claudio.raimondi@protonmail.com",
        "date": "2025-10-24T08:36:37Z"
      },
      "author": {
        "name": "Raimo33",
        "email": "claudio.raimondi@protonmail.com",
        "date": "2025-10-24T07:33:38Z"
      },
      "sha": "12d6173079ec3fd517e21b283da756bb0dcbb7f4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGY0MzdlYWI5NGY2MzgyYTZkZjQ0ZTE5YzhhYTk3OThjYTgzMDI4OGU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f437eab94f6382a6df44e19c8aa9798ca830288e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f437eab94f6382a6df44e19c8aa9798ca830288e",
      "tree": {
        "sha": "02c34cbd6364ef9703561fef3b3b0527c2b7506c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/02c34cbd6364ef9703561fef3b3b0527c2b7506c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/12d6173079ec3fd517e21b283da756bb0dcbb7f4",
          "sha": "12d6173079ec3fd517e21b283da756bb0dcbb7f4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/12d6173079ec3fd517e21b283da756bb0dcbb7f4"
        }
      ],
      "message": "refactor: remove redundant parameters from `IsPayToAnchor` call",
      "committer": {
        "name": "Raimo33",
        "email": "claudio.raimondi@protonmail.com",
        "date": "2025-10-24T08:36:37Z"
      },
      "author": {
        "name": "Raimo33",
        "email": "claudio.raimondi@protonmail.com",
        "date": "2025-10-24T07:44:02Z"
      },
      "sha": "f437eab94f6382a6df44e19c8aa9798ca830288e"
    },
    {
      "event": "convert_to_draft",
      "id": 20477198079,
      "node_id": "CTDE_lADOABII587SPCJozwAAAATEiT7_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20477198079",
      "actor": {
        "login": "Raimo33",
        "id": 104778891,
        "node_id": "U_kgDOBj7Miw",
        "avatar_url": "https://avatars.githubusercontent.com/u/104778891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Raimo33",
        "html_url": "https://github.com/Raimo33",
        "followers_url": "https://api.github.com/users/Raimo33/followers",
        "following_url": "https://api.github.com/users/Raimo33/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Raimo33/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Raimo33/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Raimo33/subscriptions",
        "organizations_url": "https://api.github.com/users/Raimo33/orgs",
        "repos_url": "https://api.github.com/users/Raimo33/repos",
        "events_url": "https://api.github.com/users/Raimo33/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Raimo33/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-24T08:44:05Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 20477223040,
      "node_id": "HRFPE_lADOABII587SPCJozwAAAATEiaCA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20477223040",
      "actor": {
        "login": "Raimo33",
        "id": 104778891,
        "node_id": "U_kgDOBj7Miw",
        "avatar_url": "https://avatars.githubusercontent.com/u/104778891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Raimo33",
        "html_url": "https://github.com/Raimo33",
        "followers_url": "https://api.github.com/users/Raimo33/followers",
        "following_url": "https://api.github.com/users/Raimo33/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Raimo33/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Raimo33/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Raimo33/subscriptions",
        "organizations_url": "https://api.github.com/users/Raimo33/orgs",
        "repos_url": "https://api.github.com/users/Raimo33/repos",
        "events_url": "https://api.github.com/users/Raimo33/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Raimo33/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6267bcec4fe962330a40c230e9d86d89387c601f",
      "commit_url": "https://api.github.com/repos/Raimo33/bitcoinknots/commits/6267bcec4fe962330a40c230e9d86d89387c601f",
      "created_at": "2025-10-24T08:45:14Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGYzOGY4ODAwZTQ5MTc4MzNkYzM3MGU0YzM2MDNlZDkxNWE4MWY4ODk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f38f8800e4917833dc370e4c3603ed915a81f889",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f38f8800e4917833dc370e4c3603ed915a81f889",
      "tree": {
        "sha": "9d5987f2ac648ee060260939067d07b73b4f5a3b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9d5987f2ac648ee060260939067d07b73b4f5a3b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f437eab94f6382a6df44e19c8aa9798ca830288e",
          "sha": "f437eab94f6382a6df44e19c8aa9798ca830288e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f437eab94f6382a6df44e19c8aa9798ca830288e"
        }
      ],
      "message": "refactor: replace `push` with `emplace` to avoid temporary object construction",
      "committer": {
        "name": "Raimo33",
        "email": "claudio.raimondi@protonmail.com",
        "date": "2025-10-24T08:55:01Z"
      },
      "author": {
        "name": "Raimo33",
        "email": "claudio.raimondi@protonmail.com",
        "date": "2025-10-24T07:57:20Z"
      },
      "sha": "f38f8800e4917833dc370e4c3603ed915a81f889"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDhiZGUzNThhNmIxMTYxODFkMTQzZGE4NTJmNjgyMWI1NjY2YmE5NzA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8bde358a6b116181d143da852f6821b5666ba970",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8bde358a6b116181d143da852f6821b5666ba970",
      "tree": {
        "sha": "265efe18daf3991d9fd7b92c29d2cd2b24dc5825",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/265efe18daf3991d9fd7b92c29d2cd2b24dc5825"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f38f8800e4917833dc370e4c3603ed915a81f889",
          "sha": "f38f8800e4917833dc370e4c3603ed915a81f889",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f38f8800e4917833dc370e4c3603ed915a81f889"
        }
      ],
      "message": "Add TODOs",
      "committer": {
        "name": "Raimo33",
        "email": "claudio.raimondi@protonmail.com",
        "date": "2025-10-24T08:55:05Z"
      },
      "author": {
        "name": "Raimo33",
        "email": "claudio.raimondi@protonmail.com",
        "date": "2025-10-24T08:31:43Z"
      },
      "sha": "8bde358a6b116181d143da852f6821b5666ba970"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 20477460326,
      "node_id": "HRFPE_lADOABII587SPCJozwAAAATEjT9m",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20477460326",
      "actor": {
        "login": "Raimo33",
        "id": 104778891,
        "node_id": "U_kgDOBj7Miw",
        "avatar_url": "https://avatars.githubusercontent.com/u/104778891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Raimo33",
        "html_url": "https://github.com/Raimo33",
        "followers_url": "https://api.github.com/users/Raimo33/followers",
        "following_url": "https://api.github.com/users/Raimo33/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Raimo33/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Raimo33/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Raimo33/subscriptions",
        "organizations_url": "https://api.github.com/users/Raimo33/orgs",
        "repos_url": "https://api.github.com/users/Raimo33/repos",
        "events_url": "https://api.github.com/users/Raimo33/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Raimo33/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "8bde358a6b116181d143da852f6821b5666ba970",
      "commit_url": "https://api.github.com/repos/Raimo33/bitcoinknots/commits/8bde358a6b116181d143da852f6821b5666ba970",
      "created_at": "2025-10-24T08:55:10Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2449841418",
      "pull_request_review_id": 3362906716,
      "id": 2449841418,
      "node_id": "PRRC_kwDOABII586SBZ0K",
      "diff_hunk": "@@ -220,10 +220,12 @@ bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n         return false;\n     }\n \n-    for (unsigned int i = 0; i < tx.vin.size(); i++) {\n-        const CTxOut& prev = mapInputs.AccessCoin(tx.vin[i].prevout).out;\n+    std::vector<std::vector<unsigned char>> vSolutions;\n+    std::vector<std::vector<unsigned char>> stack;\n+    for (const CTxIn& txin : tx.vin) {\n+        const CTxOut& prev = mapInputs.AccessCoin(txin.prevout).out;\n \n-        std::vector<std::vector<unsigned char> > vSolutions;\n+        vSolutions.clear();\n         TxoutType whichType = Solver(prev.scriptPubKey, vSolutions);",
      "path": "src/policy/policy.cpp",
      "position": 1,
      "original_position": 13,
      "commit_id": "cedfff1db97f58181c27c54f8440b2f40ef63d35",
      "original_commit_id": "5d4b008728e13e923cd9d9315620b486c92b225b",
      "in_reply_to_id": null,
      "user": {
        "login": "cedwies",
        "id": 141683552,
        "node_id": "U_kgDOCHHrYA",
        "avatar_url": "https://avatars.githubusercontent.com/u/141683552?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cedwies",
        "html_url": "https://github.com/cedwies",
        "followers_url": "https://api.github.com/users/cedwies/followers",
        "following_url": "https://api.github.com/users/cedwies/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cedwies/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cedwies/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cedwies/subscriptions",
        "organizations_url": "https://api.github.com/users/cedwies/orgs",
        "repos_url": "https://api.github.com/users/cedwies/repos",
        "events_url": "https://api.github.com/users/cedwies/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cedwies/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Just double checking: `vSolutions.clear();` is intentional despite `Solver(...)` already clearing `vSolutions`? For me, I think it's good to keep.",
      "created_at": "2025-10-21T22:16:15Z",
      "updated_at": "2025-10-21T23:03:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33645#discussion_r2449841418",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2449841418"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33645"
        }
      },
      "start_line": null,
      "original_start_line": 228,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 228,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2450692465",
      "pull_request_review_id": 3364034901,
      "id": 2450692465,
      "node_id": "PRRC_kwDOABII586SEplx",
      "diff_hunk": "@@ -220,10 +220,12 @@ bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n         return false;\n     }\n \n-    for (unsigned int i = 0; i < tx.vin.size(); i++) {\n-        const CTxOut& prev = mapInputs.AccessCoin(tx.vin[i].prevout).out;\n+    std::vector<std::vector<unsigned char>> vSolutions;\n+    std::vector<std::vector<unsigned char>> stack;\n+    for (const CTxIn& txin : tx.vin) {\n+        const CTxOut& prev = mapInputs.AccessCoin(txin.prevout).out;\n \n-        std::vector<std::vector<unsigned char> > vSolutions;\n+        vSolutions.clear();\n         TxoutType whichType = Solver(prev.scriptPubKey, vSolutions);",
      "path": "src/policy/policy.cpp",
      "position": 1,
      "original_position": 13,
      "commit_id": "cedfff1db97f58181c27c54f8440b2f40ef63d35",
      "original_commit_id": "5d4b008728e13e923cd9d9315620b486c92b225b",
      "in_reply_to_id": 2449841418,
      "user": {
        "login": "Raimo33",
        "id": 104778891,
        "node_id": "U_kgDOBj7Miw",
        "avatar_url": "https://avatars.githubusercontent.com/u/104778891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Raimo33",
        "html_url": "https://github.com/Raimo33",
        "followers_url": "https://api.github.com/users/Raimo33/followers",
        "following_url": "https://api.github.com/users/Raimo33/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Raimo33/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Raimo33/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Raimo33/subscriptions",
        "organizations_url": "https://api.github.com/users/Raimo33/orgs",
        "repos_url": "https://api.github.com/users/Raimo33/repos",
        "events_url": "https://api.github.com/users/Raimo33/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Raimo33/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "yes, it is deliberate to prevent future programming errors.",
      "created_at": "2025-10-22T07:26:55Z",
      "updated_at": "2025-10-22T07:26:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33645#discussion_r2450692465",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2450692465"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33645"
        }
      },
      "start_line": null,
      "original_start_line": 228,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 228,
      "side": "RIGHT"
    }
  ]
}