{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665",
    "id": 1004149182,
    "node_id": "PR_kwDOABII58472hm-",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/25665",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/25665.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/25665.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/8b892d41fdeb5756fd83f6050f27a170338d260a",
    "number": 25665,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "refactor: Add util::Result failure values, multiple error and warning messages",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "Add `util::Result` support for returning more error information and make use of it in [LoadChainstate method](https://github.com/bitcoin/bitcoin/pull/25665/commits/79c3fe93cf2ef5d06b64444bee5c9d54fa81e9e0) as an initial application. Followup PRs [#25722](https://github.com/bitcoin/bitcoin/pull/25722) and [#29700](https://github.com/bitcoin/bitcoin/pull/29700) use it more broadly to return errors and warnings from wallet and kernel functions as well.\r\n\r\nThis change adds two major features to the result class:\r\n\r\n- For better error handling, adds the ability to return a value on failure, not just a value on success. This is a key missing feature that makes the result class not useful for functions like `LoadChainstate()` which produce different errors that need to be handled differently [^1].\r\n\r\n[^1]: Ability to return error values was actually present in the original implementation of [#25218](https://github.com/bitcoin/bitcoin/pull/25218), but unfortunately removed in later iterations.\r\n\r\n- For better error reporting, adds the ability to return warning messages and multiple errors, not just a single error string. This provides a way for functions to report errors and warnings in a standard way, and simplifies interfaces:\r\n\r\n    ```diff\r\n    -virtual std::unique_ptr<Wallet> loadWallet(const std::string& name, bilingual_str& error, std::vector<bilingual_str>& warnings) = 0;\r\n    +virtual util::Result<std::unique_ptr<Wallet>> loadWallet(const std::string& name) = 0;\r\n    ```\r\n\r\n    ```diff\r\n    -std::unique_ptr<WalletDatabase> MakeDatabase(const fs::path& path, const DatabaseOptions& options, DatabaseStatus& status, bilingual_str& error);\r\n    +util::Result<std::unique_ptr<WalletDatabase>, DatabaseError> MakeDatabase(const fs::path& path, const DatabaseOptions& options);\r\n   ```\r\n\r\nThis change also makes some more minor improvements:\r\n\r\n- Smaller type size. `util::Result<int>` is 16 bytes, and `util::Result<void>` is 8 bytes. Previously both were 72 bytes.\r\n\r\n- Broader type compatibility. Supports noncopyable and nonmovable success and error types.\r\n\r\n### Alternatives & design notes\r\n\r\nThe main goal for the `util::Result` class is to provide a standard way for functions to report error and warnings strings. The interface tries to make it easy to provide detailed error feedback to end users, without cluttering code or making it harder to return other result information. There have been multiple iterations of the design using different internal representations and providing different capabilities:\r\n\r\n|   | Representation (approximate)                   | Notes |\r\n|---|------------------------------------------------|-------|\r\n| _1_ | `tuple<T,optional<bilingual_str>>`        | Original #25218 implementation in da98fd2efc1a6b9c6e876cf3e227a8c2e9a10827. Good capabilities, but larger type size. Supports error standardized error reporting and customized error handling with failure values. |\r\n| _2_ | `variant<T,bilingual_str>`                | Final #25218 implementation in 7a45c33d1f8a758850cf8e7bd6ad508939ba5c0d. No support for returning failure values so not useful in many cases.\r\n| _3_ | `variant<monostate,T,F>`                 | Pending #25601 implementation that allows choosing whether to use standardized error reporting or return custom failure values, but doesn't support having both at the same time, like approaches _(1)_, _(4)_, _(5)_, _(6)_ do. |\r\n | _4_ | `tuple<variant<T,F>,bilingual_str>`      | Original #25608 implementation in c29d3008de9314dd463ed08e8bff39fe55324498. Basically the same as _(1)_ except it uses separate success and failure types instead of the same type. Using separate success and failure types makes the result class a little less flexible but can help avoid some ambiguity and inconsistent result states. |\r\n| _5_ | `tuple<T,optional<bilingual_str>>`        | Final #25608 implementation in dd91f294206ac87b213d23bb76656a0a5f0f4781. Essentially the same as original implementation _(1)_ except has some usability improvements. |\r\n| _6_ | `tuple<T,unique_ptr<tuple<F,bilingual_str>>` | Pending #25665 implementation (this PR). Supports returning failure values, uses separate success and failure types to avoid ambiguity, uses `unique_ptr` to reduce result type size, and avoids heap allocation in the happy path. |\r\n\r\n### Prior discussions & history\r\n\r\n- _furszy_ introduced a `BResult` class providing a standard error reporting mechanism in [#25218](https://github.com/bitcoin/bitcoin/pull/25218). It was renamed to `util::Result` in [#25721](https://github.com/bitcoin/bitcoin/pull/25721) but kept the same representation and capabilities.\r\n\r\n- _MarcoFalke_ suggested using `BResult` for the `LoadChainstate` function in [#25308 (comment)](https://github.com/bitcoin/bitcoin/pull/25308#issuecomment-1181674645). Inability to use `BResult` there due to lack of support for failure values led to initial work on [#25608](https://github.com/bitcoin/bitcoin/pull/25608).\r\n\r\n- _w0xlt_ wrote a `StructuredResult` class in [#25308](https://github.com/bitcoin/bitcoin/pull/25601) adding the ability to return failure values but sacrificing standard error reporting, which led to more work on [#25608](https://github.com/bitcoin/bitcoin/pull/25608).\r\n\r\n- _martinus_ suggested a space optimization in [#25608 (comment)](https://github.com/bitcoin/bitcoin/pull/25608#discussion_r921049409) that also made it easier to support distinct failure & success types, leading to [#25665](https://github.com/bitcoin/bitcoin/pull/25665) as a replacement for [#25608](https://github.com/bitcoin/bitcoin/pull/25608).",
    "labels": [
      {
        "id": 135961,
        "node_id": "MDU6TGFiZWwxMzU5NjE=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
        "name": "Refactoring",
        "color": "E6F6D6",
        "default": false
      }
    ],
    "created_at": "2022-07-21T12:46:09Z",
    "updated_at": "2025-10-16T02:11:59Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "98d46a2a1fa0409f2b3b6b570cbf302c13ac9e13",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "ryanofsky:pr/bresult2",
      "ref": "pr/bresult2",
      "sha": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 69901633,
        "node_id": "MDEwOlJlcG9zaXRvcnk2OTkwMTYzMw==",
        "name": "bitcoin",
        "full_name": "ryanofsky/bitcoin",
        "owner": {
          "login": "ryanofsky",
          "id": 7133040,
          "node_id": "MDQ6VXNlcjcxMzMwNDA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ryanofsky",
          "html_url": "https://github.com/ryanofsky",
          "followers_url": "https://api.github.com/users/ryanofsky/followers",
          "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
          "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
          "repos_url": "https://api.github.com/users/ryanofsky/repos",
          "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/ryanofsky/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/ryanofsky/bitcoin",
        "archive_url": "https://api.github.com/repos/ryanofsky/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/ryanofsky/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/ryanofsky/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/ryanofsky/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/ryanofsky/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/ryanofsky/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/ryanofsky/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/ryanofsky/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/ryanofsky/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/ryanofsky/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/ryanofsky/bitcoin/events",
        "forks_url": "https://api.github.com/repos/ryanofsky/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/ryanofsky/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/ryanofsky/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/ryanofsky/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/ryanofsky/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/ryanofsky/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/ryanofsky/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/ryanofsky/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/ryanofsky/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/ryanofsky/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:ryanofsky/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/ryanofsky/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/ryanofsky/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/ryanofsky/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/ryanofsky/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/ryanofsky/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/ryanofsky/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/ryanofsky/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/ryanofsky/bitcoin/hooks",
        "svn_url": "https://github.com/ryanofsky/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 11,
        "stargazers_count": 19,
        "watchers_count": 19,
        "size": 296418,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-10-15T00:42:21Z",
        "created_at": "2016-10-03T19:05:43Z",
        "updated_at": "2025-10-15T12:19:26Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "aef2dbb402763e49fadc37dc75dff87ff3a5c6b0",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 38036,
        "stargazers_count": 86206,
        "watchers_count": 86206,
        "size": 294954,
        "default_branch": "master",
        "open_issues_count": 826,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-10-15T14:01:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-10-16T02:11:16Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 692,
    "deletions": 167,
    "changed_files": 11,
    "commits": 6,
    "review_comments": 185,
    "comments": 46
  },
  "events": [
    {
      "event": "reviewed",
      "id": 1046496463,
      "node_id": "PRR_kwDOABII584-YETP",
      "url": null,
      "actor": null,
      "commit_id": "6a06a7c3ad264c0ddf4904949839be1ade8011a5",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2022-07-21T13:05:47Z",
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1046496463",
      "submitted_at": "2022-07-21T13:05:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "commented",
      "id": 1191475306,
      "node_id": "IC_kwDOABII585HBHhq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1191475306",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-21T13:18:25Z",
      "updated_at": "2022-07-21T13:18:25Z",
      "author_association": "CONTRIBUTOR",
      "body": "Draft PR since I want to add a commit taking advantages of ability to return chain results and return warnings.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1191475306",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7040053950,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAGjnrK-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7040053950",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6e84015ea56b4ff9743466bb9880db2b58a533b7",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/6e84015ea56b4ff9743466bb9880db2b58a533b7",
      "created_at": "2022-07-21T17:02:18Z"
    },
    {
      "event": "commented",
      "id": 1191801425,
      "node_id": "IC_kwDOABII585HCXJR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1191801425",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-21T18:24:49Z",
      "updated_at": "2025-10-16T02:11:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/25665.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Approach ACK | [hebasto](https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1294756069) |\n| Stale ACK | [w0xlt](https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1091053363), [stickies-v](https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1099419063), [hernanmarino](https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1423032563), [jonatack](https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1668402066), [achow101](https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1697964137), [maflcko](https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1602705708), [TheCharlatan](https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1895838904) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#31260](https://github.com/bitcoin/bitcoin/pull/31260) (scripted-diff: Type-safe settings retrieval by ryanofsky)\n* [#30595](https://github.com/bitcoin/bitcoin/pull/30595) (kernel: Introduce C header API by TheCharlatan)\n* [#30342](https://github.com/bitcoin/bitcoin/pull/30342) (kernel, logging: Pass Logger instances to kernel objects by ryanofsky)\n* [#30214](https://github.com/bitcoin/bitcoin/pull/30214) (refactor: Improve assumeutxo state representation by ryanofsky)\n* [#28690](https://github.com/bitcoin/bitcoin/pull/28690) (build: Introduce internal kernel library by TheCharlatan)\n* [#19461](https://github.com/bitcoin/bitcoin/pull/19461) (multiprocess: Add bitcoin-gui -ipcconnect option by ryanofsky)\n* [#19460](https://github.com/bitcoin/bitcoin/pull/19460) (multiprocess: Add bitcoin-wallet -ipcconnect option by ryanofsky)\n* [#10102](https://github.com/bitcoin/bitcoin/pull/10102) (Multiprocess bitcoin by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->\n### LLM Linter (✨ experimental)\n\nPossible typos and grammar issues:\n\n- Implemention note -> Implementation note [spelling error in comment]\n\n<sup>drahtbot_id_4_m</sup>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1191801425",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7040701722,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAGjqJUa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7040701722",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "9ba210bf6e9ba259caf499a649c2954240cbfa40",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/9ba210bf6e9ba259caf499a649c2954240cbfa40",
      "created_at": "2022-07-21T18:49:07Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7041010055,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAGjrUmH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7041010055",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "10e78ee295e2069620ea3f5a9286fe4a1a7f2f70",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/10e78ee295e2069620ea3f5a9286fe4a1a7f2f70",
      "created_at": "2022-07-21T19:43:35Z"
    },
    {
      "event": "labeled",
      "id": 7044308116,
      "node_id": "LE_lADOABII585ORepCzwAAAAGj35yU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7044308116",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-22T07:54:07Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7045552178,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAGj8pgy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7045552178",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "358e0fe5f205048333a728df3a67041c1b2e5bd1",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/358e0fe5f205048333a728df3a67041c1b2e5bd1",
      "created_at": "2022-07-22T10:43:15Z"
    },
    {
      "event": "unlabeled",
      "id": 7045704792,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAGj9OxY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7045704792",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-22T11:10:35Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7060171269,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAGk0aoF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7060171269",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "32dd8ebbb33b27b717d656c7c8c1de24a40a1b67",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/32dd8ebbb33b27b717d656c7c8c1de24a40a1b67",
      "created_at": "2022-07-25T22:22:28Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7066053315,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAGlK2rD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7066053315",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "33d5f039151912bb5e7d5031d3fb349786ed8c40",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/33d5f039151912bb5e7d5031d3fb349786ed8c40",
      "created_at": "2022-07-26T15:36:10Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7066991960,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAGlOb1Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7066991960",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "3b03b1a6d2ae1096528a3d753cd8965f50ec3c17",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/3b03b1a6d2ae1096528a3d753cd8965f50ec3c17",
      "created_at": "2022-07-26T17:43:53Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7068198568,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAGlTCao",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7068198568",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "78ddee78b1b95d66b62db88177b220b93d0500f6",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/78ddee78b1b95d66b62db88177b220b93d0500f6",
      "created_at": "2022-07-26T21:19:08Z"
    },
    {
      "event": "renamed",
      "id": 7074601665,
      "node_id": "RTE_lADOABII585ORepCzwAAAAGlrdrB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7074601665",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-27T16:45:33Z",
      "rename": {
        "from": "BResult improvements, allow returning separate value on failure",
        "to": "refactor: Add util::Result class and use it in LoadChainstate"
      }
    },
    {
      "event": "labeled",
      "id": 7074955463,
      "node_id": "LE_lADOABII585ORepCzwAAAAGls0DH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7074955463",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-27T17:39:43Z",
      "label": {
        "name": "Refactoring",
        "color": "E6F6D6"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7076009817,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAGlw1dZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7076009817",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "c2dc8a8a747d639acfa4a26db2c61c25b6f82571",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/c2dc8a8a747d639acfa4a26db2c61c25b6f82571",
      "created_at": "2022-07-27T19:27:53Z"
    },
    {
      "event": "ready_for_review",
      "id": 7076022534,
      "node_id": "RFRE_lADOABII585ORepCzwAAAAGlw4kG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7076022534",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-27T19:30:07Z"
    },
    {
      "event": "commented",
      "id": 1197277837,
      "node_id": "IC_kwDOABII585HXQKN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1197277837",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-27T19:32:29Z",
      "updated_at": "2022-07-27T19:32:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "Moved out of draft, since result interface is more complete now and there's more code using it",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1197277837",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "commented",
      "id": 1197289390,
      "node_id": "IC_kwDOABII585HXS-u",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1197289390",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-27T19:44:30Z",
      "updated_at": "2022-07-27T19:51:04Z",
      "author_association": "MEMBER",
      "body": "As said on the previous pull, I'd prefer if the order of the changes was inversed: First, change the existing interface methods and names, then change the internal class implementation. Otherwise we'll end up with the odd state of two classes that do the same thing but have a different name and people will continue to add more used of the \"deprecated\" class. I'd also find it easier to review an incremental diff than having a full separate implementation. But no strong opinion, if you and the other reviewers prefer it as-is now.\r\n\r\nEdit: My comment was https://github.com/bitcoin/bitcoin/pull/25665#discussion_r927707935 and I just realized that it was ambiguous and could be interpreted the opposite of what I meant.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1197289390",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "commented",
      "id": 1197317760,
      "node_id": "IC_kwDOABII585HXZ6A",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1197317760",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-27T20:13:40Z",
      "updated_at": "2022-07-27T20:13:40Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks, Marco! I will just tweak #25721 to be a standalone PR instead of depending on this PR",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1197317760",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "referenced",
      "id": 7076650572,
      "node_id": "REFE_lADOABII585ORepCzwAAAAGlzR5M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7076650572",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2aa408b4ccc57539a7f6b383e6c98acac10e39c0",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/2aa408b4ccc57539a7f6b383e6c98acac10e39c0",
      "created_at": "2022-07-27T21:27:19Z"
    },
    {
      "event": "referenced",
      "id": 7076684303,
      "node_id": "REFE_lADOABII585ORepCzwAAAAGlzaIP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7076684303",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e71b858bc0f30784191725d71a77bab4d280a6f9",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/e71b858bc0f30784191725d71a77bab4d280a6f9",
      "created_at": "2022-07-27T21:34:40Z"
    },
    {
      "event": "commented",
      "id": 1197397362,
      "node_id": "IC_kwDOABII585HXtVy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1197397362",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-27T21:39:43Z",
      "updated_at": "2022-07-27T21:39:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Thanks, Marco! I will just tweak #25721 to be a standalone PR instead of depending on this PR\r\n\r\nThis is done now",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1197397362",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "referenced",
      "id": 7076742518,
      "node_id": "REFE_lADOABII585ORepCzwAAAAGlzoV2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7076742518",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "42f4f7d126f6729c4924b0630f67d171f4d0ac9b",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/42f4f7d126f6729c4924b0630f67d171f4d0ac9b",
      "created_at": "2022-07-27T21:48:08Z"
    },
    {
      "event": "referenced",
      "id": 7104229418,
      "node_id": "REFE_lADOABII585ORepCzwAAAAGncfAq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7104229418",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e0289b1cdfe80644cb7045f74e6bd63562e092f8",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/e0289b1cdfe80644cb7045f74e6bd63562e092f8",
      "created_at": "2022-08-01T19:19:21Z"
    },
    {
      "event": "referenced",
      "id": 7106418909,
      "node_id": "REFE_lADOABII585ORepCzwAAAAGnk1jd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7106418909",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "3262acf70a9fdd6b4191812f928ed374dfcf32e1",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/3262acf70a9fdd6b4191812f928ed374dfcf32e1",
      "created_at": "2022-08-02T04:00:47Z"
    },
    {
      "event": "referenced",
      "id": 7106418974,
      "node_id": "REFE_lADOABII585ORepCzwAAAAGnk1ke",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7106418974",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1e1f5ca8aca24476a0a1bf9ab880284e90979810",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/1e1f5ca8aca24476a0a1bf9ab880284e90979810",
      "created_at": "2022-08-02T04:00:48Z"
    },
    {
      "event": "referenced",
      "id": 7111197256,
      "node_id": "REFE_lADOABII585ORepCzwAAAAGn3EJI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7111197256",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6777df621a8c3deef033fcf815b297ee4bf3ee0f",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/6777df621a8c3deef033fcf815b297ee4bf3ee0f",
      "created_at": "2022-08-02T15:47:58Z"
    },
    {
      "event": "referenced",
      "id": 7111783251,
      "node_id": "REFE_lADOABII585ORepCzwAAAAGn5TNT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7111783251",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "c654ec55f88c980bb085e4096435d69e97a09663",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/c654ec55f88c980bb085e4096435d69e97a09663",
      "created_at": "2022-08-02T17:06:34Z"
    },
    {
      "event": "referenced",
      "id": 7111901404,
      "node_id": "REFE_lADOABII585ORepCzwAAAAGn5wDc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7111901404",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7b249b3a163effc08c9faca841647c936d22ee7a",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/7b249b3a163effc08c9faca841647c936d22ee7a",
      "created_at": "2022-08-02T17:24:31Z"
    },
    {
      "event": "referenced",
      "id": 7119778304,
      "node_id": "REFE_lADOABII585ORepCzwAAAAGoXzIA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7119778304",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a23cca56c0a7f4a267915b4beba3af3454c51603",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/a23cca56c0a7f4a267915b4beba3af3454c51603",
      "created_at": "2022-08-03T15:35:56Z"
    },
    {
      "event": "referenced",
      "id": 7119778489,
      "node_id": "REFE_lADOABII585ORepCzwAAAAGoXzK5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7119778489",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0e508480645495840122fb4bb1d88dce2b4b0eb3",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/0e508480645495840122fb4bb1d88dce2b4b0eb3",
      "created_at": "2022-08-03T15:35:58Z"
    },
    {
      "event": "referenced",
      "id": 7135993880,
      "node_id": "REFE_lADOABII585ORepCzwAAAAGpVqAY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7135993880",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "006740b6f6475ed6ae08803c60dd82027602695b",
      "commit_url": "https://api.github.com/repos/bitcoin-core/gui/commits/006740b6f6475ed6ae08803c60dd82027602695b",
      "created_at": "2022-08-05T13:36:13Z"
    },
    {
      "event": "labeled",
      "id": 7136132220,
      "node_id": "LE_lADOABII585ORepCzwAAAAGpWLx8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7136132220",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-05T13:55:33Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "renamed",
      "id": 7137948498,
      "node_id": "RTE_lADOABII585ORepCzwAAAAGpdHNS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7137948498",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-05T18:45:12Z",
      "rename": {
        "from": "refactor: Add util::Result class and use it in LoadChainstate",
        "to": "refactor: Add util::Result failure values, multiple error and warning messages"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7137958104,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAGpdJjY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7137958104",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/590bc615a3120a8f11712220546f9654058b82f0",
      "created_at": "2022-08-05T18:47:15Z"
    },
    {
      "event": "commented",
      "id": 1206754307,
      "node_id": "IC_kwDOABII585H7ZwD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1206754307",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-05T18:48:33Z",
      "updated_at": "2022-08-05T18:48:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased c2dc8a8a747d639acfa4a26db2c61c25b6f82571 -> 590bc615a3120a8f11712220546f9654058b82f0 ([`pr/bresult2.10`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.10) -> [`pr/bresult2.11`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.11), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.10-rebase..pr/bresult2.11)) due to conflicts with #25721",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1206754307",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "unlabeled",
      "id": 7138483715,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAGpfJ4D",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7138483715",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-05T20:13:16Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1070947229,
      "node_id": "PRR_kwDOABII584_1Vud",
      "url": null,
      "actor": null,
      "commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2022-08-12T11:18:56Z",
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1070947229",
      "submitted_at": "2022-08-12T11:18:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "reviewed",
      "id": 1071979503,
      "node_id": "PRR_kwDOABII584_5Rvv",
      "url": null,
      "actor": null,
      "commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2022-08-13T16:47:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "Riahiamirreza",
        "id": 54557628,
        "node_id": "MDQ6VXNlcjU0NTU3NjI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/54557628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Riahiamirreza",
        "html_url": "https://github.com/Riahiamirreza",
        "followers_url": "https://api.github.com/users/Riahiamirreza/followers",
        "following_url": "https://api.github.com/users/Riahiamirreza/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Riahiamirreza/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Riahiamirreza/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Riahiamirreza/subscriptions",
        "organizations_url": "https://api.github.com/users/Riahiamirreza/orgs",
        "repos_url": "https://api.github.com/users/Riahiamirreza/repos",
        "events_url": "https://api.github.com/users/Riahiamirreza/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Riahiamirreza/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1071979503",
      "submitted_at": "2022-08-13T16:47:57Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "reviewed",
      "id": 1072373197,
      "node_id": "PRR_kwDOABII584_6x3N",
      "url": null,
      "actor": null,
      "commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2022-08-15T08:49:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "Riahiamirreza",
        "id": 54557628,
        "node_id": "MDQ6VXNlcjU0NTU3NjI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/54557628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Riahiamirreza",
        "html_url": "https://github.com/Riahiamirreza",
        "followers_url": "https://api.github.com/users/Riahiamirreza/followers",
        "following_url": "https://api.github.com/users/Riahiamirreza/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Riahiamirreza/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Riahiamirreza/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Riahiamirreza/subscriptions",
        "organizations_url": "https://api.github.com/users/Riahiamirreza/orgs",
        "repos_url": "https://api.github.com/users/Riahiamirreza/repos",
        "events_url": "https://api.github.com/users/Riahiamirreza/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Riahiamirreza/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1072373197",
      "submitted_at": "2022-08-15T08:49:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "reviewed",
      "id": 1072653423,
      "node_id": "PRR_kwDOABII584_72Rv",
      "url": null,
      "actor": null,
      "commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2022-08-15T13:07:36Z",
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "Riahiamirreza",
        "id": 54557628,
        "node_id": "MDQ6VXNlcjU0NTU3NjI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/54557628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Riahiamirreza",
        "html_url": "https://github.com/Riahiamirreza",
        "followers_url": "https://api.github.com/users/Riahiamirreza/followers",
        "following_url": "https://api.github.com/users/Riahiamirreza/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Riahiamirreza/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Riahiamirreza/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Riahiamirreza/subscriptions",
        "organizations_url": "https://api.github.com/users/Riahiamirreza/orgs",
        "repos_url": "https://api.github.com/users/Riahiamirreza/repos",
        "events_url": "https://api.github.com/users/Riahiamirreza/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Riahiamirreza/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1072653423",
      "submitted_at": "2022-08-15T13:07:36Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7190548364,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAGslw-M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7190548364",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "65481de0646f21349f24327410e4d7eb5189e5b3",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/65481de0646f21349f24327410e4d7eb5189e5b3",
      "created_at": "2022-08-15T18:14:55Z"
    },
    {
      "event": "commented",
      "id": 1215557266,
      "node_id": "IC_kwDOABII585Ic-6S",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1215557266",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-15T18:16:04Z",
      "updated_at": "2022-08-15T18:16:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "Updated 590bc615a3120a8f11712220546f9654058b82f0 -> 65481de0646f21349f24327410e4d7eb5189e5b3 ([`pr/bresult2.11`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.11) -> [`pr/bresult2.12`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.12), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.11..pr/bresult2.12)) just adding some comments to answer review questions",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1215557266",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "reviewed",
      "id": 1074563820,
      "node_id": "PRR_kwDOABII585ADIrs",
      "url": null,
      "actor": null,
      "commit_id": "65481de0646f21349f24327410e4d7eb5189e5b3",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2022-08-16T18:08:37Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1074563820",
      "submitted_at": "2022-08-16T18:08:37Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "reviewed",
      "id": 1075933057,
      "node_id": "PRR_kwDOABII585AIW-B",
      "url": null,
      "actor": null,
      "commit_id": "65481de0646f21349f24327410e4d7eb5189e5b3",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2022-08-17T15:10:05Z",
      "author_association": "NONE",
      "user": {
        "login": "AryanJ-NYC",
        "id": 8263430,
        "node_id": "MDQ6VXNlcjgyNjM0MzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8263430?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/AryanJ-NYC",
        "html_url": "https://github.com/AryanJ-NYC",
        "followers_url": "https://api.github.com/users/AryanJ-NYC/followers",
        "following_url": "https://api.github.com/users/AryanJ-NYC/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/AryanJ-NYC/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/AryanJ-NYC/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/AryanJ-NYC/subscriptions",
        "organizations_url": "https://api.github.com/users/AryanJ-NYC/orgs",
        "repos_url": "https://api.github.com/users/AryanJ-NYC/repos",
        "events_url": "https://api.github.com/users/AryanJ-NYC/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/AryanJ-NYC/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1075933057",
      "submitted_at": "2022-08-17T15:10:04Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "reviewed",
      "id": 1076136266,
      "node_id": "PRR_kwDOABII585AJIlK",
      "url": null,
      "actor": null,
      "commit_id": "65481de0646f21349f24327410e4d7eb5189e5b3",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2022-08-17T17:21:14Z",
      "author_association": "MEMBER",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1076136266",
      "submitted_at": "2022-08-17T17:21:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7208669826,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAGtq5KC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7208669826",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/9bd10728bada8b04d86f5621ee127713f628a9ad",
      "created_at": "2022-08-17T19:24:26Z"
    },
    {
      "event": "reviewed",
      "id": 1076183597,
      "node_id": "PRR_kwDOABII585AJUIt",
      "url": null,
      "actor": null,
      "commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2022-08-17T19:26:55Z",
      "author_association": "CONTRIBUTOR",
      "body": "Updated 65481de0646f21349f24327410e4d7eb5189e5b3 -> 9bd10728bada8b04d86f5621ee127713f628a9ad ([`pr/bresult2.12`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.12) -> [`pr/bresult2.13`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.13), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.12..pr/bresult2.13)) with suggestions",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1076183597",
      "submitted_at": "2022-08-17T19:26:55Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "reviewed",
      "id": 1076687479,
      "node_id": "PRR_kwDOABII585ALPJ3",
      "url": null,
      "actor": null,
      "commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2022-08-18T04:38:22Z",
      "author_association": "CONTRIBUTOR",
      "body": "Tested ACK and Code review ACK. I got a few warnings while compiling though (missing-field-initializers)",
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1076687479",
      "submitted_at": "2022-08-18T04:38:22Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "commented",
      "id": 1219551815,
      "node_id": "IC_kwDOABII585IsOJH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1219551815",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-18T14:18:21Z",
      "updated_at": "2022-08-18T14:18:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Tested ACK and Code review ACK. I got a few warnings while compiling though (missing-field-initializers)\r\n\r\nThanks for testing! @hernanmarino could you post the warnings, and maybe post your compiler version? I don't think I'm seeing these and I don't think they are happening on CI because those builds treat warnings as errors. I'd like to fix this if possible.\r\n\r\n\r\n\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1219551815",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "mentioned",
      "id": 7214834801,
      "node_id": "MEE_lADOABII585ORepCzwAAAAGuCaRx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7214834801",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-18T14:18:21Z"
    },
    {
      "event": "subscribed",
      "id": 7214834805,
      "node_id": "SE_lADOABII585ORepCzwAAAAGuCaR1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7214834805",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-18T14:18:21Z"
    },
    {
      "event": "commented",
      "id": 1220755709,
      "node_id": "IC_kwDOABII585Iw0D9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1220755709",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-19T14:36:53Z",
      "updated_at": "2022-08-19T14:36:53Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Thanks for testing! @hernanmarino could you post the warnings, and maybe post your compiler version? I don't think I'm seeing these and I don't think they are happening on CI because those builds treat warnings as errors. I'd like to fix this if possible.\r\n\r\nYes, this is one of them (there are a few more , all similar)\r\n\r\n```\r\n In file included from ./interfaces/wallet.h:15,\r\n                 from wallet/interfaces.cpp:5:\r\n./util/result.h: In instantiation of ‘util::Result<OT, OF>&& util::Result<T, F>::operator<<(util::Result<OT, OF>&&) [with OT = std::unique_ptr<interfaces::Wallet>; OF = void; T = std::unique_ptr<interfaces::Wallet>; F = void]’:\r\n\r\n./util/result.h:187:15:   required from ‘void util::Result<T, F>::MoveConstruct(util::Result<OT, OF>&) [with OT = std::unique_ptr<interfaces::Wallet>; OF = void; T = std::unique_ptr<interfaces::Wallet>; F = void]’\r\n\r\n./util/result.h:202:51:   required from ‘util::Result<T, F>::Result(util::Result<OT, OF>&&) [with OT = std::unique_ptr<interfaces::Wallet>; OF = void; T = std::unique_ptr<interfaces::Wallet>; F = void]’\r\n\r\nwallet/interfaces.cpp:580:16:   required from here\r\n\r\n./util/result.h:218:32: warning: missing initializer for member ‘util::detail::ErrorInfo<void>::failure’ [-Wmissing-field-initializers]\r\n  218 |             this->m_info.reset(new detail::ErrorInfo<F>{.errors = std::move(other.m_info->errors),\r\n      |                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n  219 |                                                         .warnings = std::move(other.m_info->warnings)});\r\n      |                                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n```\r\n\r\nI'm using  gcc  11.2.0 . If you need them all, just let me know\r\n\r\n\r\n\r\n\r\n",
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1220755709",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "mentioned",
      "id": 7222757275,
      "node_id": "MEE_lADOABII585ORepCzwAAAAGugoeb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7222757275",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-19T14:36:53Z"
    },
    {
      "event": "subscribed",
      "id": 7222757288,
      "node_id": "SE_lADOABII585ORepCzwAAAAGugoeo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7222757288",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-19T14:36:53Z"
    },
    {
      "event": "commented",
      "id": 1220773746,
      "node_id": "IC_kwDOABII585Iw4dy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1220773746",
      "actor": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-19T14:53:26Z",
      "updated_at": "2022-08-24T16:08:05Z",
      "author_association": "MEMBER",
      "body": "@ryanofsky, @hernanmarino I also get those warnings.\r\n\r\nMy version of g++ is 9.4.0; please let me know if you need any other details.",
      "user": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1220773746",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "mentioned",
      "id": 7222882958,
      "node_id": "MEE_lADOABII585ORepCzwAAAAGuhHKO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7222882958",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-19T14:53:26Z"
    },
    {
      "event": "subscribed",
      "id": 7222882964,
      "node_id": "SE_lADOABII585ORepCzwAAAAGuhHKU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7222882964",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-19T14:53:26Z"
    },
    {
      "event": "mentioned",
      "id": 7222882974,
      "node_id": "MEE_lADOABII585ORepCzwAAAAGuhHKe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7222882974",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-19T14:53:26Z"
    },
    {
      "event": "subscribed",
      "id": 7222882981,
      "node_id": "SE_lADOABII585ORepCzwAAAAGuhHKl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7222882981",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-19T14:53:26Z"
    },
    {
      "event": "reviewed",
      "id": 1079113915,
      "node_id": "PRR_kwDOABII585AUfi7",
      "url": null,
      "actor": null,
      "commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2022-08-19T16:59:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1079113915",
      "submitted_at": "2022-08-19T16:59:37Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "reviewed",
      "id": 1069943757,
      "node_id": "PRR_kwDOABII584_xgvN",
      "url": null,
      "actor": null,
      "commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2022-08-19T17:05:32Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK 9bd10728bada8b04d86f5621ee127713f628a9ad\r\n\r\nI'm not getting any compilation warnings:\r\n```sh\r\ng++ --version\r\nApple clang version 13.1.6 (clang-1316.0.21.2.5)\r\nTarget: arm64-apple-darwin21.5.0\r\n```\r\n\r\nIt's a beautiful implementation and I've learned a lot while reviewing this. That's both a compliment and a warning that my review shouldn't weigh heavily, even if I'm doing it as thoroughly as I can. My main concern is that for everyone not already intimately familiar with C++, I think this takes a _long_ time to review thoroughly. The genericness made it difficult to reason about for me. I haven't come up with a simpler alternative so I don't think I'll want that to stand in the way of anything, though. Just something to be mindful of.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1069943757",
      "submitted_at": "2022-08-19T17:05:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "referenced",
      "id": 7227067897,
      "node_id": "REFE_lADOABII585ORepCzwAAAAGuxE35",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7227067897",
      "actor": {
        "login": "Rspigler",
        "id": 24482484,
        "node_id": "MDQ6VXNlcjI0NDgyNDg0",
        "avatar_url": "https://avatars.githubusercontent.com/u/24482484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Rspigler",
        "html_url": "https://github.com/Rspigler",
        "followers_url": "https://api.github.com/users/Rspigler/followers",
        "following_url": "https://api.github.com/users/Rspigler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Rspigler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Rspigler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Rspigler/subscriptions",
        "organizations_url": "https://api.github.com/users/Rspigler/orgs",
        "repos_url": "https://api.github.com/users/Rspigler/repos",
        "events_url": "https://api.github.com/users/Rspigler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Rspigler/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f2f8c5be4998eabe94eca291c7dff63a9f6d929e",
      "commit_url": "https://api.github.com/repos/Rspigler/bitcoin/commits/f2f8c5be4998eabe94eca291c7dff63a9f6d929e",
      "created_at": "2022-08-21T01:43:00Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7253318829,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAGwVNyt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7253318829",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "10e158a5b57ba3a26e5046a9b42fcc757652f35a",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/10e158a5b57ba3a26e5046a9b42fcc757652f35a",
      "created_at": "2022-08-24T18:25:10Z"
    },
    {
      "event": "reviewed",
      "id": 1081114599,
      "node_id": "PRR_kwDOABII585AcH_n",
      "url": null,
      "actor": null,
      "commit_id": "10e158a5b57ba3a26e5046a9b42fcc757652f35a",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2022-08-24T18:30:42Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for testing and reviews!\r\n\r\nUpdated 9bd10728bada8b04d86f5621ee127713f628a9ad -> 10e158a5b57ba3a26e5046a9b42fcc757652f35a ([`pr/bresult2.13`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.13) -> [`pr/bresult2.14`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.14), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.13..pr/bresult2.14)) with suggestions",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1081114599",
      "submitted_at": "2022-08-24T18:30:42Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7261103560,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAGwy6XI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7261103560",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5aff7baf375c432746dff6862e9d06064ea1fb18",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/5aff7baf375c432746dff6862e9d06064ea1fb18",
      "created_at": "2022-08-25T16:30:27Z"
    },
    {
      "event": "reviewed",
      "id": 1085638384,
      "node_id": "PRR_kwDOABII585AtYbw",
      "url": null,
      "actor": null,
      "commit_id": "5aff7baf375c432746dff6862e9d06064ea1fb18",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2022-08-25T16:34:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "Updated 10e158a5b57ba3a26e5046a9b42fcc757652f35a -> 5aff7baf375c432746dff6862e9d06064ea1fb18 ([`pr/bresult2.14`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.14) -> [`pr/bresult2.15`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.15), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.14..pr/bresult2.15)) adding MoveMessages suggestion and few more comments and simplifications.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1085638384",
      "submitted_at": "2022-08-25T16:34:04Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "reviewed",
      "id": 1088926315,
      "node_id": "PRR_kwDOABII585A57Jr",
      "url": null,
      "actor": null,
      "commit_id": "5aff7baf375c432746dff6862e9d06064ea1fb18",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2022-08-29T15:36:04Z",
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1088926315",
      "submitted_at": "2022-08-29T15:36:04Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "reviewed",
      "id": 1088932989,
      "node_id": "PRR_kwDOABII585A58x9",
      "url": null,
      "actor": null,
      "commit_id": "5aff7baf375c432746dff6862e9d06064ea1fb18",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2022-08-29T15:39:32Z",
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1088932989",
      "submitted_at": "2022-08-29T15:39:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7289939681,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAGyg6bh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7289939681",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "834857e56b8de0bfabee7315622c0211b4a48746",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/834857e56b8de0bfabee7315622c0211b4a48746",
      "created_at": "2022-08-30T18:19:54Z"
    },
    {
      "event": "reviewed",
      "id": 1090610240,
      "node_id": "PRR_kwDOABII585BAWRA",
      "url": null,
      "actor": null,
      "commit_id": "834857e56b8de0bfabee7315622c0211b4a48746",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2022-08-30T18:27:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "Updated 5aff7baf375c432746dff6862e9d06064ea1fb18 -> 834857e56b8de0bfabee7315622c0211b4a48746 ([`pr/bresult2.15`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.15) -> [`pr/bresult2.16`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.16), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.15..pr/bresult2.16)) with suggestions, and splitting the main commit",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1090610240",
      "submitted_at": "2022-08-30T18:27:31Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "reviewed",
      "id": 1091053363,
      "node_id": "PRR_kwDOABII585BCCcz",
      "url": null,
      "actor": null,
      "commit_id": "834857e56b8de0bfabee7315622c0211b4a48746",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2022-08-30T22:42:00Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK https://github.com/bitcoin/bitcoin/pull/25665/commits/834857e56b8de0bfabee7315622c0211b4a48746",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1091053363",
      "submitted_at": "2022-08-30T22:42:00Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "reviewed",
      "id": 1090849342,
      "node_id": "PRR_kwDOABII585BBQo-",
      "url": null,
      "actor": null,
      "commit_id": "834857e56b8de0bfabee7315622c0211b4a48746",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2022-08-31T11:33:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "Code Review ACK 834857e56",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1090849342",
      "submitted_at": "2022-08-31T11:33:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7306298640,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAGzfUUQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7306298640",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "82c549aa538a5318fdb56d91117b4c9fc43737de",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/82c549aa538a5318fdb56d91117b4c9fc43737de",
      "created_at": "2022-09-01T15:17:53Z"
    },
    {
      "event": "reviewed",
      "id": 1093461843,
      "node_id": "PRR_kwDOABII585BLOdT",
      "url": null,
      "actor": null,
      "commit_id": "82c549aa538a5318fdb56d91117b4c9fc43737de",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2022-09-01T15:21:46Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the reviews! Just tweaked a few things as suggested.\r\n\r\nUpdated 834857e56b8de0bfabee7315622c0211b4a48746 -> 82c549aa538a5318fdb56d91117b4c9fc43737de ([`pr/bresult2.16`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.16) -> [`pr/bresult2.17`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.17), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.16..pr/bresult2.17)) with suggestions",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1093461843",
      "submitted_at": "2022-09-01T15:21:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7308610288,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAGzoIrw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7308610288",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "c14e904f66505b3e89ca1138c8d2fa4e3d0916d0",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/c14e904f66505b3e89ca1138c8d2fa4e3d0916d0",
      "created_at": "2022-09-01T20:57:46Z"
    },
    {
      "event": "commented",
      "id": 1234778363,
      "node_id": "IC_kwDOABII585JmTj7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1234778363",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-01T21:02:16Z",
      "updated_at": "2022-09-01T21:02:39Z",
      "author_association": "CONTRIBUTOR",
      "body": "Some changes made earlier in https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1085638384 broke derived-to-base type conversions used in followup PR #25722. Latest push fixes this and adds a test.\r\n\r\nUpdated 82c549aa538a5318fdb56d91117b4c9fc43737de -> c14e904f66505b3e89ca1138c8d2fa4e3d0916d0 ([`pr/bresult2.17`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.17) -> [`pr/bresult2.18`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.18), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.17..pr/bresult2.18)) adding fix and test for derived to base conversions\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1234778363",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "reviewed",
      "id": 1099419063,
      "node_id": "PRR_kwDOABII585Bh823",
      "url": null,
      "actor": null,
      "commit_id": "c14e904f66505b3e89ca1138c8d2fa4e3d0916d0",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2022-09-07T16:40:07Z",
      "author_association": "CONTRIBUTOR",
      "body": "Code review re-ACK c14e904f66505b3e89ca1138c8d2fa4e3d0916d0",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1099419063",
      "submitted_at": "2022-09-07T16:40:07Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "reviewed",
      "id": 1103995676,
      "node_id": "PRR_kwDOABII585BzaMc",
      "url": null,
      "actor": null,
      "commit_id": "c14e904f66505b3e89ca1138c8d2fa4e3d0916d0",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2022-09-12T15:36:21Z",
      "author_association": "MEMBER",
      "body": "review ACK f7b4fa870783ecd5f9a408bd603ff9cf0399cc3e 🛍\r\n\r\n<details><summary>Show signature</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nreview ACK f7b4fa870783ecd5f9a408bd603ff9cf0399cc3e 🛍\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGyBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUjixAv439pj0FjYrwKsRqf1jJfBZhalBe6IAeD8yperLaCmdGfmSp0udgbTwuGI\r\n5YMasCELJ3PikDrscmn6snYiYBb+0PMgPMqriUKMWxmmMDW5v9aiqefxSgEGBQro\r\n2euNt+qSvycWOHt2We2oZiRyqGZZooQNMBOETo4y6v164pdysueFKNFac3ppI3AW\r\nLLepp/FEaId5t8dIlaVo7q49I55AQ0xdduptslA2GmZCcXyVA7bNZrcQxc2NxoH7\r\nXZFFTbkYri51Nn8bRcD/EK47Cc04CCqw8p9XVeD4xpkZBzqoHKIk/3wlaqN2qgJb\r\n8cgK6xoBOQIsKk43ez3Kxhip6pjQ3fAVwqThz9S9Csf7Td1qCmrhM59n/2eMOz5Y\r\n30XwsiGigRr9IDr5Hi3XxrRZzyUwmqZyvN+n3JvT7lkzQhCDPkIozJPGFWgQEfRC\r\nXuJQdRQW7LOZH1GVnXRP1/wCSNpcXwjqNDT+syYEQk91/qezM+NJ1yfToQJkXC7i\r\neIhpCy8=\r\n=b8pq\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n\r\n</details>\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1103995676",
      "submitted_at": "2022-09-12T15:36:21Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7377634647,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAG3vcVX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7377634647",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "05a97d3208cc365cdeac9de281529568b3cd056c",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/05a97d3208cc365cdeac9de281529568b3cd056c",
      "created_at": "2022-09-13T15:07:55Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7377736126,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAG3v1G-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7377736126",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e04d8a754ff1b25cab483996319a583e6e3e680a",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/e04d8a754ff1b25cab483996319a583e6e3e680a",
      "created_at": "2022-09-13T15:18:55Z"
    },
    {
      "event": "reviewed",
      "id": 1104682926,
      "node_id": "PRR_kwDOABII585B2B-u",
      "url": null,
      "actor": null,
      "commit_id": "e04d8a754ff1b25cab483996319a583e6e3e680a",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2022-09-13T15:22:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the reviews! New pushes implement all the suggested changes.\r\n\r\nUpdated c14e904f66505b3e89ca1138c8d2fa4e3d0916d0 -> 05a97d3208cc365cdeac9de281529568b3cd056c ([`pr/bresult2.18`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.18) -> [`pr/bresult2.19`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.19), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.18..pr/bresult2.19)) with suggestions. Also replaced operator<< with operator>> to simplify followup PR #25722 a bit\r\nRebased 05a97d3208cc365cdeac9de281529568b3cd056c -> e04d8a754ff1b25cab483996319a583e6e3e680a ([`pr/bresult2.19`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.19) -> [`pr/bresult2.20`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.20), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.19-rebase..pr/bresult2.20)) due to conflict with #24513",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1104682926",
      "submitted_at": "2022-09-13T15:22:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "commented",
      "id": 1245729262,
      "node_id": "IC_kwDOABII585KQFHu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1245729262",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-13T17:36:10Z",
      "updated_at": "2022-09-13T17:36:10Z",
      "author_association": "MEMBER",
      "body": "Still need to review the last commit\r\n\r\n\r\nreview ACK 3af5f5adbb 🍒\r\n\r\n<details><summary>Show signature</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nreview ACK 3af5f5adbb 🍒\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUg+kgv/VMHBkcM/thQ5I6k4qE4vJdWFYuZQJFTe/KVPIpkC6nxuEr6Gi3staL6n\r\nmdRzkHsqS1Wpsm/kMUREBvEuTqUk+SPyv+spyWhnd86VSTa66clfJvrp0AD2kV6w\r\nuX5DlPzhb5fvgK59gJZ59Yq8bIcwqLe+hzvRBKdlqh5qxqnm1zSAB0O+KK4pwk9N\r\nz0mlPBWnM8qgmB3nnS9tWN58E4PUsue1Xb89GgNHh4DrnZTo/UrAPC9qsABeSU7+\r\nu1pU1Z9rpn57qmQI1LkQ9FDjZE8mL5NZ12OpISsNiXYVzQey6IiKsxzjfVtg3R4q\r\n5qtHzHtzx7XjDT40oAeb1Z1EWm+an5KME7Gk4/olR0PqDo2f2LILuwp9kCJJY7qt\r\nIdRWvHwAmU5J9EvgPOTWzWtU+LbsVwS3qoBwee2tlWrAxBjkdezuESFCDepq42wL\r\nTqzGBWAL40+MdjLBSeOYJm0ZuZHSHmqIDfykVyDmdM9SBaPstfkRmBngRIEKoCpM\r\n9PGi4h4Y\r\n=W7bY\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n\r\n</details>\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1245729262",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7379443505,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAG32V8x",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7379443505",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "52a4e50fb4b1171ee0f6814b0a50bc70cdd77134",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/52a4e50fb4b1171ee0f6814b0a50bc70cdd77134",
      "created_at": "2022-09-13T19:14:09Z"
    },
    {
      "event": "reviewed",
      "id": 1106306853,
      "node_id": "PRR_kwDOABII585B8Ocl",
      "url": null,
      "actor": null,
      "commit_id": "52a4e50fb4b1171ee0f6814b0a50bc70cdd77134",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2022-09-13T19:17:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "Updated e04d8a754ff1b25cab483996319a583e6e3e680a -> 52a4e50fb4b1171ee0f6814b0a50bc70cdd77134 ([`pr/bresult2.20`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.20) -> [`pr/bresult2.21`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.21), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.20..pr/bresult2.21)) fixing unintentional GetFailure copy introduced last push, and adding test to detect this copy",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1106306853",
      "submitted_at": "2022-09-13T19:17:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "reviewed",
      "id": 1107131542,
      "node_id": "PRR_kwDOABII585B_XyW",
      "url": null,
      "actor": null,
      "commit_id": "52a4e50fb4b1171ee0f6814b0a50bc70cdd77134",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2022-09-14T09:34:25Z",
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1107131542",
      "submitted_at": "2022-09-14T09:34:25Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7396092041,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAG412iJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7396092041",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f9accbc6e296adadac374eca085f8b2ce095c8a4",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/f9accbc6e296adadac374eca085f8b2ce095c8a4",
      "created_at": "2022-09-15T15:25:29Z"
    },
    {
      "event": "reviewed",
      "id": 1109415289,
      "node_id": "PRR_kwDOABII585CIFV5",
      "url": null,
      "actor": null,
      "commit_id": "f9accbc6e296adadac374eca085f8b2ce095c8a4",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2023-01-06T18:54:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "Updated 52a4e50fb4b1171ee0f6814b0a50bc70cdd77134 -> f9accbc6e296adadac374eca085f8b2ce095c8a4 ([`pr/bresult2.21`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.21) -> [`pr/bresult2.22`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.22), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.21..pr/bresult2.22)) just renaming `operator=` to `Set` to avoid some confusion\r\nUpdated f9accbc6e296adadac374eca085f8b2ce095c8a4 -> 776d9b3fbb4cf83c81cc38c44cae10d3f3344b1b ([`pr/bresult2.22`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.22) -> [`pr/bresult2.23`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.23), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.22..pr/bresult2.23)) tweaking commit message\r\nRebased 776d9b3fbb4cf83c81cc38c44cae10d3f3344b1b -> 456e3d4eccf010eba30096061b83adc45c371b92 ([`pr/bresult2.23`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.23) -> [`pr/bresult2.24`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.24), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.23-rebase..pr/bresult2.24)) due to conflict with #25499\r\nRebased 456e3d4eccf010eba30096061b83adc45c371b92 -> 28a6934da980703006e028776d276ae77121c586 ([`pr/bresult2.24`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.24) -> [`pr/bresult2.25`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.25), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.24-rebase..pr/bresult2.25)) due to conflict with #25667\r\nRebased 28a6934da980703006e028776d276ae77121c586 -> f4d55d858d9da08612a8ba3b7ceeaf36dfe6cc30 ([`pr/bresult2.25`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.25) -> [`pr/bresult2.26`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.26), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.25-rebase..pr/bresult2.26)) due to conflicts with #26289 and #26661\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1109415289",
      "submitted_at": "2022-09-15T15:31:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7396169211,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAG42JX7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7396169211",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "776d9b3fbb4cf83c81cc38c44cae10d3f3344b1b",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/776d9b3fbb4cf83c81cc38c44cae10d3f3344b1b",
      "created_at": "2022-09-15T15:33:53Z"
    },
    {
      "event": "labeled",
      "id": 7401993932,
      "node_id": "LE_lADOABII585ORepCzwAAAAG5MXbM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7401993932",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-16T10:15:51Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7423643611,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAG6e8_b",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7423643611",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "456e3d4eccf010eba30096061b83adc45c371b92",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/456e3d4eccf010eba30096061b83adc45c371b92",
      "created_at": "2022-09-20T15:52:50Z"
    },
    {
      "event": "unlabeled",
      "id": 7424582243,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAG6iiJj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7424582243",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-20T18:07:16Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 7582962084,
      "node_id": "LE_lADOABII585ORepCzwAAAAHD-tGk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7582962084",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-13T16:07:19Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7593460897,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAHEmwSh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7593460897",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "28a6934da980703006e028776d276ae77121c586",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/28a6934da980703006e028776d276ae77121c586",
      "created_at": "2022-10-14T20:59:22Z"
    },
    {
      "event": "unlabeled",
      "id": 7593584303,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAHEnOav",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7593584303",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-14T21:19:53Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 8145063845,
      "node_id": "LE_lADOABII585ORepCzwAAAAHle8-l",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8145063845",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-03T18:09:19Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8171550647,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAHnD_e3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8171550647",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f4d55d858d9da08612a8ba3b7ceeaf36dfe6cc30",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/f4d55d858d9da08612a8ba3b7ceeaf36dfe6cc30",
      "created_at": "2023-01-06T18:50:37Z"
    },
    {
      "event": "unlabeled",
      "id": 8172220118,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAHnGi7W",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8172220118",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-06T20:35:34Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "referenced",
      "id": 8318734956,
      "node_id": "REFE_lADOABII585ORepCzwAAAAHv1dJs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8318734956",
      "actor": {
        "login": "janus",
        "id": 6726,
        "node_id": "MDQ6VXNlcjY3MjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6726?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janus",
        "html_url": "https://github.com/janus",
        "followers_url": "https://api.github.com/users/janus/followers",
        "following_url": "https://api.github.com/users/janus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janus/subscriptions",
        "organizations_url": "https://api.github.com/users/janus/orgs",
        "repos_url": "https://api.github.com/users/janus/repos",
        "events_url": "https://api.github.com/users/janus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "56ca68bb231d928434cd90936ce5e4f4c42f887b",
      "commit_url": "https://api.github.com/repos/BitgesellOfficial/bitgesell/commits/56ca68bb231d928434cd90936ce5e4f4c42f887b",
      "created_at": "2023-01-20T06:53:13Z"
    },
    {
      "event": "labeled",
      "id": 8375549081,
      "node_id": "LE_lADOABII585ORepCzwAAAAHzOLyZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8375549081",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-27T17:27:12Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8493579542,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAH6Qb0W",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8493579542",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b57a898a987c63a8dadcb21dd5c94737e86ee107",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/b57a898a987c63a8dadcb21dd5c94737e86ee107",
      "created_at": "2023-02-10T20:41:46Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8494293928,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAH6TKOo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8494293928",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "eb50fcd6859d1730663159995e8477f6d892e7f4",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/eb50fcd6859d1730663159995e8477f6d892e7f4",
      "created_at": "2023-02-10T22:38:10Z"
    },
    {
      "event": "unlabeled",
      "id": 8494308274,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAH6TNuy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8494308274",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-10T22:41:27Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1427053301,
      "node_id": "IC_kwDOABII585VDxr1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1427053301",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-12T14:54:59Z",
      "updated_at": "2023-02-12T14:54:59Z",
      "author_association": "MEMBER",
      "body": "Concept ACK.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1427053301",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "commented",
      "id": 1427060487,
      "node_id": "IC_kwDOABII585VDzcH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1427060487",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-12T15:27:31Z",
      "updated_at": "2023-02-12T15:27:31Z",
      "author_association": "MEMBER",
      "body": "It seems the 7cdb7d1e9573ae60e7335af5d3de99191ad68b3f commit adds `src/wallet/test/availablecoins_tests.cpp` by accident, doesn't it?",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1427060487",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "reviewed",
      "id": 1294756069,
      "node_id": "PRR_kwDOABII585NLGjl",
      "url": null,
      "actor": null,
      "commit_id": "eb50fcd6859d1730663159995e8477f6d892e7f4",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2023-02-12T17:42:51Z",
      "author_association": "MEMBER",
      "body": "Approach ACK eb50fcd6859d1730663159995e8477f6d892e7f4.\r\n\r\n---\r\nStyle nit:\r\n\r\nhttps://github.com/bitcoin/bitcoin/pull/25665/files#r954244319:\r\n> In that case I'd prefer `if` and `else` on separate lines\r\n\r\nAgree. From [Developer Notes](https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#coding-style-c):\r\n> In every other case, braces are required, and the `then` and `else` clauses must appear correctly indented on a new line.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1294756069",
      "submitted_at": "2023-02-12T17:42:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "reviewed",
      "id": 1295372964,
      "node_id": "PRR_kwDOABII585NNdKk",
      "url": null,
      "actor": null,
      "commit_id": "eb50fcd6859d1730663159995e8477f6d892e7f4",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2023-02-13T10:42:24Z",
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1295372964",
      "submitted_at": "2023-02-13T10:42:24Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8540227600,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAH9CYgQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8540227600",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "501ef88b9412b0d924abf32cf2de7fbcbbb69b8d",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/501ef88b9412b0d924abf32cf2de7fbcbbb69b8d",
      "created_at": "2023-02-16T18:53:42Z"
    },
    {
      "event": "commented",
      "id": 1433568160,
      "node_id": "IC_kwDOABII585VcoOg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1433568160",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-16T18:54:47Z",
      "updated_at": "2023-02-16T18:54:47Z",
      "author_association": "CONTRIBUTOR",
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1294756069\r\n\r\nThanks for the review! I got rid of the unused test file and changed the `if` formatting as suggested\r\n\r\n---\r\n\r\nUpdated eb50fcd6859d1730663159995e8477f6d892e7f4 -> 501ef88b9412b0d924abf32cf2de7fbcbbb69b8d ([`pr/bresult2.28`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.28) -> [`pr/bresult2.29`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.29), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.28..pr/bresult2.29)) with suggested changes",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1433568160",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "labeled",
      "id": 8585357555,
      "node_id": "LE_lADOABII585ORepCzwAAAAH_uijz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8585357555",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-22T20:57:37Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8639973520,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAIC-4iQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8639973520",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d785176df3e9cccaab9fbbe12d9f8d2c28d3336f",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/d785176df3e9cccaab9fbbe12d9f8d2c28d3336f",
      "created_at": "2023-03-01T16:05:51Z"
    },
    {
      "event": "unlabeled",
      "id": 8640943457,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAIDClVh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8640943457",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-01T17:45:01Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 8691797257,
      "node_id": "LE_lADOABII585ORepCzwAAAAIGEk0J",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8691797257",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-08T00:33:18Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8771116688,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAIKzJ6Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8771116688",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e766928ed15cf43cda0773b886b7fb8f53b04dd4",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/e766928ed15cf43cda0773b886b7fb8f53b04dd4",
      "created_at": "2023-03-16T19:05:19Z"
    },
    {
      "event": "unlabeled",
      "id": 8771981286,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAIK2c_m",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8771981286",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-16T20:49:18Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 8829896303,
      "node_id": "LE_lADOABII585ORepCzwAAAAIOTYZv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8829896303",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-23T16:56:48Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8928557140,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAIULvhU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8928557140",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6d7d7bbb7bef40b61cf5862beb8e36e46cdfc455",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/6d7d7bbb7bef40b61cf5862beb8e36e46cdfc455",
      "created_at": "2023-04-04T20:31:21Z"
    },
    {
      "event": "unlabeled",
      "id": 8928982302,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAIUNXUe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8928982302",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-04T21:23:58Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 9075910688,
      "node_id": "LE_lADOABII585ORepCzwAAAAIc92gg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9075910688",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-24T01:07:40Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9149375415,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAIhWGO3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9149375415",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "28a954c7034077ac3a45083dd5e2b5cdb4d4cdde",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/28a954c7034077ac3a45083dd5e2b5cdb4d4cdde",
      "created_at": "2023-05-02T19:59:11Z"
    },
    {
      "event": "unlabeled",
      "id": 9150425271,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAIhaGi3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9150425271",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-02T22:53:21Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1423032563,
      "node_id": "PRR_kwDOABII585U0cDz",
      "url": null,
      "actor": null,
      "commit_id": "28a954c7034077ac3a45083dd5e2b5cdb4d4cdde",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2023-05-11T16:42:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "re ACK 28a954c7034077ac3a45083dd5e2b5cdb4d4cdde",
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1423032563",
      "submitted_at": "2023-05-11T16:42:27Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "review_requested",
      "id": 9224625335,
      "node_id": "RRE_lADOABII585ORepCzwAAAAIl1Jy3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9224625335",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-11T16:42:33Z",
      "requested_reviewer": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 9224625355,
      "node_id": "RRE_lADOABII585ORepCzwAAAAIl1JzL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9224625355",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-11T16:42:33Z",
      "requested_reviewer": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 9224625369,
      "node_id": "RRE_lADOABII585ORepCzwAAAAIl1JzZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9224625369",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-11T16:42:33Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 1544405658,
      "node_id": "IC_kwDOABII585cDcKa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1544405658",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-11T17:30:02Z",
      "updated_at": "2023-05-11T17:30:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the review.\r\n\r\nNote: @martinus left several review comments on https://github.com/bitcoin/bitcoin/pull/25722#pullrequestreview-1386736519, which is based on this PR, which apply to this PR and can improve it a little. I'm planning to update this PR to incorporate the suggestions.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1544405658",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "mentioned",
      "id": 9225059071,
      "node_id": "MEE_lADOABII585ORepCzwAAAAIl2zr_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9225059071",
      "actor": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-11T17:30:02Z"
    },
    {
      "event": "subscribed",
      "id": 9225059100,
      "node_id": "SE_lADOABII585ORepCzwAAAAIl2zsc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9225059100",
      "actor": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-11T17:30:03Z"
    },
    {
      "event": "review_request_removed",
      "id": 9225059763,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAIl2z2z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9225059763",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-11T17:30:07Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 9225059896,
      "node_id": "RRE_lADOABII585ORepCzwAAAAIl2z44",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9225059896",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-11T17:30:07Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "labeled",
      "id": 9350908327,
      "node_id": "LE_lADOABII585ORepCzwAAAAItW4mn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9350908327",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-26T13:32:44Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1564406303,
      "node_id": "IC_kwDOABII585dPvIf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1564406303",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-26T13:35:00Z",
      "updated_at": "2023-05-26T13:35:00Z",
      "author_association": "MEMBER",
      "body": "`void` can be removed from OP?",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1564406303",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "review_request_removed",
      "id": 9350931065,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAItW-J5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9350931065",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-26T13:35:04Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 9350931182,
      "node_id": "RRE_lADOABII585ORepCzwAAAAItW-Lu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9350931182",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-26T13:35:05Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 1486552709,
      "node_id": "PRR_kwDOABII585Ymv6F",
      "url": null,
      "actor": null,
      "commit_id": "28a954c7034077ac3a45083dd5e2b5cdb4d4cdde",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2023-06-19T16:28:24Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1486552709",
      "submitted_at": "2023-06-19T16:28:24Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "review_request_removed",
      "id": 9570397673,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAI6cK3p",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9570397673",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-19T16:28:28Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 9570397767,
      "node_id": "RRE_lADOABII585ORepCzwAAAAI6cK5H",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9570397767",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-19T16:28:29Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9887180437,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAJNUmaV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9887180437",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "40f09de73e61e7ae62d6639a49b7c7ac48d514d9",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/40f09de73e61e7ae62d6639a49b7c7ac48d514d9",
      "created_at": "2023-07-21T16:43:58Z"
    },
    {
      "event": "reviewed",
      "id": 1541470201,
      "node_id": "PRR_kwDOABII585b4Pf5",
      "url": null,
      "actor": null,
      "commit_id": "40f09de73e61e7ae62d6639a49b7c7ac48d514d9",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2023-07-21T16:47:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased 28a954c7034077ac3a45083dd5e2b5cdb4d4cdde -> 40f09de73e61e7ae62d6639a49b7c7ac48d514d9 ([`pr/bresult2.33`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.33) -> [`pr/bresult2.34`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.34), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.33-rebase..pr/bresult2.34)) due to conflict with various PR and making many suggested changes from review #25722 (which is based on this PR)\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1564406303\r\n\r\n> `void` can be removed from OP?\r\n\r\nThanks, no longer mentioning it since #25977 added support for `Result<void>`",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1541470201",
      "submitted_at": "2023-07-21T16:47:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "unlabeled",
      "id": 9887818652,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAJNXCOc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9887818652",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-21T18:13:02Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 9888038942,
      "node_id": "LE_lADOABII585ORepCzwAAAAJNX4Ae",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9888038942",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-21T18:44:40Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1541681112,
      "node_id": "PRR_kwDOABII585b5C_Y",
      "url": null,
      "actor": null,
      "commit_id": "f1b46f4017a52093a4ae41656b953ab3c1b7403d",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2023-07-21T19:02:26Z",
      "author_association": "MEMBER",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1541681112",
      "submitted_at": "2023-07-21T19:02:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "reviewed",
      "id": 1541700045,
      "node_id": "PRR_kwDOABII585b5HnN",
      "url": null,
      "actor": null,
      "commit_id": "40f09de73e61e7ae62d6639a49b7c7ac48d514d9",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2023-07-21T19:10:47Z",
      "author_association": "MEMBER",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1541700045",
      "submitted_at": "2023-07-21T19:10:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9888524845,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAJNZuot",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9888524845",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "775b54e88107b0b976bf995e607926013fa9bc42",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/775b54e88107b0b976bf995e607926013fa9bc42",
      "created_at": "2023-07-21T19:59:21Z"
    },
    {
      "event": "reviewed",
      "id": 1541767699,
      "node_id": "PRR_kwDOABII585b5YIT",
      "url": null,
      "actor": null,
      "commit_id": "775b54e88107b0b976bf995e607926013fa9bc42",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2023-07-21T20:04:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "Updated 40f09de73e61e7ae62d6639a49b7c7ac48d514d9 -> 775b54e88107b0b976bf995e607926013fa9bc42 ([`pr/bresult2.34`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.34) -> [`pr/bresult2.35`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.35), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.34..pr/bresult2.35)) with compile/lint fixes",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1541767699",
      "submitted_at": "2023-07-21T20:04:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "reviewed",
      "id": 1541828147,
      "node_id": "PRR_kwDOABII585b5m4z",
      "url": null,
      "actor": null,
      "commit_id": "775b54e88107b0b976bf995e607926013fa9bc42",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2023-07-21T21:20:49Z",
      "author_association": "MEMBER",
      "body": "First-pass ACK 775b54e88107b0b976bf995e607926013fa9bc42\r\n\r\nIn https://github.com/bitcoin/bitcoin/commit/332e847c9ec0241efd9681eee3b03ff819aaddc3 and 4d995d3fa66fbc3eb87c6627e5ba1b2a809402a4, I wonder if some of the custom operator (i.e. move) definitions should have a noexcept-specification. Also, notating any methods where it would be incorrect if the return value isn't checked (e.g. for error-handling) and optionally getter-like pure functions with `nodiscard` may aid reviewers / readers of the code.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1541828147",
      "submitted_at": "2023-07-21T21:20:49Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "review_request_removed",
      "id": 9888999413,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJNbif1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9888999413",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-21T21:20:54Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 9888999471,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJNbigv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9888999471",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-21T21:20:54Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 9888999485,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJNbig9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9888999485",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-21T21:20:54Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 9888999848,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJNbimo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9888999848",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-21T21:20:58Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 9888999855,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJNbimv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9888999855",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-21T21:20:58Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 9888999922,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJNbiny",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9888999922",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-21T21:20:59Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 9888999928,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJNbin4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9888999928",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-21T21:20:59Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "unlabeled",
      "id": 9889058403,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAJNbw5j",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9889058403",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-21T21:31:13Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "review_request_removed",
      "id": 9893473751,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJNsm3X",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9893473751",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-23T19:32:20Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 9893473752,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJNsm3Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9893473752",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-23T19:32:20Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 9893473768,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJNsm3o",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9893473768",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-23T19:32:21Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 9893473771,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJNsm3r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9893473771",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-23T19:32:21Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 1550016002,
      "node_id": "PRR_kwDOABII585cY14C",
      "url": null,
      "actor": null,
      "commit_id": "775b54e88107b0b976bf995e607926013fa9bc42",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2023-07-27T14:57:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1550016002",
      "submitted_at": "2023-07-27T14:57:30Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "review_request_removed",
      "id": 9936995714,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJQSoWC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9936995714",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-27T14:57:35Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 9936995720,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJQSoWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9936995720",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-27T14:57:35Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 9936995865,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJQSoYZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9936995865",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-27T14:57:36Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 9936995885,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJQSoYt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9936995885",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-27T14:57:36Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 9936996569,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJQSojZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9936996569",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-27T14:57:39Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 9936996582,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJQSojm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9936996582",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-27T14:57:39Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 9936996745,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJQSomJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9936996745",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-27T14:57:40Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 9936996763,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJQSomb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9936996763",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-27T14:57:40Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 1243960352,
      "node_id": "PRR_kwDOABII585KJVQg",
      "url": null,
      "actor": null,
      "commit_id": "775b54e88107b0b976bf995e607926013fa9bc42",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2023-07-28T16:55:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "Will continue my (re-)review next week, this is mostly up until 332e847c9ec0241efd9681eee3b03ff819aaddc3",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1243960352",
      "submitted_at": "2023-07-28T16:55:09Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "review_request_removed",
      "id": 9950246439,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJRFLYn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9950246439",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-28T16:55:13Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 9950246443,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJRFLYr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9950246443",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-28T16:55:13Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 9950246549,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJRFLaV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9950246549",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-28T16:55:14Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 9950246559,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJRFLaf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9950246559",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-28T16:55:14Z",
      "requested_reviewer": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 9950246566,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJRFLam",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9950246566",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-28T16:55:14Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 9950247118,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJRFLjO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9950247118",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-28T16:55:18Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 9950247129,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJRFLjZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9950247129",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-28T16:55:18Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 9950247270,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJRFLlm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9950247270",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-28T16:55:19Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 9950247282,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJRFLly",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9950247282",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-28T16:55:19Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 9950248034,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJRFLxi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9950248034",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-28T16:55:24Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 9950248044,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJRFLxs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9950248044",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-28T16:55:24Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 9950248214,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJRFL0W",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9950248214",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-28T16:55:25Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 9950248231,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJRFL0n",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9950248231",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-28T16:55:25Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9980770881,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAJS5npB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9980770881",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1de05ef9190202f04f8cbe7746a47cbd66ab540c",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/1de05ef9190202f04f8cbe7746a47cbd66ab540c",
      "created_at": "2023-08-01T20:13:58Z"
    },
    {
      "event": "reviewed",
      "id": 1557519459,
      "node_id": "PRR_kwDOABII585c1dxj",
      "url": null,
      "actor": null,
      "commit_id": "1de05ef9190202f04f8cbe7746a47cbd66ab540c",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2023-08-01T20:26:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "Updated 775b54e88107b0b976bf995e607926013fa9bc42 -> 1de05ef9190202f04f8cbe7746a47cbd66ab540c ([`pr/bresult2.35`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.35) -> [`pr/bresult2.36`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.36), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.35..pr/bresult2.36)) making suggested changes\r\n\r\nI still want to do more work to make the result class to enforce more safety with bool/optional/pointer types as discussed https://github.com/bitcoin/bitcoin/pull/25722#discussion_r1174297928, and work better with the `ResultPtr` class from #26022. I also want to write better documentation with usage examples. So I'll keep working on this, and push more changes here or in followup PRs.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1557519459",
      "submitted_at": "2023-08-01T20:26:22Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "labeled",
      "id": 9981403238,
      "node_id": "LE_lADOABII585ORepCzwAAAAJS8CBm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9981403238",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-01T21:40:48Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9981665135,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAJS9B9v",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9981665135",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "08f5febfc571220043436bbec96a326beebdee22",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/08f5febfc571220043436bbec96a326beebdee22",
      "created_at": "2023-08-01T22:28:29Z"
    },
    {
      "event": "commented",
      "id": 1661192251,
      "node_id": "IC_kwDOABII585jA8g7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1661192251",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-01T22:37:46Z",
      "updated_at": "2023-08-01T22:37:46Z",
      "author_association": "CONTRIBUTOR",
      "body": "Updated 1de05ef9190202f04f8cbe7746a47cbd66ab540c -> 08f5febfc571220043436bbec96a326beebdee22 ([`pr/bresult2.36`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.36) -> [`pr/bresult2.37`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.37), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.36..pr/bresult2.37)) replacing `util::Messages` with `util::MoveMessages` to work around clang-tidy error `bugprone-use-after-move` (https://cirrus-ci.com/task/6657022251237376?logs=ci#L3119). This makes usage less verbose in most cases, too.\r\n\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1661192251",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "unlabeled",
      "id": 9982149427,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAJS-4Mz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9982149427",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-02T00:09:59Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1559945927,
      "node_id": "PRR_kwDOABII585c-uLH",
      "url": null,
      "actor": null,
      "commit_id": "08f5febfc571220043436bbec96a326beebdee22",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2023-08-02T23:45:57Z",
      "author_association": "MEMBER",
      "body": "ACK 08f5febfc571220043436bbec96a326beebdee22\r\n\r\nSome non-blocking comments follow.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1559945927",
      "submitted_at": "2023-08-02T23:45:57Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "review_request_removed",
      "id": 9993190989,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJTo_5N",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9993190989",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-02T23:46:02Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 9993190993,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJTo_5R",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9993190993",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-02T23:46:02Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 9993191058,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJTo_6S",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9993191058",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-02T23:46:03Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 9993191063,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJTo_6X",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9993191063",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-02T23:46:03Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 9993191332,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJTo_-k",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9993191332",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-02T23:46:07Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 9993191333,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJTo_-l",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9993191333",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-02T23:46:07Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 9993191360,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJTo__A",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9993191360",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-02T23:46:08Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 9993191362,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJTo__C",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9993191362",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-02T23:46:08Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10003004651,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAJUObzr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10003004651",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b0beb4c504da29c27358d4602a045aaab39305f6",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/b0beb4c504da29c27358d4602a045aaab39305f6",
      "created_at": "2023-08-03T20:39:06Z"
    },
    {
      "event": "reviewed",
      "id": 1561722494,
      "node_id": "PRR_kwDOABII585dFf5-",
      "url": null,
      "actor": null,
      "commit_id": "b0beb4c504da29c27358d4602a045aaab39305f6",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2023-08-03T20:42:17Z",
      "author_association": "CONTRIBUTOR",
      "body": "Updated 08f5febfc571220043436bbec96a326beebdee22 -> b0beb4c504da29c27358d4602a045aaab39305f6 ([`pr/bresult2.37`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.37) -> [`pr/bresult2.38`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.38), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.37..pr/bresult2.38)) moving a lot more functionality from the `Result` class to the `ResultBase` class so the new code can be compatible with the `ResultPtr` class from #26022. Also rewrote and added more documentation and implemented latest review suggestions.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1561722494",
      "submitted_at": "2023-08-03T20:42:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "labeled",
      "id": 10003629081,
      "node_id": "LE_lADOABII585ORepCzwAAAAJUQ0QZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10003629081",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-03T22:22:04Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10008360138,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAJUi3TK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10008360138",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "9e80d0b754a28733c79a52c8e0431616c31d071c",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/9e80d0b754a28733c79a52c8e0431616c31d071c",
      "created_at": "2023-08-04T11:24:47Z"
    },
    {
      "event": "commented",
      "id": 1665456319,
      "node_id": "IC_kwDOABII585jRNi_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1665456319",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T11:26:25Z",
      "updated_at": "2023-08-04T11:26:25Z",
      "author_association": "CONTRIBUTOR",
      "body": "Updated b0beb4c504da29c27358d4602a045aaab39305f6 -> 9e80d0b754a28733c79a52c8e0431616c31d071c ([`pr/bresult2.38`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.38) -> [`pr/bresult2.39`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.39), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.38..pr/bresult2.39)) to fix `operator>>` compile error that seemed to happen with newer versions of clang: https://cirrus-ci.com/task/4622529512341504?logs=ci#L2370",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1665456319",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "unlabeled",
      "id": 10011412951,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAJUugnX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011412951",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T16:50:49Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1563250744,
      "node_id": "PRR_kwDOABII585dLVA4",
      "url": null,
      "actor": null,
      "commit_id": "9e80d0b754a28733c79a52c8e0431616c31d071c",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2023-08-04T17:24:45Z",
      "author_association": "MEMBER",
      "body": "ACK 9e80d0b754a28733c79a52c8e0431616c31d071c\r\n\r\nNice documentation, code, and commit message improvements.  Some non-blocking comments.  Consider also making swap/move/destructors in Result/ResultBase noexcept.  FWIW I didn't hit the CI build error in the previous push with arm64 clang 16.0.6.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1563250744",
      "submitted_at": "2023-08-04T17:08:42Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "review_request_removed",
      "id": 10011544231,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJUvAqn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011544231",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:08:47Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 10011544236,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJUvAqs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011544236",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:08:47Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10011544323,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJUvAsD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011544323",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:08:48Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10011544346,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJUvAsa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011544346",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:08:49Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 10011544814,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJUvAzu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011544814",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:08:52Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 10011544825,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJUvAz5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011544825",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:08:52Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10011544937,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJUvA1p",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011544937",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:08:53Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10011544962,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJUvA2C",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011544962",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:08:53Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 10011554508,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJUvDLM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011554508",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:10:17Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 10011554513,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJUvDLR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011554513",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:10:17Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10011554640,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJUvDNQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011554640",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:10:18Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10011554647,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJUvDNX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011554647",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:10:18Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 10011645969,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJUvZgR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011645969",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:23:40Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 10011645975,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJUvZgX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011645975",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:23:40Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10011646066,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJUvZhy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011646066",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:23:40Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10011646075,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJUvZh7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011646075",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:23:41Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 10011648514,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJUvaIC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011648514",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:24:04Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 10011648521,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJUvaIJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011648521",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:24:04Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10011648596,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJUvaJU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011648596",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:24:05Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10011648605,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJUvaJd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011648605",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:24:05Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 10011653760,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJUvbaA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011653760",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:24:50Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 10011653768,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJUvbaI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011653768",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:24:50Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10011653876,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJUvbb0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011653876",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:24:50Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10011653880,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJUvbb4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011653880",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:24:51Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10027277242,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAJVrBu6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10027277242",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7f883b33bb89205a9d00c2d20d363a36a0167c7c",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/7f883b33bb89205a9d00c2d20d363a36a0167c7c",
      "created_at": "2023-08-07T18:03:24Z"
    },
    {
      "event": "reviewed",
      "id": 1563338368,
      "node_id": "PRR_kwDOABII585dLqaA",
      "url": null,
      "actor": null,
      "commit_id": "7f883b33bb89205a9d00c2d20d363a36a0167c7c",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2023-08-07T18:06:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "Updated 9e80d0b754a28733c79a52c8e0431616c31d071c -> 7f883b33bb89205a9d00c2d20d363a36a0167c7c ([`pr/bresult2.39`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.39) -> [`pr/bresult2.40`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.40), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.39..pr/bresult2.40)) responding to new review comments and also making some internal changes within the PR to reduce unnecessary diffs between commits.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1563338368",
      "submitted_at": "2023-08-07T18:06:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "commented",
      "id": 1668402066,
      "node_id": "IC_kwDOABII585jccuS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1668402066",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-07T18:39:11Z",
      "updated_at": "2023-08-07T18:39:11Z",
      "author_association": "MEMBER",
      "body": "ACK 7f883b33bb89205a9d00c2d20d363a36a0167c7c\r\n",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1668402066",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "review_request_removed",
      "id": 10027617295,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJVsUwP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10027617295",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-07T18:39:17Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 10027617298,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJVsUwS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10027617298",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-07T18:39:17Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10027617384,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJVsUxo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10027617384",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-07T18:39:18Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10027617400,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJVsUx4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10027617400",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-07T18:39:18Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 1573685075,
      "node_id": "PRR_kwDOABII585dzIdT",
      "url": null,
      "actor": null,
      "commit_id": "7f883b33bb89205a9d00c2d20d363a36a0167c7c",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2023-08-29T07:34:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK 7f883b33bb89205a9d00c2d20d363a36a0167c7c",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1573685075",
      "submitted_at": "2023-08-29T07:34:43Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "review_request_removed",
      "id": 10217454583,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJhAfv3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10217454583",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T07:34:48Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 10217454588,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJhAfv8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10217454588",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T07:34:48Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10217454711,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJhAfx3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10217454711",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T07:34:49Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10217454894,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJhAf0u",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10217454894",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T07:34:50Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 10217455588,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJhAf_k",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10217455588",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T07:34:55Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 10217455599,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJhAf_v",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10217455599",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T07:34:55Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10217455827,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJhAgDT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10217455827",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T07:34:56Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10217456042,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJhAgGq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10217456042",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T07:34:58Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 1697964137,
      "node_id": "IC_kwDOABII585lNOBp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1697964137",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T18:51:28Z",
      "updated_at": "2023-08-29T18:51:28Z",
      "author_association": "MEMBER",
      "body": "ACK 7f883b33bb89205a9d00c2d20d363a36a0167c7c",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1697964137",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "commented",
      "id": 1697967937,
      "node_id": "IC_kwDOABII585lNO9B",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1697967937",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T18:54:26Z",
      "updated_at": "2023-08-29T18:54:26Z",
      "author_association": "MEMBER",
      "body": "Silent merge conflict:\r\n\r\n```\r\nIn file included from ../../../src/wallet/coinselection.h:16,\r\n                 from ../../../src/wallet/test/fuzz/coinselection.cpp:12:\r\n../../../src/util/result.h: In instantiation of ‘void util::detail::ResultBase<T, F>::ConstructValue(Args&& ...) [with Args = {util::Result<wallet::SelectionResult, void>&}; T = wallet::SelectionResult; F = void]’:\r\n../../../src/util/result.h:141:34:   required from ‘static void util::detail::ResultBase<void, F>::ConstructResult(Result&, Args&& ...) [with bool Failure = false; Result = util::Result<wallet::SelectionResult>; Args = {util::Result<wallet::SelectionResult, void>&}; F = void]’\r\n../../../src/util/result.h:295:58:   required from ‘util::Result<T, F>::Result(Args&& ...) [with Args = {util::Result<wallet::SelectionResult, void>&}; T = wallet::SelectionResult; F = void]’\r\n../../../src/wallet/test/fuzz/coinselection.cpp:152:95:   required from here\r\n../../../src/util/result.h:243:43: error: no matching function for call to ‘wallet::SelectionResult::SelectionResult(<brace-enclosed initializer list>)’\r\n  243 |     void ConstructValue(Args&&... args) { new (&m_value) T{std::forward<Args>(args)...}; }\r\n      |                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n../../../src/wallet/coinselection.h:352:14: note: candidate: ‘wallet::SelectionResult::SelectionResult(CAmount, wallet::SelectionAlgorithm)’\r\n  352 |     explicit SelectionResult(const CAmount target, SelectionAlgorithm algo)\r\n      |              ^~~~~~~~~~~~~~~\r\n../../../src/wallet/coinselection.h:352:14: note:   candidate expects 2 arguments, 1 provided\r\n../../../src/wallet/coinselection.h:324:8: note: candidate: ‘wallet::SelectionResult::SelectionResult(const wallet::SelectionResult&)’\r\n  324 | struct SelectionResult\r\n      |        ^~~~~~~~~~~~~~~\r\n../../../src/wallet/coinselection.h:324:8: note:   no known conversion for argument 1 from ‘util::Result<wallet::SelectionResult>’ to ‘const wallet::SelectionResult&’\r\n../../../src/wallet/coinselection.h:324:8: note: candidate: ‘wallet::SelectionResult::SelectionResult(wallet::SelectionResult&&)’\r\n../../../src/wallet/coinselection.h:324:8: note:   no known conversion for argument 1 from ‘util::Result<wallet::SelectionResult>’ to ‘wallet::SelectionResult&&’\r\nIn file included from /usr/include/c++/13.2.1/memory:69,\r\n                 from ../../../src/serialize.h:17,\r\n                 from ../../../src/policy/feerate.h:10,\r\n                 from ../../../src/wallet/test/fuzz/coinselection.cpp:5:\r\n/usr/include/c++/13.2.1/bits/stl_uninitialized.h: In instantiation of ‘constexpr bool std::__check_constructible() [with _ValueType = util::Result<wallet::SelectionResult>; _Tp = const util::Result<wallet::SelectionResult>&]’:\r\n/usr/include/c++/13.2.1/bits/stl_uninitialized.h:182:4:   required from ‘_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const util::Result<wallet::SelectionResult>*; _ForwardIterator = util::Result<wallet::SelectionResult>*]’\r\n/usr/include/c++/13.2.1/bits/stl_uninitialized.h:373:37:   required from ‘_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, allocator<_Tp>&) [with _InputIterator = const util::Result<wallet::SelectionResult>*; _ForwardIterator = util::Result<wallet::SelectionResult>*; _Tp = util::Result<wallet::SelectionResult>]’\r\n/usr/include/c++/13.2.1/bits/stl_vector.h:1692:33:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = const util::Result<wallet::SelectionResult>*; _Tp = util::Result<wallet::SelectionResult>; _Alloc = std::allocator<util::Result<wallet::SelectionResult> >]’\r\n/usr/include/c++/13.2.1/bits/stl_vector.h:679:21:   required from ‘std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = util::Result<wallet::SelectionResult>; _Alloc = std::allocator<util::Result<wallet::SelectionResult> >; allocator_type = std::allocator<util::Result<wallet::SelectionResult> >]’\r\n../../../src/wallet/test/fuzz/coinselection.cpp:152:95:   required from here\r\n/usr/include/c++/13.2.1/bits/stl_uninitialized.h:90:56: error: static assertion failed: result type must be constructible from input type\r\n   90 |       static_assert(is_constructible<_ValueType, _Tp>::value,\r\n      |                                                        ^~~~~\r\n/usr/include/c++/13.2.1/bits/stl_uninitialized.h:90:56: note: ‘std::integral_constant<bool, false>::value’ evaluates to false\r\nmake[2]: *** [Makefile:16569: wallet/test/fuzz/test_fuzz_fuzz-coinselection.o] Error 1\r\n```",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1697967937",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "review_request_removed",
      "id": 10224747896,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJhcUV4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10224747896",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T18:56:16Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 10224747917,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJhcUWN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10224747917",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T18:56:16Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10224748238,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJhcUbO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10224748238",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T18:56:17Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10224748510,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJhcUfe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10224748510",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T18:56:19Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 10225104871,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJhdrfn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10225104871",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T19:35:32Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 10225104880,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJhdrfw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10225104880",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T19:35:32Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10225105049,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJhdriZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10225105049",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T19:35:33Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10225105141,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJhdrj1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10225105141",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T19:35:34Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "labeled",
      "id": 10225132167,
      "node_id": "LE_lADOABII585ORepCzwAAAAJhdyKH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10225132167",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T19:39:04Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1602705708,
      "node_id": "PRR_kwDOABII585fh1ks",
      "url": null,
      "actor": null,
      "commit_id": "7f883b33bb89205a9d00c2d20d363a36a0167c7c",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2023-08-30T14:11:48Z",
      "author_association": "MEMBER",
      "body": "left some nits/questions. Feel free to ignore.\r\n\r\n\r\nreview ACK 7f883b33bb89205a9d00c2d20d363a36a0167c7c 🕳\r\n\r\n<details><summary>Show signature</summary>\r\n\r\nSignature:\r\n\r\n```\r\nuntrusted comment: signature from minisign secret key on empty file; verify via: minisign -Vm \"${path_to_any_empty_file}\" -P RWTRmVTMeKV5noAMqVlsMugDDCyyTSbA3Re5AkUrhvLVln0tSaFWglOw -x \"${path_to_this_whole_four_line_signature_blob}\"\r\nRUTRmVTMeKV5npGrKx1nqXCw5zeVHdtdYURB/KlyA/LMFgpNCs+SkW9a8N95d+U4AP1RJMi+krxU1A3Yux4bpwZNLvVBKy0wLgM=\r\ntrusted comment: review ACK 7f883b33bb89205a9d00c2d20d363a36a0167c7c 🕳\r\nDXdFmPbNLbWwTTSe/r0eJM/R9zvFrppA/gKmtEb5GH8jQwPbsPAsyPCB50Bm3n6kNKRUxcLFgHTIPbfDn0E9CQ==\r\n```\r\n\r\n</details>\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1602705708",
      "submitted_at": "2023-08-30T14:11:48Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "review_request_removed",
      "id": 10233669161,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJh-WYp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10233669161",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-30T14:11:54Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 10233669172,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJh-WY0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10233669172",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-30T14:11:54Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10233669495,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJh-Wd3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10233669495",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-30T14:11:55Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10233669632,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJh-WgA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10233669632",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-30T14:11:56Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 10233670453,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJh-Ws1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10233670453",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-30T14:12:00Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 10233670466,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJh-WtC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10233670466",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-30T14:12:00Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10233670715,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJh-Ww7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10233670715",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-30T14:12:01Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10233670895,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJh-Wzv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10233670895",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-30T14:12:02Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "labeled",
      "id": 10286262878,
      "node_id": "LE_lADOABII585ORepCzwAAAAJlG-pe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10286262878",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-05T17:24:29Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 10286589514,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAJlIOZK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10286589514",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-05T18:00:08Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10299015709,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAJl3oId",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10299015709",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "956bec1ecadcfef13e16f1364ae3a7043ff50e48",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/956bec1ecadcfef13e16f1364ae3a7043ff50e48",
      "created_at": "2023-09-06T17:58:05Z"
    },
    {
      "event": "reviewed",
      "id": 1611776309,
      "node_id": "PRR_kwDOABII585gEcE1",
      "url": null,
      "actor": null,
      "commit_id": "956bec1ecadcfef13e16f1364ae3a7043ff50e48",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2023-09-06T18:02:36Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased 7f883b33bb89205a9d00c2d20d363a36a0167c7c -> 956bec1ecadcfef13e16f1364ae3a7043ff50e48 ([`pr/bresult2.40`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.40) -> [`pr/bresult2.41`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.41), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.40-rebase..pr/bresult2.41)) to fix silent conflict with #27585, and made many suggested improvements",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1611776309",
      "submitted_at": "2023-09-06T18:02:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "commented",
      "id": 1708956145,
      "node_id": "IC_kwDOABII585l3Jnx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1708956145",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-06T19:19:59Z",
      "updated_at": "2023-09-06T19:19:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "Nice, Re-ACK 956bec1ecadcfef13e16f1364ae3a7043ff50e48",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1708956145",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "review_request_removed",
      "id": 10299705144,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJl6Qc4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10299705144",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-06T19:20:06Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 10299705145,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJl6Qc5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10299705145",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-06T19:20:06Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10299705246,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJl6Qee",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10299705246",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-06T19:20:07Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10299705338,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJl6Qf6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10299705338",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-06T19:20:07Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10299705424,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJl6QhQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10299705424",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-06T19:20:08Z",
      "requested_reviewer": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10299705536,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJl6QjA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10299705536",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-06T19:20:09Z",
      "requested_reviewer": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10299705669,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJl6QlF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10299705669",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-06T19:20:10Z",
      "requested_reviewer": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "unlabeled",
      "id": 10302583873,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAJmFPRB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10302583873",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-07T04:22:42Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 10565121704,
      "node_id": "LE_lADOABII585ORepCzwAAAAJ1uvao",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10565121704",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-05T15:01:04Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1763031649,
      "node_id": "IC_kwDOABII585pFbph",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1763031649",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-14T16:20:38Z",
      "updated_at": "2023-10-14T16:20:38Z",
      "author_association": "MEMBER",
      "body": "Needs rebase if still relevant",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1763031649",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "review_request_removed",
      "id": 10654680504,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJ7EYW4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10654680504",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-14T16:20:44Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 10654680507,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJ7EYW7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10654680507",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-14T16:20:44Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10654680556,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJ7EYXs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10654680556",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-14T16:20:46Z",
      "requested_reviewer": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10654680574,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJ7EYX-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10654680574",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-14T16:20:46Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10654680635,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJ7EYY7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10654680635",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-14T16:20:48Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10698123211,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAJ9qGfL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10698123211",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "29f6cfdabecbdecafc52ccc86425a1c7bb7f5c40",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/29f6cfdabecbdecafc52ccc86425a1c7bb7f5c40",
      "created_at": "2023-10-18T19:24:37Z"
    },
    {
      "event": "commented",
      "id": 1769184976,
      "node_id": "IC_kwDOABII585pc57Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1769184976",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-18T19:27:30Z",
      "updated_at": "2023-10-18T19:27:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased 956bec1ecadcfef13e16f1364ae3a7043ff50e48 -> 29f6cfdabecbdecafc52ccc86425a1c7bb7f5c40 ([`pr/bresult2.41`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.41) -> [`pr/bresult2.42`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.42), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.41-rebase..pr/bresult2.42)) due to silent conflict with #27596\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1769184976",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "unlabeled",
      "id": 10699042974,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAJ9tnCe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10699042974",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-18T20:59:49Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1686791111,
      "node_id": "PRR_kwDOABII585kimPH",
      "url": null,
      "actor": null,
      "commit_id": "f158686962e1a229d0382c739b78cd9644aa7ada",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2023-10-26T00:48:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "Re-ACK 29f6cfdabecbdecafc52ccc86425a1c7bb7f5c40\r\n\r\nChanges are resolving a simple silent conflict and adapting for the new clang-tidy lint case.",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1686791111",
      "submitted_at": "2023-10-19T06:01:48Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "review_request_removed",
      "id": 10705457562,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJ-GFGa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10705457562",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T06:01:54Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 10705457566,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJ-GFGe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10705457566",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T06:01:54Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10705457809,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJ-GFKR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10705457809",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T06:01:55Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10705457973,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJ-GFM1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10705457973",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T06:01:57Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 1778841023,
      "node_id": "IC_kwDOABII585qBvW_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1778841023",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-25T09:11:34Z",
      "updated_at": "2023-10-25T09:11:34Z",
      "author_association": "MEMBER",
      "body": "Did you compile each commit locally and ran the tests? See CI:\r\n\r\n```\r\ntest/result_tests.cpp(112): error: in \"result_tests/check_set\": check util::ErrorString(result) == str has failed [bilingual_str('' , '') != bilingual_str('error' , 'error')]",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1778841023",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "review_request_removed",
      "id": 10764497545,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAKBnTKJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10764497545",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-25T09:11:39Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 10764497549,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAKBnTKN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10764497549",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-25T09:11:39Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10764497830,
      "node_id": "RRE_lADOABII585ORepCzwAAAAKBnTOm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10764497830",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-25T09:11:41Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10764498193,
      "node_id": "RRE_lADOABII585ORepCzwAAAAKBnTUR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10764498193",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-25T09:11:43Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10773638005,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAKCKKt1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10773638005",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f158686962e1a229d0382c739b78cd9644aa7ada",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/f158686962e1a229d0382c739b78cd9644aa7ada",
      "created_at": "2023-10-26T00:48:05Z"
    },
    {
      "event": "commented",
      "id": 1780253199,
      "node_id": "IC_kwDOABII585qHIIP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1780253199",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-26T00:54:34Z",
      "updated_at": "2023-10-26T00:54:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1778841023\r\n> Did you compile each commit locally and ran the tests?\r\n\r\nThanks, I didn't realize the test was broken in earlier commits. I backported it further and got it working in all commits with no changes to the final diff.\r\n\r\nUpdated 29f6cfdabecbdecafc52ccc86425a1c7bb7f5c40 -> f158686962e1a229d0382c739b78cd9644aa7ada ([`pr/bresult2.42`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.42) -> [`pr/bresult2.43`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.43), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.42..pr/bresult2.43)) fixing test failure in intermediate commit 96667abecbd9c0e185fb4914897cc6ec07b39d9c (https://github.com/bitcoin/bitcoin/actions/runs/6565613863/job/17834513251?pr=25665)",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1780253199",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "reviewed",
      "id": 1699368927,
      "node_id": "PRR_kwDOABII585lSk_f",
      "url": null,
      "actor": null,
      "commit_id": "f158686962e1a229d0382c739b78cd9644aa7ada",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2023-10-26T11:34:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "Re-ACK f158686962e1a229d0382c739b78cd9644aa7ada",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1699368927",
      "submitted_at": "2023-10-26T11:34:04Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "review_request_removed",
      "id": 10778549113,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAKCc5t5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10778549113",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-26T11:34:10Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 10778549129,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAKCc5uJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10778549129",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-26T11:34:10Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10778549327,
      "node_id": "RRE_lADOABII585ORepCzwAAAAKCc5xP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10778549327",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-26T11:34:11Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10778549738,
      "node_id": "RRE_lADOABII585ORepCzwAAAAKCc53q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10778549738",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-26T11:34:13Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "labeled",
      "id": 11226186458,
      "node_id": "LE_lADOABII585ORepCzwAAAAKdIgLa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11226186458",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-12T16:37:29Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "referenced",
      "id": 11258665893,
      "node_id": "REFE_lADOABII585ORepCzwAAAAKfEZul",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11258665893",
      "actor": {
        "login": "Fabcien",
        "id": 44533924,
        "node_id": "MDQ6VXNlcjQ0NTMzOTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/44533924?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fabcien",
        "html_url": "https://github.com/Fabcien",
        "followers_url": "https://api.github.com/users/Fabcien/followers",
        "following_url": "https://api.github.com/users/Fabcien/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fabcien/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fabcien/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fabcien/subscriptions",
        "organizations_url": "https://api.github.com/users/Fabcien/orgs",
        "repos_url": "https://api.github.com/users/Fabcien/repos",
        "events_url": "https://api.github.com/users/Fabcien/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fabcien/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e0df40da76b895aeeb65a5ab4bae90e1913773b2",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/e0df40da76b895aeeb65a5ab4bae90e1913773b2",
      "created_at": "2023-12-15T11:38:27Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11587051583,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAKypGA_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11587051583",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f822ac9a24d684937f1258da89812e99c4b205ba",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/f822ac9a24d684937f1258da89812e99c4b205ba",
      "created_at": "2024-01-24T16:52:25Z"
    },
    {
      "event": "unlabeled",
      "id": 11588283577,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAKytyy5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11588283577",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-24T18:50:08Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1842217136,
      "node_id": "PRR_kwDOABII585tzgCw",
      "url": null,
      "actor": null,
      "commit_id": "f822ac9a24d684937f1258da89812e99c4b205ba",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-01-24T19:35:46Z",
      "author_association": "CONTRIBUTOR",
      "body": "Re-ACK f822ac9a24d684937f1258da89812e99c4b205ba",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1842217136",
      "submitted_at": "2024-01-24T19:35:46Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "review_request_removed",
      "id": 11588717973,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAKyvc2V",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11588717973",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-24T19:35:52Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 11588717989,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAKyvc2l",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11588717989",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-24T19:35:52Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11588718272,
      "node_id": "RRE_lADOABII585ORepCzwAAAAKyvc7A",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11588718272",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-24T19:35:54Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11588718699,
      "node_id": "RRE_lADOABII585ORepCzwAAAAKyvdBr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11588718699",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-24T19:35:56Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 1863286073,
      "node_id": "PRR_kwDOABII585vD305",
      "url": null,
      "actor": null,
      "commit_id": "f822ac9a24d684937f1258da89812e99c4b205ba",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-02-05T16:41:28Z",
      "author_association": "CONTRIBUTOR",
      "body": "re ack f822ac9a24d684937f1258da89812e99c4b205ba ",
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1863286073",
      "submitted_at": "2024-02-05T16:41:28Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "review_request_removed",
      "id": 11706945243,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAK5yc7b",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11706945243",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-05T16:41:33Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11706945637,
      "node_id": "RRE_lADOABII585ORepCzwAAAAK5ydBl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11706945637",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-05T16:41:34Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11706945920,
      "node_id": "RRE_lADOABII585ORepCzwAAAAK5ydGA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11706945920",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-05T16:41:35Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 1940866241,
      "node_id": "IC_kwDOABII585zr0TB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1940866241",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-13T09:17:44Z",
      "updated_at": "2024-02-13T09:17:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "I think there is a silent merge conflict on the first commit.",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1940866241",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "review_request_removed",
      "id": 11785499131,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAK-eHH7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11785499131",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-13T09:17:49Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 11785499165,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAK-eHId",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11785499165",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-13T09:17:49Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11785499736,
      "node_id": "RRE_lADOABII585ORepCzwAAAAK-eHRY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11785499736",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-13T09:17:52Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11785499973,
      "node_id": "RRE_lADOABII585ORepCzwAAAAK-eHVF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11785499973",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-13T09:17:53Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 1941201466,
      "node_id": "IC_kwDOABII585ztGI6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1941201466",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-13T10:57:40Z",
      "updated_at": "2024-02-13T10:57:40Z",
      "author_association": "MEMBER",
      "body": "At the risk of having asked this previously: Why not postpone the 1c7d8be commit to a later pull? This would also make review easier, because the code change comes with the changes to actually use it in real code, outside of just unit tests.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1941201466",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "review_request_removed",
      "id": 11786963583,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAK-jsp_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11786963583",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-13T10:57:45Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 11786963606,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAK-jsqW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11786963606",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-13T10:57:45Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11786964263,
      "node_id": "RRE_lADOABII585ORepCzwAAAAK-js0n",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11786964263",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-13T10:57:47Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11786964550,
      "node_id": "RRE_lADOABII585ORepCzwAAAAK-js5G",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11786964550",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-13T10:57:48Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "labeled",
      "id": 11792548220,
      "node_id": "LE_lADOABII585ORepCzwAAAAK-5AF8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11792548220",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-13T18:23:09Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1942144276,
      "node_id": "IC_kwDOABII585zwsUU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1942144276",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-13T18:23:10Z",
      "updated_at": "2024-02-13T18:23:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/20825711501</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1942144276",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "commented",
      "id": 1957566802,
      "node_id": "IC_kwDOABII5850rhlS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1957566802",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T18:06:51Z",
      "updated_at": "2024-02-21T18:11:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "> At the risk of having asked this previously: Why not postpone the [1c7d8be](https://github.com/bitcoin/bitcoin/commit/1c7d8bea4f0b25f9adb89e402a130fa114220494) commit to a later pull? This would also make review easier, because the code change comes with the changes to actually use it in real code, outside of just unit tests.\r\n\r\nSure, I'm happy to split up this PR.\r\n\r\nI don't think this idea came up before (or I can't remember if it did). From my perspective commit 1c7d8bea4f0b25f9adb89e402a130fa114220494 is basically the point of this PR, and the other commits are less important. Usually when we have errors we want to return descriptive error strings and fail, not return error codes and branch. So I think the part of this PR that returns better error and warning messages is more interesting than the part that returns error codes.\r\n\r\nAs far as using the changes in real code, not just tests, I opened #25722 at the same time as this PR to start using it throughout wallet code, so there are actually a _lot_ of usages to look at outside of tests. The usage patterns in the test are also meant to be realistic, with test functions returning errors and warnings, accumulating them, and returning them as part of their own Results .\r\n\r\nI don't think it hurts anything to split this PR up, so I can try that, **but I'm also curious if other reviewers want me to split this or leave it alone.** According to draftbot this has 1 current ack and 6 stale acks, and it seems like this needs rebase due to a silent conflict. So maybe the problem is more that it hasn't gotten enough simultaneous acks at the same time, and that I've been lazy about rebasing, than that it should be split up.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1957566802",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "review_request_removed",
      "id": 11880236776,
      "node_id": "RRRE_lADOABII585ORepCzwAAAALEHgbo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11880236776",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T18:06:57Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 11880236797,
      "node_id": "RRRE_lADOABII585ORepCzwAAAALEHgb9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11880236797",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T18:06:57Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11880237267,
      "node_id": "RRE_lADOABII585ORepCzwAAAALEHgjT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11880237267",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T18:06:58Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11880237626,
      "node_id": "RRE_lADOABII585ORepCzwAAAALEHgo6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11880237626",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T18:07:00Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 11880281711,
      "node_id": "RRRE_lADOABII585ORepCzwAAAALEHrZv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11880281711",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T18:10:22Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 11880281729,
      "node_id": "RRRE_lADOABII585ORepCzwAAAALEHraB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11880281729",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T18:10:22Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11880281861,
      "node_id": "RRE_lADOABII585ORepCzwAAAALEHrcF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11880281861",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T18:10:22Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11880282339,
      "node_id": "RRE_lADOABII585ORepCzwAAAALEHrjj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11880282339",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T18:10:25Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 11880293016,
      "node_id": "RRRE_lADOABII585ORepCzwAAAALEHuKY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11880293016",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T18:11:18Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 11880293035,
      "node_id": "RRRE_lADOABII585ORepCzwAAAALEHuKr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11880293035",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T18:11:18Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11880293180,
      "node_id": "RRE_lADOABII585ORepCzwAAAALEHuM8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11880293180",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T18:11:19Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11880293826,
      "node_id": "RRE_lADOABII585ORepCzwAAAALEHuXC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11880293826",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T18:11:22Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11881030980,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAALEKiVE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11881030980",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "4ec6b060a80045049adc53b4db0b0837ba169cfc",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/4ec6b060a80045049adc53b4db0b0837ba169cfc",
      "created_at": "2024-02-21T19:16:51Z"
    },
    {
      "event": "commented",
      "id": 1957738284,
      "node_id": "IC_kwDOABII5850sLcs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1957738284",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T19:18:21Z",
      "updated_at": "2024-02-21T19:18:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased f822ac9a24d684937f1258da89812e99c4b205ba -> 4ec6b060a80045049adc53b4db0b0837ba169cfc ([`pr/bresult2.44`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.44) -> [`pr/bresult2.45`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.45), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.44-rebase..pr/bresult2.45)) due to silent conflict with #27877",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1957738284",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "unlabeled",
      "id": 11882829008,
      "node_id": "UNLE_lADOABII585ORepCzwAAAALERZTQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11882829008",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T21:58:57Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11883305931,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAALETNvL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11883305931",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "20556598140030237861d21a61f646252002ddff",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/20556598140030237861d21a61f646252002ddff",
      "created_at": "2024-02-21T22:55:09Z"
    },
    {
      "event": "commented",
      "id": 1958232928,
      "node_id": "IC_kwDOABII5850uENg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1958232928",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T22:56:02Z",
      "updated_at": "2024-02-21T22:56:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "Updated 4ec6b060a80045049adc53b4db0b0837ba169cfc -> 20556598140030237861d21a61f646252002ddff ([`pr/bresult2.45`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.45) -> [`pr/bresult2.46`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.46), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.45..pr/bresult2.46)) making a few changes to improve compatibility with #26022",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1958232928",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "reviewed",
      "id": 1895353815,
      "node_id": "PRR_kwDOABII585w-M3X",
      "url": null,
      "actor": null,
      "commit_id": "20556598140030237861d21a61f646252002ddff",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-02-22T09:32:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1895353815",
      "submitted_at": "2024-02-22T09:32:06Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11889887252,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAALEsUgU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11889887252",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "created_at": "2024-02-22T11:35:00Z"
    },
    {
      "event": "reviewed",
      "id": 1895634501,
      "node_id": "PRR_kwDOABII585w_RZF",
      "url": null,
      "actor": null,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-02-22T11:54:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "Updated 20556598140030237861d21a61f646252002ddff -> cdf7bb17563b92e48b0576a0975c168619c5aa34 ([`pr/bresult2.46`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.46) -> [`pr/bresult2.47`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.47), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.46..pr/bresult2.47)) adding a check requiring scalar failure values to be specified explicitly (https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1498934743)",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1895634501",
      "submitted_at": "2024-02-22T11:54:40Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "reviewed",
      "id": 1895838904,
      "node_id": "PRR_kwDOABII585xADS4",
      "url": null,
      "actor": null,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-02-22T13:20:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "Re-ACK cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1895838904",
      "submitted_at": "2024-02-22T13:20:21Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "review_request_removed",
      "id": 11891079800,
      "node_id": "RRRE_lADOABII585ORepCzwAAAALEw3p4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11891079800",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-22T13:20:26Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 11891079815,
      "node_id": "RRRE_lADOABII585ORepCzwAAAALEw3qH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11891079815",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-22T13:20:26Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11891079957,
      "node_id": "RRE_lADOABII585ORepCzwAAAALEw3sV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11891079957",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-22T13:20:27Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11891080122,
      "node_id": "RRE_lADOABII585ORepCzwAAAALEw3u6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11891080122",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-22T13:20:28Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "labeled",
      "id": 11902901736,
      "node_id": "LE_lADOABII585ORepCzwAAAALFd93o",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11902901736",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-23T12:09:15Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 11951511691,
      "node_id": "UNLE_lADOABII585ORepCzwAAAALIXZiL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11951511691",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-28T13:08:46Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2015997570,
      "node_id": "IC_kwDOABII5854Ka6C",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2015997570",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-22T22:02:08Z",
      "updated_at": "2024-03-22T22:02:08Z",
      "author_association": "CONTRIBUTOR",
      "body": "Converting to draft. Working on #29700 and #29642 made me want to implement more improvements to the Result class (308e38e94fcac5aedf8ed1247a096c0d271fa666 if curious)",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-2015997570",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "convert_to_draft",
      "id": 12221499047,
      "node_id": "CTDE_lADOABII585ORepCzwAAAALYdUan",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12221499047",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-22T22:02:23Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12254952579,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAALac7yD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12254952579",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "efb463788f8be12bcf2bacfbf99cd2308fb54c9e",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/efb463788f8be12bcf2bacfbf99cd2308fb54c9e",
      "created_at": "2024-03-26T18:44:07Z"
    },
    {
      "event": "commented",
      "id": 2021292085,
      "node_id": "IC_kwDOABII5854eng1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2021292085",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-26T19:23:22Z",
      "updated_at": "2024-03-26T19:23:22Z",
      "author_association": "CONTRIBUTOR",
      "body": "Updated cdf7bb17563b92e48b0576a0975c168619c5aa34 -> efb463788f8be12bcf2bacfbf99cd2308fb54c9e ([`pr/bresult2.47`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.47) -> [`pr/bresult2.48`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.48), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.47..pr/bresult2.48)) with improvements for https://github.com/bitcoin/bitcoin/pull/29700 and https://github.com/bitcoin/bitcoin/pull/29642.\r\n\r\nThe changes are:\r\n\r\n- The Result::Set() method is renamed Result::Update() and now has ability to merge success and failure values from different results together instead of just replacing them. This is used in [#29700](https://github.com/bitcoin/bitcoin/pull/29700) to bubble up AbortFailure values indicating whether or not AbortNode calls happened as part of failures.\r\n- The result class now takes a generic MessagesType parameter and isn't hardcoded to use vector\\<blingual_str>. This gets rid of some complexity in the implementation and lets it handle SuccessType FailureType and MessagesType fields in a more consistent way.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-2021292085",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12256243032,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAALah21Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12256243032",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "110bccc3715a40d68cb4a09fce9384ee45ac4f58",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/110bccc3715a40d68cb4a09fce9384ee45ac4f58",
      "created_at": "2024-03-26T20:30:47Z"
    },
    {
      "event": "labeled",
      "id": 12256244316,
      "node_id": "LE_lADOABII585ORepCzwAAAALah3Jc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12256244316",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-26T20:30:53Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2021410840,
      "node_id": "IC_kwDOABII5854fEgY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2021410840",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-26T20:30:54Z",
      "updated_at": "2024-03-26T20:30:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/23120122503</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-2021410840",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12256882726,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAALakTAm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12256882726",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6adeafab68a410b663d60045415f1fb8ea7c273a",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/6adeafab68a410b663d60045415f1fb8ea7c273a",
      "created_at": "2024-03-26T21:27:46Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12258954849,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAALasM5h",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12258954849",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d4579e303b014c1522a054bb307cda6e225d45c5",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/d4579e303b014c1522a054bb307cda6e225d45c5",
      "created_at": "2024-03-27T03:00:18Z"
    },
    {
      "event": "unlabeled",
      "id": 12259496157,
      "node_id": "UNLE_lADOABII585ORepCzwAAAALauRDd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12259496157",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-27T04:26:13Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "ready_for_review",
      "id": 12269836976,
      "node_id": "RFRE_lADOABII585ORepCzwAAAALbVtqw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12269836976",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-27T18:03:19Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12284414357,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAALcNUmV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12284414357",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7a4741eaf892646e9d02e440c39fbbfa03f29fc3",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/7a4741eaf892646e9d02e440c39fbbfa03f29fc3",
      "created_at": "2024-03-28T16:34:08Z"
    },
    {
      "event": "reviewed",
      "id": 1981198840,
      "node_id": "PRR_kwDOABII5852FrH4",
      "url": null,
      "actor": null,
      "commit_id": "7a4741eaf892646e9d02e440c39fbbfa03f29fc3",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-04-04T21:46:46Z",
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1981198840",
      "submitted_at": "2024-04-04T21:46:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12525942856,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAALqmrhI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12525942856",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "28e20812109757e307bc29a4adbef8aae90d94a6",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/28e20812109757e307bc29a4adbef8aae90d94a6",
      "created_at": "2024-04-18T16:10:24Z"
    },
    {
      "event": "reviewed",
      "id": 2008992241,
      "node_id": "PRR_kwDOABII5853vsnx",
      "url": null,
      "actor": null,
      "commit_id": "28e20812109757e307bc29a4adbef8aae90d94a6",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-04-24T20:00:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "Updated 7a4741eaf892646e9d02e440c39fbbfa03f29fc3 -> 28e20812109757e307bc29a4adbef8aae90d94a6 ([`pr/bresult2.52`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.52) -> [`pr/bresult2.53`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.53), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.52..pr/bresult2.53)) just improving some comments\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-2008992241",
      "submitted_at": "2024-04-18T16:24:24Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "convert_to_draft",
      "id": 12527877878,
      "node_id": "CTDE_lADOABII585ORepCzwAAAALquD72",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12527877878",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-18T19:12:21Z"
    },
    {
      "event": "commented",
      "id": 2065005417,
      "node_id": "IC_kwDOABII5857FXtp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2065005417",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-18T19:13:07Z",
      "updated_at": "2024-04-24T20:01:08Z",
      "author_association": "CONTRIBUTOR",
      "body": "Converted to draft since first 2 commits were moved to a separate PR, #29906\r\n\r\n---\r\n\r\nRebased 28e20812109757e307bc29a4adbef8aae90d94a6 -> 990f9d65c5e15ab26c341c21829a697f5cddfa6c ([`pr/bresult2.53`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.53) -> [`pr/bresult2.54`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.54), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.53-rebase..pr/bresult2.54)) on top of updated base PR #29906, also adding more comments, simplifying code a little bit by util::MoveFrom helper, and using `Update()` method more places for consistency.\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-2065005417",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12597331282,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAALu3AVS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12597331282",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "990f9d65c5e15ab26c341c21829a697f5cddfa6c",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/990f9d65c5e15ab26c341c21829a697f5cddfa6c",
      "created_at": "2024-04-24T19:55:39Z"
    },
    {
      "event": "labeled",
      "id": 12599517606,
      "node_id": "LE_lADOABII585ORepCzwAAAALu_WGm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12599517606",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-25T00:21:25Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12617147986,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAALwCmZS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12617147986",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "55d7de92bbbe035c1833c89f885af14e5b243932",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/55d7de92bbbe035c1833c89f885af14e5b243932",
      "created_at": "2024-04-26T00:54:31Z"
    },
    {
      "event": "unlabeled",
      "id": 12620432520,
      "node_id": "UNLE_lADOABII585ORepCzwAAAALwPISI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12620432520",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-26T08:30:22Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12622978005,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAALwY1vV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12622978005",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0c8a1bb1445e8b88bb0ad9d440830ef215e9e8f8",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/0c8a1bb1445e8b88bb0ad9d440830ef215e9e8f8",
      "created_at": "2024-04-26T12:05:08Z"
    },
    {
      "event": "commented",
      "id": 2079388456,
      "node_id": "IC_kwDOABII58578PMo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2079388456",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-26T13:22:13Z",
      "updated_at": "2024-04-26T13:22:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "Posting my response to part of [your comment on #29906](https://github.com/bitcoin/bitcoin/pull/29906#issuecomment-2078452007) here, since `Update()` is no longer relevant to that PR:\r\n\r\n> Examples would be the [BlockManager::SaveBlockToDisk](https://github.com/ryanofsky/bitcoin/blob/4d2c9de24916f8d69514ea7c7251136e2762fa5c/src/node/blockstorage.cpp#L1167-L1195) function from https://github.com/bitcoin/bitcoin/pull/29700\r\n\r\nHad just a quick look, but this looks like how I'd expect `Update()` to be used, indeed.\r\n\r\n> or the [CompleteChainstateInitialization](https://github.com/ryanofsky/bitcoin/blob/55d7de92bbbe035c1833c89f885af14e5b243932/src/node/chainstate.cpp#L38-L179) function from https://github.com/bitcoin/bitcoin/pull/25665\r\n\r\nI don't think this is good usage of `Update()`, since there is no chaining happening here. I would find list initialization more readable and less error-prone:\r\n\r\n<details>\r\n<summary>git diff on 1376583dca</summary>\r\n\r\n```diff\r\ndiff --git a/src/node/chainstate.cpp b/src/node/chainstate.cpp\r\nindex 0671f75515..8cc43c53e5 100644\r\n--- a/src/node/chainstate.cpp\r\n+++ b/src/node/chainstate.cpp\r\n@@ -40,7 +40,6 @@ static util::Result<InterruptResult, ChainstateLoadError> CompleteChainstateInit\r\n     const CacheSizes& cache_sizes,\r\n     const ChainstateLoadOptions& options) EXCLUSIVE_LOCKS_REQUIRED(::cs_main)\r\n {\r\n-    util::Result<InterruptResult, ChainstateLoadError> result;\r\n     auto& pblocktree{chainman.m_blockman.m_block_tree_db};\r\n     // new BlockTreeDB tries to delete the existing file, which\r\n     // fails if it's still open from the previous loop. Close it first:\r\n@@ -61,8 +60,7 @@ static util::Result<InterruptResult, ChainstateLoadError> CompleteChainstateInit\r\n     }\r\n \r\n     if (chainman.m_interrupt) {\r\n-        result.Update(Interrupted{});\r\n-        return result;\r\n+        return Interrupted{};\r\n     }\r\n \r\n     // LoadBlockIndex will load m_have_pruned if we've ever removed a\r\n@@ -71,26 +69,23 @@ static util::Result<InterruptResult, ChainstateLoadError> CompleteChainstateInit\r\n     // From here on, fReindex and options.reindex values may be different!\r\n     if (!chainman.LoadBlockIndex()) {\r\n         if (chainman.m_interrupt) {\r\n-            result.Update(Interrupted{});\r\n+            return Interrupted{};\r\n         } else {\r\n-            result.Update({util::Error{_(\"Error loading block database\")}, ChainstateLoadError::FAILURE});\r\n+            return {util::Error{_(\"Error loading block database\")}, ChainstateLoadError::FAILURE};\r\n         }\r\n-        return result;\r\n     }\r\n \r\n     if (!chainman.BlockIndex().empty() &&\r\n             !chainman.m_blockman.LookupBlockIndex(chainman.GetConsensus().hashGenesisBlock)) {\r\n         // If the loaded chain has a wrong genesis, bail out immediately\r\n         // (we're likely using a testnet datadir, or the other way around).\r\n-        result.Update({util::Error{_(\"Incorrect or no genesis block found. Wrong datadir for network?\")}, ChainstateLoadError::FAILURE_INCOMPATIBLE_DB});\r\n-        return result;\r\n+        return {util::Error{_(\"Incorrect or no genesis block found. Wrong datadir for network?\")}, ChainstateLoadError::FAILURE_INCOMPATIBLE_DB};\r\n     }\r\n \r\n     // Check for changed -prune state.  What we are concerned about is a user who has pruned blocks\r\n     // in the past, but is now trying to run unpruned.\r\n     if (chainman.m_blockman.m_have_pruned && !options.prune) {\r\n-        result.Update({util::Error{_(\"You need to rebuild the database using -reindex to go back to unpruned mode.  This will redownload the entire blockchain\")}, ChainstateLoadError::FAILURE});\r\n-        return result;\r\n+        return {util::Error{_(\"You need to rebuild the database using -reindex to go back to unpruned mode.  This will redownload the entire blockchain\")}, ChainstateLoadError::FAILURE};\r\n     }\r\n \r\n     // At this point blocktree args are consistent with what's on disk.\r\n@@ -98,8 +93,7 @@ static util::Result<InterruptResult, ChainstateLoadError> CompleteChainstateInit\r\n     // (otherwise we use the one already on disk).\r\n     // This is called again in ImportBlocks after the reindex completes.\r\n     if (!fReindex && !chainman.ActiveChainstate().LoadGenesisBlock()) {\r\n-        result.Update({util::Error{_(\"Error initializing block database\")}, ChainstateLoadError::FAILURE});\r\n-        return result;\r\n+        return {util::Error{_(\"Error initializing block database\")}, ChainstateLoadError::FAILURE};\r\n     }\r\n \r\n     auto is_coinsview_empty = [&](Chainstate* chainstate) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\r\n@@ -133,17 +127,15 @@ static util::Result<InterruptResult, ChainstateLoadError> CompleteChainstateInit\r\n         // Refuse to load unsupported database format.\r\n         // This is a no-op if we cleared the coinsviewdb with -reindex or -reindex-chainstate\r\n         if (chainstate->CoinsDB().NeedsUpgrade()) {\r\n-            result.Update({util::Error{_(\"Unsupported chainstate database format found. \"\r\n+            return {util::Error{_(\"Unsupported chainstate database format found. \"\r\n                                          \"Please restart with -reindex-chainstate. This will \"\r\n                                          \"rebuild the chainstate database.\")},\r\n-                                       ChainstateLoadError::FAILURE_INCOMPATIBLE_DB});\r\n-            return result;\r\n+                                       ChainstateLoadError::FAILURE_INCOMPATIBLE_DB};\r\n         }\r\n \r\n         // ReplayBlocks is a no-op if we cleared the coinsviewdb with -reindex or -reindex-chainstate\r\n         if (!chainstate->ReplayBlocks()) {\r\n-            result.Update({util::Error{_(\"Unable to replay blocks. You will need to rebuild the database using -reindex-chainstate.\")}, ChainstateLoadError::FAILURE});\r\n-            return result;\r\n+            return {util::Error{_(\"Unable to replay blocks. You will need to rebuild the database using -reindex-chainstate.\")}, ChainstateLoadError::FAILURE};\r\n         }\r\n \r\n         // The on-disk coinsdb is now in a good state, create the cache\r\n@@ -153,8 +145,7 @@ static util::Result<InterruptResult, ChainstateLoadError> CompleteChainstateInit\r\n         if (!is_coinsview_empty(chainstate)) {\r\n             // LoadChainTip initializes the chain based on CoinsTip()'s best block\r\n             if (!chainstate->LoadChainTip()) {\r\n-                result.Update({util::Error{_(\"Error initializing block database\")}, ChainstateLoadError::FAILURE});\r\n-                return result;\r\n+                return {util::Error{_(\"Error initializing block database\")}, ChainstateLoadError::FAILURE};\r\n             }\r\n             assert(chainstate->m_chain.Tip() != nullptr);\r\n         }\r\n@@ -164,9 +155,8 @@ static util::Result<InterruptResult, ChainstateLoadError> CompleteChainstateInit\r\n         auto chainstates{chainman.GetAll()};\r\n         if (std::any_of(chainstates.begin(), chainstates.end(),\r\n                         [](const Chainstate* cs) EXCLUSIVE_LOCKS_REQUIRED(cs_main) { return cs->NeedsRedownload(); })) {\r\n-            result.Update({util::Error{strprintf(_(\"Witness data for blocks after height %d requires validation. Please restart with -reindex.\"),\r\n-                                                 chainman.GetConsensus().SegwitHeight)}, ChainstateLoadError::FAILURE});\r\n-            return result;\r\n+            return {util::Error{strprintf(_(\"Witness data for blocks after height %d requires validation. Please restart with -reindex.\"),\r\n+                                                 chainman.GetConsensus().SegwitHeight)}, ChainstateLoadError::FAILURE};\r\n         };\r\n     }\r\n \r\n@@ -175,7 +165,7 @@ static util::Result<InterruptResult, ChainstateLoadError> CompleteChainstateInit\r\n     // on the condition of each chainstate.\r\n     chainman.MaybeRebalanceCaches();\r\n \r\n-    return result;\r\n+    return {};\r\n }\r\n \r\n util::Result<InterruptResult, ChainstateLoadError> LoadChainstate(ChainstateManager& chainman, const CacheSizes& cache_sizes,\r\n\r\n```\r\n</details>",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-2079388456",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "commented",
      "id": 2079616145,
      "node_id": "IC_kwDOABII58579GyR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2079616145",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-26T15:27:40Z",
      "updated_at": "2024-04-26T15:27:40Z",
      "author_association": "CONTRIBUTOR",
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-2079388456\r\n\r\n> > or the [CompleteChainstateInitialization](https://github.com/ryanofsky/bitcoin/blob/55d7de92bbbe035c1833c89f885af14e5b243932/src/node/chainstate.cpp#L38-L179) function from #25665\r\n> \r\n> I don't think this is good usage of `Update()`, since there is no chaining happening here. I would find list initialization more readable and less error-prone:\r\n> \r\n> git diff on 1376583\r\n\r\nThe diff you suggested is actually the way this function was implemented before #29700. The problem is that #29700 updates some validation functions to return `util::Result` instead of `bool`. So instead of `CompleteChainstateInitialization` being a function that just returns a `util::Result` value, it becomes a function that returns a `util::Result` value and also calls other functions returning `util::Result`. Which is the scenario where the `result.Update()` pattern is useful, because it allows returning warning and error messages from functions being called instead of discarding them, so more complete error information is returned by default when a problem happens.\r\n\r\nIf you think this pattern is not readable enough or too error prone, we could probably come up with an alternate pattern that doesn't require updating a variable (but may require copying around data more manually). In general, I'd agree that all other things being equal, it's better to initialize variables once than change them over time. But in this case, if the goal is to accumulate error and warning messages, I think a pattern where you declare a single variable at the top of the function holding the messages, and update the variable over the course of the function, and then return the variable at the end is a pretty simple and readable pattern. I'm sure other patterns could work too, though.\r\n\r\nI guess I'd want to know if there's another pattern you'd prefer, or what more specific problems you see with the current code.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-2079616145",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "labeled",
      "id": 12626001347,
      "node_id": "LE_lADOABII585ORepCzwAAAALwkX3D",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12626001347",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-26T16:22:33Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2080843513,
      "node_id": "IC_kwDOABII5858Byb5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2080843513",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-27T14:57:01Z",
      "updated_at": "2024-04-27T14:57:01Z",
      "author_association": "CONTRIBUTOR",
      "body": "> The problem is that https://github.com/bitcoin/bitcoin/pull/29700 updates some validation functions to return util::Result instead of bool.\r\n\r\nI see, that was not apparent in the [link](https://github.com/ryanofsky/bitcoin/blob/55d7de92bbbe035c1833c89f885af14e5b243932/src/node/chainstate.cpp#L38-L179) you shared earlier. Would it make sense to do that refactoring in #29700 then, instead of in this PR? Because in this PR, I don't think the change makes a lot of sense on its own. \r\n\r\n> I think a pattern where you declare a single variable at the top of the function holding the messages, and update the variable over the course of the function, and then return the variable at the end is a pretty simple and readable pattern.\r\n\r\nI agree, I think that's a reasonable pattern. For this situation, I would prefer using two functions: `Update()` when chaining is happening, and `Set()`, `Replace()`, `operator=()`, ... when we expect `Result` to be empty. This way, we can more easily identify potential bugs when e.g. `Set()` is used but the `Result` has already had a value assigned to it earlier. Potentially, could even do a run-time assertion (I don't think compile time is possible?). \r\n\r\nCombining both would be suitable in this case, I think. Pseudo-code diff (since `Set()` isn't implemented) where we only keep `Update()` for the chaining bits:\r\n\r\n<details>\r\n<summary>git diff on 4d2c9de249</summary>\r\n\r\n```diff\r\ndiff --git a/src/node/chainstate.cpp b/src/node/chainstate.cpp\r\nindex 014f6915ad..bc8d547153 100644\r\n--- a/src/node/chainstate.cpp\r\n+++ b/src/node/chainstate.cpp\r\n@@ -64,7 +64,7 @@ static FlushResult<InterruptResult, ChainstateLoadError> CompleteChainstateIniti\r\n     }\r\n \r\n     if (chainman.m_interrupt) {\r\n-        result.Update(Interrupted{});\r\n+        result.Set(Interrupted{});\r\n         return result;\r\n     }\r\n \r\n@@ -85,14 +85,14 @@ static FlushResult<InterruptResult, ChainstateLoadError> CompleteChainstateIniti\r\n             !chainman.m_blockman.LookupBlockIndex(chainman.GetConsensus().hashGenesisBlock)) {\r\n         // If the loaded chain has a wrong genesis, bail out immediately\r\n         // (we're likely using a testnet datadir, or the other way around).\r\n-        result.Update({util::Error{_(\"Incorrect or no genesis block found. Wrong datadir for network?\")}, ChainstateLoadError::FAILURE_INCOMPATIBLE_DB});\r\n+        result.Set({util::Error{_(\"Incorrect or no genesis block found. Wrong datadir for network?\")}, ChainstateLoadError::FAILURE_INCOMPATIBLE_DB});\r\n         return result;\r\n     }\r\n \r\n     // Check for changed -prune state.  What we are concerned about is a user who has pruned blocks\r\n     // in the past, but is now trying to run unpruned.\r\n     if (chainman.m_blockman.m_have_pruned && !options.prune) {\r\n-        result.Update({util::Error{_(\"You need to rebuild the database using -reindex to go back to unpruned mode.  This will redownload the entire blockchain\")}, ChainstateLoadError::FAILURE});\r\n+        result.Set({util::Error{_(\"You need to rebuild the database using -reindex to go back to unpruned mode.  This will redownload the entire blockchain\")}, ChainstateLoadError::FAILURE});\r\n         return result;\r\n     }\r\n \r\n@@ -101,7 +101,7 @@ static FlushResult<InterruptResult, ChainstateLoadError> CompleteChainstateIniti\r\n     // (otherwise we use the one already on disk).\r\n     // This is called again in ImportBlocks after the reindex completes.\r\n     if (!fReindex && !chainman.ActiveChainstate().LoadGenesisBlock()) {\r\n-        result.Update({util::Error{_(\"Error initializing block database\")}, ChainstateLoadError::FAILURE});\r\n+        result.Set({util::Error{_(\"Error initializing block database\")}, ChainstateLoadError::FAILURE});\r\n         return result;\r\n     }\r\n \r\n@@ -136,7 +136,7 @@ static FlushResult<InterruptResult, ChainstateLoadError> CompleteChainstateIniti\r\n         // Refuse to load unsupported database format.\r\n         // This is a no-op if we cleared the coinsviewdb with -reindex or -reindex-chainstate\r\n         if (chainstate->CoinsDB().NeedsUpgrade()) {\r\n-            result.Update({util::Error{_(\"Unsupported chainstate database format found. \"\r\n+            result.Set({util::Error{_(\"Unsupported chainstate database format found. \"\r\n                                          \"Please restart with -reindex-chainstate. This will \"\r\n                                          \"rebuild the chainstate database.\")},\r\n                                        ChainstateLoadError::FAILURE_INCOMPATIBLE_DB});\r\n@@ -145,7 +145,7 @@ static FlushResult<InterruptResult, ChainstateLoadError> CompleteChainstateIniti\r\n \r\n         // ReplayBlocks is a no-op if we cleared the coinsviewdb with -reindex or -reindex-chainstate\r\n         if (!chainstate->ReplayBlocks()) {\r\n-            result.Update({util::Error{_(\"Unable to replay blocks. You will need to rebuild the database using -reindex-chainstate.\")}, ChainstateLoadError::FAILURE});\r\n+            result.Set({util::Error{_(\"Unable to replay blocks. You will need to rebuild the database using -reindex-chainstate.\")}, ChainstateLoadError::FAILURE});\r\n             return result;\r\n         }\r\n \r\n@@ -156,7 +156,7 @@ static FlushResult<InterruptResult, ChainstateLoadError> CompleteChainstateIniti\r\n         if (!is_coinsview_empty(chainstate)) {\r\n             // LoadChainTip initializes the chain based on CoinsTip()'s best block\r\n             if (!chainstate->LoadChainTip()) {\r\n-                result.Update({util::Error{_(\"Error initializing block database\")}, ChainstateLoadError::FAILURE});\r\n+                result.Set({util::Error{_(\"Error initializing block database\")}, ChainstateLoadError::FAILURE});\r\n                 return result;\r\n             }\r\n             assert(chainstate->m_chain.Tip() != nullptr);\r\n@@ -167,7 +167,7 @@ static FlushResult<InterruptResult, ChainstateLoadError> CompleteChainstateIniti\r\n         auto chainstates{chainman.GetAll()};\r\n         if (std::any_of(chainstates.begin(), chainstates.end(),\r\n                         [](const Chainstate* cs) EXCLUSIVE_LOCKS_REQUIRED(cs_main) { return cs->NeedsRedownload(); })) {\r\n-            result.Update({util::Error{strprintf(_(\"Witness data for blocks after height %d requires validation. Please restart with -reindex.\"),\r\n+            result.Set({util::Error{strprintf(_(\"Witness data for blocks after height %d requires validation. Please restart with -reindex.\"),\r\n                                                  chainman.GetConsensus().SegwitHeight)}, ChainstateLoadError::FAILURE});\r\n             return result;\r\n         };\r\n\r\n```\r\n</details>\r\n\r\nIt's kind of a similar situation to having a `std::vector<>&`out-parameter that we use here and there in the codebase. When that happens, first you need to check if the vector is supposed to be empty or not. Then, you need to check if it actually _is_ empty. Sometimes we call `.clear()` in the beginning of the function, sometimes we don't. It's just confusing and time consuming and error prone (see e.g. https://github.com/bitcoin/bitcoin/pull/26289). With differentiated `Update()` and `Set()` functions we allow the developer to signal intent, which makes it easier to understand the code and to identify potential bugs (manually or through run-time/fuzzing checks).\r\n\r\nI've ranted about this already a bit too long, so please do let me know if you (dis)agree but I'll stop commenting further until I've (re)-reviewed the rest of this PR and I maybe get new insights.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-2080843513",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "referenced",
      "id": 12660776468,
      "node_id": "REFE_lADOABII585ORepCzwAAAALypB4U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12660776468",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2d3056751bb7d742a802a30503f07dbeb07310ee",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2d3056751bb7d742a802a30503f07dbeb07310ee",
      "created_at": "2024-04-30T16:19:28Z"
    },
    {
      "event": "labeled",
      "id": 12662383105,
      "node_id": "LE_lADOABII585ORepCzwAAAALyvKIB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12662383105",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-30T18:38:13Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12672983913,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAALzXmNp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12672983913",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "db91dbb5a9a0413d6ee22ed6e32d1221d5b6d996",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/db91dbb5a9a0413d6ee22ed6e32d1221d5b6d996",
      "created_at": "2024-05-01T17:39:44Z"
    },
    {
      "event": "ready_for_review",
      "id": 12672997773,
      "node_id": "RFRE_lADOABII585ORepCzwAAAALzXpmN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12672997773",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-01T17:41:21Z"
    },
    {
      "event": "reviewed",
      "id": 2034094691,
      "node_id": "PRR_kwDOABII5855PdJj",
      "url": null,
      "actor": null,
      "commit_id": "db91dbb5a9a0413d6ee22ed6e32d1221d5b6d996",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-05-01T17:46:45Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased 0c8a1bb1445e8b88bb0ad9d440830ef215e9e8f8 -> db91dbb5a9a0413d6ee22ed6e32d1221d5b6d996 ([`pr/bresult2.56`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.56) -> [`pr/bresult2.57`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.57), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.56-rebase..pr/bresult2.57)) after #29906 was merged\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-2034094691",
      "submitted_at": "2024-05-01T17:46:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "commented",
      "id": 2088971908,
      "node_id": "IC_kwDOABII5858gy6E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2088971908",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-01T19:26:40Z",
      "updated_at": "2024-05-01T19:26:40Z",
      "author_association": "CONTRIBUTOR",
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-2080843513\r\n\r\nThanks @stickies-v. I think since `Update()` is not required immediately I might move the first and third commits of this PR to another PR without `Update()`. The only downside will be some churn in the `CompleteChainstateInitialization` function, since I believe at some point it will need to be changed again to use the `Update()` pattern or a similar pattern, when other functions it calls are changed to return `util::Result`.\r\n\r\nOn your latest feedback, I think I understand the scenario you are concerned about. It seems like you are worried about future uses of `util::Result` where sometimes completely resetting a result object is useful, and other times updating pieces of the result object is useful. And you want developers to clearly indicate their intent in both cases by calling `Set()` in the former case and `Update()` in the latter case. If developers were required to express their intent this way, it could avoid bugs when existing fields of a result object are unintentionally cleared by a `Set()` call, or unintentionaly left with stale values after an `Update()` call.\r\n\r\nI think I might have agreed with that before writing #25722 and #29700. But after writing these PRs, I don't think a `Set` method would be useful in practice. The most straightforward way to write functions that return `util::Result` and also pass along error messages from other functions returning `util::Result` is to use `result.Update()`. The most straightforward way to write functions that just return `util::Result` without forwarding messages from other functions is just to construct separate result objects and not mutate existing objects. I didn't encounter scenarios where code would be clearer or safer if it reset an existing object instead just declaring a new object, or just updating the relevant fields in an existing object.\r\n\r\n\r\nBasically, I think the `result.Update()` pattern is a safe, simple pattern to follow that was general enough to handle the cases I encountered in #25722 and #29700 without the need the need for set, reset, or assignment. If that statement is not convincing, I understand, and think we could move forward with a smaller PR that does not include `Update()`. You might also be interested to look at a random commit from #25722 and #29700 and see if there's another way you think some of that code should be written. A lot of the code in #25722 especially was not using `result.Update()` pattern initially and was just using separate result objects for everything.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-2088971908",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "mentioned",
      "id": 12673965911,
      "node_id": "MEE_lADOABII585ORepCzwAAAALzbV9X",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12673965911",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-01T19:26:41Z"
    },
    {
      "event": "subscribed",
      "id": 12673965926,
      "node_id": "SE_lADOABII585ORepCzwAAAALzbV9m",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12673965926",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-01T19:26:41Z"
    },
    {
      "event": "unlabeled",
      "id": 12674167232,
      "node_id": "UNLE_lADOABII585ORepCzwAAAALzcHHA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12674167232",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-01T19:48:03Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 12674710012,
      "node_id": "UNLE_lADOABII585ORepCzwAAAALzeLn8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12674710012",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-01T20:41:44Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 12865330684,
      "node_id": "LE_lADOABII585ORepCzwAAAAL-1V38",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12865330684",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-20T11:58:41Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13192572188,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAMSVq0c",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13192572188",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b08548336eda489ad5be9e25542d2b73e7606204",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/b08548336eda489ad5be9e25542d2b73e7606204",
      "created_at": "2024-06-17T22:57:25Z"
    },
    {
      "event": "unlabeled",
      "id": 13192820171,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAMSWnXL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13192820171",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-17T23:31:40Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 13364349756,
      "node_id": "LE_lADOABII585ORepCzwAAAAMck8s8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13364349756",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-02T11:20:01Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2159306748,
      "node_id": "PRR_kwDOABII586AtGf8",
      "url": null,
      "actor": null,
      "commit_id": "79a970d4f12458a175317c453e251db7846c3561",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-07-04T17:23:33Z",
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-2159306748",
      "submitted_at": "2024-07-04T17:23:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13447452022,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAMhh9V2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13447452022",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "4eb36d1c41704f947f22d3b52f7799be23e4261c",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/4eb36d1c41704f947f22d3b52f7799be23e4261c",
      "created_at": "2024-07-09T22:35:06Z"
    },
    {
      "event": "commented",
      "id": 2218849345,
      "node_id": "IC_kwDOABII586EQPRB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2218849345",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-09T22:39:03Z",
      "updated_at": "2024-11-04T13:25:24Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased db91dbb5a9a0413d6ee22ed6e32d1221d5b6d996 -> b08548336eda489ad5be9e25542d2b73e7606204 ([`pr/bresult2.57`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.57) -> [`pr/bresult2.58`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.58), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.57-rebase..pr/bresult2.58)) due to conflicts with #30255 and #30132\r\nRebased b08548336eda489ad5be9e25542d2b73e7606204 -> 4eb36d1c41704f947f22d3b52f7799be23e4261c ([`pr/bresult2.58`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.58) -> [`pr/bresult2.59`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.59), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.58-rebase..pr/bresult2.59)) to fix conflict with #30344. Also took suggestions to simplify usage in CompleteChainstateInitialization.\r\nUpdated 4eb36d1c41704f947f22d3b52f7799be23e4261c -> 15b673d122532d44fea2e6d026172ac90929da14 ([`pr/bresult2.59`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.59) -> [`pr/bresult2.60`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.60), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.59..pr/bresult2.60)) adding wallet clang-tidy fix\r\nRebased 15b673d122532d44fea2e6d026172ac90929da14 -> 7e2b35711e11aa404eb0bd86776beb52916d354d ([`pr/bresult2.60`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.60) -> [`pr/bresult2.61`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.61), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.60-rebase..pr/bresult2.61)) due to various conflicts\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-2218849345",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "unlabeled",
      "id": 13449050238,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAMhoDh-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13449050238",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-10T02:42:40Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "referenced",
      "id": 13459938029,
      "node_id": "REFE_lADOABII585ORepCzwAAAAMiRlrt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13459938029",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "89bc54da3b5870c214a0fb1561c287235f84a8f5",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/89bc54da3b5870c214a0fb1561c287235f84a8f5",
      "created_at": "2024-07-10T17:43:09Z"
    },
    {
      "event": "referenced",
      "id": 13560661058,
      "node_id": "REFE_lADOABII585ORepCzwAAAAMoR0RC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13560661058",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "cc0a369361caa12abf6cf33c42f8511bcbbeb373",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/cc0a369361caa12abf6cf33c42f8511bcbbeb373",
      "created_at": "2024-07-18T18:18:02Z"
    },
    {
      "event": "referenced",
      "id": 13560661132,
      "node_id": "REFE_lADOABII585ORepCzwAAAAMoR0SM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13560661132",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "3afda47f93df2e9057aac096ddb7a0e253be5917",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/3afda47f93df2e9057aac096ddb7a0e253be5917",
      "created_at": "2024-07-18T18:18:03Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13575684383,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAMpLIEf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13575684383",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "15b673d122532d44fea2e6d026172ac90929da14",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/15b673d122532d44fea2e6d026172ac90929da14",
      "created_at": "2024-07-19T14:36:09Z"
    },
    {
      "event": "referenced",
      "id": 13575837764,
      "node_id": "REFE_lADOABII585ORepCzwAAAAMpLthE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13575837764",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "3523c12195c912fce049465aff7eb144844cd2ba",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/3523c12195c912fce049465aff7eb144844cd2ba",
      "created_at": "2024-07-19T14:40:29Z"
    },
    {
      "event": "referenced",
      "id": 13575837865,
      "node_id": "REFE_lADOABII585ORepCzwAAAAMpLtip",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13575837865",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "39194c653437a3e3969b07d88116eecd2797dac6",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/39194c653437a3e3969b07d88116eecd2797dac6",
      "created_at": "2024-07-19T14:40:29Z"
    },
    {
      "event": "referenced",
      "id": 13796363544,
      "node_id": "REFE_lADOABII585ORepCzwAAAAM2U80Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13796363544",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "dfa16d7d929f8103ebf2b6b1a5b9f57fcecaa2f7",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/dfa16d7d929f8103ebf2b6b1a5b9f57fcecaa2f7",
      "created_at": "2024-08-07T18:34:40Z"
    },
    {
      "event": "referenced",
      "id": 13796363616,
      "node_id": "REFE_lADOABII585ORepCzwAAAAM2U81g",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13796363616",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "57b1f09b300ecf958464fdb8356eecadb9bd0da1",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/57b1f09b300ecf958464fdb8356eecadb9bd0da1",
      "created_at": "2024-08-07T18:34:40Z"
    },
    {
      "event": "labeled",
      "id": 13909167369,
      "node_id": "LE_lADOABII585ORepCzwAAAAM9DQ0J",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13909167369",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-16T10:28:55Z",
      "label": {
        "name": "Needs CMake port",
        "color": "0e8a16"
      }
    },
    {
      "event": "labeled",
      "id": 14056070440,
      "node_id": "LE_lADOABII585ORepCzwAAAANFzp0o",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14056070440",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-29T05:47:22Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2316763331,
      "node_id": "IC_kwDOABII586KFwDD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2316763331",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-29T05:47:23Z",
      "updated_at": "2024-08-29T05:47:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/27669548464</sub>\n\n<details><summary>Hints</summary>\n\nMake sure to run all tests locally, according to the documentation.\n\nThe failure may happen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-2316763331",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "unlabeled",
      "id": 14056103794,
      "node_id": "UNLE_lADOABII585ORepCzwAAAANFzx9y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14056103794",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-29T05:51:44Z",
      "label": {
        "name": "Needs CMake port",
        "color": "0e8a16"
      }
    },
    {
      "event": "labeled",
      "id": 14107552989,
      "node_id": "LE_lADOABII585ORepCzwAAAANI4Czd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14107552989",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-02T22:46:48Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15103552626,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAOEPexy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15103552626",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "609bb02d977471ae67915af9c201ef9bbfe5d4be",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/609bb02d977471ae67915af9c201ef9bbfe5d4be",
      "created_at": "2024-11-04T13:01:56Z"
    },
    {
      "event": "unlabeled",
      "id": 15103586397,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAOEPnBd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15103586397",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-04T13:04:19Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15103724208,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAOEQIqw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15103724208",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7e2b35711e11aa404eb0bd86776beb52916d354d",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/7e2b35711e11aa404eb0bd86776beb52916d354d",
      "created_at": "2024-11-04T13:13:59Z"
    },
    {
      "event": "referenced",
      "id": 15103859828,
      "node_id": "REFE_lADOABII585ORepCzwAAAAOEQpx0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15103859828",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0e038bff5bdc2d2b35c33967b3df5bd4bc554063",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/0e038bff5bdc2d2b35c33967b3df5bd4bc554063",
      "created_at": "2024-11-04T13:23:20Z"
    },
    {
      "event": "referenced",
      "id": 15103859912,
      "node_id": "REFE_lADOABII585ORepCzwAAAAOEQpzI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15103859912",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5ce613ee2c0749fceb96820a90e294d119c1ac8c",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/5ce613ee2c0749fceb96820a90e294d119c1ac8c",
      "created_at": "2024-11-04T13:23:20Z"
    },
    {
      "event": "unlabeled",
      "id": 15105313236,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAOEWMnU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15105313236",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-04T14:52:16Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "referenced",
      "id": 15106291905,
      "node_id": "REFE_lADOABII585ORepCzwAAAAOEZ7jB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15106291905",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6697161ef5b5290b4f5f4ef5897f04db3f99f2de",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/6697161ef5b5290b4f5f4ef5897f04db3f99f2de",
      "created_at": "2024-11-04T15:50:58Z"
    },
    {
      "event": "labeled",
      "id": 15534248444,
      "node_id": "LE_lADOABII585ORepCzwAAAAOd6dH8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15534248444",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-05T00:47:29Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15558877473,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAOfYaEh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15558877473",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "58c33f0f3a93cbe8b8e7e04fdc5ab09734db49b0",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/58c33f0f3a93cbe8b8e7e04fdc5ab09734db49b0",
      "created_at": "2024-12-06T11:34:38Z"
    },
    {
      "event": "commented",
      "id": 2522979634,
      "node_id": "IC_kwDOABII586WYZ0y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2522979634",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-06T11:36:33Z",
      "updated_at": "2025-10-09T14:56:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased 7e2b35711e11aa404eb0bd86776beb52916d354d -> 58c33f0f3a93cbe8b8e7e04fdc5ab09734db49b0 ([`pr/bresult2.61`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.61) -> [`pr/bresult2.62`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.62), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.61-rebase..pr/bresult2.62)) due to conflict with #30377\nRebased 58c33f0f3a93cbe8b8e7e04fdc5ab09734db49b0 -> 5e14665e04d96bbc59eec27d95b7beea33f81c74 ([`pr/bresult2.62`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.62) -> [`pr/bresult2.63`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.63), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.62-rebase..pr/bresult2.63)) due to conflict with #31072\nRebased 5e14665e04d96bbc59eec27d95b7beea33f81c74 -> 15adb64db80fe001b95b1fb4f309e52d11be413e ([`pr/bresult2.63`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.63) -> [`pr/bresult2.64`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.64), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.63-rebase..pr/bresult2.64)) due to conflicts with #31483 and #30965\nUpdated 15adb64db80fe001b95b1fb4f309e52d11be413e -> 69b14c8122d69ae25b42a46e70f80aad1f783f0e ([`pr/bresult2.64`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.64) -> [`pr/bresult2.65`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.65), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.64..pr/bresult2.65)) to fix clang-tidy errors https://github.com/bitcoin/bitcoin/runs/38587781248\n<!-- begin push-66 -->\nRebased 69b14c8122d69ae25b42a46e70f80aad1f783f0e -> 8b892d41fdeb5756fd83f6050f27a170338d260a ([`pr/bresult2.65`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.65) -> [`pr/bresult2.66`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.66), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.65-rebase..pr/bresult2.66))<!-- end --> due to conflict with #32987",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-2522979634",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "referenced",
      "id": 15558994215,
      "node_id": "REFE_lADOABII585ORepCzwAAAAOfY2kn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15558994215",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b8ed4eee7929e3e9b65679b222596ec671648c7b",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/b8ed4eee7929e3e9b65679b222596ec671648c7b",
      "created_at": "2024-12-06T11:40:10Z"
    },
    {
      "event": "referenced",
      "id": 15558994322,
      "node_id": "REFE_lADOABII585ORepCzwAAAAOfY2mS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15558994322",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "99b8ab69e1a31a5ac6b4ec29ed5dff01d2b0dcff",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/99b8ab69e1a31a5ac6b4ec29ed5dff01d2b0dcff",
      "created_at": "2024-12-06T11:40:10Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15559394985,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAOfaYap",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15559394985",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5e14665e04d96bbc59eec27d95b7beea33f81c74",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/5e14665e04d96bbc59eec27d95b7beea33f81c74",
      "created_at": "2024-12-06T12:03:39Z"
    },
    {
      "event": "referenced",
      "id": 15559472071,
      "node_id": "REFE_lADOABII585ORepCzwAAAAOfarPH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15559472071",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6fb1eb8ac6cc0fbf091f9da8d428d9a22dadb34c",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/6fb1eb8ac6cc0fbf091f9da8d428d9a22dadb34c",
      "created_at": "2024-12-06T12:10:28Z"
    },
    {
      "event": "referenced",
      "id": 15559472120,
      "node_id": "REFE_lADOABII585ORepCzwAAAAOfarP4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15559472120",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f28da0bba7ab6a6a99fa3961fcde2b3422610102",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/f28da0bba7ab6a6a99fa3961fcde2b3422610102",
      "created_at": "2024-12-06T12:10:28Z"
    },
    {
      "event": "unlabeled",
      "id": 15560179340,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAOfdX6M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15560179340",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-06T13:07:46Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 15977501951,
      "node_id": "LE_lADOABII585ORepCzwAAAAO4VVT_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15977501951",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-17T13:26:07Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16695576529,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAPjIkfR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16695576529",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "15adb64db80fe001b95b1fb4f309e52d11be413e",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/15adb64db80fe001b95b1fb4f309e52d11be413e",
      "created_at": "2025-03-11T18:59:27Z"
    },
    {
      "event": "labeled",
      "id": 16697177756,
      "node_id": "LE_lADOABII585ORepCzwAAAAPjOrac",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16697177756",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-11T19:58:06Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2715561746,
      "node_id": "IC_kwDOABII586h3C8S",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2715561746",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-11T19:58:07Z",
      "updated_at": "2025-03-11T19:58:07Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/38587781248</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-2715561746",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "unlabeled",
      "id": 16697996135,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAPjRzNn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16697996135",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-11T20:51:35Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16698530965,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAPjT1yV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16698530965",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "69b14c8122d69ae25b42a46e70f80aad1f783f0e",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/69b14c8122d69ae25b42a46e70f80aad1f783f0e",
      "created_at": "2025-03-11T21:40:13Z"
    },
    {
      "event": "unlabeled",
      "id": 16698966716,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAPjVgK8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16698966716",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-11T22:30:24Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "referenced",
      "id": 16702493683,
      "node_id": "REFE_lADOABII585ORepCzwAAAAPji9Pz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16702493683",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "29d8153b561dc6d9b92291196aaefc23be117ae9",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/29d8153b561dc6d9b92291196aaefc23be117ae9",
      "created_at": "2025-03-12T00:44:59Z"
    },
    {
      "event": "referenced",
      "id": 16702493725,
      "node_id": "REFE_lADOABII585ORepCzwAAAAPji9Qd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16702493725",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b82cfadb1447c5e892b2ba4a0a58f25e19679d8c",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/b82cfadb1447c5e892b2ba4a0a58f25e19679d8c",
      "created_at": "2025-03-12T00:45:00Z"
    },
    {
      "event": "referenced",
      "id": 16915534299,
      "node_id": "REFE_lADOABII585ORepCzwAAAAPwPpHb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16915534299",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "8d6b343ed582a38180a20caaabc58ed5d7d83af6",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/8d6b343ed582a38180a20caaabc58ed5d7d83af6",
      "created_at": "2025-03-20T17:54:46Z"
    },
    {
      "event": "referenced",
      "id": 16915534380,
      "node_id": "REFE_lADOABII585ORepCzwAAAAPwPpIs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16915534380",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "8b242595cc639682a3f537ac6850e3cc047fab34",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/8b242595cc639682a3f537ac6850e3cc047fab34",
      "created_at": "2025-03-20T17:54:46Z"
    },
    {
      "event": "referenced",
      "id": 16962923818,
      "node_id": "REFE_lADOABII585ORepCzwAAAAPzEa0q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16962923818",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "3969e882217e5caac759fe5533094b10e7b9cc1d",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/3969e882217e5caac759fe5533094b10e7b9cc1d",
      "created_at": "2025-03-24T20:47:09Z"
    },
    {
      "event": "referenced",
      "id": 16962924074,
      "node_id": "REFE_lADOABII585ORepCzwAAAAPzEa4q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16962924074",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "195d9e3a558f63b04a24edeb8751e639d6877d7a",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/195d9e3a558f63b04a24edeb8751e639d6877d7a",
      "created_at": "2025-03-24T20:47:10Z"
    },
    {
      "event": "labeled",
      "id": 17120070267,
      "node_id": "LE_lADOABII585ORepCzwAAAAP8b4p7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17120070267",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-03T20:21:33Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 17124587274,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAP8tHcK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17124587274",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-04T06:20:06Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 18907715274,
      "node_id": "LE_lADOABII585ORepCzwAAAARm_NbK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18907715274",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-30T21:18:01Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDI1YWIwNTY5NGU3NWQ3OGFhZTIwODExYWU2MDIzNmRmZGNlNWE5MDA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/25ab05694e75d78aae20811ae60236dfdce5a900",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/25ab05694e75d78aae20811ae60236dfdce5a900",
      "tree": {
        "sha": "94d5b07ebfab6ff576472a333c07ba4c8ed792b7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/94d5b07ebfab6ff576472a333c07ba4c8ed792b7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aef2dbb402763e49fadc37dc75dff87ff3a5c6b0",
          "sha": "aef2dbb402763e49fadc37dc75dff87ff3a5c6b0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/aef2dbb402763e49fadc37dc75dff87ff3a5c6b0"
        }
      ],
      "message": "refactor: Add util::Result failure values\n\nAdd util::Result support for returning more error information. For better error\nhandling, adds the ability to return a value on failure, not just a value on\nsuccess. This is a key missing feature that made the result class not useful\nfor functions like LoadChainstate() which produce different errors that need to\nbe handled differently.\n\nThis change also makes some more minor improvements:\n\n- Smaller type size. util::Result<int> is 16 bytes, and util::Result<void> is 8\n  bytes. Previously util::Result<int> and util::Result<void> were 72 bytes.\n\n- More documentation and tests.",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2025-07-31T14:08:16Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2022-07-18T19:48:04Z"
      },
      "sha": "25ab05694e75d78aae20811ae60236dfdce5a900"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDViNTBiMmE0NGY1MGU3MWUzOTkxOWEwZWQxNmZhY2RlZGJmOTFlNDg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5b50b2a44f50e71e39919a0ed16facdedbf91e48",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5b50b2a44f50e71e39919a0ed16facdedbf91e48",
      "tree": {
        "sha": "ef93f8584fa0d70618d98b279fa206a6a31d6d77",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ef93f8584fa0d70618d98b279fa206a6a31d6d77"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/25ab05694e75d78aae20811ae60236dfdce5a900",
          "sha": "25ab05694e75d78aae20811ae60236dfdce5a900",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/25ab05694e75d78aae20811ae60236dfdce5a900"
        }
      ],
      "message": "wallet: fix clang-tidy warning performance-no-automatic-move\n\nPrevious commit causes the warning to be triggered, but the suboptimal return\nfrom const statement was added earlier in 517e204bacd9d.\n\nWarning was causing CI failure https://cirrus-ci.com/task/6159914970644480",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2025-07-31T14:08:16Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-07-19T12:07:35Z"
      },
      "sha": "5b50b2a44f50e71e39919a0ed16facdedbf91e48"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGYxNDJjYzQ4YzdlNjdhMjQxNGYzMDQ4N2UyYjljNThlODY4ZTJiMjM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f142cc48c7e67a2414f30487e2b9c58e868e2b23",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f142cc48c7e67a2414f30487e2b9c58e868e2b23",
      "tree": {
        "sha": "06359c7ce0c8012d1c297dbffcc99ba80d91c3b9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/06359c7ce0c8012d1c297dbffcc99ba80d91c3b9"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5b50b2a44f50e71e39919a0ed16facdedbf91e48",
          "sha": "5b50b2a44f50e71e39919a0ed16facdedbf91e48",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5b50b2a44f50e71e39919a0ed16facdedbf91e48"
        }
      ],
      "message": "refactor: Add util::Result::Update() method\n\nAdd util::Result Update method to make it possible to change the value of an\nexisting Result object. This will be useful for functions that can return\nmultiple error and warning messages, and want to be able to change the result\nvalue while keeping existing messages.",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2025-07-31T14:08:16Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2022-07-18T19:48:04Z"
      },
      "sha": "f142cc48c7e67a2414f30487e2b9c58e868e2b23"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDc5YzNmZTkzY2YyZWY1ZDA2YjY0NDQ0YmVlNWM5ZDU0ZmE4MWU5ZTA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/79c3fe93cf2ef5d06b64444bee5c9d54fa81e9e0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/79c3fe93cf2ef5d06b64444bee5c9d54fa81e9e0",
      "tree": {
        "sha": "b8d9325875494acfe735df1b7f400b163e8a049b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b8d9325875494acfe735df1b7f400b163e8a049b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f142cc48c7e67a2414f30487e2b9c58e868e2b23",
          "sha": "f142cc48c7e67a2414f30487e2b9c58e868e2b23",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f142cc48c7e67a2414f30487e2b9c58e868e2b23"
        }
      ],
      "message": "refactor: Use util::Result class in LoadChainstate and VerifyLoadedChainstate",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2025-07-31T14:08:16Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-11-02T00:14:04Z"
      },
      "sha": "79c3fe93cf2ef5d06b64444bee5c9d54fa81e9e0"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDVmMWYyM2JjMTdkMWNhYzY3ZDAwNjZiZTEzMmQwMzJhNjEwODUwYWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5f1f23bc17d1cac67d0066be132d032a610850ab",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5f1f23bc17d1cac67d0066be132d032a610850ab",
      "tree": {
        "sha": "192c9c2ad36bd33e45343f9b9f5c0c0c8a80c7c5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/192c9c2ad36bd33e45343f9b9f5c0c0c8a80c7c5"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/79c3fe93cf2ef5d06b64444bee5c9d54fa81e9e0",
          "sha": "79c3fe93cf2ef5d06b64444bee5c9d54fa81e9e0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/79c3fe93cf2ef5d06b64444bee5c9d54fa81e9e0"
        }
      ],
      "message": "refactor: Add util::Result multiple error and warning messages\n\nAdd util::Result support for returning warning messages and multiple errors,\nnot just a single error string. This provides a way for functions to report\nerrors and warnings in a standard way, and simplifies interfaces.\n\nThe functionality is unit tested here, and put to use in followup PR\nhttps://github.com/bitcoin/bitcoin/pull/25722",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2025-07-31T14:08:16Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-03-26T18:17:01Z"
      },
      "sha": "5f1f23bc17d1cac67d0066be132d032a610850ab"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDhiODkyZDQxZmRlYjU3NTZmZDgzZjYwNTBmMjdhMTcwMzM4ZDI2MGE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8b892d41fdeb5756fd83f6050f27a170338d260a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8b892d41fdeb5756fd83f6050f27a170338d260a",
      "tree": {
        "sha": "96b1cd2caacea80b897c780b0e0b5fd8ebab5943",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/96b1cd2caacea80b897c780b0e0b5fd8ebab5943"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5f1f23bc17d1cac67d0066be132d032a610850ab",
          "sha": "5f1f23bc17d1cac67d0066be132d032a610850ab",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5f1f23bc17d1cac67d0066be132d032a610850ab"
        }
      ],
      "message": "test: add static test for util::Result memory usage\n\nSuggested by Martin Leitner-Ankerl <martin.ankerl@gmail.com>\nhttps://github.com/bitcoin/bitcoin/pull/25722#discussion_r1174298529\n\nCo-authored-by: Martin Leitner-Ankerl <martin.ankerl@gmail.com>",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2025-07-31T14:08:16Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2023-07-20T17:52:40Z"
      },
      "sha": "8b892d41fdeb5756fd83f6050f27a170338d260a"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18924361297,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAARn-tZR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18924361297",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/8b892d41fdeb5756fd83f6050f27a170338d260a",
      "created_at": "2025-07-31T17:53:32Z"
    },
    {
      "event": "unlabeled",
      "id": 18924850714,
      "node_id": "UNLE_lADOABII585ORepCzwAAAARoAk4a",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18924850714",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-31T18:28:59Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "referenced",
      "id": 18942224015,
      "node_id": "REFE_lADOABII585ORepCzwAAAARpC2aP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18942224015",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fe54b4faddae31c4901e3e27fe4a154c60b3a9a3",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/fe54b4faddae31c4901e3e27fe4a154c60b3a9a3",
      "created_at": "2025-08-01T15:37:19Z"
    },
    {
      "event": "referenced",
      "id": 18942224140,
      "node_id": "REFE_lADOABII585ORepCzwAAAARpC2cM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18942224140",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "c0d68be33e31f975dfb14eb6ca622af6544991c7",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/c0d68be33e31f975dfb14eb6ca622af6544991c7",
      "created_at": "2025-08-01T15:37:19Z"
    },
    {
      "event": "referenced",
      "id": 18942468743,
      "node_id": "REFE_lADOABII585ORepCzwAAAARpDyKH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18942468743",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e8b5610ae11b2779aaf8584509de6034a4f5d25b",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/e8b5610ae11b2779aaf8584509de6034a4f5d25b",
      "created_at": "2025-08-01T15:51:37Z"
    },
    {
      "event": "referenced",
      "id": 18942468806,
      "node_id": "REFE_lADOABII585ORepCzwAAAARpDyLG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18942468806",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "866c7eb11c54fc169552b855544995fd46e125bd",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/866c7eb11c54fc169552b855544995fd46e125bd",
      "created_at": "2025-08-01T15:51:38Z"
    },
    {
      "event": "referenced",
      "id": 20282220659,
      "node_id": "REFE_lADOABII585ORepCzwAAAAS46iBz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20282220659",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d7064c63a92b29beb96304c2b96a76d834095f6f",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/d7064c63a92b29beb96304c2b96a76d834095f6f",
      "created_at": "2025-10-15T00:42:08Z"
    },
    {
      "event": "referenced",
      "id": 20282220720,
      "node_id": "REFE_lADOABII585ORepCzwAAAAS46iCw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20282220720",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "529970aa98a467e02ac3f0ffabe57e3bab26705f",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/529970aa98a467e02ac3f0ffabe57e3bab26705f",
      "created_at": "2025-10-15T00:42:09Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/926651294",
      "pull_request_review_id": 1046496463,
      "id": 926651294,
      "node_id": "PRRC_kwDOABII5843O5Oe",
      "diff_hunk": "@@ -46,10 +46,10 @@ static void BenchUnloadWallet(std::shared_ptr<CWallet>&& wallet)\n static void AddTx(CWallet& wallet)\n {\n     const auto& dest = wallet.GetNewDestination(OutputType::BECH32, \"\");\n-    assert(dest.HasRes());\n+    assert(dest);",
      "path": "src/bench/wallet_loading.cpp",
      "position": 1,
      "original_position": 5,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "6a06a7c3ad264c0ddf4904949839be1ade8011a5",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This pull changes both the interface, as well as the internal representation. I wonder if changing the interface and renames can be done separate from the restructuring.\r\n\r\nHopefully those would be uncontroversial and could be reviewed easier/faster, so that less silent merge conflicts arise as the class gets used more and more. Also, less code will need to be changes if the interface changes are made earlier rather than later.",
      "created_at": "2022-07-21T13:05:47Z",
      "updated_at": "2022-07-21T13:07:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r926651294",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/926651294"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/926658150",
      "pull_request_review_id": 1046506217,
      "id": 926658150,
      "node_id": "PRRC_kwDOABII5843O65m",
      "diff_hunk": "@@ -46,10 +46,10 @@ static void BenchUnloadWallet(std::shared_ptr<CWallet>&& wallet)\n static void AddTx(CWallet& wallet)\n {\n     const auto& dest = wallet.GetNewDestination(OutputType::BECH32, \"\");\n-    assert(dest.HasRes());\n+    assert(dest);",
      "path": "src/bench/wallet_loading.cpp",
      "position": 1,
      "original_position": 5,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "6a06a7c3ad264c0ddf4904949839be1ade8011a5",
      "in_reply_to_id": 926651294,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> This pull changes both the interface, as well as the internal representation. I wonder if changing the interface and renames can be done separate from the restructuring.\r\n\r\nOnly the third commit drops BResult usages, so the answer should be yes. IMO std::optional has a nice interface and it is a shame to reinvent it with stranger HasRes GetObj ReleaseObj methods.",
      "created_at": "2022-07-21T13:12:19Z",
      "updated_at": "2022-07-21T13:12:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r926658150",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/926658150"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/926660730",
      "pull_request_review_id": 1046510212,
      "id": 926660730,
      "node_id": "PRRC_kwDOABII5843O7h6",
      "diff_hunk": "@@ -46,10 +46,10 @@ static void BenchUnloadWallet(std::shared_ptr<CWallet>&& wallet)\n static void AddTx(CWallet& wallet)\n {\n     const auto& dest = wallet.GetNewDestination(OutputType::BECH32, \"\");\n-    assert(dest.HasRes());\n+    assert(dest);",
      "path": "src/bench/wallet_loading.cpp",
      "position": 1,
      "original_position": 5,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "6a06a7c3ad264c0ddf4904949839be1ade8011a5",
      "in_reply_to_id": 926651294,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "With separate I meant separate pulls :sweat_smile: ",
      "created_at": "2022-07-21T13:14:54Z",
      "updated_at": "2022-07-21T13:14:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r926660730",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/926660730"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/926667440",
      "pull_request_review_id": 1046519522,
      "id": 926667440,
      "node_id": "PRRC_kwDOABII5843O9Kw",
      "diff_hunk": "@@ -46,10 +46,10 @@ static void BenchUnloadWallet(std::shared_ptr<CWallet>&& wallet)\n static void AddTx(CWallet& wallet)\n {\n     const auto& dest = wallet.GetNewDestination(OutputType::BECH32, \"\");\n-    assert(dest.HasRes());\n+    assert(dest);",
      "path": "src/bench/wallet_loading.cpp",
      "position": 1,
      "original_position": 5,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "6a06a7c3ad264c0ddf4904949839be1ade8011a5",
      "in_reply_to_id": 926651294,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> With separate I meant separate pulls sweat_smile\r\n\r\nOh sorry, I thought you were asking literally if it is possible",
      "created_at": "2022-07-21T13:20:49Z",
      "updated_at": "2022-07-21T13:20:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r926667440",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/926667440"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/927648344",
      "pull_request_review_id": 1047899737,
      "id": 927648344,
      "node_id": "PRRC_kwDOABII5843SspY",
      "diff_hunk": "@@ -46,10 +46,10 @@ static void BenchUnloadWallet(std::shared_ptr<CWallet>&& wallet)\n static void AddTx(CWallet& wallet)\n {\n     const auto& dest = wallet.GetNewDestination(OutputType::BECH32, \"\");\n-    assert(dest.HasRes());\n+    assert(dest);",
      "path": "src/bench/wallet_loading.cpp",
      "position": 1,
      "original_position": 5,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "6a06a7c3ad264c0ddf4904949839be1ade8011a5",
      "in_reply_to_id": 926651294,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think the stuff that can be split out:\r\n\r\n* Makes Result class provide same operators and methods as std::optional\r\n* Puts src/util/ code in the util:: namespace so naming reflects code organization and it is obvious where the class is coming from. Drops \"B\" from name because it is undocumented what it stands for (bilingual?)\r\n* Supports Result<bilingual_str> return values. Drops ambiguous and potentially misleading BResult constructor that treats any bilingual string as an error, and any other type as a non-error. Adds util::Error constructor so errors have to be explicitly constructed and not any bilingual_str will be turned into one.\r\n",
      "created_at": "2022-07-22T13:23:40Z",
      "updated_at": "2022-07-22T13:23:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r927648344",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/927648344"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/927703509",
      "pull_request_review_id": 1047980709,
      "id": 927703509,
      "node_id": "PRRC_kwDOABII5843S6HV",
      "diff_hunk": "@@ -46,10 +46,10 @@ static void BenchUnloadWallet(std::shared_ptr<CWallet>&& wallet)\n static void AddTx(CWallet& wallet)\n {\n     const auto& dest = wallet.GetNewDestination(OutputType::BECH32, \"\");\n-    assert(dest.HasRes());\n+    assert(dest);",
      "path": "src/bench/wallet_loading.cpp",
      "position": 1,
      "original_position": 5,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "6a06a7c3ad264c0ddf4904949839be1ade8011a5",
      "in_reply_to_id": 926651294,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think these things are already split out. The first two commits do not change the interface or naming or functionality of BResult in any way. If you want me to move the last commit to another, PR I can do that.",
      "created_at": "2022-07-22T14:22:33Z",
      "updated_at": "2022-07-22T14:22:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r927703509",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/927703509"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/927707935",
      "pull_request_review_id": 1047987255,
      "id": 927707935,
      "node_id": "PRRC_kwDOABII5843S7Mf",
      "diff_hunk": "@@ -46,10 +46,10 @@ static void BenchUnloadWallet(std::shared_ptr<CWallet>&& wallet)\n static void AddTx(CWallet& wallet)\n {\n     const auto& dest = wallet.GetNewDestination(OutputType::BECH32, \"\");\n-    assert(dest.HasRes());\n+    assert(dest);",
      "path": "src/bench/wallet_loading.cpp",
      "position": 1,
      "original_position": 5,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "6a06a7c3ad264c0ddf4904949839be1ade8011a5",
      "in_reply_to_id": 926651294,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yeah, I think that makes sense, so that we can first figure out the interface, and then start using it more widely, not the other way round.",
      "created_at": "2022-07-22T14:27:20Z",
      "updated_at": "2022-07-22T14:27:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r927707935",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/927707935"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/930446676",
      "pull_request_review_id": 1051660331,
      "id": 930446676,
      "node_id": "PRRC_kwDOABII5843dX1U",
      "diff_hunk": "@@ -46,10 +46,10 @@ static void BenchUnloadWallet(std::shared_ptr<CWallet>&& wallet)\n static void AddTx(CWallet& wallet)\n {\n     const auto& dest = wallet.GetNewDestination(OutputType::BECH32, \"\");\n-    assert(dest.HasRes());\n+    assert(dest);",
      "path": "src/bench/wallet_loading.cpp",
      "position": 1,
      "original_position": 5,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "6a06a7c3ad264c0ddf4904949839be1ade8011a5",
      "in_reply_to_id": 926651294,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r927707935\r\n\r\n> Yeah, I think that makes sense, so that we can first figure out the interface, and then start using it more widely, not the other way round.\r\n\r\nThanks, moved to #25721 now and rewrote PR description\r\n",
      "created_at": "2022-07-26T21:58:03Z",
      "updated_at": "2022-07-27T19:29:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r930446676",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/930446676"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/943789301",
      "pull_request_review_id": 1069943757,
      "id": 943789301,
      "node_id": "PRRC_kwDOABII5844QRT1",
      "diff_hunk": "@@ -0,0 +1,24 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <util/result.h>\n+#include <util/string.h>\n+\n+namespace util {\n+bilingual_str ErrorString(const std::vector<bilingual_str>& errors)\n+{\n+    return Join(errors, Untranslated(\" \"));\n+}\n+\n+bilingual_str ErrorString(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings)\n+{\n+    bilingual_str result = ErrorString(errors);",
      "path": "src/util/result.cpp",
      "position": 1,
      "original_position": 16,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit:\r\n```suggestion\r\n    bilingual_str result{ErrorString(errors)};\r\n```",
      "created_at": "2022-08-11T18:12:09Z",
      "updated_at": "2022-08-19T17:05:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r943789301",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/943789301"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/943807162",
      "pull_request_review_id": 1069943757,
      "id": 943807162,
      "node_id": "PRRC_kwDOABII5844QVq6",
      "diff_hunk": "@@ -8,16 +8,133 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 8,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'm not sure why iwyu [doesn't](https://cirrus-ci.com/task/6358959639494656) catch it, but shouldn't `forward`, `types` and `utility` also be included here?",
      "created_at": "2022-08-11T18:33:11Z",
      "updated_at": "2022-08-19T17:05:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r943807162",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/943807162"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": 11,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/944367210",
      "pull_request_review_id": 1070947229,
      "id": 944367210,
      "node_id": "PRRC_kwDOABII5844SeZq",
      "diff_hunk": "@@ -8,16 +8,133 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    template <typename... Args>\n+    void InitFailure(Args&&... args)\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->failure.emplace(std::forward<Args>(args)...);\n+    }\n+    void InitValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (error.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (warning.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Success check.\n+    operator bool() const { return !m_info || !m_info->failure; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same<_F, void>::value, const _F&> GetFailure() const { assert(!*this); return *m_info->failure; }\n+    const std::vector<bilingual_str>& GetErrors() const { return m_info ? m_info->errors : EMPTY_LIST; }\n+    const std::vector<bilingual_str>& GetWarnings() const { return m_info ? m_info->warnings : EMPTY_LIST; }",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 76,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Could probably make sense to split this up and use it there: https://github.com/bitcoin/bitcoin/pull/25616#discussion_r942704207",
      "created_at": "2022-08-12T11:18:55Z",
      "updated_at": "2022-08-12T11:18:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r944367210",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/944367210"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/945167440",
      "pull_request_review_id": 1071979503,
      "id": 945167440,
      "node_id": "PRRC_kwDOABII5844VhxQ",
      "diff_hunk": "@@ -31,54 +148,84 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([this](auto&&... x) { this->InitFailure(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n+    {\n+        *this << std::move(other);\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        if (other) this->MoveValue(other); else if (other.m_info) this->m_info->failure = std::move(other.m_info->failure);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename FT, typename FF>\n+    friend class Result;\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.\n+    template <typename... Args>\n+    Result(Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        Construct([this](auto&&... x) { this->InitValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n+    Result& operator=(Result&& other)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n+        MoveConstruct(other);\n+        return *this;\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+    ~Result() { if (*this) this->DestroyValue(); }\n+\n+    //! Operator moving warning and error messages from one result to another.\n+    template <typename OT, typename OF>\n+    Result<OT, OF>&& operator<<(Result<OT, OF>&& other)\n     {\n-        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+        if (other.m_info && !this->m_info) {\n+            this->m_info.reset(new detail::ErrorInfo<F>{.errors = std::move(other.m_info->errors),\n+                                                        .warnings = std::move(other.m_info->warnings)});\n+        } else if (other.m_info && this->m_info) {\n+            detail::MoveElements(other.m_info->errors, this->m_info->errors);\n+            detail::MoveElements(other.m_info->warnings, this->m_info->warnings);\n+        }",
      "path": "src/util/result.h",
      "position": 416,
      "original_position": 232,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "in_reply_to_id": null,
      "user": {
        "login": "Riahiamirreza",
        "id": 54557628,
        "node_id": "MDQ6VXNlcjU0NTU3NjI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/54557628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Riahiamirreza",
        "html_url": "https://github.com/Riahiamirreza",
        "followers_url": "https://api.github.com/users/Riahiamirreza/followers",
        "following_url": "https://api.github.com/users/Riahiamirreza/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Riahiamirreza/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Riahiamirreza/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Riahiamirreza/subscriptions",
        "organizations_url": "https://api.github.com/users/Riahiamirreza/orgs",
        "repos_url": "https://api.github.com/users/Riahiamirreza/repos",
        "events_url": "https://api.github.com/users/Riahiamirreza/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Riahiamirreza/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "What is the difference between when the `this->m_info` is `true` and when it is `false`? While as far as I understand in both cases the `this->m_info` is destroyed and replaced by `other.m_info`.  Am I correct? So why bother to check `other.m_info && !this->m_info` and  `other.m_info && this->m_info`?",
      "created_at": "2022-08-13T16:42:21Z",
      "updated_at": "2022-08-13T16:47:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r945167440",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/945167440"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 365,
      "original_line": 365,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/945184751",
      "pull_request_review_id": 1071993521,
      "id": 945184751,
      "node_id": "PRRC_kwDOABII5844Vl_v",
      "diff_hunk": "@@ -31,54 +148,84 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([this](auto&&... x) { this->InitFailure(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n+    {\n+        *this << std::move(other);\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        if (other) this->MoveValue(other); else if (other.m_info) this->m_info->failure = std::move(other.m_info->failure);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename FT, typename FF>\n+    friend class Result;\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.\n+    template <typename... Args>\n+    Result(Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        Construct([this](auto&&... x) { this->InitValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n+    Result& operator=(Result&& other)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n+        MoveConstruct(other);\n+        return *this;\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+    ~Result() { if (*this) this->DestroyValue(); }\n+\n+    //! Operator moving warning and error messages from one result to another.\n+    template <typename OT, typename OF>\n+    Result<OT, OF>&& operator<<(Result<OT, OF>&& other)\n     {\n-        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+        if (other.m_info && !this->m_info) {\n+            this->m_info.reset(new detail::ErrorInfo<F>{.errors = std::move(other.m_info->errors),\n+                                                        .warnings = std::move(other.m_info->warnings)});\n+        } else if (other.m_info && this->m_info) {\n+            detail::MoveElements(other.m_info->errors, this->m_info->errors);\n+            detail::MoveElements(other.m_info->warnings, this->m_info->warnings);\n+        }",
      "path": "src/util/result.h",
      "position": 416,
      "original_position": 232,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "in_reply_to_id": 945167440,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> What is the difference between when the `this->m_info` is `true` and when it is `false`?\r\n\r\nThe implementation is optimized for the \"happy path\" where a success value is set and there is no failure value and no error or warning message strings. In the happy path case, `m_info` is null and no allocation is needed. Otherwise, if there has been any kind of error or warning `m_info` will be non-null.\r\n\r\n> While as far as I understand in both cases the `this->m_info` is destroyed and replaced by `other.m_info`.  Am I correct?\r\n\r\nNo that's not really correct. As the comment \"Operator moving warning and error messages from one result to another\" says, only warning and error strings are moved from `other` to `*this`. The success and value statuses of `other` and `*this` objects are unchanged, and the success and failure values of both objects (if any) are also unchanged. Existing warning and error strings in `*this` are also not affected, the new errors and warnings just get appended and don't replace existing one.\r\n\r\n> So why bother to check `other.m_info && !this->m_info` and `other.m_info && this->m_info`?\r\n\r\nI'm not sure what other code you might expect to see here, but in both cases this is just moving `other.m_info->errors` strings to `this->m_info->errors` and moving `other.m_info->warnings` strings to `this->m_info->warnings` while not deleting any existing strings and not changing `other.m_info->failure` and `this->m_info->failure` values.",
      "created_at": "2022-08-13T20:02:49Z",
      "updated_at": "2022-08-13T20:03:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r945184751",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/945184751"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 365,
      "original_line": 365,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/945529940",
      "pull_request_review_id": 1072373197,
      "id": 945529940,
      "node_id": "PRRC_kwDOABII5844W6RU",
      "diff_hunk": "@@ -8,16 +8,133 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    template <typename... Args>\n+    void InitFailure(Args&&... args)\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->failure.emplace(std::forward<Args>(args)...);\n+    }\n+    void InitValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (error.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (warning.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Success check.\n+    operator bool() const { return !m_info || !m_info->failure; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same<_F, void>::value, const _F&> GetFailure() const { assert(!*this); return *m_info->failure; }\n+    const std::vector<bilingual_str>& GetErrors() const { return m_info ? m_info->errors : EMPTY_LIST; }\n+    const std::vector<bilingual_str>& GetWarnings() const { return m_info ? m_info->warnings : EMPTY_LIST; }\n+};\n+\n+//! Result base class for T value type. Holds value and provides accessor methods.\n+template <typename T, typename F>\n+class ResultBase : public ResultBase<void, F>\n+{\n+protected:\n+    union { T m_value; };",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 84,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "in_reply_to_id": null,
      "user": {
        "login": "Riahiamirreza",
        "id": 54557628,
        "node_id": "MDQ6VXNlcjU0NTU3NjI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/54557628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Riahiamirreza",
        "html_url": "https://github.com/Riahiamirreza",
        "followers_url": "https://api.github.com/users/Riahiamirreza/followers",
        "following_url": "https://api.github.com/users/Riahiamirreza/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Riahiamirreza/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Riahiamirreza/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Riahiamirreza/subscriptions",
        "organizations_url": "https://api.github.com/users/Riahiamirreza/orgs",
        "repos_url": "https://api.github.com/users/Riahiamirreza/repos",
        "events_url": "https://api.github.com/users/Riahiamirreza/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Riahiamirreza/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I don't understand why the `m_value` is in a `union` while there is only one member in the `union`? Would you explain why?",
      "created_at": "2022-08-15T08:39:35Z",
      "updated_at": "2022-08-15T08:51:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r945529940",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/945529940"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 244,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/945536621",
      "pull_request_review_id": 1072373197,
      "id": 945536621,
      "node_id": "PRRC_kwDOABII5844W75t",
      "diff_hunk": "@@ -31,54 +148,84 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([this](auto&&... x) { this->InitFailure(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n+    {\n+        *this << std::move(other);\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        if (other) this->MoveValue(other); else if (other.m_info) this->m_info->failure = std::move(other.m_info->failure);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename FT, typename FF>\n+    friend class Result;\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.\n+    template <typename... Args>\n+    Result(Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        Construct([this](auto&&... x) { this->InitValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n+    Result& operator=(Result&& other)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n+        MoveConstruct(other);\n+        return *this;\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+    ~Result() { if (*this) this->DestroyValue(); }\n+\n+    //! Operator moving warning and error messages from one result to another.\n+    template <typename OT, typename OF>\n+    Result<OT, OF>&& operator<<(Result<OT, OF>&& other)\n     {\n-        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+        if (other.m_info && !this->m_info) {\n+            this->m_info.reset(new detail::ErrorInfo<F>{.errors = std::move(other.m_info->errors),\n+                                                        .warnings = std::move(other.m_info->warnings)});\n+        } else if (other.m_info && this->m_info) {\n+            detail::MoveElements(other.m_info->errors, this->m_info->errors);\n+            detail::MoveElements(other.m_info->warnings, this->m_info->warnings);\n+        }",
      "path": "src/util/result.h",
      "position": 416,
      "original_position": 232,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "in_reply_to_id": 945167440,
      "user": {
        "login": "Riahiamirreza",
        "id": 54557628,
        "node_id": "MDQ6VXNlcjU0NTU3NjI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/54557628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Riahiamirreza",
        "html_url": "https://github.com/Riahiamirreza",
        "followers_url": "https://api.github.com/users/Riahiamirreza/followers",
        "following_url": "https://api.github.com/users/Riahiamirreza/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Riahiamirreza/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Riahiamirreza/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Riahiamirreza/subscriptions",
        "organizations_url": "https://api.github.com/users/Riahiamirreza/orgs",
        "repos_url": "https://api.github.com/users/Riahiamirreza/repos",
        "events_url": "https://api.github.com/users/Riahiamirreza/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Riahiamirreza/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks for your explanation. My wrong assumption was that by replacing the warnings and errors the `this` is completely like the `other`, so why checking whether `this->m_info` is null or not. \r\nBut as you mentioned the success and value statuses remained unchanged.",
      "created_at": "2022-08-15T08:49:22Z",
      "updated_at": "2022-08-15T08:49:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r945536621",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/945536621"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 365,
      "original_line": 365,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/945688134",
      "pull_request_review_id": 1072625079,
      "id": 945688134,
      "node_id": "PRRC_kwDOABII5844Xg5G",
      "diff_hunk": "@@ -8,16 +8,133 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    template <typename... Args>\n+    void InitFailure(Args&&... args)\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->failure.emplace(std::forward<Args>(args)...);\n+    }\n+    void InitValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (error.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (warning.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Success check.\n+    operator bool() const { return !m_info || !m_info->failure; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same<_F, void>::value, const _F&> GetFailure() const { assert(!*this); return *m_info->failure; }\n+    const std::vector<bilingual_str>& GetErrors() const { return m_info ? m_info->errors : EMPTY_LIST; }\n+    const std::vector<bilingual_str>& GetWarnings() const { return m_info ? m_info->warnings : EMPTY_LIST; }\n+};\n+\n+//! Result base class for T value type. Holds value and provides accessor methods.\n+template <typename T, typename F>\n+class ResultBase : public ResultBase<void, F>\n+{\n+protected:\n+    union { T m_value; };",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 84,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "in_reply_to_id": 945529940,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> I don't understand why the `m_value` is in a `union` while there is only one member in the `union`? Would you explain why?\r\n\r\nI'll add a code comment, but using a union avoids `m_value` getting constructor and destructor being called automatically, so in the failure case `m_value` is never constructed.",
      "created_at": "2022-08-15T12:47:28Z",
      "updated_at": "2022-08-15T12:48:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r945688134",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/945688134"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 244,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/945877898",
      "pull_request_review_id": 1072845525,
      "id": 945877898,
      "node_id": "PRRC_kwDOABII5844YPOK",
      "diff_hunk": "@@ -8,16 +8,133 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    template <typename... Args>\n+    void InitFailure(Args&&... args)\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->failure.emplace(std::forward<Args>(args)...);\n+    }\n+    void InitValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (error.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (warning.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Success check.\n+    operator bool() const { return !m_info || !m_info->failure; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same<_F, void>::value, const _F&> GetFailure() const { assert(!*this); return *m_info->failure; }\n+    const std::vector<bilingual_str>& GetErrors() const { return m_info ? m_info->errors : EMPTY_LIST; }\n+    const std::vector<bilingual_str>& GetWarnings() const { return m_info ? m_info->warnings : EMPTY_LIST; }",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 76,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "in_reply_to_id": 944367210,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r944367210\r\n\r\n> Could probably make sense to split this up and use it there: [#25616 (comment)](https://github.com/bitcoin/bitcoin/pull/25616#discussion_r942704207)\r\n\r\nIs the suggestion to add the GetErrors() method in this PR, but delay adding the GetWarnings() method until followup PR  #25722? I could do that, but I don't think it would simplify this PR very much (it would remove a few lines) and it would add more churn to result implementation/documentation/unit tests review\r\n\r\n",
      "created_at": "2022-08-15T15:31:51Z",
      "updated_at": "2022-08-15T15:31:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r945877898",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/945877898"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/945880218",
      "pull_request_review_id": 1072848647,
      "id": 945880218,
      "node_id": "PRRC_kwDOABII5844YPya",
      "diff_hunk": "@@ -8,16 +8,133 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    template <typename... Args>\n+    void InitFailure(Args&&... args)\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->failure.emplace(std::forward<Args>(args)...);\n+    }\n+    void InitValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (error.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (warning.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Success check.\n+    operator bool() const { return !m_info || !m_info->failure; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same<_F, void>::value, const _F&> GetFailure() const { assert(!*this); return *m_info->failure; }\n+    const std::vector<bilingual_str>& GetErrors() const { return m_info ? m_info->errors : EMPTY_LIST; }\n+    const std::vector<bilingual_str>& GetWarnings() const { return m_info ? m_info->warnings : EMPTY_LIST; }",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 76,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "in_reply_to_id": 944367210,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "No, I was wondering if `GetWarnings` could be added by itself in the other pull, maybe conflicting with this one, but otherwise unrelated from this one.",
      "created_at": "2022-08-15T15:34:24Z",
      "updated_at": "2022-08-15T15:34:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r945880218",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/945880218"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/945881360",
      "pull_request_review_id": 1072850297,
      "id": 945881360,
      "node_id": "PRRC_kwDOABII5844YQEQ",
      "diff_hunk": "@@ -8,16 +8,133 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    template <typename... Args>\n+    void InitFailure(Args&&... args)\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->failure.emplace(std::forward<Args>(args)...);\n+    }\n+    void InitValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (error.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (warning.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Success check.\n+    operator bool() const { return !m_info || !m_info->failure; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same<_F, void>::value, const _F&> GetFailure() const { assert(!*this); return *m_info->failure; }\n+    const std::vector<bilingual_str>& GetErrors() const { return m_info ? m_info->errors : EMPTY_LIST; }\n+    const std::vector<bilingual_str>& GetWarnings() const { return m_info ? m_info->warnings : EMPTY_LIST; }",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 76,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "in_reply_to_id": 944367210,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This would allow reviewers to just look at the `GetWarnings` implementation, API, and proposed usage, without having to think about `union/void/...` etc.",
      "created_at": "2022-08-15T15:35:48Z",
      "updated_at": "2022-08-15T15:35:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r945881360",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/945881360"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/945935114",
      "pull_request_review_id": 1072924299,
      "id": 945935114,
      "node_id": "PRRC_kwDOABII5844YdMK",
      "diff_hunk": "@@ -8,16 +8,133 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    template <typename... Args>\n+    void InitFailure(Args&&... args)\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->failure.emplace(std::forward<Args>(args)...);\n+    }\n+    void InitValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (error.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (warning.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Success check.\n+    operator bool() const { return !m_info || !m_info->failure; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same<_F, void>::value, const _F&> GetFailure() const { assert(!*this); return *m_info->failure; }\n+    const std::vector<bilingual_str>& GetErrors() const { return m_info ? m_info->errors : EMPTY_LIST; }\n+    const std::vector<bilingual_str>& GetWarnings() const { return m_info ? m_info->warnings : EMPTY_LIST; }",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 76,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "in_reply_to_id": 944367210,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r945881360\r\n\r\n> This would allow reviewers to just look at the `GetWarnings` implementation, API, and proposed usage, without having to think about `union/void/...` etc.\r\n\r\nOh. I guess there could be a third PR independent of this PR and #25722 that adds a `std::vector<bilingual_str> m_warnings;` field to `util::Result` and `AddWarning()/GetWarnings()` methods. I don't think it would be as useful as you might be thinking without template constructors that can move errors & warnings from one result object to another, though.\r\n\r\nMaybe if you are interested you could open a PR that does this? I'd be happy to review it. I'm just not sure exactly what you want to do here because the goal of #25722 is a lot broader. Not just dropping `std::vector<bilingual_str>& warnings` output arguments but also dropping `DatabaseStatus& status` output arguments and returning errors and warnings directly from nested calls.",
      "created_at": "2022-08-15T16:41:01Z",
      "updated_at": "2022-08-15T16:41:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r945935114",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/945935114"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/947098272",
      "pull_request_review_id": 1074563820,
      "id": 947098272,
      "node_id": "PRRC_kwDOABII5844c5Kg",
      "diff_hunk": "@@ -31,14 +32,11 @@ struct ChainstateLoadOptions {\n     std::function<void()> coins_error_cb;\n };\n \n-//! Chainstate load status. Simple applications can just check for the success\n-//! case, and treat other cases as errors. More complex applications may want to\n-//! try reindexing in the generic failure case, and pass an interrupt callback\n-//! and exit cleanly in the interrupted case.\n-enum class ChainstateLoadStatus { SUCCESS, FAILURE, FAILURE_INCOMPATIBLE_DB, INTERRUPTED };\n-\n-//! Chainstate load status code and optional error string.\n-using ChainstateLoadResult = std::tuple<ChainstateLoadStatus, bilingual_str>;\n+//! Chainstate load errors. Simple applications can just treat all errors as\n+//! failures. More complex applications may want to try reindexing in the\n+//! generic error case, and pass an interrupt callback and exit cleanly in the\n+//! interrupted case.\n+enum class ChainstateLoadError { FAILURE, FAILURE_INCOMPATIBLE_DB, INTERRUPTED };",
      "path": "src/node/chainstate.h",
      "position": 1,
      "original_position": 24,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "65481de0646f21349f24327410e4d7eb5189e5b3",
      "in_reply_to_id": null,
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Perhaps could take the opportunity to make this something like:\r\n\r\n```suggestion\r\nenum class ChainstateLoadError { FAILURE_TRY_REINDEX, FAILURE_FATAL, INTERRUPTED };\r\n```\r\n\r\nSo that it's more inline with indicating \"what to do about the failure\".\r\n\r\nCould also move the \"4 types of outcomes\" comment up here where it's clearer.",
      "created_at": "2022-08-16T18:08:37Z",
      "updated_at": "2022-08-16T18:08:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r947098272",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/947098272"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 39,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948068576",
      "pull_request_review_id": 1075933057,
      "id": 948068576,
      "node_id": "PRRC_kwDOABII5844gmDg",
      "diff_hunk": "@@ -53,9 +51,9 @@ using ChainstateLoadResult = std::tuple<ChainstateLoadStatus, bilingual_str>;\n  *\n  *  LoadChainstate returns a (status code, error string) tuple.",
      "path": "src/node/chainstate.h",
      "position": 1,
      "original_position": 30,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "65481de0646f21349f24327410e4d7eb5189e5b3",
      "in_reply_to_id": null,
      "user": {
        "login": "AryanJ-NYC",
        "id": 8263430,
        "node_id": "MDQ6VXNlcjgyNjM0MzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8263430?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/AryanJ-NYC",
        "html_url": "https://github.com/AryanJ-NYC",
        "followers_url": "https://api.github.com/users/AryanJ-NYC/followers",
        "following_url": "https://api.github.com/users/AryanJ-NYC/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/AryanJ-NYC/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/AryanJ-NYC/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/AryanJ-NYC/subscriptions",
        "organizations_url": "https://api.github.com/users/AryanJ-NYC/orgs",
        "repos_url": "https://api.github.com/users/AryanJ-NYC/repos",
        "events_url": "https://api.github.com/users/AryanJ-NYC/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/AryanJ-NYC/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This comment is no longer true.",
      "created_at": "2022-08-17T15:10:04Z",
      "updated_at": "2022-08-17T15:10:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r948068576",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948068576"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948230244",
      "pull_request_review_id": 1076136266,
      "id": 948230244,
      "node_id": "PRRC_kwDOABII5844hNhk",
      "diff_hunk": "@@ -8,16 +8,135 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    template <typename... Args>\n+    void InitFailure(Args&&... args)\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->failure.emplace(std::forward<Args>(args)...);\n+    }\n+    void InitValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (error.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (warning.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Success check.\n+    operator bool() const { return !m_info || !m_info->failure; }",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 70,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "65481de0646f21349f24327410e4d7eb5189e5b3",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Would it be sufficient to use `explicit operator bool() const` instead here? That would avoid e.g. \"(result + 3)\" from compiling (and evaluating to 3 or 4).",
      "created_at": "2022-08-17T17:21:13Z",
      "updated_at": "2022-08-17T17:21:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r948230244",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948230244"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 77,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948262782",
      "pull_request_review_id": 1076183597,
      "id": 948262782,
      "node_id": "PRRC_kwDOABII5844hVd-",
      "diff_hunk": "@@ -53,9 +51,9 @@ using ChainstateLoadResult = std::tuple<ChainstateLoadStatus, bilingual_str>;\n  *\n  *  LoadChainstate returns a (status code, error string) tuple.",
      "path": "src/node/chainstate.h",
      "position": 1,
      "original_position": 30,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "65481de0646f21349f24327410e4d7eb5189e5b3",
      "in_reply_to_id": 948068576,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r948068576\r\n\r\n> This comment is no longer true.\r\n\r\nThanks, removed",
      "created_at": "2022-08-17T17:59:50Z",
      "updated_at": "2022-08-17T19:26:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r948262782",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948262782"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948263551",
      "pull_request_review_id": 1076183597,
      "id": 948263551,
      "node_id": "PRRC_kwDOABII5844hVp_",
      "diff_hunk": "@@ -8,16 +8,135 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    template <typename... Args>\n+    void InitFailure(Args&&... args)\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->failure.emplace(std::forward<Args>(args)...);\n+    }\n+    void InitValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (error.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (warning.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Success check.\n+    operator bool() const { return !m_info || !m_info->failure; }",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 70,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "65481de0646f21349f24327410e4d7eb5189e5b3",
      "in_reply_to_id": 948230244,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r948230244\r\n\r\n> Would it be sufficient to use `explicit operator bool() const` instead here? That would avoid e.g. \"(result + 3)\" from compiling (and evaluating to 3 or 4).\r\n\r\nGood catch, added explicit. This was an unintended regression (operator bool was explicit before this PR)",
      "created_at": "2022-08-17T18:00:42Z",
      "updated_at": "2022-08-17T19:26:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r948263551",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948263551"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 77,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948281038",
      "pull_request_review_id": 1076209823,
      "id": 948281038,
      "node_id": "PRRC_kwDOABII5844hZ7O",
      "diff_hunk": "@@ -8,16 +8,135 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    template <typename... Args>\n+    void InitFailure(Args&&... args)\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->failure.emplace(std::forward<Args>(args)...);\n+    }\n+    void InitValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (error.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (warning.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Success check.\n+    operator bool() const { return !m_info || !m_info->failure; }",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 70,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "65481de0646f21349f24327410e4d7eb5189e5b3",
      "in_reply_to_id": 948230244,
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "+1 to @sipa 's comment.",
      "created_at": "2022-08-17T18:22:16Z",
      "updated_at": "2022-08-17T18:22:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r948281038",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948281038"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 77,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948288448",
      "pull_request_review_id": 1076183597,
      "id": 948288448,
      "node_id": "PRRC_kwDOABII5844hbvA",
      "diff_hunk": "@@ -31,14 +32,11 @@ struct ChainstateLoadOptions {\n     std::function<void()> coins_error_cb;\n };\n \n-//! Chainstate load status. Simple applications can just check for the success\n-//! case, and treat other cases as errors. More complex applications may want to\n-//! try reindexing in the generic failure case, and pass an interrupt callback\n-//! and exit cleanly in the interrupted case.\n-enum class ChainstateLoadStatus { SUCCESS, FAILURE, FAILURE_INCOMPATIBLE_DB, INTERRUPTED };\n-\n-//! Chainstate load status code and optional error string.\n-using ChainstateLoadResult = std::tuple<ChainstateLoadStatus, bilingual_str>;\n+//! Chainstate load errors. Simple applications can just treat all errors as\n+//! failures. More complex applications may want to try reindexing in the\n+//! generic error case, and pass an interrupt callback and exit cleanly in the\n+//! interrupted case.\n+enum class ChainstateLoadError { FAILURE, FAILURE_INCOMPATIBLE_DB, INTERRUPTED };",
      "path": "src/node/chainstate.h",
      "position": 1,
      "original_position": 24,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "65481de0646f21349f24327410e4d7eb5189e5b3",
      "in_reply_to_id": 947098272,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r947098272\r\n\r\n> So that it's more inline with indicating \"what to do about the failure\".\r\n\r\nI agree it's good to suggest how failures can be handled, so I tried to do that in the comment. But I think if failure has a clear cause it's best for the error name to describe the cause, especially since not every application will want to handle errors the same way, and `bitcoin-qt`, `bitcoind`, and `bitcoin-chainstate` all handle errors differently.\r\n\r\nI'm also don't think `FAILURE_TRY_REINDEX` is an appropriate synonym for `FAILURE`, since generic failures can happen on any exception, even if reindexing was already requested. Trying to reindex when reindexing fails does not make a lot of sense. I'd be happy to rename `FAILURE` to `FAILURE_GENERIC`. But would probably do it in a separate PR to not complicate this one.\r\n\r\n> Could also move the \"4 types of outcomes\" comment up here where it's clearer.\r\n\r\nThanks for pointing it out. I think that comment actually does not add much information anymore, and is a little confusing because it is mentioning shutdowns when the `check_interrupt` callback and `INTERRUPTED` error could indicate any custom interruption, not just a shutdown.\r\n\r\nI can add more documentation if you think anything is missing, but I think a simple message of \"It is fine to treat any error code as a failure and ignore the specific cause\" is the most helpful takeaway. Setting interrupt callbacks and trying to reindex are optional enhancements mostly helpful for interactive applications.",
      "created_at": "2022-08-17T18:31:20Z",
      "updated_at": "2022-08-17T19:26:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r948288448",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948288448"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 39,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950214121",
      "pull_request_review_id": 1069943757,
      "id": 950214121,
      "node_id": "PRRC_kwDOABII5844ox3p",
      "diff_hunk": "@@ -31,54 +144,89 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            if (!this->m_info) this->m_info = std::make_unique<detail::ErrorInfo<F>>();\n+            this->m_info->failure.emplace(std::forward<decltype(x)>(x)...);\n+        }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        Construct(fn, std::forward<Args>(args)...);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        if (other) this->MoveValue(other); else if (other.m_info) this->m_info->failure = std::move(other.m_info->failure);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+\n+    template <typename FT, typename FF>\n+    friend class Result;\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.\n+    template <typename... Args>\n+    Result(Args&&... args)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n+    Result& operator=(Result&& other)\n     {\n-        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n+        MoveConstruct(other);\n+        return *this;\n+    }\n+    ~Result() { if (*this) this->DestroyValue(); }\n+\n+    //! Operator moving warning and error messages from one result to another.\n+    //! Only moves message strings, does not change success or failure values of\n+    //! either Result object.\n+    template <typename OT, typename OF>\n+    Result<OT, OF>&& operator<<(Result<OT, OF>&& other)\n+    {\n+        if (other.m_info && !this->m_info) {\n+            this->m_info.reset(new detail::ErrorInfo<F>{.errors = std::move(other.m_info->errors),\n+                                                        .warnings = std::move(other.m_info->warnings)});\n+        } else if (other.m_info && this->m_info) {\n+            detail::MoveElements(other.m_info->errors, this->m_info->errors);\n+            detail::MoveElements(other.m_info->warnings, this->m_info->warnings);\n+        }\n+        return std::move(other);\n     }\n-    explicit operator bool() const noexcept { return has_value(); }\n-    const T* operator->() const LIFETIMEBOUND { return &value(); }\n-    const T& operator*() const LIFETIMEBOUND { return value(); }\n-    T* operator->() LIFETIMEBOUND { return &value(); }\n-    T& operator*() LIFETIMEBOUND { return value(); }\n };\n \n-template <typename T>\n-bilingual_str ErrorString(const Result<T>& result)\n-{\n-    return result ? bilingual_str{} : std::get<0>(result.m_variant);\n-}\n+//! Helper methods to format error strings.\n+bilingual_str ErrorString(const std::vector<bilingual_str>& errors);\n+bilingual_str ErrorString(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 250,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Do we want to expose these 2 helper methods in the header?",
      "created_at": "2022-08-19T13:53:02Z",
      "updated_at": "2022-08-19T17:09:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950214121",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950214121"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": 226,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 227,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950215859",
      "pull_request_review_id": 1069943757,
      "id": 950215859,
      "node_id": "PRRC_kwDOABII5844oySz",
      "diff_hunk": "@@ -31,54 +144,89 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            if (!this->m_info) this->m_info = std::make_unique<detail::ErrorInfo<F>>();\n+            this->m_info->failure.emplace(std::forward<decltype(x)>(x)...);\n+        }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        Construct(fn, std::forward<Args>(args)...);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        if (other) this->MoveValue(other); else if (other.m_info) this->m_info->failure = std::move(other.m_info->failure);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+\n+    template <typename FT, typename FF>\n+    friend class Result;\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.\n+    template <typename... Args>\n+    Result(Args&&... args)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n+    Result& operator=(Result&& other)\n     {\n-        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n+        MoveConstruct(other);\n+        return *this;\n+    }\n+    ~Result() { if (*this) this->DestroyValue(); }\n+\n+    //! Operator moving warning and error messages from one result to another.\n+    //! Only moves message strings, does not change success or failure values of\n+    //! either Result object.\n+    template <typename OT, typename OF>\n+    Result<OT, OF>&& operator<<(Result<OT, OF>&& other)\n+    {\n+        if (other.m_info && !this->m_info) {\n+            this->m_info.reset(new detail::ErrorInfo<F>{.errors = std::move(other.m_info->errors),\n+                                                        .warnings = std::move(other.m_info->warnings)});\n+        } else if (other.m_info && this->m_info) {\n+            detail::MoveElements(other.m_info->errors, this->m_info->errors);\n+            detail::MoveElements(other.m_info->warnings, this->m_info->warnings);\n+        }\n+        return std::move(other);\n     }\n-    explicit operator bool() const noexcept { return has_value(); }\n-    const T* operator->() const LIFETIMEBOUND { return &value(); }\n-    const T& operator*() const LIFETIMEBOUND { return value(); }\n-    T* operator->() LIFETIMEBOUND { return &value(); }\n-    T& operator*() LIFETIMEBOUND { return value(); }\n };\n \n-template <typename T>\n-bilingual_str ErrorString(const Result<T>& result)\n-{\n-    return result ? bilingual_str{} : std::get<0>(result.m_variant);\n-}\n+//! Helper methods to format error strings.\n+bilingual_str ErrorString(const std::vector<bilingual_str>& errors);\n+bilingual_str ErrorString(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);\n+template <typename T, typename F>\n+bilingual_str ErrorString(const Result<T, F>& result) { return ErrorString(result.GetErrors(), result.GetWarnings()); }",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 252,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "What about renaming this function to `ErrorWarningString()` since at the moment it can contain both? I can see some scenario where people would want to access just the error but not the warning string (and of course it's just a convenience fn), so that would allow them to create the more narrow `ErrorString()` later on?\r\n\r\nPerhaps a brief docstring above this fn would be beneficial as well since that's the one people will mostly use.",
      "created_at": "2022-08-19T13:54:55Z",
      "updated_at": "2022-08-19T17:06:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950215859",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950215859"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950223870",
      "pull_request_review_id": 1069943757,
      "id": 950223870,
      "node_id": "PRRC_kwDOABII5844o0P-",
      "diff_hunk": "@@ -8,16 +8,129 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 23,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: I think this docstring is more relevant for `m_info`, perhaps move it to above its declaration in `ResultBase`?",
      "created_at": "2022-08-19T14:02:58Z",
      "updated_at": "2022-08-19T17:05:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950223870",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950223870"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950228362",
      "pull_request_review_id": 1069943757,
      "id": 950228362,
      "node_id": "PRRC_kwDOABII5844o1WK",
      "diff_hunk": "@@ -8,16 +8,129 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 31,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: You could add a bit more info on T, F for quick understanding?\r\n```suggestion\r\n//! Result base class which is inherited by Result<T, F>.\r\n//! T is the type of the success return value, or void if there is none.\r\n//! F is the type of the failure return value, or void if there is none.\r\n```",
      "created_at": "2022-08-19T14:07:37Z",
      "updated_at": "2022-08-19T17:06:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950228362",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950228362"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 104,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950253178",
      "pull_request_review_id": 1069943757,
      "id": 950253178,
      "node_id": "PRRC_kwDOABII5844o7Z6",
      "diff_hunk": "@@ -8,16 +8,129 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (error.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 52,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This is repeated a few times, what do you think about this:\r\n\r\n```diff\r\ndiff --git a/src/util/result.h b/src/util/result.h\r\nindex 60e0b3db6..c6aa65891 100644\r\n--- a/src/util/result.h\r\n+++ b/src/util/result.h\r\n@@ -56,17 +56,19 @@ public:\r\n     void AddError(bilingual_str error)\r\n     {\r\n         if (error.empty()) return;\r\n-        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\r\n+        CheckInitInfo();\r\n         m_info->errors.emplace_back(std::move(error));\r\n     }\r\n \r\n     void AddWarning(bilingual_str warning)\r\n     {\r\n         if (warning.empty()) return;\r\n-        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\r\n+        CheckInitInfo();\r\n         m_info->warnings.emplace_back(std::move(warning));\r\n     }\r\n \r\n+    void CheckInitInfo() { if (!m_info) m_info = std::make_unique<ErrorInfo<F>>(); }\r\n+\r\n     //! Success check.\r\n     explicit operator bool() const { return !m_info || !m_info->failure; }\r\n \r\n@@ -159,7 +161,7 @@ protected:\r\n     {\r\n         this->AddError(std::move(error.message));\r\n         Construct([&](auto&&... x) {\r\n-            if (!this->m_info) this->m_info = std::make_unique<detail::ErrorInfo<F>>();\r\n+            this->CheckInitInfo();\r\n             this->m_info->failure.emplace(std::forward<decltype(x)>(x)...);\r\n         }, std::forward<Args>(args)...);\r\n     }\r\n\r\n```",
      "created_at": "2022-08-19T14:30:07Z",
      "updated_at": "2022-08-19T17:05:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950253178",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950253178"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 120,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950293020",
      "pull_request_review_id": 1069943757,
      "id": 950293020,
      "node_id": "PRRC_kwDOABII5844pFIc",
      "diff_hunk": "@@ -8,16 +8,129 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (error.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (warning.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Success check.\n+    explicit operator bool() const { return !m_info || !m_info->failure; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same<_F, void>::value, const _F&> GetFailure() const { assert(!*this); return *m_info->failure; }\n+    const std::vector<bilingual_str>& GetErrors() const { return m_info ? m_info->errors : EMPTY_LIST; }\n+    const std::vector<bilingual_str>& GetWarnings() const { return m_info ? m_info->warnings : EMPTY_LIST; }\n+};\n+\n+//! Result base class for T value type. Holds value and provides accessor methods.\n+template <typename T, typename F>\n+class ResultBase : public ResultBase<void, F>\n+{\n+protected:\n+    //! Result success value. Uses anonymous union so success value is never\n+    //! constructed in failure case.\n+    union { T m_value; };\n+\n+    template <typename... Args>\n+    void ConstructValue(Args&&... args) { new (&m_value) T{std::forward<Args>(args)...}; }\n+    template <typename O>\n+    void MoveValue(O& other) { new (&m_value) T{std::move(other.m_value)}; }\n+    void DestroyValue() { m_value.~T(); }\n+\n+    ResultBase() {}\n+    ~ResultBase() {}\n+\n+    template <typename FT, typename FF>\n+    friend class ResultBase;\n+\n+public:\n+    //! std::optional methods, so functions returning optional<T> can change to\n+    //! return Result<T> with minimal changes to existing code, and vice versa.\n+    bool has_value() const { return *this ? true : false; }\n+    const T& value() const LIFETIMEBOUND { assert(*this); return m_value; }\n+    T& value() LIFETIMEBOUND { assert(*this); return m_value; }\n+    template <class U>\n+    T value_or(U&& default_value) const&\n+    {\n+        return has_value() ? value() : std::forward<U>(default_value);\n+    }\n+    template <class U>\n+    T value_or(U&& default_value) &&\n+    {\n+        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+    }",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 109,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "As part of the public interface, I think these could benefit from a very brief per-method docstring (that probably just mirrors the std::optional docstring)?",
      "created_at": "2022-08-19T15:05:22Z",
      "updated_at": "2022-08-19T17:05:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950293020",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950293020"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": 102,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 192,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950310915",
      "pull_request_review_id": 1069943757,
      "id": 950310915,
      "node_id": "PRRC_kwDOABII5844pJgD",
      "diff_hunk": "@@ -8,16 +8,129 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (error.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (warning.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Success check.\n+    explicit operator bool() const { return !m_info || !m_info->failure; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same<_F, void>::value, const _F&> GetFailure() const { assert(!*this); return *m_info->failure; }\n+    const std::vector<bilingual_str>& GetErrors() const { return m_info ? m_info->errors : EMPTY_LIST; }\n+    const std::vector<bilingual_str>& GetWarnings() const { return m_info ? m_info->warnings : EMPTY_LIST; }\n+};\n+\n+//! Result base class for T value type. Holds value and provides accessor methods.\n+template <typename T, typename F>\n+class ResultBase : public ResultBase<void, F>\n+{\n+protected:\n+    //! Result success value. Uses anonymous union so success value is never\n+    //! constructed in failure case.\n+    union { T m_value; };\n+\n+    template <typename... Args>\n+    void ConstructValue(Args&&... args) { new (&m_value) T{std::forward<Args>(args)...}; }\n+    template <typename O>\n+    void MoveValue(O& other) { new (&m_value) T{std::move(other.m_value)}; }\n+    void DestroyValue() { m_value.~T(); }\n+\n+    ResultBase() {}\n+    ~ResultBase() {}\n+\n+    template <typename FT, typename FF>\n+    friend class ResultBase;\n+\n+public:\n+    //! std::optional methods, so functions returning optional<T> can change to\n+    //! return Result<T> with minimal changes to existing code, and vice versa.\n+    bool has_value() const { return *this ? true : false; }",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 97,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: slightly more concise and clear on intent imo\r\n```suggestion\r\n    bool has_value() const { return bool(*this); }\r\n```",
      "created_at": "2022-08-19T15:24:59Z",
      "updated_at": "2022-08-19T17:05:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950310915",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950310915"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 104,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950331132",
      "pull_request_review_id": 1069943757,
      "id": 950331132,
      "node_id": "PRRC_kwDOABII5844pOb8",
      "diff_hunk": "@@ -51,36 +80,106 @@ util::Result<NoCopy> NoCopyFn(int i, bool success)\n     return util::Error{Untranslated(strprintf(\"nocopy %i error.\", i))};\n }\n \n-template <typename T>\n-void ExpectResult(const util::Result<T>& result, bool success, const bilingual_str& str)\n+util::Result<NoCopyNoMove> NoCopyNoMoveFn(int i, bool success)\n+{\n+    if (success) return {i};\n+    return util::Error{Untranslated(strprintf(\"nocopynomove %i error.\", i))};\n+}\n+\n+enum FnError { ERR1, ERR2 };\n+\n+util::Result<int, FnError> IntFailFn(int i, bool success)\n+{\n+    if (success) return i;\n+    return {util::Error{Untranslated(strprintf(\"int %i error.\", i))}, i % 2 ? ERR1 : ERR2};\n+}\n+\n+util::Result<NoCopyNoMove, FnError> EnumFailFn(FnError ret)\n+{\n+    return {util::Error{Untranslated(\"enum fail.\")}, ret};\n+}\n+\n+util::Result<void> WarnFn()\n+{\n+    return {util::Warning{Untranslated(\"warn.\")}};\n+}\n+\n+util::Result<int> MultiWarnFn(int ret)\n+{\n+    util::Result<void> result;\n+    for (int i = 0; i < ret; ++i) {\n+        result.AddWarning(strprintf(Untranslated(\"warn %i.\"), i));\n+    }\n+    return {std::move(result), ret};\n+}\n+\n+util::Result<void, int> ChainedFailFn(FnError arg, int ret)\n+{\n+    return {util::Error{Untranslated(\"chained fail.\")}, EnumFailFn(arg), WarnFn(), ret};\n+}\n+\n+util::Result<int, FnError> AccumulateFn(bool success)\n+{\n+    util::Result<int, FnError> result;\n+    util::Result<int> x = result << MultiWarnFn(1);\n+    BOOST_REQUIRE(x);\n+    util::Result<int> y = result << MultiWarnFn(2);\n+    BOOST_REQUIRE(y);\n+    result = IntFailFn(*x + *y, success);\n+    return result;\n+}\n+\n+template<typename T, typename F>\n+void ExpectResult(const util::Result<T, F>& result, bool success, const bilingual_str& str)\n {\n     BOOST_CHECK_EQUAL(bool(result), success);\n     BOOST_CHECK_EQUAL(util::ErrorString(result), str);\n }\n \n-template <typename T, typename... Args>\n-void ExpectSuccess(const util::Result<T>& result, const bilingual_str& str, Args&&... args)\n+template<typename T, typename F, typename... Args>\n+void ExpectSuccess(const util::Result<T, F>& result, const bilingual_str& str, Args&&... args)\n {\n     ExpectResult(result, true, str);\n     BOOST_CHECK_EQUAL(result.has_value(), true);\n     BOOST_CHECK_EQUAL(result.value(), T{std::forward<Args>(args)...});\n     BOOST_CHECK_EQUAL(&result.value(), &*result);\n }\n \n-template <typename T, typename... Args>\n-void ExpectFail(const util::Result<T>& result, const bilingual_str& str)\n+template<typename T, typename F, typename... Args>\n+void ExpectFail(const util::Result<T, F>& result, bilingual_str str, Args&&... args)\n {\n     ExpectResult(result, false, str);\n+    BOOST_CHECK_EQUAL(result.GetFailure(), F{std::forward<Args>(args)...});\n }\n \n BOOST_AUTO_TEST_CASE(check_returned)\n {\n+    ExpectResult(VoidSuccessFn(), true, {});",
      "path": "src/test/result_tests.cpp",
      "position": 173,
      "original_position": 120,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think it would be helpful to also test success with a falsy non-void value and failure with a truthy non-void value",
      "created_at": "2022-08-19T15:43:55Z",
      "updated_at": "2022-08-19T17:05:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950331132",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950331132"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 193,
      "original_line": 193,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950338812",
      "pull_request_review_id": 1069943757,
      "id": 950338812,
      "node_id": "PRRC_kwDOABII5844pQT8",
      "diff_hunk": "@@ -31,54 +144,89 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            if (!this->m_info) this->m_info = std::make_unique<detail::ErrorInfo<F>>();",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 157,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think this line is redundant since we already call `this->AddError()` right above?",
      "created_at": "2022-08-19T15:50:56Z",
      "updated_at": "2022-08-19T17:05:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950338812",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950338812"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 162,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950342467",
      "pull_request_review_id": 1069943757,
      "id": 950342467,
      "node_id": "PRRC_kwDOABII5844pRND",
      "diff_hunk": "@@ -31,54 +144,89 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            if (!this->m_info) this->m_info = std::make_unique<detail::ErrorInfo<F>>();\n+            this->m_info->failure.emplace(std::forward<decltype(x)>(x)...);\n+        }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        Construct(fn, std::forward<Args>(args)...);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        if (other) this->MoveValue(other); else if (other.m_info) this->m_info->failure = std::move(other.m_info->failure);",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 192,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: I think this should be on a new line",
      "created_at": "2022-08-19T15:54:14Z",
      "updated_at": "2022-08-19T17:05:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950342467",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950342467"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 185,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950365637",
      "pull_request_review_id": 1069943757,
      "id": 950365637,
      "node_id": "PRRC_kwDOABII5844pW3F",
      "diff_hunk": "@@ -31,54 +144,89 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            if (!this->m_info) this->m_info = std::make_unique<detail::ErrorInfo<F>>();\n+            this->m_info->failure.emplace(std::forward<decltype(x)>(x)...);\n+        }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        Construct(fn, std::forward<Args>(args)...);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        if (other) this->MoveValue(other); else if (other.m_info) this->m_info->failure = std::move(other.m_info->failure);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+\n+    template <typename FT, typename FF>\n+    friend class Result;\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.\n+    template <typename... Args>\n+    Result(Args&&... args)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n+    Result& operator=(Result&& other)\n     {\n-        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 215,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: ternary looks more appropriate?\r\n```suggestion\r\n        *this ? this->DestroyValue() : this->m_info->failure.reset();\r\n```",
      "created_at": "2022-08-19T16:18:57Z",
      "updated_at": "2022-08-19T17:05:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950365637",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950365637"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 205,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950369435",
      "pull_request_review_id": 1069943757,
      "id": 950369435,
      "node_id": "PRRC_kwDOABII5844pXyb",
      "diff_hunk": "@@ -31,54 +144,89 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            if (!this->m_info) this->m_info = std::make_unique<detail::ErrorInfo<F>>();\n+            this->m_info->failure.emplace(std::forward<decltype(x)>(x)...);\n+        }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        Construct(fn, std::forward<Args>(args)...);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        if (other) this->MoveValue(other); else if (other.m_info) this->m_info->failure = std::move(other.m_info->failure);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+\n+    template <typename FT, typename FF>\n+    friend class Result;\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.\n+    template <typename... Args>\n+    Result(Args&&... args)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n+    Result& operator=(Result&& other)\n     {\n-        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n+        MoveConstruct(other);\n+        return *this;\n+    }\n+    ~Result() { if (*this) this->DestroyValue(); }\n+\n+    //! Operator moving warning and error messages from one result to another.",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 221,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit:\r\n```suggestion\r\n    //! Operator moving warning and error messages from other Result to this.\r\n```",
      "created_at": "2022-08-19T16:23:58Z",
      "updated_at": "2022-08-19T17:05:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950369435",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950369435"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 208,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950383459",
      "pull_request_review_id": 1069943757,
      "id": 950383459,
      "node_id": "PRRC_kwDOABII5844pbNj",
      "diff_hunk": "@@ -31,54 +144,89 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            if (!this->m_info) this->m_info = std::make_unique<detail::ErrorInfo<F>>();\n+            this->m_info->failure.emplace(std::forward<decltype(x)>(x)...);\n+        }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        Construct(fn, std::forward<Args>(args)...);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        if (other) this->MoveValue(other); else if (other.m_info) this->m_info->failure = std::move(other.m_info->failure);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+\n+    template <typename FT, typename FF>\n+    friend class Result;\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.\n+    template <typename... Args>\n+    Result(Args&&... args)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n+    Result& operator=(Result&& other)\n     {\n-        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n+        MoveConstruct(other);\n+        return *this;\n+    }\n+    ~Result() { if (*this) this->DestroyValue(); }\n+\n+    //! Operator moving warning and error messages from one result to another.\n+    //! Only moves message strings, does not change success or failure values of\n+    //! either Result object.\n+    template <typename OT, typename OF>\n+    Result<OT, OF>&& operator<<(Result<OT, OF>&& other)\n+    {\n+        if (other.m_info && !this->m_info) {\n+            this->m_info.reset(new detail::ErrorInfo<F>{.errors = std::move(other.m_info->errors),\n+                                                        .warnings = std::move(other.m_info->warnings)});",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 229,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Since `ErrorInfo` doesn't have a move constructor, do the move semantics make sense here? _(I'm still easily confused by move semantics, so I'm probably missing something - sorry)_",
      "created_at": "2022-08-19T16:42:35Z",
      "updated_at": "2022-08-19T17:05:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950383459",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950383459"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": 215,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 216,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950398142",
      "pull_request_review_id": 1079113915,
      "id": 950398142,
      "node_id": "PRRC_kwDOABII5844pey-",
      "diff_hunk": "@@ -8,16 +8,129 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 26,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": null,
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "@ryanofsky the following change fixes the warnings for me, but i don't know if this is the best way to deal with this\r\n  \r\n```suggestion\r\n    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure = std::nullopt;\r\n```",
      "created_at": "2022-08-19T16:58:43Z",
      "updated_at": "2022-08-19T16:59:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950398142",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950398142"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951889008",
      "pull_request_review_id": 1081114599,
      "id": 951889008,
      "node_id": "PRRC_kwDOABII5844vKxw",
      "diff_hunk": "@@ -51,36 +80,106 @@ util::Result<NoCopy> NoCopyFn(int i, bool success)\n     return util::Error{Untranslated(strprintf(\"nocopy %i error.\", i))};\n }\n \n-template <typename T>\n-void ExpectResult(const util::Result<T>& result, bool success, const bilingual_str& str)\n+util::Result<NoCopyNoMove> NoCopyNoMoveFn(int i, bool success)\n+{\n+    if (success) return {i};\n+    return util::Error{Untranslated(strprintf(\"nocopynomove %i error.\", i))};\n+}\n+\n+enum FnError { ERR1, ERR2 };\n+\n+util::Result<int, FnError> IntFailFn(int i, bool success)\n+{\n+    if (success) return i;\n+    return {util::Error{Untranslated(strprintf(\"int %i error.\", i))}, i % 2 ? ERR1 : ERR2};\n+}\n+\n+util::Result<NoCopyNoMove, FnError> EnumFailFn(FnError ret)\n+{\n+    return {util::Error{Untranslated(\"enum fail.\")}, ret};\n+}\n+\n+util::Result<void> WarnFn()\n+{\n+    return {util::Warning{Untranslated(\"warn.\")}};\n+}\n+\n+util::Result<int> MultiWarnFn(int ret)\n+{\n+    util::Result<void> result;\n+    for (int i = 0; i < ret; ++i) {\n+        result.AddWarning(strprintf(Untranslated(\"warn %i.\"), i));\n+    }\n+    return {std::move(result), ret};\n+}\n+\n+util::Result<void, int> ChainedFailFn(FnError arg, int ret)\n+{\n+    return {util::Error{Untranslated(\"chained fail.\")}, EnumFailFn(arg), WarnFn(), ret};\n+}\n+\n+util::Result<int, FnError> AccumulateFn(bool success)\n+{\n+    util::Result<int, FnError> result;\n+    util::Result<int> x = result << MultiWarnFn(1);\n+    BOOST_REQUIRE(x);\n+    util::Result<int> y = result << MultiWarnFn(2);\n+    BOOST_REQUIRE(y);\n+    result = IntFailFn(*x + *y, success);\n+    return result;\n+}\n+\n+template<typename T, typename F>\n+void ExpectResult(const util::Result<T, F>& result, bool success, const bilingual_str& str)\n {\n     BOOST_CHECK_EQUAL(bool(result), success);\n     BOOST_CHECK_EQUAL(util::ErrorString(result), str);\n }\n \n-template <typename T, typename... Args>\n-void ExpectSuccess(const util::Result<T>& result, const bilingual_str& str, Args&&... args)\n+template<typename T, typename F, typename... Args>\n+void ExpectSuccess(const util::Result<T, F>& result, const bilingual_str& str, Args&&... args)\n {\n     ExpectResult(result, true, str);\n     BOOST_CHECK_EQUAL(result.has_value(), true);\n     BOOST_CHECK_EQUAL(result.value(), T{std::forward<Args>(args)...});\n     BOOST_CHECK_EQUAL(&result.value(), &*result);\n }\n \n-template <typename T, typename... Args>\n-void ExpectFail(const util::Result<T>& result, const bilingual_str& str)\n+template<typename T, typename F, typename... Args>\n+void ExpectFail(const util::Result<T, F>& result, bilingual_str str, Args&&... args)\n {\n     ExpectResult(result, false, str);\n+    BOOST_CHECK_EQUAL(result.GetFailure(), F{std::forward<Args>(args)...});\n }\n \n BOOST_AUTO_TEST_CASE(check_returned)\n {\n+    ExpectResult(VoidSuccessFn(), true, {});",
      "path": "src/test/result_tests.cpp",
      "position": 173,
      "original_position": 120,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950331132,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950331132\r\n\r\n> I think it would be helpful to also test success with a falsy non-void value and failure with a truthy non-void value\r\n\r\nMakes sense, added tests",
      "created_at": "2022-08-22T20:37:18Z",
      "updated_at": "2022-08-24T18:30:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r951889008",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951889008"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 193,
      "original_line": 193,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951889116",
      "pull_request_review_id": 1081114599,
      "id": 951889116,
      "node_id": "PRRC_kwDOABII5844vKzc",
      "diff_hunk": "@@ -0,0 +1,24 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <util/result.h>\n+#include <util/string.h>\n+\n+namespace util {\n+bilingual_str ErrorString(const std::vector<bilingual_str>& errors)\n+{\n+    return Join(errors, Untranslated(\" \"));\n+}\n+\n+bilingual_str ErrorString(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings)\n+{\n+    bilingual_str result = ErrorString(errors);",
      "path": "src/util/result.cpp",
      "position": 1,
      "original_position": 16,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "in_reply_to_id": 943789301,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r943789301\r\n\r\n> nit:\r\n\r\nThanks, used suggestion.",
      "created_at": "2022-08-22T20:37:26Z",
      "updated_at": "2022-08-24T18:30:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r951889116",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951889116"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951889202",
      "pull_request_review_id": 1081114599,
      "id": 951889202,
      "node_id": "PRRC_kwDOABII5844vK0y",
      "diff_hunk": "@@ -8,16 +8,133 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 8,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "in_reply_to_id": 943807162,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r943807162\r\n\r\n> I'm not sure why iwyu [doesn't](https://cirrus-ci.com/task/6358959639494656) catch it, but shouldn't `forward`, `types` and `utility` also be included here?\r\n\r\nThanks, added `utility`. (I think the others are nonstandard.) IWYU might not catch references to code in templates that aren't instantiated, so I'm not too surprised it didn't add this.",
      "created_at": "2022-08-22T20:37:34Z",
      "updated_at": "2022-08-24T18:30:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r951889202",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951889202"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": 11,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951889285",
      "pull_request_review_id": 1081114599,
      "id": 951889285,
      "node_id": "PRRC_kwDOABII5844vK2F",
      "diff_hunk": "@@ -8,16 +8,133 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 21,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r943776125\r\n\r\n> Since we're expecting `T` to be a container type, would this benefit from living in `span.h` for reusability? The generic implementation/naming isn't really necessary in `result.h`, and people won't come looking here when they need something to move elements between containers.\r\n\r\nIt would be ok to move this somewhere, especially if something else was calling it. But I don't think span.h would be the right place since this shouldn't work on a span due to spans having fixed size. It also seems ok to me to keep this as a private helper function in a detail namespace as long as it is only called one place.",
      "created_at": "2022-08-22T20:37:42Z",
      "updated_at": "2022-08-24T18:30:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r951889285",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951889285"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": 23,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951889391",
      "pull_request_review_id": 1081114599,
      "id": 951889391,
      "node_id": "PRRC_kwDOABII5844vK3v",
      "diff_hunk": "@@ -8,16 +8,129 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 23,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950223870,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950223870\r\n\r\n> nit: I think this docstring is more relevant for `m_info`, perhaps move it to above its declaration in `ResultBase`?\r\n\r\nI think it's relevant here because the struct is pretty big thing to have in a return type, so good to say it won't typically be needed.\r\n\r\nAlso, this may be a stylistic thing, but I tend to prefer class-level documentation that gets at _why/how_ questions, over member level documentation only answers more basic _what_ questions, and can also clutter the class definition.",
      "created_at": "2022-08-22T20:37:50Z",
      "updated_at": "2022-08-24T18:30:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r951889391",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951889391"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951889535",
      "pull_request_review_id": 1081114599,
      "id": 951889535,
      "node_id": "PRRC_kwDOABII5844vK5_",
      "diff_hunk": "@@ -8,16 +8,129 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 31,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950228362,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950228362\r\n\r\n> nit: You could add a bit more info on T, F for quick understanding?\r\n\r\nAdded. Nice suggestion!",
      "created_at": "2022-08-22T20:38:00Z",
      "updated_at": "2022-08-24T18:30:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r951889535",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951889535"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 104,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951889724",
      "pull_request_review_id": 1081114599,
      "id": 951889724,
      "node_id": "PRRC_kwDOABII5844vK88",
      "diff_hunk": "@@ -8,16 +8,129 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (error.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 52,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950253178,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950253178\r\n\r\n> This is repeated a few times, what do you think about this:\r\n\r\nNice catch! I implemented something similar to what you suggested to dedup",
      "created_at": "2022-08-22T20:38:14Z",
      "updated_at": "2022-08-24T18:30:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r951889724",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951889724"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 120,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951889985",
      "pull_request_review_id": 1081114599,
      "id": 951889985,
      "node_id": "PRRC_kwDOABII5844vLBB",
      "diff_hunk": "@@ -8,16 +8,129 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (error.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (warning.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Success check.\n+    explicit operator bool() const { return !m_info || !m_info->failure; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same<_F, void>::value, const _F&> GetFailure() const { assert(!*this); return *m_info->failure; }\n+    const std::vector<bilingual_str>& GetErrors() const { return m_info ? m_info->errors : EMPTY_LIST; }\n+    const std::vector<bilingual_str>& GetWarnings() const { return m_info ? m_info->warnings : EMPTY_LIST; }\n+};\n+\n+//! Result base class for T value type. Holds value and provides accessor methods.\n+template <typename T, typename F>\n+class ResultBase : public ResultBase<void, F>\n+{\n+protected:\n+    //! Result success value. Uses anonymous union so success value is never\n+    //! constructed in failure case.\n+    union { T m_value; };\n+\n+    template <typename... Args>\n+    void ConstructValue(Args&&... args) { new (&m_value) T{std::forward<Args>(args)...}; }\n+    template <typename O>\n+    void MoveValue(O& other) { new (&m_value) T{std::move(other.m_value)}; }\n+    void DestroyValue() { m_value.~T(); }\n+\n+    ResultBase() {}\n+    ~ResultBase() {}\n+\n+    template <typename FT, typename FF>\n+    friend class ResultBase;\n+\n+public:\n+    //! std::optional methods, so functions returning optional<T> can change to\n+    //! return Result<T> with minimal changes to existing code, and vice versa.\n+    bool has_value() const { return *this ? true : false; }",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 97,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950310915,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950310915\r\n\r\n> nit: slightly more concise and clear on intent imo\r\n\r\nOk! I would have defaulted to that but had seen some feedback `bool()` was not good https://github.com/bitcoin/bitcoin/pull/25616#discussion_r940933709, https://github.com/bitcoin/bitcoin/pull/25721#discussion_r938763403 so was trying to avoid it. Switched to `bool{}` for now.",
      "created_at": "2022-08-22T20:38:34Z",
      "updated_at": "2022-08-24T18:30:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r951889985",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951889985"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 104,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951890286",
      "pull_request_review_id": 1081114599,
      "id": 951890286,
      "node_id": "PRRC_kwDOABII5844vLFu",
      "diff_hunk": "@@ -8,16 +8,129 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (error.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (warning.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Success check.\n+    explicit operator bool() const { return !m_info || !m_info->failure; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same<_F, void>::value, const _F&> GetFailure() const { assert(!*this); return *m_info->failure; }\n+    const std::vector<bilingual_str>& GetErrors() const { return m_info ? m_info->errors : EMPTY_LIST; }\n+    const std::vector<bilingual_str>& GetWarnings() const { return m_info ? m_info->warnings : EMPTY_LIST; }\n+};\n+\n+//! Result base class for T value type. Holds value and provides accessor methods.\n+template <typename T, typename F>\n+class ResultBase : public ResultBase<void, F>\n+{\n+protected:\n+    //! Result success value. Uses anonymous union so success value is never\n+    //! constructed in failure case.\n+    union { T m_value; };\n+\n+    template <typename... Args>\n+    void ConstructValue(Args&&... args) { new (&m_value) T{std::forward<Args>(args)...}; }\n+    template <typename O>\n+    void MoveValue(O& other) { new (&m_value) T{std::move(other.m_value)}; }\n+    void DestroyValue() { m_value.~T(); }\n+\n+    ResultBase() {}\n+    ~ResultBase() {}\n+\n+    template <typename FT, typename FF>\n+    friend class ResultBase;\n+\n+public:\n+    //! std::optional methods, so functions returning optional<T> can change to\n+    //! return Result<T> with minimal changes to existing code, and vice versa.\n+    bool has_value() const { return *this ? true : false; }\n+    const T& value() const LIFETIMEBOUND { assert(*this); return m_value; }\n+    T& value() LIFETIMEBOUND { assert(*this); return m_value; }\n+    template <class U>\n+    T value_or(U&& default_value) const&\n+    {\n+        return has_value() ? value() : std::forward<U>(default_value);\n+    }\n+    template <class U>\n+    T value_or(U&& default_value) &&\n+    {\n+        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+    }",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 109,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950293020,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950293020\r\n\r\n> As part of the public interface, I think these could benefit from a very brief per-method docstring (that probably just mirrors the std::optional docstring)?\r\n\r\nI'm a little reluctant to change this code here because it is just moving (not new), but would encourage you to submit a separate PR to add more documentation to existing code if it would be helpful. I'm happy to rebase this as other PR are merged.\r\n\r\nI do personally tend not to like documenting individual class members if it's obvious what they do, and save comments for when there is something non-obvious or higher level to point out, but I wouldn't have any objection to more detailed documentation.",
      "created_at": "2022-08-22T20:38:55Z",
      "updated_at": "2022-08-24T18:30:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r951890286",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951890286"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": 102,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 192,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951890463",
      "pull_request_review_id": 1081114599,
      "id": 951890463,
      "node_id": "PRRC_kwDOABII5844vLIf",
      "diff_hunk": "@@ -31,54 +144,89 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            if (!this->m_info) this->m_info = std::make_unique<detail::ErrorInfo<F>>();",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 157,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950338812,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950338812\r\n\r\n> I think this line is redundant since we already call `this->AddError()` right above?\r\n\r\nI think it was needed to avoid a segfault if the error message was empty, but in any case this line is gone now from implementing your earlier suggestion to dedup this.",
      "created_at": "2022-08-22T20:39:12Z",
      "updated_at": "2022-08-24T18:30:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r951890463",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951890463"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 162,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951905203",
      "pull_request_review_id": 1081114599,
      "id": 951905203,
      "node_id": "PRRC_kwDOABII5844vOuz",
      "diff_hunk": "@@ -8,16 +8,129 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 26,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950398142,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950398142\r\n\r\n> @ryanofsky the following change fixes the warnings for me, but i don't know if this is the best way to deal with this\r\n\r\nThanks! I think it might be sufficient to replace `= std::nullopt` with `{}`, so I will try that first.",
      "created_at": "2022-08-22T20:56:19Z",
      "updated_at": "2022-08-24T18:30:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r951905203",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951905203"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953058726",
      "pull_request_review_id": 1081114599,
      "id": 953058726,
      "node_id": "PRRC_kwDOABII5844zoWm",
      "diff_hunk": "@@ -31,54 +144,89 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            if (!this->m_info) this->m_info = std::make_unique<detail::ErrorInfo<F>>();\n+            this->m_info->failure.emplace(std::forward<decltype(x)>(x)...);\n+        }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        Construct(fn, std::forward<Args>(args)...);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        if (other) this->MoveValue(other); else if (other.m_info) this->m_info->failure = std::move(other.m_info->failure);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+\n+    template <typename FT, typename FF>\n+    friend class Result;\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.\n+    template <typename... Args>\n+    Result(Args&&... args)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n+    Result& operator=(Result&& other)\n     {\n-        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n+        MoveConstruct(other);\n+        return *this;\n+    }\n+    ~Result() { if (*this) this->DestroyValue(); }\n+\n+    //! Operator moving warning and error messages from one result to another.\n+    //! Only moves message strings, does not change success or failure values of\n+    //! either Result object.\n+    template <typename OT, typename OF>\n+    Result<OT, OF>&& operator<<(Result<OT, OF>&& other)\n+    {\n+        if (other.m_info && !this->m_info) {\n+            this->m_info.reset(new detail::ErrorInfo<F>{.errors = std::move(other.m_info->errors),\n+                                                        .warnings = std::move(other.m_info->warnings)});\n+        } else if (other.m_info && this->m_info) {\n+            detail::MoveElements(other.m_info->errors, this->m_info->errors);\n+            detail::MoveElements(other.m_info->warnings, this->m_info->warnings);\n+        }\n+        return std::move(other);\n     }\n-    explicit operator bool() const noexcept { return has_value(); }\n-    const T* operator->() const LIFETIMEBOUND { return &value(); }\n-    const T& operator*() const LIFETIMEBOUND { return value(); }\n-    T* operator->() LIFETIMEBOUND { return &value(); }\n-    T& operator*() LIFETIMEBOUND { return value(); }\n };\n \n-template <typename T>\n-bilingual_str ErrorString(const Result<T>& result)\n-{\n-    return result ? bilingual_str{} : std::get<0>(result.m_variant);\n-}\n+//! Helper methods to format error strings.\n+bilingual_str ErrorString(const std::vector<bilingual_str>& errors);\n+bilingual_str ErrorString(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 250,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950214121,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r943807162\r\n\r\n> Do we want to expose these 2 helper methods in the header?\r\n\r\nNope, good point. Moved these to the details namespace.",
      "created_at": "2022-08-23T19:59:10Z",
      "updated_at": "2022-08-24T18:30:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r953058726",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953058726"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": 226,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 227,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953059049",
      "pull_request_review_id": 1081114599,
      "id": 953059049,
      "node_id": "PRRC_kwDOABII5844zobp",
      "diff_hunk": "@@ -31,54 +144,89 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            if (!this->m_info) this->m_info = std::make_unique<detail::ErrorInfo<F>>();\n+            this->m_info->failure.emplace(std::forward<decltype(x)>(x)...);\n+        }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        Construct(fn, std::forward<Args>(args)...);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        if (other) this->MoveValue(other); else if (other.m_info) this->m_info->failure = std::move(other.m_info->failure);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+\n+    template <typename FT, typename FF>\n+    friend class Result;\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.\n+    template <typename... Args>\n+    Result(Args&&... args)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n+    Result& operator=(Result&& other)\n     {\n-        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n+        MoveConstruct(other);\n+        return *this;\n+    }\n+    ~Result() { if (*this) this->DestroyValue(); }\n+\n+    //! Operator moving warning and error messages from one result to another.\n+    //! Only moves message strings, does not change success or failure values of\n+    //! either Result object.\n+    template <typename OT, typename OF>\n+    Result<OT, OF>&& operator<<(Result<OT, OF>&& other)\n+    {\n+        if (other.m_info && !this->m_info) {\n+            this->m_info.reset(new detail::ErrorInfo<F>{.errors = std::move(other.m_info->errors),\n+                                                        .warnings = std::move(other.m_info->warnings)});\n+        } else if (other.m_info && this->m_info) {\n+            detail::MoveElements(other.m_info->errors, this->m_info->errors);\n+            detail::MoveElements(other.m_info->warnings, this->m_info->warnings);\n+        }\n+        return std::move(other);\n     }\n-    explicit operator bool() const noexcept { return has_value(); }\n-    const T* operator->() const LIFETIMEBOUND { return &value(); }\n-    const T& operator*() const LIFETIMEBOUND { return value(); }\n-    T* operator->() LIFETIMEBOUND { return &value(); }\n-    T& operator*() LIFETIMEBOUND { return value(); }\n };\n \n-template <typename T>\n-bilingual_str ErrorString(const Result<T>& result)\n-{\n-    return result ? bilingual_str{} : std::get<0>(result.m_variant);\n-}\n+//! Helper methods to format error strings.\n+bilingual_str ErrorString(const std::vector<bilingual_str>& errors);\n+bilingual_str ErrorString(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);\n+template <typename T, typename F>\n+bilingual_str ErrorString(const Result<T, F>& result) { return ErrorString(result.GetErrors(), result.GetWarnings()); }",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 252,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950215859,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950215859\r\n\r\n> What about renaming this function to `ErrorWarningString()` since at the moment it can contain both? I can see some scenario where people would want to access just the error but not the warning string (and of course it's just a convenience fn), so that would allow them to create the more narrow `ErrorString()` later on?\r\n\r\nAdded some more documentation about how this should be used. I think a function that just puts errors not warnings in a result message could be a potential footgun, because warnings could be unintentionally dropped if errors and warnings are returned together. For example if code initially doesn't generate any warnings, then someone adds one not realizing it won't show up anywhere.",
      "created_at": "2022-08-23T19:59:34Z",
      "updated_at": "2022-08-24T18:30:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r953059049",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953059049"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953061469",
      "pull_request_review_id": 1081114599,
      "id": 953061469,
      "node_id": "PRRC_kwDOABII5844zpBd",
      "diff_hunk": "@@ -31,54 +144,89 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            if (!this->m_info) this->m_info = std::make_unique<detail::ErrorInfo<F>>();\n+            this->m_info->failure.emplace(std::forward<decltype(x)>(x)...);\n+        }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        Construct(fn, std::forward<Args>(args)...);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        if (other) this->MoveValue(other); else if (other.m_info) this->m_info->failure = std::move(other.m_info->failure);",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 192,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950342467,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950342467\r\n\r\n> nit: I think this should be on a new line\r\n\r\nI dropped the `else if` here since it was redundant, but I think I do prefer the compact style with one line",
      "created_at": "2022-08-23T20:02:34Z",
      "updated_at": "2022-08-24T18:30:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r953061469",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953061469"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 185,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953062290",
      "pull_request_review_id": 1081114599,
      "id": 953062290,
      "node_id": "PRRC_kwDOABII5844zpOS",
      "diff_hunk": "@@ -31,54 +144,89 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            if (!this->m_info) this->m_info = std::make_unique<detail::ErrorInfo<F>>();\n+            this->m_info->failure.emplace(std::forward<decltype(x)>(x)...);\n+        }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        Construct(fn, std::forward<Args>(args)...);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        if (other) this->MoveValue(other); else if (other.m_info) this->m_info->failure = std::move(other.m_info->failure);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+\n+    template <typename FT, typename FF>\n+    friend class Result;\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.\n+    template <typename... Args>\n+    Result(Args&&... args)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n+    Result& operator=(Result&& other)\n     {\n-        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 215,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950365637,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950365637\r\n\r\n> nit: ternary looks more appropriate?\r\n\r\nI think I prefer `if` statement to ternary here, and I'm not used to seeing ternary statements rather than expressions in the codebase, but would be happy to change if there are other opinions.",
      "created_at": "2022-08-23T20:03:40Z",
      "updated_at": "2022-08-24T18:30:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r953062290",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953062290"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 205,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953062553",
      "pull_request_review_id": 1081114599,
      "id": 953062553,
      "node_id": "PRRC_kwDOABII5844zpSZ",
      "diff_hunk": "@@ -31,54 +144,89 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            if (!this->m_info) this->m_info = std::make_unique<detail::ErrorInfo<F>>();\n+            this->m_info->failure.emplace(std::forward<decltype(x)>(x)...);\n+        }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        Construct(fn, std::forward<Args>(args)...);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        if (other) this->MoveValue(other); else if (other.m_info) this->m_info->failure = std::move(other.m_info->failure);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+\n+    template <typename FT, typename FF>\n+    friend class Result;\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.\n+    template <typename... Args>\n+    Result(Args&&... args)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n+    Result& operator=(Result&& other)\n     {\n-        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n+        MoveConstruct(other);\n+        return *this;\n+    }\n+    ~Result() { if (*this) this->DestroyValue(); }\n+\n+    //! Operator moving warning and error messages from one result to another.",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 221,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950369435,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950369435\r\n\r\n> nit:\r\n\r\nThanks, that's clearer",
      "created_at": "2022-08-23T20:04:01Z",
      "updated_at": "2022-08-24T18:30:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r953062553",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953062553"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 208,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953062706",
      "pull_request_review_id": 1081114599,
      "id": 953062706,
      "node_id": "PRRC_kwDOABII5844zpUy",
      "diff_hunk": "@@ -31,54 +144,89 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            if (!this->m_info) this->m_info = std::make_unique<detail::ErrorInfo<F>>();\n+            this->m_info->failure.emplace(std::forward<decltype(x)>(x)...);\n+        }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        Construct(fn, std::forward<Args>(args)...);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        if (other) this->MoveValue(other); else if (other.m_info) this->m_info->failure = std::move(other.m_info->failure);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+\n+    template <typename FT, typename FF>\n+    friend class Result;\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.\n+    template <typename... Args>\n+    Result(Args&&... args)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n+    Result& operator=(Result&& other)\n     {\n-        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n+        MoveConstruct(other);\n+        return *this;\n+    }\n+    ~Result() { if (*this) this->DestroyValue(); }\n+\n+    //! Operator moving warning and error messages from one result to another.\n+    //! Only moves message strings, does not change success or failure values of\n+    //! either Result object.\n+    template <typename OT, typename OF>\n+    Result<OT, OF>&& operator<<(Result<OT, OF>&& other)\n+    {\n+        if (other.m_info && !this->m_info) {\n+            this->m_info.reset(new detail::ErrorInfo<F>{.errors = std::move(other.m_info->errors),\n+                                                        .warnings = std::move(other.m_info->warnings)});",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 229,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950383459,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950383459\r\n\r\n> Since `ErrorInfo` doesn't have a move constructor, do the move semantics make sense here? _(I'm still easily confused by move semantics, so I'm probably missing something - sorry)_\r\n\r\n`ErrorInfo` should have an implicit `ErrorInfo(ErrorInfo&&)` move constructor, but it actually isn't relevant here, because the new ErrorInfo object that's being allocated isn't being constructed with that constructor. Instead the newly allocated ErrorInfo is [aggregate initialized](https://en.cppreference.com/w/cpp/language/aggregate_initialization), and the two `errors` and `warnings` variables are individually move-constructed, rather than the whole `ErrorInfo` object being move constructed.\r\n\r\nIf the question here is whether the `std::move` calls here have any effect, the answer is yes they do because `errors` and `warnings` variables are vectors, and vectors have move constructors.",
      "created_at": "2022-08-23T20:04:14Z",
      "updated_at": "2022-08-24T18:30:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r953062706",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953062706"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": 215,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 216,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954186225",
      "pull_request_review_id": 1084363199,
      "id": 954186225,
      "node_id": "PRRC_kwDOABII584437nx",
      "diff_hunk": "@@ -31,54 +144,89 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            if (!this->m_info) this->m_info = std::make_unique<detail::ErrorInfo<F>>();\n+            this->m_info->failure.emplace(std::forward<decltype(x)>(x)...);\n+        }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        Construct(fn, std::forward<Args>(args)...);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        if (other) this->MoveValue(other); else if (other.m_info) this->m_info->failure = std::move(other.m_info->failure);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+\n+    template <typename FT, typename FF>\n+    friend class Result;\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.\n+    template <typename... Args>\n+    Result(Args&&... args)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n+    Result& operator=(Result&& other)\n     {\n-        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n+        MoveConstruct(other);\n+        return *this;\n+    }\n+    ~Result() { if (*this) this->DestroyValue(); }\n+\n+    //! Operator moving warning and error messages from one result to another.\n+    //! Only moves message strings, does not change success or failure values of\n+    //! either Result object.\n+    template <typename OT, typename OF>\n+    Result<OT, OF>&& operator<<(Result<OT, OF>&& other)\n+    {\n+        if (other.m_info && !this->m_info) {\n+            this->m_info.reset(new detail::ErrorInfo<F>{.errors = std::move(other.m_info->errors),\n+                                                        .warnings = std::move(other.m_info->warnings)});",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 229,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950383459,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thank you for the thoughtful response, that was very helpful. Your usage of move semantics here now makes sense to me.\r\n\r\nNow I'm just confused that the [designated initialization](https://en.cppreference.com/w/cpp/language/aggregate_initialization#Designated_initializers) compiles fine even though the spec says it's since C++20 and I haven't configured with `--enable-c++20` (as does the CI I think)?",
      "created_at": "2022-08-24T18:58:34Z",
      "updated_at": "2022-08-24T18:58:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r954186225",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954186225"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": 215,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 216,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954191181",
      "pull_request_review_id": 1084368855,
      "id": 954191181,
      "node_id": "PRRC_kwDOABII5844381N",
      "diff_hunk": "@@ -31,54 +144,89 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            if (!this->m_info) this->m_info = std::make_unique<detail::ErrorInfo<F>>();\n+            this->m_info->failure.emplace(std::forward<decltype(x)>(x)...);\n+        }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        Construct(fn, std::forward<Args>(args)...);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        if (other) this->MoveValue(other); else if (other.m_info) this->m_info->failure = std::move(other.m_info->failure);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+\n+    template <typename FT, typename FF>\n+    friend class Result;\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.\n+    template <typename... Args>\n+    Result(Args&&... args)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n+    Result& operator=(Result&& other)\n     {\n-        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n+        MoveConstruct(other);\n+        return *this;\n+    }\n+    ~Result() { if (*this) this->DestroyValue(); }\n+\n+    //! Operator moving warning and error messages from one result to another.\n+    //! Only moves message strings, does not change success or failure values of\n+    //! either Result object.\n+    template <typename OT, typename OF>\n+    Result<OT, OF>&& operator<<(Result<OT, OF>&& other)\n+    {\n+        if (other.m_info && !this->m_info) {\n+            this->m_info.reset(new detail::ErrorInfo<F>{.errors = std::move(other.m_info->errors),\n+                                                        .warnings = std::move(other.m_info->warnings)});",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 229,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950383459,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Now I'm just confused that the [designated initialization](https://en.cppreference.com/w/cpp/language/aggregate_initialization#Designated_initializers) compiles fine even though the spec says it's since C++20 and I haven't configured with `--enable-c++20` (as does the CI I think)?\r\n\r\nOh, we are just outside of the c++17 spec there. The build enables designated initializers as an extension since #24531",
      "created_at": "2022-08-24T19:03:05Z",
      "updated_at": "2022-08-24T19:03:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r954191181",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954191181"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": 215,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 216,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954200376",
      "pull_request_review_id": 1084379302,
      "id": 954200376,
      "node_id": "PRRC_kwDOABII58443_E4",
      "diff_hunk": "@@ -8,16 +8,133 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 21,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "in_reply_to_id": 951889285,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Sorry for the ghost comment. I had realized after posting that this comment about moving it to span.h wasn't really applicable so I removed it, but apparently not timely enough. I agree with you.\r\n\r\nThe only further thought I had was that if there's no need to be generic (yet - and maybe never) it might be worth not doing that to simplify things a bit where possible? E.g. the below is easier to quickly understand imo (and maybe compiles a bit faster?):\r\n\r\n```suggestion\r\n//! Helper to move warnings and errors from one ErrorInfo to another.\r\nvoid MoveMessages(std::vector<bilingual_str>& src, std::vector<bilingual_str>& dest)\r\n{\r\n    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\r\n    src.clear();\r\n}\r\n```\r\n\r\nNo strong views either way though, so feel free to ignore. Just trying to minimize on what's already a lot of genericness.",
      "created_at": "2022-08-24T19:11:40Z",
      "updated_at": "2022-08-24T19:22:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r954200376",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954200376"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": 23,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954211552",
      "pull_request_review_id": 1084391049,
      "id": 954211552,
      "node_id": "PRRC_kwDOABII58444Bzg",
      "diff_hunk": "@@ -31,54 +144,89 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            if (!this->m_info) this->m_info = std::make_unique<detail::ErrorInfo<F>>();\n+            this->m_info->failure.emplace(std::forward<decltype(x)>(x)...);\n+        }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        Construct(fn, std::forward<Args>(args)...);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        if (other) this->MoveValue(other); else if (other.m_info) this->m_info->failure = std::move(other.m_info->failure);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+\n+    template <typename FT, typename FF>\n+    friend class Result;\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.\n+    template <typename... Args>\n+    Result(Args&&... args)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n+    Result& operator=(Result&& other)\n     {\n-        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n+        MoveConstruct(other);\n+        return *this;\n+    }\n+    ~Result() { if (*this) this->DestroyValue(); }\n+\n+    //! Operator moving warning and error messages from one result to another.\n+    //! Only moves message strings, does not change success or failure values of\n+    //! either Result object.\n+    template <typename OT, typename OF>\n+    Result<OT, OF>&& operator<<(Result<OT, OF>&& other)\n+    {\n+        if (other.m_info && !this->m_info) {\n+            this->m_info.reset(new detail::ErrorInfo<F>{.errors = std::move(other.m_info->errors),\n+                                                        .warnings = std::move(other.m_info->warnings)});\n+        } else if (other.m_info && this->m_info) {\n+            detail::MoveElements(other.m_info->errors, this->m_info->errors);\n+            detail::MoveElements(other.m_info->warnings, this->m_info->warnings);\n+        }\n+        return std::move(other);\n     }\n-    explicit operator bool() const noexcept { return has_value(); }\n-    const T* operator->() const LIFETIMEBOUND { return &value(); }\n-    const T& operator*() const LIFETIMEBOUND { return value(); }\n-    T* operator->() LIFETIMEBOUND { return &value(); }\n-    T& operator*() LIFETIMEBOUND { return value(); }\n };\n \n-template <typename T>\n-bilingual_str ErrorString(const Result<T>& result)\n-{\n-    return result ? bilingual_str{} : std::get<0>(result.m_variant);\n-}\n+//! Helper methods to format error strings.\n+bilingual_str ErrorString(const std::vector<bilingual_str>& errors);\n+bilingual_str ErrorString(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);\n+template <typename T, typename F>\n+bilingual_str ErrorString(const Result<T, F>& result) { return ErrorString(result.GetErrors(), result.GetWarnings()); }",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 252,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950215859,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I didn't think about the footgun, that's a good point why we probably indeed won't want to add the other fn later. I still think it's a bit awkward that the function name doesn't entirely capture what the function is doing, but I think it's within reason and may be worth the trade-off for brevity (vs `ErrorWarningString()`. Not sure what I prefer, so feel free to ignore.\r\n\r\nThe new docstring is great, thanks!",
      "created_at": "2022-08-24T19:21:36Z",
      "updated_at": "2022-08-24T19:21:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r954211552",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954211552"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954223480",
      "pull_request_review_id": 1084403711,
      "id": 954223480,
      "node_id": "PRRC_kwDOABII58444Et4",
      "diff_hunk": "@@ -8,16 +8,129 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (error.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 52,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950253178,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I like your solution, very elegant!",
      "created_at": "2022-08-24T19:32:52Z",
      "updated_at": "2022-08-24T19:32:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r954223480",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954223480"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 120,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954244319",
      "pull_request_review_id": 1084431154,
      "id": 954244319,
      "node_id": "PRRC_kwDOABII58444Jzf",
      "diff_hunk": "@@ -31,54 +144,89 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            if (!this->m_info) this->m_info = std::make_unique<detail::ErrorInfo<F>>();\n+            this->m_info->failure.emplace(std::forward<decltype(x)>(x)...);\n+        }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        Construct(fn, std::forward<Args>(args)...);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        if (other) this->MoveValue(other); else if (other.m_info) this->m_info->failure = std::move(other.m_info->failure);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+\n+    template <typename FT, typename FF>\n+    friend class Result;\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.\n+    template <typename... Args>\n+    Result(Args&&... args)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n+    Result& operator=(Result&& other)\n     {\n-        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 215,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950365637,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Hmm you're right, we're not using ternaries as statements it seems. I couldn't find a single instance of a one-line `if ...; else` either though, and unfortunately the developer notes are rather ambiguous on the topic.\r\n\r\nIn that case I'd prefer `if` and `else` on separate lines (personal preference and to not be the first in the repo) but no strong view so won't comment on it further.",
      "created_at": "2022-08-24T19:53:58Z",
      "updated_at": "2022-08-24T19:53:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r954244319",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954244319"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 205,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955075009",
      "pull_request_review_id": 1085606694,
      "id": 955075009,
      "node_id": "PRRC_kwDOABII58447UnB",
      "diff_hunk": "@@ -31,54 +144,89 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            if (!this->m_info) this->m_info = std::make_unique<detail::ErrorInfo<F>>();\n+            this->m_info->failure.emplace(std::forward<decltype(x)>(x)...);\n+        }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        Construct(fn, std::forward<Args>(args)...);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        if (other) this->MoveValue(other); else if (other.m_info) this->m_info->failure = std::move(other.m_info->failure);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+\n+    template <typename FT, typename FF>\n+    friend class Result;\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.\n+    template <typename... Args>\n+    Result(Args&&... args)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n+    Result& operator=(Result&& other)\n     {\n-        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n+        MoveConstruct(other);\n+        return *this;\n+    }\n+    ~Result() { if (*this) this->DestroyValue(); }\n+\n+    //! Operator moving warning and error messages from one result to another.\n+    //! Only moves message strings, does not change success or failure values of\n+    //! either Result object.\n+    template <typename OT, typename OF>\n+    Result<OT, OF>&& operator<<(Result<OT, OF>&& other)\n+    {\n+        if (other.m_info && !this->m_info) {\n+            this->m_info.reset(new detail::ErrorInfo<F>{.errors = std::move(other.m_info->errors),\n+                                                        .warnings = std::move(other.m_info->warnings)});\n+        } else if (other.m_info && this->m_info) {\n+            detail::MoveElements(other.m_info->errors, this->m_info->errors);\n+            detail::MoveElements(other.m_info->warnings, this->m_info->warnings);\n+        }\n+        return std::move(other);\n     }\n-    explicit operator bool() const noexcept { return has_value(); }\n-    const T* operator->() const LIFETIMEBOUND { return &value(); }\n-    const T& operator*() const LIFETIMEBOUND { return value(); }\n-    T* operator->() LIFETIMEBOUND { return &value(); }\n-    T& operator*() LIFETIMEBOUND { return value(); }\n };\n \n-template <typename T>\n-bilingual_str ErrorString(const Result<T>& result)\n-{\n-    return result ? bilingual_str{} : std::get<0>(result.m_variant);\n-}\n+//! Helper methods to format error strings.\n+bilingual_str ErrorString(const std::vector<bilingual_str>& errors);\n+bilingual_str ErrorString(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);\n+template <typename T, typename F>\n+bilingual_str ErrorString(const Result<T, F>& result) { return ErrorString(result.GetErrors(), result.GetWarnings()); }",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 252,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950215859,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r954211552\r\n\r\n> I still think it's a bit awkward that the function name doesn't entirely capture what the function is doing, but I think it's within reason and may be worth the trade-off for brevity (vs `ErrorWarningString()`. Not sure what I prefer, so feel free to ignore.\r\n\r\nCould call it `util::MessageString(result)` instead of `util::ErrorString(result)`. I think the longer name would be ok too. I was pushing back more against changing the functionality than changing the name.\r\n\r\nI do think any renaming should happen in a separate PR, before or after this one. The function already exists and is called in current code. This PR is backwards compatible just extends the Result API without requiring changes to existing code.",
      "created_at": "2022-08-25T14:55:36Z",
      "updated_at": "2022-08-25T14:55:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r955075009",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955075009"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955097005",
      "pull_request_review_id": 1085638384,
      "id": 955097005,
      "node_id": "PRRC_kwDOABII58447Z-t",
      "diff_hunk": "@@ -8,16 +8,133 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 21,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "in_reply_to_id": 951889285,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r954200376\r\n\r\nInteresting! I do think the generic version is shorter and easier to understand. But I like moving more code from the `.h` file to the `.cpp` file, and I like the consistency between `JoinMessages` and `MoveMessages`, so I took this suggestion. Thanks!",
      "created_at": "2022-08-25T15:13:44Z",
      "updated_at": "2022-08-25T16:34:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r955097005",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955097005"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": 23,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955114057",
      "pull_request_review_id": 1085668250,
      "id": 955114057,
      "node_id": "PRRC_kwDOABII58447eJJ",
      "diff_hunk": "@@ -31,54 +144,89 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            if (!this->m_info) this->m_info = std::make_unique<detail::ErrorInfo<F>>();\n+            this->m_info->failure.emplace(std::forward<decltype(x)>(x)...);\n+        }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        Construct(fn, std::forward<Args>(args)...);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        if (other) this->MoveValue(other); else if (other.m_info) this->m_info->failure = std::move(other.m_info->failure);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+\n+    template <typename FT, typename FF>\n+    friend class Result;\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.\n+    template <typename... Args>\n+    Result(Args&&... args)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n+    Result& operator=(Result&& other)\n     {\n-        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n+        MoveConstruct(other);\n+        return *this;\n+    }\n+    ~Result() { if (*this) this->DestroyValue(); }\n+\n+    //! Operator moving warning and error messages from one result to another.\n+    //! Only moves message strings, does not change success or failure values of\n+    //! either Result object.\n+    template <typename OT, typename OF>\n+    Result<OT, OF>&& operator<<(Result<OT, OF>&& other)\n+    {\n+        if (other.m_info && !this->m_info) {\n+            this->m_info.reset(new detail::ErrorInfo<F>{.errors = std::move(other.m_info->errors),\n+                                                        .warnings = std::move(other.m_info->warnings)});\n+        } else if (other.m_info && this->m_info) {\n+            detail::MoveElements(other.m_info->errors, this->m_info->errors);\n+            detail::MoveElements(other.m_info->warnings, this->m_info->warnings);\n+        }\n+        return std::move(other);\n     }\n-    explicit operator bool() const noexcept { return has_value(); }\n-    const T* operator->() const LIFETIMEBOUND { return &value(); }\n-    const T& operator*() const LIFETIMEBOUND { return value(); }\n-    T* operator->() LIFETIMEBOUND { return &value(); }\n-    T& operator*() LIFETIMEBOUND { return value(); }\n };\n \n-template <typename T>\n-bilingual_str ErrorString(const Result<T>& result)\n-{\n-    return result ? bilingual_str{} : std::get<0>(result.m_variant);\n-}\n+//! Helper methods to format error strings.\n+bilingual_str ErrorString(const std::vector<bilingual_str>& errors);\n+bilingual_str ErrorString(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);\n+template <typename T, typename F>\n+bilingual_str ErrorString(const Result<T, F>& result) { return ErrorString(result.GetErrors(), result.GetWarnings()); }",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 252,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950215859,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> The function already exists and is called in current code.\r\n\r\nRight, I did not consider that. Don't think it's worth the extra PR without more demand for it so I'm happy to just leave it at `ErrorString` until then.",
      "created_at": "2022-08-25T15:28:02Z",
      "updated_at": "2022-08-25T15:28:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r955114057",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955114057"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957494674",
      "pull_request_review_id": 1088925380,
      "id": 957494674,
      "node_id": "PRRC_kwDOABII5845EjWS",
      "diff_hunk": "@@ -8,16 +8,133 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    template <typename... Args>\n+    void InitFailure(Args&&... args)\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->failure.emplace(std::forward<Args>(args)...);\n+    }\n+    void InitValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (error.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (warning.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Success check.\n+    operator bool() const { return !m_info || !m_info->failure; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same<_F, void>::value, const _F&> GetFailure() const { assert(!*this); return *m_info->failure; }\n+    const std::vector<bilingual_str>& GetErrors() const { return m_info ? m_info->errors : EMPTY_LIST; }\n+    const std::vector<bilingual_str>& GetWarnings() const { return m_info ? m_info->warnings : EMPTY_LIST; }",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 76,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "in_reply_to_id": 944367210,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The thing is that you are basically adding a ton of dead code in this pull. `bitcoind` compiles fine without it, so I might be picky, but my preference would be to only add the code when it is needed. This also makes it easier for reviewers because they can think about actual use cases and don't have to imagine them from the unit tests.\r\n\r\n\r\n```diff\r\ndiff --git a/src/util/result.cpp b/src/util/result.cpp\r\nindex 9526b5b785..199a6579d7 100644\r\n--- a/src/util/result.cpp\r\n+++ b/src/util/result.cpp\r\n@@ -3,26 +3,8 @@\r\n // file COPYING or https://www.opensource.org/licenses/mit-license.php.\r\n \r\n #include <util/result.h>\r\n-#include <util/string.h>\r\n \r\n namespace util {\r\n namespace detail {\r\n-bilingual_str JoinMessages(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str> warnings)\r\n-{\r\n-    bilingual_str result;\r\n-    for (const auto& messages : {errors, warnings}) {\r\n-        for (const auto& message : messages) {\r\n-            if (!result.empty()) result += Untranslated(\" \");\r\n-            result += message;\r\n-        }\r\n-    }\r\n-    return result;\r\n-}\r\n-\r\n-void MoveMessages(std::vector<bilingual_str>& src, std::vector<bilingual_str>& dest)\r\n-{\r\n-    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\r\n-    src.clear();\r\n-}\r\n } // namespace detail\r\n } // namespace util\r\ndiff --git a/src/util/result.h b/src/util/result.h\r\nindex 32fe40763f..8eb5b552d3 100644\r\n--- a/src/util/result.h\r\n+++ b/src/util/result.h\r\n@@ -17,21 +17,11 @@\r\n \r\n namespace util {\r\n namespace detail {\r\n-//! Empty string list\r\n-const std::vector<bilingual_str> EMPTY_LIST{};\r\n-\r\n-//! Helper function to join messages in space separated string.\r\n-bilingual_str JoinMessages(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str> warnings);\r\n-\r\n-//! Helper function to move messages from one vector to another.\r\n-void MoveMessages(std::vector<bilingual_str>& src, std::vector<bilingual_str>& dest);\r\n-\r\n-//! Error information only allocated if there are errors or warnings.\r\n+//! Error information only allocated if there is an error.\r\n template <typename F>\r\n struct ErrorInfo {\r\n     std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure{};\r\n-    std::vector<bilingual_str> errors;\r\n-    std::vector<bilingual_str> warnings;\r\n+    bilingual_str error;\r\n };\r\n \r\n //! Result base class which is inherited by Result<T, F>.\r\n@@ -66,25 +56,7 @@ protected:\r\n public:\r\n     void AddError(bilingual_str error)\r\n     {\r\n-        if (!error.empty()) Info().errors.emplace_back(std::move(error));\r\n-    }\r\n-\r\n-    void AddWarning(bilingual_str warning)\r\n-    {\r\n-        if (!warning.empty()) Info().warnings.emplace_back(std::move(warning));\r\n-    }\r\n-\r\n-    //! Operator moving warning and error messages from other result to this.\r\n-    //! Only moves message strings, does not change success or failure values of\r\n-    //! either Result object.\r\n-    template<typename O>\r\n-    O&& operator<<(O&& other)\r\n-    {\r\n-        if (other.m_info) {\r\n-            if (!other.m_info->errors.empty()) MoveMessages(other.m_info->errors, Info().errors);\r\n-            if (!other.m_info->warnings.empty()) MoveMessages(other.m_info->warnings, Info().warnings);\r\n-        }\r\n-        return std::forward<O>(other);\r\n+        Info().error = std::move(error);\r\n     }\r\n \r\n     //! Success check.\r\n@@ -93,8 +65,7 @@ public:\r\n     //! Error retrieval.\r\n     template <typename _F = F>\r\n     std::enable_if_t<!std::is_same<_F, void>::value, const _F&> GetFailure() const { assert(!*this); return *m_info->failure; }\r\n-    const std::vector<bilingual_str>& GetErrors() const { return m_info ? m_info->errors : EMPTY_LIST; }\r\n-    const std::vector<bilingual_str>& GetWarnings() const { return m_info ? m_info->warnings : EMPTY_LIST; }\r\n+    bilingual_str GetError() const { return m_info ? m_info->error : bilingual_str{}; }\r\n };\r\n \r\n //! Result base class for T value type. Holds value and provides accessor methods.\r\n@@ -145,9 +116,6 @@ public:\r\n struct Error {\r\n     bilingual_str message;\r\n };\r\n-struct Warning {\r\n-    bilingual_str message;\r\n-};\r\n \r\n //! The util::Result class provides a standard way for functions to return error\r\n //! and warning strings in addition to optional result values.\r\n@@ -190,23 +158,11 @@ protected:\r\n         }, std::forward<Args>(args)...);\r\n     }\r\n \r\n-    template <typename Fn, typename... Args>\r\n-    void Construct(const Fn& fn, Warning warning, Args&&... args)\r\n-    {\r\n-        this->AddWarning(std::move(warning.message));\r\n-        Construct(fn, std::forward<Args>(args)...);\r\n-    }\r\n-\r\n-    template <typename Fn, typename OT, typename OF, typename... Args>\r\n-    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\r\n-    {\r\n-        *this << other;\r\n-        Construct(fn, std::forward<Args>(args)...);\r\n-    }\r\n-\r\n     void MoveConstruct(Result& other)\r\n     {\r\n-        *this << other;\r\n+        if (other.m_info) {\r\n+            this->AddError(std::move(other.m_info->error));\r\n+        }\r\n         if (other) this->MoveValue(other); else this->Info().failure = std::move(other.m_info->failure);\r\n     }\r\n \r\n@@ -233,7 +189,7 @@ public:\r\n //! are present. More complicated applications should use GetErrors() and\r\n //! GetWarning() methods directly.\r\n template <typename T, typename F>\r\n-bilingual_str ErrorString(const Result<T, F>& result) { return detail::JoinMessages(result.GetErrors(), result.GetWarnings()); }\r\n+bilingual_str ErrorString(const Result<T, F>& result) { return result.GetError(); }\r\n } // namespace util\r\n \r\n #endif // BITCOIN_UTIL_RESULT_H\r\n",
      "created_at": "2022-08-29T15:35:26Z",
      "updated_at": "2022-08-29T15:35:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r957494674",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957494674"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957495310",
      "pull_request_review_id": 1088926315,
      "id": 957495310,
      "node_id": "PRRC_kwDOABII5845EjgO",
      "diff_hunk": "@@ -8,16 +8,149 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper function to join messages in space separated string.\n+bilingual_str JoinMessages(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str> warnings);",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 17,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "5aff7baf375c432746dff6862e9d06064ea1fb18",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In case you don't remove this, this is wrong anyway, as it is missing a `&` in the second argument",
      "created_at": "2022-08-29T15:36:04Z",
      "updated_at": "2022-08-29T15:36:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r957495310",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957495310"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 24,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957498746",
      "pull_request_review_id": 1088932989,
      "id": 957498746,
      "node_id": "PRRC_kwDOABII5845EkV6",
      "diff_hunk": "@@ -8,16 +8,149 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper function to join messages in space separated string.\n+bilingual_str JoinMessages(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str> warnings);\n+\n+//! Helper function to move messages from one vector to another.\n+void MoveMessages(std::vector<bilingual_str>& src, std::vector<bilingual_str>& dest);\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure{};\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    ErrorInfo<F>& Info()\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        return *m_info;\n+    }\n+\n+    //! Value accessors that do nothing this because class is specializing value type T=void.\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+    template <typename, typename>\n+    friend class ResultBase;\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (!error.empty()) Info().errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (!warning.empty()) Info().warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Operator moving warning and error messages from other result to this.\n+    //! Only moves message strings, does not change success or failure values of\n+    //! either Result object.\n+    template<typename O>\n+    O&& operator<<(O&& other)\n+    {\n+        if (other.m_info) {\n+            if (!other.m_info->errors.empty()) MoveMessages(other.m_info->errors, Info().errors);\n+            if (!other.m_info->warnings.empty()) MoveMessages(other.m_info->warnings, Info().warnings);\n+        }\n+        return std::forward<O>(other);\n+    }\n+\n+    //! Success check.\n+    explicit operator bool() const { return !m_info || !m_info->failure; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same<_F, void>::value, const _F&> GetFailure() const { assert(!*this); return *m_info->failure; }",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 88,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "5aff7baf375c432746dff6862e9d06064ea1fb18",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Can use `is_same_v` instead of `...::value`? Also, missing LIFETIMEBOUND?\r\n\r\n(Same feedback on other lines where this is applicable)",
      "created_at": "2022-08-29T15:39:32Z",
      "updated_at": "2022-08-29T15:39:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r957498746",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957498746"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957539651",
      "pull_request_review_id": 1088988856,
      "id": 957539651,
      "node_id": "PRRC_kwDOABII5845EuVD",
      "diff_hunk": "@@ -8,16 +8,133 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    template <typename... Args>\n+    void InitFailure(Args&&... args)\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->failure.emplace(std::forward<Args>(args)...);\n+    }\n+    void InitValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (error.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (warning.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Success check.\n+    operator bool() const { return !m_info || !m_info->failure; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same<_F, void>::value, const _F&> GetFailure() const { assert(!*this); return *m_info->failure; }\n+    const std::vector<bilingual_str>& GetErrors() const { return m_info ? m_info->errors : EMPTY_LIST; }\n+    const std::vector<bilingual_str>& GetWarnings() const { return m_info ? m_info->warnings : EMPTY_LIST; }",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 76,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "in_reply_to_id": 944367210,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r957494674\r\n\r\n> The thing is that you are basically adding a ton of dead code in this pull\r\n\r\nInteresting and thanks for the diff! Now I understand what you are suggesting, and I think I'd be ok with making that change. I wasn't really looking at that code as dead because I'm immediately using it in the next pull #25722 and also using it in unit tests this PR. I also didn't consider it to be a ton of code, since the code in your diff is just getter/setter functions that provide access to errors/warnings variables. But no objection to splitting it off into another pull.",
      "created_at": "2022-08-29T16:15:49Z",
      "updated_at": "2022-08-29T16:15:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r957539651",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957539651"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958050929",
      "pull_request_review_id": 1089693226,
      "id": 958050929,
      "node_id": "PRRC_kwDOABII5845GrJx",
      "diff_hunk": "@@ -8,16 +8,133 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    template <typename... Args>\n+    void InitFailure(Args&&... args)\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->failure.emplace(std::forward<Args>(args)...);\n+    }\n+    void InitValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (error.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (warning.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Success check.\n+    operator bool() const { return !m_info || !m_info->failure; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same<_F, void>::value, const _F&> GetFailure() const { assert(!*this); return *m_info->failure; }\n+    const std::vector<bilingual_str>& GetErrors() const { return m_info ? m_info->errors : EMPTY_LIST; }\n+    const std::vector<bilingual_str>& GetWarnings() const { return m_info ? m_info->warnings : EMPTY_LIST; }",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 76,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "in_reply_to_id": 944367210,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yeah, I don't feel too strong as well. Though, if you keep it, it would be good to fixup the typo: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r957495310",
      "created_at": "2022-08-30T06:22:43Z",
      "updated_at": "2022-08-30T06:22:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r958050929",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958050929"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958679862",
      "pull_request_review_id": 1090610240,
      "id": 958679862,
      "node_id": "PRRC_kwDOABII5845JEs2",
      "diff_hunk": "@@ -8,16 +8,149 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper function to join messages in space separated string.\n+bilingual_str JoinMessages(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str> warnings);",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 17,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "5aff7baf375c432746dff6862e9d06064ea1fb18",
      "in_reply_to_id": 957495310,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r957495310\r\n\r\n> In case you don't remove this, this is wrong anyway, as it is missing a `&` in the second argument\r\n\r\nThanks, removed from the main commit and added&",
      "created_at": "2022-08-30T16:11:29Z",
      "updated_at": "2022-08-30T18:27:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r958679862",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958679862"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 24,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958680008",
      "pull_request_review_id": 1090610240,
      "id": 958680008,
      "node_id": "PRRC_kwDOABII5845JEvI",
      "diff_hunk": "@@ -8,16 +8,149 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper function to join messages in space separated string.\n+bilingual_str JoinMessages(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str> warnings);\n+\n+//! Helper function to move messages from one vector to another.\n+void MoveMessages(std::vector<bilingual_str>& src, std::vector<bilingual_str>& dest);\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure{};\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    ErrorInfo<F>& Info()\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        return *m_info;\n+    }\n+\n+    //! Value accessors that do nothing this because class is specializing value type T=void.\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+    template <typename, typename>\n+    friend class ResultBase;\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (!error.empty()) Info().errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (!warning.empty()) Info().warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Operator moving warning and error messages from other result to this.\n+    //! Only moves message strings, does not change success or failure values of\n+    //! either Result object.\n+    template<typename O>\n+    O&& operator<<(O&& other)\n+    {\n+        if (other.m_info) {\n+            if (!other.m_info->errors.empty()) MoveMessages(other.m_info->errors, Info().errors);\n+            if (!other.m_info->warnings.empty()) MoveMessages(other.m_info->warnings, Info().warnings);\n+        }\n+        return std::forward<O>(other);\n+    }\n+\n+    //! Success check.\n+    explicit operator bool() const { return !m_info || !m_info->failure; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same<_F, void>::value, const _F&> GetFailure() const { assert(!*this); return *m_info->failure; }",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 88,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "5aff7baf375c432746dff6862e9d06064ea1fb18",
      "in_reply_to_id": 957498746,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r957498746\r\n\r\n> nit: Can use `is_same_v` instead of `...::value`? Also, missing LIFETIMEBOUND?\r\n\r\nThanks, added these improvements",
      "created_at": "2022-08-30T16:11:38Z",
      "updated_at": "2022-08-30T18:27:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r958680008",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958680008"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958800957",
      "pull_request_review_id": 1090610240,
      "id": 958800957,
      "node_id": "PRRC_kwDOABII5845JiQ9",
      "diff_hunk": "@@ -8,16 +8,133 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    template <typename... Args>\n+    void InitFailure(Args&&... args)\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->failure.emplace(std::forward<Args>(args)...);\n+    }\n+    void InitValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (error.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (warning.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Success check.\n+    operator bool() const { return !m_info || !m_info->failure; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same<_F, void>::value, const _F&> GetFailure() const { assert(!*this); return *m_info->failure; }\n+    const std::vector<bilingual_str>& GetErrors() const { return m_info ? m_info->errors : EMPTY_LIST; }\n+    const std::vector<bilingual_str>& GetWarnings() const { return m_info ? m_info->warnings : EMPTY_LIST; }",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 76,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "in_reply_to_id": 944367210,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r958050929\r\n\r\n> Yeah, I don't feel too strong as well. Though, if you keep it, it would be good to fixup the typo: [#25665 (comment)](https://github.com/bitcoin/bitcoin/pull/25665#discussion_r957495310)\r\n\r\nOk, I'm hedging right now by moving multiple error & warning support into a separate commit but not a separate PR. I maybe have a slight preference for just squashing the commits again to reduce churn, but I'm also fine with keeping separate commits, or moving the commit to another PR if one of those alternatives seems better, so let me know!\r\n\r\nAlso fixed the typo",
      "created_at": "2022-08-30T18:25:17Z",
      "updated_at": "2022-08-30T18:27:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r958800957",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958800957"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958847991",
      "pull_request_review_id": 1090849342,
      "id": 958847991,
      "node_id": "PRRC_kwDOABII5845Jtv3",
      "diff_hunk": "@@ -8,16 +8,146 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 14,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "834857e56b8de0bfabee7315622c0211b4a48746",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: `EMPTY_LIST` ( and `#include <vector>` ) seems unnecessary in this commit, think it belongs in \"[refactor: Add util::Result multiple error and warning messages](https://github.com/bitcoin/bitcoin/pull/25665/commits/834857e56b8de0bfabee7315622c0211b4a48746)\"",
      "created_at": "2022-08-30T19:21:03Z",
      "updated_at": "2022-08-31T11:33:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r958847991",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958847991"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": 20,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958993493",
      "pull_request_review_id": 1091053363,
      "id": 958993493,
      "node_id": "PRRC_kwDOABII5845KRRV",
      "diff_hunk": "@@ -8,16 +8,146 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper function to join messages in space separated string.\n+bilingual_str JoinMessages(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);\n+\n+//! Helper function to move messages from one vector to another.\n+void MoveMessages(std::vector<bilingual_str>& src, std::vector<bilingual_str>& dest);\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same_v<F, void>, std::monostate, F>> failure{};\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 34,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "834857e56b8de0bfabee7315622c0211b4a48746",
      "in_reply_to_id": null,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think it's a little confusing.\r\nIf I understand correctly, `template <typename F> class ResultBase<void, F>` needs to know about `template <typename T, typename F> class ResultBase;` but the latter can only be declared after the former because it is a derived class. Therefore, a forward declaration is required.\r\n\r\nIf the `ResultBase` classes shouldn't be used anywhere outside of `result.h` and their only purpose is to be the base class of `Result`, I would suggest merging them all into a single class.\r\n\r\n",
      "created_at": "2022-08-30T22:41:54Z",
      "updated_at": "2022-08-30T22:42:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r958993493",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958993493"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 108,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/959071851",
      "pull_request_review_id": 1091208071,
      "id": 959071851,
      "node_id": "PRRC_kwDOABII5845KkZr",
      "diff_hunk": "@@ -8,16 +8,146 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper function to join messages in space separated string.\n+bilingual_str JoinMessages(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);\n+\n+//! Helper function to move messages from one vector to another.\n+void MoveMessages(std::vector<bilingual_str>& src, std::vector<bilingual_str>& dest);\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same_v<F, void>, std::monostate, F>> failure{};\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 34,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "834857e56b8de0bfabee7315622c0211b4a48746",
      "in_reply_to_id": 958993493,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Hmm, I wonder if you can say more about what is confusing or misleading. This is just a forward declaration for a template class.\r\n\r\n It is true that the reason for the forward declaring `ResultBase<T, F>` is to allow it to inherit from `ResultBase<void, F>`. So `ResultBase<T, F>` must be defined after `ResultBase<void, F>`, but declared before it.\r\n\r\nBut this is a pretty standard thing for C and C++ code. Definition of one thing 1 depends on declaration of thing 2, so thing 2 needs to be forward declared. It can happen for normal classes and functions as well as templates.\r\n\r\n> If the ResultBase classes shouldn't be used anywhere outside of result.h and their only purpose is to be the base class of Result, I would suggest merging them all into a single class.\r\n\r\nThis isn't easily possible because `Result<void, F>` inherits directly from `detail::ResultBase<void, F>` and does **not** inherit from `detail::ResultBase<T, F>`. It does not have an `m_value` member or `value()` functions or a dereferencing operator. If the result type `T` is void the `Result` class doesn't hold a value and can't be dereferenced.",
      "created_at": "2022-08-31T01:57:58Z",
      "updated_at": "2022-08-31T01:57:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r959071851",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/959071851"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 108,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/959440278",
      "pull_request_review_id": 1090849342,
      "id": 959440278,
      "node_id": "PRRC_kwDOABII5845L-WW",
      "diff_hunk": "@@ -31,54 +161,76 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+//!\n+//! Most code does not need different error-handling behavior for different\n+//! types of errors, and can suffice just using the type `T` success value on\n+//! success, and descriptive error strings when there's a failure. But\n+//! applications that do need more complicated error-handling behavior can\n+//! override the default `F = void` failure type and get failure values by\n+//! calling result.GetFailure().\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            this->Info().failure.emplace(std::forward<decltype(x)>(x)...);\n+        }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << other;\n+        Construct(fn, std::forward<Args>(args)...);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    void MoveConstruct(Result& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << other;\n+        if (other) this->MoveValue(other); else this->Info().failure = std::move(other.m_info->failure);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.\n+    template <typename... Args>\n+    Result(Args&&... args)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+    Result(Result&& other) { MoveConstruct(other); }\n+    Result& operator=(Result&& other) LIFETIMEBOUND\n     {\n-        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n+        MoveConstruct(other);\n+        return *this;\n     }\n-    explicit operator bool() const noexcept { return has_value(); }\n-    const T* operator->() const LIFETIMEBOUND { return &value(); }\n-    const T& operator*() const LIFETIMEBOUND { return value(); }\n-    T* operator->() LIFETIMEBOUND { return &value(); }\n-    T& operator*() LIFETIMEBOUND { return value(); }\n+    ~Result() { if (*this) this->DestroyValue(); }\n };\n \n-template <typename T>\n-bilingual_str ErrorString(const Result<T>& result)\n-{\n-    return result ? bilingual_str{} : std::get<0>(result.m_variant);\n-}\n+//! Join error and warning messages in a space separated string. This is\n+//! intended for simple applications where there's probably only one error or\n+//! warning message to report, but multiple messages should not be lost if they\n+//! are present. More complicated applications should use GetErrors() and\n+//! GetWarning() methods directly.\n+template <typename T, typename F>\n+bilingual_str ErrorString(const Result<T, F>& result) { return detail::JoinMessages(result.GetErrors(), result.GetWarnings()); }",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 256,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "834857e56b8de0bfabee7315622c0211b4a48746",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Since the `friend` declaration is gone, I think this should be `inline`?\r\n```suggestion\r\ninline bilingual_str ErrorString(const Result<T, F>& result) { return detail::JoinMessages(result.GetErrors(), result.GetWarnings()); }\r\n```",
      "created_at": "2022-08-31T10:50:34Z",
      "updated_at": "2022-08-31T11:33:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r959440278",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/959440278"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 351,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/959467658",
      "pull_request_review_id": 1090849342,
      "id": 959467658,
      "node_id": "PRRC_kwDOABII5845MFCK",
      "diff_hunk": "@@ -8,16 +8,129 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 23,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950223870,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Maybe I'm confused, but I don't think I agree. Since the optional allocation of an `ErrorInfo` is a result of how `Info()` is implemented, not of how the `ErrorInfo` struct is defined - isn't that where it should be documented? Unless you're talking about the optional allocation of `failure` instead of `ErrorInfo`, in which case I would agree that this should be explained at this location (and you might want to add another one to info explaining the dynamic allocation of `m_info`)?",
      "created_at": "2022-08-31T11:23:55Z",
      "updated_at": "2022-08-31T11:33:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r959467658",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/959467658"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/960699702",
      "pull_request_review_id": 1093461843,
      "id": 960699702,
      "node_id": "PRRC_kwDOABII5845Qx02",
      "diff_hunk": "@@ -8,16 +8,146 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 14,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "834857e56b8de0bfabee7315622c0211b4a48746",
      "in_reply_to_id": 958847991,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r958847991\r\n\r\n> nit: `EMPTY_LIST` ( and `#include <vector>` ) seems unnecessary in this commit, think it belongs in \"[refactor: Add util::Result multiple error and warning messages](https://github.com/bitcoin/bitcoin/pull/25665/commits/834857e56b8de0bfabee7315622c0211b4a48746)\"\r\n\r\nGood catch! Removed",
      "created_at": "2022-09-01T14:05:27Z",
      "updated_at": "2022-09-01T15:21:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r960699702",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/960699702"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": 20,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/960701013",
      "pull_request_review_id": 1093461843,
      "id": 960701013,
      "node_id": "PRRC_kwDOABII5845QyJV",
      "diff_hunk": "@@ -31,54 +161,76 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+//!\n+//! Most code does not need different error-handling behavior for different\n+//! types of errors, and can suffice just using the type `T` success value on\n+//! success, and descriptive error strings when there's a failure. But\n+//! applications that do need more complicated error-handling behavior can\n+//! override the default `F = void` failure type and get failure values by\n+//! calling result.GetFailure().\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            this->Info().failure.emplace(std::forward<decltype(x)>(x)...);\n+        }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << other;\n+        Construct(fn, std::forward<Args>(args)...);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    void MoveConstruct(Result& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << other;\n+        if (other) this->MoveValue(other); else this->Info().failure = std::move(other.m_info->failure);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.\n+    template <typename... Args>\n+    Result(Args&&... args)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+    Result(Result&& other) { MoveConstruct(other); }\n+    Result& operator=(Result&& other) LIFETIMEBOUND\n     {\n-        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n+        MoveConstruct(other);\n+        return *this;\n     }\n-    explicit operator bool() const noexcept { return has_value(); }\n-    const T* operator->() const LIFETIMEBOUND { return &value(); }\n-    const T& operator*() const LIFETIMEBOUND { return value(); }\n-    T* operator->() LIFETIMEBOUND { return &value(); }\n-    T& operator*() LIFETIMEBOUND { return value(); }\n+    ~Result() { if (*this) this->DestroyValue(); }\n };\n \n-template <typename T>\n-bilingual_str ErrorString(const Result<T>& result)\n-{\n-    return result ? bilingual_str{} : std::get<0>(result.m_variant);\n-}\n+//! Join error and warning messages in a space separated string. This is\n+//! intended for simple applications where there's probably only one error or\n+//! warning message to report, but multiple messages should not be lost if they\n+//! are present. More complicated applications should use GetErrors() and\n+//! GetWarning() methods directly.\n+template <typename T, typename F>\n+bilingual_str ErrorString(const Result<T, F>& result) { return detail::JoinMessages(result.GetErrors(), result.GetWarnings()); }",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 256,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "834857e56b8de0bfabee7315622c0211b4a48746",
      "in_reply_to_id": 959440278,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r959440278\r\n\r\n> Since the `friend` declaration is gone, I think this should be `inline`?\r\n\r\nYes, makes sense to be inline.\r\n\r\n",
      "created_at": "2022-09-01T14:06:34Z",
      "updated_at": "2022-09-01T15:21:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r960701013",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/960701013"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 351,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/960702129",
      "pull_request_review_id": 1093461843,
      "id": 960702129,
      "node_id": "PRRC_kwDOABII5845Qyax",
      "diff_hunk": "@@ -8,16 +8,129 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 23,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950223870,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r959467658\r\n\r\n> Maybe I'm confused, but I don't think I agree. Since the optional allocation of an `ErrorInfo` is a result of how `Info()` is implemented, not of how the `ErrorInfo` struct is defined - isn't that where it should be documented?\r\n\r\nI'm only pushing back against removing this comment here. I'm happy to add more documentation anywhere would would like.\r\n\r\nI think the answer to your question is no, because this isn't a general purpose API. This is a custom, private struct that is never exposed externally and exists for one purpose. The comment is describing what the purpose is. If I were reading this code and saw this struct, I would be wondering why there is such a heavyweight struct being used in a lightweight result type, why error information is segregated from normal result information, and why a separate struct definition is needed at all instead using normal class members. This comment explains what the purpose of the struct is, why it exists and how it is used, and I think is appropriate documentation for an single-purpose piece of a larger implementation.",
      "created_at": "2022-09-01T14:07:34Z",
      "updated_at": "2022-09-01T15:21:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r960702129",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/960702129"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/965007804",
      "pull_request_review_id": 1099419063,
      "id": 965007804,
      "node_id": "PRRC_kwDOABII5845hNm8",
      "diff_hunk": "@@ -8,16 +8,149 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper function to join messages in space separated string.\n+bilingual_str JoinMessages(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);\n+\n+//! Helper function to move messages from one vector to another.\n+void MoveMessages(std::vector<bilingual_str>& src, std::vector<bilingual_str>& dest);\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same_v<F, void>, std::monostate, F>> failure{};\n+    std::vector<bilingual_str> errors{};\n+    std::vector<bilingual_str> warnings{};\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    ErrorInfo<F>& Info() LIFETIMEBOUND\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        return *m_info;\n+    }\n+\n+    //! Value accessors that do nothing this because class has value type T=void.",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 50,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "c14e904f66505b3e89ca1138c8d2fa4e3d0916d0",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: typo\r\n```suggestion\r\n    //! Value accessors that do nothing because this class has value type T=void.\r\n```",
      "created_at": "2022-09-07T15:42:05Z",
      "updated_at": "2022-09-07T16:40:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r965007804",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/965007804"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968378495",
      "pull_request_review_id": 1103995676,
      "id": 968378495,
      "node_id": "PRRC_kwDOABII5845uEh_",
      "diff_hunk": "@@ -8,16 +8,102 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Error information only allocated on failure.\n+template <typename F>\n+struct ErrorInfo {\n+    std::conditional_t<std::is_same_v<F, void>, std::monostate, F> failure;\n+    bilingual_str error;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n \n+    //! Value accessors that do nothing this because class has value type T=void.\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    //! Success check.\n+    explicit operator bool() const { return !m_info; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same_v<_F, void>, const _F&> GetFailure() const LIFETIMEBOUND { assert(!*this); return m_info->failure; }",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 46,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "3507da864a1dd7be1bc72ada26d830a4da0c37ae",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in https://github.com/bitcoin/bitcoin/commit/3507da864a1dd7be1bc72ada26d830a4da0c37ae:\r\n\r\nI think in C++17 you can remove all of the template and enable_if_t stuff and just write `const auto& GetFailure() const` for the return type.",
      "created_at": "2022-09-12T12:51:18Z",
      "updated_at": "2022-09-12T15:36:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r968378495",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968378495"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968432479",
      "pull_request_review_id": 1103995676,
      "id": 968432479,
      "node_id": "PRRC_kwDOABII5845uRtf",
      "diff_hunk": "@@ -154,26 +219,26 @@ class Result : public detail::ResultBase<T, F>\n     template <typename... Args>\n     Result(Args&&... args)\n     {\n-        Construct(std::forward<Args>(args)...);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n     template<typename OT, typename OF>\n     Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n     Result& operator=(Result&& other) LIFETIMEBOUND\n     {\n-        if (*this) this->DestroyValue(); else this->m_info.reset();\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n         MoveConstruct(other);\n         return *this;\n     }\n     ~Result() { if (*this) this->DestroyValue(); }\n-\n-    inline friend bilingual_str _ErrorString(const Result& result)\n-    {\n-        return result ? bilingual_str{} : result.m_info->error;\n-    }\n };\n \n-template<typename T, typename F>\n-inline bilingual_str ErrorString(const Result<T, F>& result) { return _ErrorString(result); }\n+//! Join error and warning messages in a space separated string. This is\n+//! intended for simple applications where there's probably only one error or\n+//! warning message to report, but multiple messages should not be lost if they\n+//! are present. More complicated applications should use GetErrors() and\n+//! GetWarning() methods directly.\n+template <typename T, typename F>\n+inline bilingual_str ErrorString(const Result<T, F>& result) { return detail::JoinMessages(result.GetErrors(), result.GetWarnings()); }",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 180,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "c14e904f66505b3e89ca1138c8d2fa4e3d0916d0",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in c14e904f66505b3e89ca1138c8d2fa4e3d0916d0:\r\n\r\nCan remove `inline`, as all `template` are `inline` by definition.",
      "created_at": "2022-09-12T13:38:07Z",
      "updated_at": "2022-09-12T15:36:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r968432479",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968432479"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 241,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968475794",
      "pull_request_review_id": 1103995676,
      "id": 968475794,
      "node_id": "PRRC_kwDOABII5845ucSS",
      "diff_hunk": "@@ -8,16 +8,102 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Error information only allocated on failure.\n+template <typename F>\n+struct ErrorInfo {\n+    std::conditional_t<std::is_same_v<F, void>, std::monostate, F> failure;\n+    bilingual_str error;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n \n+    //! Value accessors that do nothing this because class has value type T=void.\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    //! Success check.\n+    explicit operator bool() const { return !m_info; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same_v<_F, void>, const _F&> GetFailure() const LIFETIMEBOUND { assert(!*this); return m_info->failure; }\n+};\n+\n+//! Result base class for T value type. Holds value and provides accessor methods.\n+template <typename T, typename F>\n+class ResultBase : public ResultBase<void, F>\n+{\n+protected:\n+    //! Result success value. Uses anonymous union so success value is never\n+    //! constructed in failure case.\n+    union { T m_value; };\n+\n+    template <typename... Args>\n+    void ConstructValue(Args&&... args) { new (&m_value) T{std::forward<Args>(args)...}; }\n+    template <typename O>\n+    void MoveValue(O& other) { new (&m_value) T{std::move(other.m_value)}; }\n+    void DestroyValue() { m_value.~T(); }\n+\n+    ResultBase() {}\n+    ~ResultBase() {}",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 65,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "3507da864a1dd7be1bc72ada26d830a4da0c37ae",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in 3507da864a1dd7be1bc72ada26d830a4da0c37ae:\r\n\r\nMaybe add a comment to explain those a bit more? While the `ResultBase()` constructor leaves the object uninitialized, the `Result` constructor guarantees that the object is either filled with a value or an error.",
      "created_at": "2022-09-12T14:14:31Z",
      "updated_at": "2022-09-12T15:36:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r968475794",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968475794"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": 71,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 72,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968480620",
      "pull_request_review_id": 1103995676,
      "id": 968480620,
      "node_id": "PRRC_kwDOABII5845udds",
      "diff_hunk": "@@ -31,54 +117,63 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+//!\n+//! Most code does not need different error-handling behavior for different\n+//! types of errors, and can suffice just using the type `T` success value on\n+//! success, and descriptive error strings when there's a failure. But\n+//! applications that do need more complicated error-handling behavior can\n+//! override the default `F = void` failure type and get failure values by\n+//! calling result.GetFailure().\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n-\n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+protected:\n+    template <typename... Args>\n+    void Construct(Args&&... args)\n+    {\n+        this->ConstructValue(std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename... Args>\n+    void Construct(Error error, Args&&... args)\n+    {\n+        this->m_info.reset(new detail::ErrorInfo<F>{.failure{std::forward<Args>(args)...}, .error{std::move(error.message)}});\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template<typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        if (other) this->MoveValue(other); else this->m_info.reset(new detail::ErrorInfo<F>{std::move(*other.m_info)});\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename, typename>\n+    friend class Result;\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 159,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "3507da864a1dd7be1bc72ada26d830a4da0c37ae",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in 3507da864a1dd7be1bc72ada26d830a4da0c37ae:\r\n\r\ndoxygen will attach the comment to the constructor. In any case, I think this can be removed since it is not adding any info that isn't already there.",
      "created_at": "2022-09-12T14:18:44Z",
      "updated_at": "2022-09-12T15:36:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r968480620",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968480620"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 153,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968486440",
      "pull_request_review_id": 1103995676,
      "id": 968486440,
      "node_id": "PRRC_kwDOABII5845ue4o",
      "diff_hunk": "@@ -8,16 +8,102 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Error information only allocated on failure.\n+template <typename F>\n+struct ErrorInfo {\n+    std::conditional_t<std::is_same_v<F, void>, std::monostate, F> failure;\n+    bilingual_str error;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n \n+    //! Value accessors that do nothing this because class has value type T=void.",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 34,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "3507da864a1dd7be1bc72ada26d830a4da0c37ae",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in 3507da864a1dd7be1bc72ada26d830a4da0c37ae:\r\n\r\nAre those really \"accessors\", not \"setters\"?",
      "created_at": "2022-09-12T14:23:40Z",
      "updated_at": "2022-09-12T15:36:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r968486440",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968486440"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968493416",
      "pull_request_review_id": 1103995676,
      "id": 968493416,
      "node_id": "PRRC_kwDOABII5845uglo",
      "diff_hunk": "@@ -8,16 +8,102 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n #include <variant>",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 8,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "3507da864a1dd7be1bc72ada26d830a4da0c37ae",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in 3507da864a1dd7be1bc72ada26d830a4da0c37ae:\r\n\r\nSeems overkill to include variant, when it could be replaced by copy-pasting the one line:\r\n\r\n```\r\nstruct MonoState{}; // Similar to std::monostate",
      "created_at": "2022-09-12T14:29:21Z",
      "updated_at": "2022-09-12T15:36:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r968493416",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968493416"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968815960",
      "pull_request_review_id": 1104682926,
      "id": 968815960,
      "node_id": "PRRC_kwDOABII5845vvVY",
      "diff_hunk": "@@ -8,16 +8,149 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper function to join messages in space separated string.\n+bilingual_str JoinMessages(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);\n+\n+//! Helper function to move messages from one vector to another.\n+void MoveMessages(std::vector<bilingual_str>& src, std::vector<bilingual_str>& dest);\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same_v<F, void>, std::monostate, F>> failure{};\n+    std::vector<bilingual_str> errors{};\n+    std::vector<bilingual_str> warnings{};\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    ErrorInfo<F>& Info() LIFETIMEBOUND\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        return *m_info;\n+    }\n+\n+    //! Value accessors that do nothing this because class has value type T=void.",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 50,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "c14e904f66505b3e89ca1138c8d2fa4e3d0916d0",
      "in_reply_to_id": 965007804,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r965007804\r\n\r\n> nit: typo\r\n\r\nThanks, fixed",
      "created_at": "2022-09-12T18:59:40Z",
      "updated_at": "2022-09-13T15:22:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r968815960",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968815960"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968819074",
      "pull_request_review_id": 1104682926,
      "id": 968819074,
      "node_id": "PRRC_kwDOABII5845vwGC",
      "diff_hunk": "@@ -8,16 +8,102 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Error information only allocated on failure.\n+template <typename F>\n+struct ErrorInfo {\n+    std::conditional_t<std::is_same_v<F, void>, std::monostate, F> failure;\n+    bilingual_str error;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n \n+    //! Value accessors that do nothing this because class has value type T=void.\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    //! Success check.\n+    explicit operator bool() const { return !m_info; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same_v<_F, void>, const _F&> GetFailure() const LIFETIMEBOUND { assert(!*this); return m_info->failure; }",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 46,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "3507da864a1dd7be1bc72ada26d830a4da0c37ae",
      "in_reply_to_id": 968378495,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r968378495\r\n\r\n> I think in C++17 you can remove all of the template and enable_if_t stuff and just write `const auto& GetFailure() const` for the return type.\r\n\r\nThanks, that is better. Simplified now.",
      "created_at": "2022-09-12T19:01:21Z",
      "updated_at": "2022-09-13T15:22:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r968819074",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968819074"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968821496",
      "pull_request_review_id": 1104682926,
      "id": 968821496,
      "node_id": "PRRC_kwDOABII5845vwr4",
      "diff_hunk": "@@ -154,26 +219,26 @@ class Result : public detail::ResultBase<T, F>\n     template <typename... Args>\n     Result(Args&&... args)\n     {\n-        Construct(std::forward<Args>(args)...);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n     template<typename OT, typename OF>\n     Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n     Result& operator=(Result&& other) LIFETIMEBOUND\n     {\n-        if (*this) this->DestroyValue(); else this->m_info.reset();\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n         MoveConstruct(other);\n         return *this;\n     }\n     ~Result() { if (*this) this->DestroyValue(); }\n-\n-    inline friend bilingual_str _ErrorString(const Result& result)\n-    {\n-        return result ? bilingual_str{} : result.m_info->error;\n-    }\n };\n \n-template<typename T, typename F>\n-inline bilingual_str ErrorString(const Result<T, F>& result) { return _ErrorString(result); }\n+//! Join error and warning messages in a space separated string. This is\n+//! intended for simple applications where there's probably only one error or\n+//! warning message to report, but multiple messages should not be lost if they\n+//! are present. More complicated applications should use GetErrors() and\n+//! GetWarning() methods directly.\n+template <typename T, typename F>\n+inline bilingual_str ErrorString(const Result<T, F>& result) { return detail::JoinMessages(result.GetErrors(), result.GetWarnings()); }",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 180,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "c14e904f66505b3e89ca1138c8d2fa4e3d0916d0",
      "in_reply_to_id": 968432479,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r968432479\r\n\r\n> Can remove `inline`, as all `template` are `inline` by definition.\r\n\r\nThanks, removed `inline`",
      "created_at": "2022-09-12T19:02:44Z",
      "updated_at": "2022-09-13T15:22:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r968821496",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968821496"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 241,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968822785",
      "pull_request_review_id": 1104682926,
      "id": 968822785,
      "node_id": "PRRC_kwDOABII5845vxAB",
      "diff_hunk": "@@ -8,16 +8,102 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Error information only allocated on failure.\n+template <typename F>\n+struct ErrorInfo {\n+    std::conditional_t<std::is_same_v<F, void>, std::monostate, F> failure;\n+    bilingual_str error;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n \n+    //! Value accessors that do nothing this because class has value type T=void.\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    //! Success check.\n+    explicit operator bool() const { return !m_info; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same_v<_F, void>, const _F&> GetFailure() const LIFETIMEBOUND { assert(!*this); return m_info->failure; }\n+};\n+\n+//! Result base class for T value type. Holds value and provides accessor methods.\n+template <typename T, typename F>\n+class ResultBase : public ResultBase<void, F>\n+{\n+protected:\n+    //! Result success value. Uses anonymous union so success value is never\n+    //! constructed in failure case.\n+    union { T m_value; };\n+\n+    template <typename... Args>\n+    void ConstructValue(Args&&... args) { new (&m_value) T{std::forward<Args>(args)...}; }\n+    template <typename O>\n+    void MoveValue(O& other) { new (&m_value) T{std::move(other.m_value)}; }\n+    void DestroyValue() { m_value.~T(); }\n+\n+    ResultBase() {}\n+    ~ResultBase() {}",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 65,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "3507da864a1dd7be1bc72ada26d830a4da0c37ae",
      "in_reply_to_id": 968475794,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r968475794\r\n\r\n> Maybe add a comment to explain those a bit more? While the `ResultBase()` constructor leaves the object uninitialized, the `Result` constructor guarantees that the object is either filled with a value or an error.\r\n\r\nSure, I moved the DestroyValue call to this `~ResultBase` destructor instead of the other `Result` constructor to make this more self contained and clear. Also added a comment explaining why the empty constructor is required. Hopefully these are improvements. Also happy to make other changes to clarify.\r\n",
      "created_at": "2022-09-12T19:03:27Z",
      "updated_at": "2022-09-13T15:22:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r968822785",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968822785"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": 71,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 72,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968824406",
      "pull_request_review_id": 1104682926,
      "id": 968824406,
      "node_id": "PRRC_kwDOABII5845vxZW",
      "diff_hunk": "@@ -31,54 +117,63 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+//!\n+//! Most code does not need different error-handling behavior for different\n+//! types of errors, and can suffice just using the type `T` success value on\n+//! success, and descriptive error strings when there's a failure. But\n+//! applications that do need more complicated error-handling behavior can\n+//! override the default `F = void` failure type and get failure values by\n+//! calling result.GetFailure().\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n-\n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+protected:\n+    template <typename... Args>\n+    void Construct(Args&&... args)\n+    {\n+        this->ConstructValue(std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename... Args>\n+    void Construct(Error error, Args&&... args)\n+    {\n+        this->m_info.reset(new detail::ErrorInfo<F>{.failure{std::forward<Args>(args)...}, .error{std::move(error.message)}});\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template<typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        if (other) this->MoveValue(other); else this->m_info.reset(new detail::ErrorInfo<F>{std::move(*other.m_info)});\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename, typename>\n+    friend class Result;\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 159,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "3507da864a1dd7be1bc72ada26d830a4da0c37ae",
      "in_reply_to_id": 968480620,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r968480620\r\n\r\n> nit in [3507da8](https://github.com/bitcoin/bitcoin/commit/3507da864a1dd7be1bc72ada26d830a4da0c37ae):\r\n> \r\n> doxygen will attach the comment to the constructor. In any case, I think this can be removed since it is not adding any info that isn't already there.\r\n\r\nThanks, dropped. This was used to group methods in an earlier version of PR that had more methods below.",
      "created_at": "2022-09-12T19:04:32Z",
      "updated_at": "2022-09-13T15:22:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r968824406",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968824406"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 153,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968825385",
      "pull_request_review_id": 1104682926,
      "id": 968825385,
      "node_id": "PRRC_kwDOABII5845vxop",
      "diff_hunk": "@@ -8,16 +8,102 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Error information only allocated on failure.\n+template <typename F>\n+struct ErrorInfo {\n+    std::conditional_t<std::is_same_v<F, void>, std::monostate, F> failure;\n+    bilingual_str error;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n \n+    //! Value accessors that do nothing this because class has value type T=void.",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 34,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "3507da864a1dd7be1bc72ada26d830a4da0c37ae",
      "in_reply_to_id": 968486440,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r968486440\r\n\r\n> nit in [3507da8](https://github.com/bitcoin/bitcoin/commit/3507da864a1dd7be1bc72ada26d830a4da0c37ae):\r\n> \r\n> Are those really \"accessors\", not \"setters\"?\r\n\r\nChanged to setters (I thought accessors was a general term for getters and setters)",
      "created_at": "2022-09-12T19:05:13Z",
      "updated_at": "2022-09-13T15:22:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r968825385",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968825385"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968826148",
      "pull_request_review_id": 1104682926,
      "id": 968826148,
      "node_id": "PRRC_kwDOABII5845vx0k",
      "diff_hunk": "@@ -8,16 +8,102 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n #include <variant>",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 8,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "3507da864a1dd7be1bc72ada26d830a4da0c37ae",
      "in_reply_to_id": 968493416,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r968493416\r\n\r\n> Seems overkill to include variant, when it could be replaced by copy-pasting the one line:\r\n\r\nThanks, dropped the dependency on variant",
      "created_at": "2022-09-12T19:05:49Z",
      "updated_at": "2022-09-13T15:22:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r968826148",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968826148"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/969906681",
      "pull_request_review_id": 1106198898,
      "id": 969906681,
      "node_id": "PRRC_kwDOABII5845z5n5",
      "diff_hunk": "@@ -8,16 +8,102 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Error information only allocated on failure.\n+template <typename F>\n+struct ErrorInfo {\n+    std::conditional_t<std::is_same_v<F, void>, std::monostate, F> failure;\n+    bilingual_str error;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n \n+    //! Value accessors that do nothing this because class has value type T=void.\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    //! Success check.\n+    explicit operator bool() const { return !m_info; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same_v<_F, void>, const _F&> GetFailure() const LIFETIMEBOUND { assert(!*this); return m_info->failure; }",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 46,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "3507da864a1dd7be1bc72ada26d830a4da0c37ae",
      "in_reply_to_id": 968378495,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Hmm, I meant `const auto&`, not `auto`, or is `auto` in this context magically the same as `const auto&`?",
      "created_at": "2022-09-13T17:33:07Z",
      "updated_at": "2022-09-13T17:33:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r969906681",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/969906681"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/969983461",
      "pull_request_review_id": 1106306853,
      "id": 969983461,
      "node_id": "PRRC_kwDOABII58450MXl",
      "diff_hunk": "@@ -8,16 +8,102 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Error information only allocated on failure.\n+template <typename F>\n+struct ErrorInfo {\n+    std::conditional_t<std::is_same_v<F, void>, std::monostate, F> failure;\n+    bilingual_str error;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n \n+    //! Value accessors that do nothing this because class has value type T=void.\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    //! Success check.\n+    explicit operator bool() const { return !m_info; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same_v<_F, void>, const _F&> GetFailure() const LIFETIMEBOUND { assert(!*this); return m_info->failure; }",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 46,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "3507da864a1dd7be1bc72ada26d830a4da0c37ae",
      "in_reply_to_id": 968378495,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r969906681\r\n\r\n> Hmm, I meant `const auto&`, not `auto`, or is `auto` in this context magically the same as `const auto&`?\r\n\r\nNo, I just messed up and unintentionally did a copy. Fixed this and added tests to make sure GetFailure() does not copy.",
      "created_at": "2022-09-13T18:56:49Z",
      "updated_at": "2022-09-13T19:17:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r969983461",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/969983461"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/970561659",
      "pull_request_review_id": 1107131542,
      "id": 970561659,
      "node_id": "PRRC_kwDOABII58452Zh7",
      "diff_hunk": "@@ -155,25 +194,48 @@ class Result : public detail::ResultBase<T, F>\n     template <typename... Args>\n     Result(Args&&... args)\n     {\n-        Construct(std::forward<Args>(args)...);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n     template<typename OT, typename OF>\n     Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n     Result& operator=(Result&& other) LIFETIMEBOUND\n     {\n-        if (*this) this->DestroyValue(); else this->m_info.reset();\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n         MoveConstruct(other);\n         return *this;\n     }\n \n-    inline friend bilingual_str _ErrorString(const Result& result)\n+    void AddError(bilingual_str error)\n     {\n-        return result ? bilingual_str{} : result.m_info->error;\n+        if (!error.empty()) this->Info().errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (!warning.empty()) this->Info().warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Operator moving warning and error messages from this result object to\n+    //! another one. Only moves message strings, does not change success or\n+    //! failure values of either Result object.",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 154,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "52a4e50fb4b1171ee0f6814b0a50bc70cdd77134",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "52a4e50fb4b1171ee0f6814b0a50bc70cdd77134: I don't like that this takes over error strings, but leaves the value and failure untouched. It seems fine to have a result and warnings, but having a result and also an error at the same time seems odd.\r\n\r\nSame with operator=. I think this is the first time I've seen that after calling `=`, state is preserved from before `=` was called.",
      "created_at": "2022-09-14T09:34:25Z",
      "updated_at": "2022-09-14T09:34:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r970561659",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/970561659"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 271,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/971273150",
      "pull_request_review_id": 1108175113,
      "id": 971273150,
      "node_id": "PRRC_kwDOABII58455HO-",
      "diff_hunk": "@@ -155,25 +194,48 @@ class Result : public detail::ResultBase<T, F>\n     template <typename... Args>\n     Result(Args&&... args)\n     {\n-        Construct(std::forward<Args>(args)...);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n     template<typename OT, typename OF>\n     Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n     Result& operator=(Result&& other) LIFETIMEBOUND\n     {\n-        if (*this) this->DestroyValue(); else this->m_info.reset();\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n         MoveConstruct(other);\n         return *this;\n     }\n \n-    inline friend bilingual_str _ErrorString(const Result& result)\n+    void AddError(bilingual_str error)\n     {\n-        return result ? bilingual_str{} : result.m_info->error;\n+        if (!error.empty()) this->Info().errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (!warning.empty()) this->Info().warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Operator moving warning and error messages from this result object to\n+    //! another one. Only moves message strings, does not change success or\n+    //! failure values of either Result object.",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 154,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "52a4e50fb4b1171ee0f6814b0a50bc70cdd77134",
      "in_reply_to_id": 970561659,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r970561659\r\n\r\n> [52a4e50](https://github.com/bitcoin/bitcoin/commit/52a4e50fb4b1171ee0f6814b0a50bc70cdd77134): I don't like that this takes over error strings, but leaves the value and failure untouched. It seems fine to have a result and warnings, but having a result and also an error at the same time seems odd.\r\n\r\nAgree having both a result value and an error message should be avoided. Also having neither a result value nor an error message should be avoided. But there are tradeoffs around where and how strictly you want to enforce these things. The main thing currently enforcing value/error consistency is having a constructor that sets error messages and failure values at the same time and does not allow setting a result value, and a constructor that only sets a success value and does not allow setting an error message.\r\n\r\nBut this leaves open the question of what helpers functions like `operator>>` should do when they combine multiple result values that have already been constructed.\r\n\r\nThe use-case for `operator>>` is when you have an outer function returning `Result<T, F>` calling inner functions returning `Result<T1, F1>`, and `Result<T2, F2>`, etc. Examples would be [`LoadWalletInternal`](https://github.com/ryanofsky/bitcoin/blob/4e533926fe5549aafb70caf94718447ea497c84c/src/wallet/wallet.cpp#L229), [`CreateWallet`](https://github.com/ryanofsky/bitcoin/blob/4e533926fe5549aafb70caf94718447ea497c84c/src/wallet/wallet.cpp#L298), and [`DoMigration`](https://github.com/ryanofsky/bitcoin/blob/4e533926fe5549aafb70caf94718447ea497c84c/src/wallet/wallet.cpp#L3862) from #25722. The outer function can handle failures from inner functions it calls any way it wants: passing failure values up to its caller, translating failure values, ignoring failures, retrying after failures, falling back to an alternate approaches, etc. It sets success and failure values directly, and it can use `operator>>` to collect error and warning messages separately and pass them along. I don't think `operator>>` should be involved in success and failure value handling. I think it would be bad if `operator>>` discarded error messages, or it it threw runtime exceptions, instead of just passing messages on to ultimately get displayed or logged.\r\n\r\nIn C++ generally `operator>>` is used for things as varied as bit shifting and stream I/O and can be interpreted as \"move data from this place to another place\" so I think it reasonable that this `operator>>` just moves error and warning messages from one `Result` object to another, as long as behavior is clearly documented.\r\n\r\n> Same with operator=. I think this is the first time I've seen that after calling `=`, state is preserved from before `=` was called.\r\n\r\nYes it is true that assigning to an existing result does not erase warning and errors messages already accumulated in the result. It only sets the success or failure value and appends new warning and error messages to existing ones.\r\n\r\nI think this this behavior is safe and useful. Setting a value should not automatically erase warning and error messages that are meant to be displayed or logged. But if this behavior is too surprising for an `operator=` method, we don't actually need to make `Result` assignable, and could rename `operator=()` to `Set()` or `SetValue()`. It looks like even after #25722 there are only 3 `operator=` calls in the codebase outside of tests, so this would be an easy change.",
      "created_at": "2022-09-14T20:37:54Z",
      "updated_at": "2022-09-14T20:47:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r971273150",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/971273150"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 271,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/971650998",
      "pull_request_review_id": 1108707029,
      "id": 971650998,
      "node_id": "PRRC_kwDOABII58456je2",
      "diff_hunk": "@@ -155,25 +194,48 @@ class Result : public detail::ResultBase<T, F>\n     template <typename... Args>\n     Result(Args&&... args)\n     {\n-        Construct(std::forward<Args>(args)...);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n     template<typename OT, typename OF>\n     Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n     Result& operator=(Result&& other) LIFETIMEBOUND\n     {\n-        if (*this) this->DestroyValue(); else this->m_info.reset();\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n         MoveConstruct(other);\n         return *this;\n     }\n \n-    inline friend bilingual_str _ErrorString(const Result& result)\n+    void AddError(bilingual_str error)\n     {\n-        return result ? bilingual_str{} : result.m_info->error;\n+        if (!error.empty()) this->Info().errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (!warning.empty()) this->Info().warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Operator moving warning and error messages from this result object to\n+    //! another one. Only moves message strings, does not change success or\n+    //! failure values of either Result object.",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 154,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "52a4e50fb4b1171ee0f6814b0a50bc70cdd77134",
      "in_reply_to_id": 970561659,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Also having neither a result value nor an error message should be avoided.\r\n\r\nWell, this is already impossible for the reasons you gave. (Edit: When calling only the constructors)\r\n\r\n> Agree having both a result value and an error message should be avoided.\r\n\r\nThen, why not make it impossible? If there is an outer function returning `Result<T, F>` that wants to combine `Result<T1, F1>` and `Result<T2, F2>`, then it seems better if it explicitly takes (moves) the result T1/F1 out and translates it into T/F. For example, if it passes up a failure value, it seems best to just create a fresh Result (of the outer type) with the failure and return that. (Same if it translates failure values). If it ignores failures, it would be good to translate them to warnings first and not blindly take them over as errors with the `>>` operator. (Same if it retries or falls back).\r\n\r\n> I think this this behavior is safe and useful.\r\n\r\nWhy couldn't the same be achieved by explicitly constructing a new Result with either an error or a value?",
      "created_at": "2022-09-15T07:53:38Z",
      "updated_at": "2022-09-15T15:37:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r971650998",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/971650998"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 271,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/971748931",
      "pull_request_review_id": 1108846917,
      "id": 971748931,
      "node_id": "PRRC_kwDOABII584567ZD",
      "diff_hunk": "@@ -155,25 +194,48 @@ class Result : public detail::ResultBase<T, F>\n     template <typename... Args>\n     Result(Args&&... args)\n     {\n-        Construct(std::forward<Args>(args)...);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n     template<typename OT, typename OF>\n     Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n     Result& operator=(Result&& other) LIFETIMEBOUND\n     {\n-        if (*this) this->DestroyValue(); else this->m_info.reset();\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n         MoveConstruct(other);\n         return *this;\n     }\n \n-    inline friend bilingual_str _ErrorString(const Result& result)\n+    void AddError(bilingual_str error)\n     {\n-        return result ? bilingual_str{} : result.m_info->error;\n+        if (!error.empty()) this->Info().errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (!warning.empty()) this->Info().warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Operator moving warning and error messages from this result object to\n+    //! another one. Only moves message strings, does not change success or\n+    //! failure values of either Result object.",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 154,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "52a4e50fb4b1171ee0f6814b0a50bc70cdd77134",
      "in_reply_to_id": 970561659,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": ">> Also having neither a result value nor an error message should be avoided.\r\n\r\n> Well, this is already impossible for the reasons you gave.\r\n\r\n\"Should be avoided\" means that users should avoid it, and the implementation makes it easy to avoid by default. The reasons I gave were reasons why a function combining multiple result values needs to either (1) allow result values and error messages to exist at the same time or (2) discard error messages or result values or (3) throw exceptions. And I believe the best choice for `operator>>` is (1), just to be a plain message mover that moves message strings and leaves result values alone. I linked to use-cases showing how this works in practice.\r\n\r\n> > Agree having both a result value and an error message should be avoided.\r\n\r\n> Then, why not make it impossible? If there is an outer function returning `Result<T, F>` that wants to combine `Result<T1, F1>` and `Result<T2, F2>`, then it seems better if it explicitly takes (moves) the result T1/F1 out and translates it into T/F. For example, if it passes up a failure value, it seems best to just create a fresh Result (of the outer type) with the failure and return that.\r\n\r\nThis is actually what the implementation does. But if the outer function returns success value, and there are error messages, I don't think it is good default behavior to throw away the error messages or raise an exception. I think the best default behavior is to keep error messages so they can be displayed or logged.\r\n\r\n> (Same if it translates failure values). If it ignores failures, it would be good to translate them to warnings first and not blindly take them over as errors with the `>>` operator. (Same if it retries or falls back).\r\n\r\nSo change you are asking for there is basically:\r\n\r\n```diff\r\n--- a/src/util/result.h\r\n+++ b/src/util/result.h\r\n@@ -222,7 +222,7 @@ public:\r\n     Result&& operator>>(O&& other LIFETIMEBOUND) &&\r\n     {\r\n         if (this->m_info) {\r\n-            if (!this->m_info->errors.empty()) detail::MoveMessages(this->m_info->errors, other.Info().errors);\r\n+            if (!this->m_info->errors.empty()) detail::MoveMessages(this->m_info->errors, other ? other.Info().warnings : other.Info().errors);\r\n             if (!this->m_info->warnings.empty()) detail::MoveMessages(this->m_info->warnings, other.Info().warnings);\r\n         }\r\n         return std::move(*this);\r\n```\r\n\r\nI wouldn't object to it, but it just seems more invasive and doesn't offer practical benefits.\r\n\r\n> > I think this this behavior is safe and useful.\r\n\r\n> Why couldn't the same be achieved by explicitly constructing a new Result with either an error or a value?\r\n\r\nI think\r\n\r\n```c++\r\nWarnFn1() >> result;\r\nWarnFn2() >> result;\r\nresult = FailFn(...);\r\nreturn result;\r\n```\r\n\r\nor\r\n\r\n\r\n```c++\r\nWarnFn1() >> result;\r\nWarnFn2() >> result;\r\nresult.Set(FailFn(...));\r\nreturn result;\r\n``` \r\n\r\nis cleaner than\r\n\r\n```c++\r\nWarnFn1() >> result;\r\nWarnFn2() >> result;\r\nauto result2 = FailFn(...);\r\nstd::move(result) >> result2;\r\nreturn result2;\r\n```\r\n\r\nbecause it doesn't require introducing multiple result variables. If you are trying to get rid of both `operator=` and `operator>>`, I believe `operator=` or `Set` is also better than:\r\n\r\n```c++\r\nauto result2 = FailFn(...);\r\nreturn result2 ? Result<int, FnError>(std::move(result), result2.value()) : Result<int, FnError>(std::move(result), Error{}, resul2t.GetFailure());\r\n```\r\n\r\nI'm happy to rename `operator=` to `Set` if you think `operator=` is misleading. But if you look at the places where these functions are used, it is easier to see why they are useful. Conversely, if you think there is a footgun here, it would be helpful to see an example of the footgun.",
      "created_at": "2022-09-15T09:24:13Z",
      "updated_at": "2022-09-15T09:24:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r971748931",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/971748931"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 271,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/971782272",
      "pull_request_review_id": 1108893852,
      "id": 971782272,
      "node_id": "PRRC_kwDOABII58457DiA",
      "diff_hunk": "@@ -155,25 +194,48 @@ class Result : public detail::ResultBase<T, F>\n     template <typename... Args>\n     Result(Args&&... args)\n     {\n-        Construct(std::forward<Args>(args)...);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n     template<typename OT, typename OF>\n     Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n     Result& operator=(Result&& other) LIFETIMEBOUND\n     {\n-        if (*this) this->DestroyValue(); else this->m_info.reset();\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n         MoveConstruct(other);\n         return *this;\n     }\n \n-    inline friend bilingual_str _ErrorString(const Result& result)\n+    void AddError(bilingual_str error)\n     {\n-        return result ? bilingual_str{} : result.m_info->error;\n+        if (!error.empty()) this->Info().errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (!warning.empty()) this->Info().warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Operator moving warning and error messages from this result object to\n+    //! another one. Only moves message strings, does not change success or\n+    //! failure values of either Result object.",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 154,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "52a4e50fb4b1171ee0f6814b0a50bc70cdd77134",
      "in_reply_to_id": 970561659,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> But if you look at the places where these functions are used, it is easier to see why they are useful.\r\n\r\nI linked to some places where `operator>>` is used already: [`LoadWalletInternal`](https://github.com/ryanofsky/bitcoin/blob/4e533926fe5549aafb70caf94718447ea497c84c/src/wallet/wallet.cpp#L229-L245), [`CreateWallet`](https://github.com/ryanofsky/bitcoin/blob/4e533926fe5549aafb70caf94718447ea497c84c/src/wallet/wallet.cpp#L298-L346), and [`DoMigration`](https://github.com/ryanofsky/bitcoin/blob/4e533926fe5549aafb70caf94718447ea497c84c/src/wallet/wallet.cpp#L3862-L3940) from #25722\r\n\r\nFor `operator=` (again happy to rename this to `Set`) examples are: [`AddressTableModel::addRow`](https://github.com/ryanofsky/bitcoin/blob/4e533926fe5549aafb70caf94718447ea497c84c/src/qt/addresstablemodel.cpp#L381), [`SQLiteDatabase::Verify`](https://github.com/ryanofsky/bitcoin/blob/4e533926fe5549aafb70caf94718447ea497c84c/src/wallet/sqlite.cpp#L172), [`AvailableCoinsTestingSetup`](https://github.com/ryanofsky/bitcoin/blob/4e533926fe5549aafb70caf94718447ea497c84c/src/wallet/test/availablecoins_tests.cpp#L78-L99), [`FuzzedWallet::GetScriptPubKey`](https://github.com/ryanofsky/bitcoin/blob/4e533926fe5549aafb70caf94718447ea497c84c/src/wallet/test/fuzz/notifications.cpp#L72-L74)",
      "created_at": "2022-09-15T09:54:02Z",
      "updated_at": "2022-09-15T15:26:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r971782272",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/971782272"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 271,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/972138482",
      "pull_request_review_id": 1109415289,
      "id": 972138482,
      "node_id": "PRRC_kwDOABII58458afy",
      "diff_hunk": "@@ -155,25 +194,48 @@ class Result : public detail::ResultBase<T, F>\n     template <typename... Args>\n     Result(Args&&... args)\n     {\n-        Construct(std::forward<Args>(args)...);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n     template<typename OT, typename OF>\n     Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n     Result& operator=(Result&& other) LIFETIMEBOUND\n     {\n-        if (*this) this->DestroyValue(); else this->m_info.reset();\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n         MoveConstruct(other);\n         return *this;\n     }\n \n-    inline friend bilingual_str _ErrorString(const Result& result)\n+    void AddError(bilingual_str error)\n     {\n-        return result ? bilingual_str{} : result.m_info->error;\n+        if (!error.empty()) this->Info().errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (!warning.empty()) this->Info().warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Operator moving warning and error messages from this result object to\n+    //! another one. Only moves message strings, does not change success or\n+    //! failure values of either Result object.",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 154,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "52a4e50fb4b1171ee0f6814b0a50bc70cdd77134",
      "in_reply_to_id": 970561659,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Went ahead and renamed `operator=` to `Set` for now. Seems like a good way to avoid some confusion.",
      "created_at": "2022-09-15T15:30:36Z",
      "updated_at": "2022-09-15T15:31:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r972138482",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/972138482"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 271,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1104282294",
      "pull_request_review_id": 1295372964,
      "id": 1104282294,
      "node_id": "PRRC_kwDOABII585B0gK2",
      "diff_hunk": "@@ -31,54 +140,110 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+//!\n+//! Most code does not need different error-handling behavior for different\n+//! types of errors, and can suffice just using the type `T` success value on\n+//! success, and descriptive error strings when there's a failure. But\n+//! applications that do need more complicated error-handling behavior can\n+//! override the default `F = void` failure type and get failure values by",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 140,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "eb50fcd6859d1730663159995e8477f6d892e7f4",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Allowing for a `void` failure type seems to make this incompatible to be switched out to `std::expected` https://en.cppreference.com/w/cpp/utility/expected ?\r\n\r\nWith multiple warning and error messages this may already be incompatible, though?",
      "created_at": "2023-02-13T10:42:23Z",
      "updated_at": "2023-02-13T10:42:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1104282294",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1104282294"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 159,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1104628124",
      "pull_request_review_id": 1295884713,
      "id": 1104628124,
      "node_id": "PRRC_kwDOABII585B10mc",
      "diff_hunk": "@@ -31,54 +140,110 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+//!\n+//! Most code does not need different error-handling behavior for different\n+//! types of errors, and can suffice just using the type `T` success value on\n+//! success, and descriptive error strings when there's a failure. But\n+//! applications that do need more complicated error-handling behavior can\n+//! override the default `F = void` failure type and get failure values by",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 140,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "eb50fcd6859d1730663159995e8477f6d892e7f4",
      "in_reply_to_id": 1104282294,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1104282294\r\n\r\n> Allowing for a `void` failure type seems to make this incompatible to be switched out to `std::expected` https://en.cppreference.com/w/cpp/utility/expected ?\r\n> \r\n> With multiple warning and error messages this may already be incompatible, though?\r\n\r\nYes, if you are thinking that `util::Result` could wrap `std::expected`, that would be probably be awkward and not worth it.\r\n\r\nBut I don't think there is a conflict because the two classes are mostly doing different things. The `util::Result` class is mostly providing error-reporting functionality (passing error and warning strings up to the user). The `std::expected` class is only providing error-handling functionality (passing failure and success values between functions). Here is how I would choose the between the two classes:\r\n\r\n- If your function never fails, it should just return success value directly.\r\n- If your function can fail, but doesn't provide any error strings or specific failure information, it should return `std::optional`.\r\n- If your function can fail, and provides failure information but not error strings, it should return `std::expected`.\r\n- If your function can fail, and generates error or warning strings it should return `util::Result`.\r\n\r\nWe have a lot of functions that generate error strings as you can see by all the code using `util::Error` and `util::Result` presently, and in more code that is converted to use `util::Result` in this PR and #25722. After `std::expected` is available, most of these functions still be better off using `util::Result` instead of `std::expected` so they are able to pass back error strings in a uniform way.\r\n\r\nBut when `std::expected` is available, we may want to tweak the `util::Result` class to make it easier to switch between `std::expected` and `util::Result` with minimal code changes. For example, the `util::Result` already has a `value_or` method to be compatible with `std::optional`. It could also have `and_then` and `or_else` methods to be compatible with `std::expected`.",
      "created_at": "2023-02-13T15:27:49Z",
      "updated_at": "2023-02-13T15:28:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1104628124",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1104628124"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 159,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1234264247",
      "pull_request_review_id": 1486552709,
      "id": 1234264247,
      "node_id": "PRRC_kwDOABII585JkWC3",
      "diff_hunk": "@@ -45,42 +74,122 @@ util::Result<bilingual_str> StrFn(bilingual_str s, bool success)\n     return util::Error{strprintf(Untranslated(\"str %s error.\"), s.original)};\n }\n \n-util::Result<NoCopy> NoCopyFn(int i, bool success)\n+util::Result<NoCopy, NoCopy> NoCopyFn(int i, bool success)\n {\n     if (success) return {i};\n-    return util::Error{Untranslated(strprintf(\"nocopy %i error.\", i))};\n+    return {util::Error{Untranslated(strprintf(\"nocopy %i error.\", i))}, i};\n }\n \n-template <typename T>\n-void ExpectResult(const util::Result<T>& result, bool success, const bilingual_str& str)\n+util::Result<NoCopyNoMove, NoCopyNoMove> NoCopyNoMoveFn(int i, bool success)\n+{\n+    if (success) return {i};\n+    return {util::Error{Untranslated(strprintf(\"nocopynomove %i error.\", i))}, i};\n+}\n+\n+enum FnError { ERR1, ERR2 };\n+\n+util::Result<int, FnError> IntFailFn(int i, bool success)\n+{\n+    if (success) return i;\n+    return {util::Error{Untranslated(strprintf(\"int %i error.\", i))}, i % 2 ? ERR1 : ERR2};\n+}\n+\n+util::Result<NoCopyNoMove, FnError> EnumFailFn(FnError ret)\n+{\n+    return {util::Error{Untranslated(\"enum fail.\")}, ret};\n+}\n+\n+util::Result<void> WarnFn()\n+{\n+    return {util::Warning{Untranslated(\"warn.\")}};\n+}\n+\n+util::Result<int> MultiWarnFn(int ret)\n+{\n+    util::Result<void> result;\n+    for (int i = 0; i < ret; ++i) {\n+        result.AddWarning(strprintf(Untranslated(\"warn %i.\"), i));\n+    }\n+    return {std::move(result), ret};\n+}\n+\n+util::Result<void, int> ChainedFailFn(FnError arg, int ret)\n+{\n+    return {util::Error{Untranslated(\"chained fail.\")}, EnumFailFn(arg), WarnFn(), ret};\n+}\n+\n+util::Result<int, FnError> AccumulateFn(bool success)\n+{\n+    util::Result<int, FnError> result;\n+    util::Result<int> x = MultiWarnFn(1) >> result;\n+    BOOST_REQUIRE(x);\n+    util::Result<int> y = MultiWarnFn(2) >> result;\n+    BOOST_REQUIRE(y);\n+    result.Set(IntFailFn(*x + *y, success));\n+    return result;\n+}\n+\n+util::Result<int, int> TruthyFalsyFn(int i, bool success)\n+{\n+    if (success) return i;\n+    return {util::Error{Untranslated(strprintf(\"failure value %i.\", i))}, i};\n+}\n+",
      "path": "src/test/result_tests.cpp",
      "position": 136,
      "original_position": 111,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "28a954c7034077ac3a45083dd5e2b5cdb4d4cdde",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Can you add an example for when the Result error type in a chain of function calls remains the same, but the value type changes? Is there a better way to do this conversion than manually constructing the result again (like below)?\r\n\r\n```suggestion\r\nutil::Result<std::string, FnError> CastFailFn() {\r\n    auto res = IntFailFn(1, false);\r\n    return {util::Error{ErrorString(res)}, res.GetFailure()};\r\n}\r\n```\r\n\r\n",
      "created_at": "2023-06-19T16:28:24Z",
      "updated_at": "2023-06-19T16:28:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1234264247",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1234264247"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 159,
      "original_line": 159,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1270866000",
      "pull_request_review_id": 1541470201,
      "id": 1270866000,
      "node_id": "PRRC_kwDOABII585Lv-BQ",
      "diff_hunk": "@@ -45,42 +74,122 @@ util::Result<bilingual_str> StrFn(bilingual_str s, bool success)\n     return util::Error{strprintf(Untranslated(\"str %s error.\"), s.original)};\n }\n \n-util::Result<NoCopy> NoCopyFn(int i, bool success)\n+util::Result<NoCopy, NoCopy> NoCopyFn(int i, bool success)\n {\n     if (success) return {i};\n-    return util::Error{Untranslated(strprintf(\"nocopy %i error.\", i))};\n+    return {util::Error{Untranslated(strprintf(\"nocopy %i error.\", i))}, i};\n }\n \n-template <typename T>\n-void ExpectResult(const util::Result<T>& result, bool success, const bilingual_str& str)\n+util::Result<NoCopyNoMove, NoCopyNoMove> NoCopyNoMoveFn(int i, bool success)\n+{\n+    if (success) return {i};\n+    return {util::Error{Untranslated(strprintf(\"nocopynomove %i error.\", i))}, i};\n+}\n+\n+enum FnError { ERR1, ERR2 };\n+\n+util::Result<int, FnError> IntFailFn(int i, bool success)\n+{\n+    if (success) return i;\n+    return {util::Error{Untranslated(strprintf(\"int %i error.\", i))}, i % 2 ? ERR1 : ERR2};\n+}\n+\n+util::Result<NoCopyNoMove, FnError> EnumFailFn(FnError ret)\n+{\n+    return {util::Error{Untranslated(\"enum fail.\")}, ret};\n+}\n+\n+util::Result<void> WarnFn()\n+{\n+    return {util::Warning{Untranslated(\"warn.\")}};\n+}\n+\n+util::Result<int> MultiWarnFn(int ret)\n+{\n+    util::Result<void> result;\n+    for (int i = 0; i < ret; ++i) {\n+        result.AddWarning(strprintf(Untranslated(\"warn %i.\"), i));\n+    }\n+    return {std::move(result), ret};\n+}\n+\n+util::Result<void, int> ChainedFailFn(FnError arg, int ret)\n+{\n+    return {util::Error{Untranslated(\"chained fail.\")}, EnumFailFn(arg), WarnFn(), ret};\n+}\n+\n+util::Result<int, FnError> AccumulateFn(bool success)\n+{\n+    util::Result<int, FnError> result;\n+    util::Result<int> x = MultiWarnFn(1) >> result;\n+    BOOST_REQUIRE(x);\n+    util::Result<int> y = MultiWarnFn(2) >> result;\n+    BOOST_REQUIRE(y);\n+    result.Set(IntFailFn(*x + *y, success));\n+    return result;\n+}\n+\n+util::Result<int, int> TruthyFalsyFn(int i, bool success)\n+{\n+    if (success) return i;\n+    return {util::Error{Untranslated(strprintf(\"failure value %i.\", i))}, i};\n+}\n+",
      "path": "src/test/result_tests.cpp",
      "position": 136,
      "original_position": 111,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "28a954c7034077ac3a45083dd5e2b5cdb4d4cdde",
      "in_reply_to_id": 1234264247,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1234264247\r\n\r\n> Can you add an example for when the Result error type in a chain of function calls remains the same, but the value type changes? Is there a better way to do this conversion than manually constructing the result again (like below)?\r\n\r\nYes, there is definitely a better way to pass along errors and warnings from one result to another without calling `ErrorString` and flattening them. The `util::Result` constructor will move errors and warnings directly from an existing result object if you just pass the other result object as an argument with `std::move`. If you look at the `MultiWarnFn` there was an example of this feature in the success case. But I added a new `StrFailFn` function now based on your code that demonstrates it in both the success and failure cases.\r\n\r\nI am also thinking of adding a `util::Messages{Result&&}` helper similar to existing `util::Error{std::string}` and `util::Warning{std::string}` helpers to make it more obvious how you can construct a Result value with errors and warning from different sources.\r\n\r\nRevisiting this makes me realize I should probably add a tutorial-style document that describes how to use the Result class with standalone functions that return util::Result, chained functions that return util::Result values of the same type, and chained functions that return util::Result values of different types.",
      "created_at": "2023-07-21T16:25:52Z",
      "updated_at": "2023-07-21T16:47:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1270866000",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1270866000"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 159,
      "original_line": 159,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1270993538",
      "pull_request_review_id": 1541681112,
      "id": 1270993538,
      "node_id": "PRRC_kwDOABII585LwdKC",
      "diff_hunk": "@@ -39,13 +39,23 @@ class Result\n \n     std::variant<bilingual_str, T> m_variant;\n \n+    //! Make operator= private and instead require explicit Set() calls to\n+    //! avoid confusion in the future when the Result class gains support for\n+    //! richer errors and callers want to set result values without erasing\n+    //! error strings.\n+    Result& operator=(const Result&) = default;\n+    Result& operator=(Result&&) = default;",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 9,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "f1b46f4017a52093a4ae41656b953ab3c1b7403d",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "f1b46f4017a \r\n```\r\ninit.cpp:948:12: error: 'operator=' is a private member of 'util::Result<void>'\r\n    result = init::SetLoggingLevel(args);\r\n    ~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n./util/result.h:47:13: note: declared private here\r\n    Result& operator=(Result&&) = default;\r\n            ^\r\n```\r\n",
      "created_at": "2023-07-21T19:02:25Z",
      "updated_at": "2023-07-21T19:02:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1270993538",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1270993538"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271000370",
      "pull_request_review_id": 1541700045,
      "id": 1271000370,
      "node_id": "PRRC_kwDOABII585Lwe0y",
      "diff_hunk": "@@ -45,42 +74,131 @@ util::Result<bilingual_str> StrFn(bilingual_str s, bool success)\n     return util::Error{strprintf(Untranslated(\"str %s error.\"), s.original)};\n }\n \n-util::Result<NoCopy> NoCopyFn(int i, bool success)\n+util::Result<NoCopy, NoCopy> NoCopyFn(int i, bool success)\n {\n     if (success) return {i};\n-    return util::Error{Untranslated(strprintf(\"nocopy %i error.\", i))};\n+    return {util::Error{Untranslated(strprintf(\"nocopy %i error.\", i))}, i};\n+}\n+\n+util::Result<NoCopyNoMove, NoCopyNoMove> NoCopyNoMoveFn(int i, bool success)\n+{\n+    if (success) return {i};\n+    return {util::Error{Untranslated(strprintf(\"nocopynomove %i error.\", i))}, i};\n+}\n+\n+enum FnError { ERR1, ERR2 };\n+\n+util::Result<int, FnError> IntFailFn(int i, bool success)\n+{\n+    if (success) return {util::Warning{Untranslated(strprintf(\"int %i warn.\", i))}, i};\n+    return {util::Error{Untranslated(strprintf(\"int %i error.\", i))}, i % 2 ? ERR1 : ERR2};\n+}\n+\n+util::Result<std::string, FnError> StrFailFn(int i, bool success)\n+{\n+    auto result = IntFailFn(i, success);\n+    if (!success) return {std::move(result), util::Error{Untranslated(\"str error\")}, result.GetFailure()};\n+    return {std::move(result), std::to_string(*result)};",
      "path": "src/test/result_tests.cpp",
      "position": 1,
      "original_position": 73,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "40f09de73e61e7ae62d6639a49b7c7ac48d514d9",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "40f09de73e6 `lint-locale-dependence.py`\r\n\r\n```\r\nThe locale dependent function std::to_string(...) appears to be used:\r\nsrc/test/result_tests.cpp:101:    return {std::move(result), std::to_string(*result)};\r\n```\r\n",
      "created_at": "2023-07-21T19:10:47Z",
      "updated_at": "2023-07-21T19:10:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1271000370",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271000370"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 101,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271033872",
      "pull_request_review_id": 1541767699,
      "id": 1271033872,
      "node_id": "PRRC_kwDOABII585LwnAQ",
      "diff_hunk": "@@ -45,42 +74,131 @@ util::Result<bilingual_str> StrFn(bilingual_str s, bool success)\n     return util::Error{strprintf(Untranslated(\"str %s error.\"), s.original)};\n }\n \n-util::Result<NoCopy> NoCopyFn(int i, bool success)\n+util::Result<NoCopy, NoCopy> NoCopyFn(int i, bool success)\n {\n     if (success) return {i};\n-    return util::Error{Untranslated(strprintf(\"nocopy %i error.\", i))};\n+    return {util::Error{Untranslated(strprintf(\"nocopy %i error.\", i))}, i};\n+}\n+\n+util::Result<NoCopyNoMove, NoCopyNoMove> NoCopyNoMoveFn(int i, bool success)\n+{\n+    if (success) return {i};\n+    return {util::Error{Untranslated(strprintf(\"nocopynomove %i error.\", i))}, i};\n+}\n+\n+enum FnError { ERR1, ERR2 };\n+\n+util::Result<int, FnError> IntFailFn(int i, bool success)\n+{\n+    if (success) return {util::Warning{Untranslated(strprintf(\"int %i warn.\", i))}, i};\n+    return {util::Error{Untranslated(strprintf(\"int %i error.\", i))}, i % 2 ? ERR1 : ERR2};\n+}\n+\n+util::Result<std::string, FnError> StrFailFn(int i, bool success)\n+{\n+    auto result = IntFailFn(i, success);\n+    if (!success) return {std::move(result), util::Error{Untranslated(\"str error\")}, result.GetFailure()};\n+    return {std::move(result), std::to_string(*result)};",
      "path": "src/test/result_tests.cpp",
      "position": 1,
      "original_position": 73,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "40f09de73e61e7ae62d6639a49b7c7ac48d514d9",
      "in_reply_to_id": 1271000370,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1271000370\r\n\r\nThanks, this should be fixed now",
      "created_at": "2023-07-21T19:52:07Z",
      "updated_at": "2023-07-21T20:04:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1271033872",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271033872"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 101,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271034517",
      "pull_request_review_id": 1541767699,
      "id": 1271034517,
      "node_id": "PRRC_kwDOABII585LwnKV",
      "diff_hunk": "@@ -39,13 +39,23 @@ class Result\n \n     std::variant<bilingual_str, T> m_variant;\n \n+    //! Make operator= private and instead require explicit Set() calls to\n+    //! avoid confusion in the future when the Result class gains support for\n+    //! richer errors and callers want to set result values without erasing\n+    //! error strings.\n+    Result& operator=(const Result&) = default;\n+    Result& operator=(Result&&) = default;",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 9,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "f1b46f4017a52093a4ae41656b953ab3c1b7403d",
      "in_reply_to_id": 1270993538,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1270993538\r\n\r\nThanks for testing the early commit, should be fixed now",
      "created_at": "2023-07-21T19:52:42Z",
      "updated_at": "2023-07-21T20:04:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1271034517",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271034517"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271094067",
      "pull_request_review_id": 1541828147,
      "id": 1271094067,
      "node_id": "PRRC_kwDOABII585Lw1sz",
      "diff_hunk": "@@ -8,16 +8,125 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n-#include <variant>\n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n+#include <vector>",
      "path": "src/util/result.h",
      "position": 11,
      "original_position": 9,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "775b54e88107b0b976bf995e607926013fa9bc42",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "332e847c9ec tuple not needed per iwyu in tidy ci https://cirrus-ci.com/task/6540065057275904?logs=ci#L20325, while touching could add the others\r\n\r\n```diff\r\n+#include <assert.h>\r\n #include <memory>\r\n #include <optional>\r\n-#include <tuple>\r\n #include <utility>\r\n #include <vector>\r\n+#include <new>\r\n+#include <type_traits>\r\n```\r\n",
      "created_at": "2023-07-21T20:43:20Z",
      "updated_at": "2023-07-21T21:20:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1271094067",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271094067"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 17,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271096350",
      "pull_request_review_id": 1541828147,
      "id": 1271096350,
      "node_id": "PRRC_kwDOABII585Lw2Qe",
      "diff_hunk": "@@ -0,0 +1,28 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <util/result.h>\n+#include <util/string.h>",
      "path": "src/util/result.cpp",
      "position": 1,
      "original_position": 6,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "775b54e88107b0b976bf995e607926013fa9bc42",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "https://github.com/bitcoin/bitcoin/commit/332e847c9ec0241efd9681eee3b03ff819aaddc3 per iwyu in https://cirrus-ci.com/task/6540065057275904?logs=ci#L20305\r\n\r\n```diff\r\n #include <util/result.h>\r\n-#include <util/string.h>\r\n+#include \"util/translation.h\"\r\n+\r\n+#include <algorithm>\r\n+#include <initializer_list>\r\n+#include <iterator>\r\n```\r\n",
      "created_at": "2023-07-21T20:45:45Z",
      "updated_at": "2023-07-21T21:20:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1271096350",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271096350"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271547869",
      "pull_request_review_id": 1542385864,
      "id": 1271547869,
      "node_id": "PRRC_kwDOABII585Lykfd",
      "diff_hunk": "@@ -45,42 +74,122 @@ util::Result<bilingual_str> StrFn(bilingual_str s, bool success)\n     return util::Error{strprintf(Untranslated(\"str %s error.\"), s.original)};\n }\n \n-util::Result<NoCopy> NoCopyFn(int i, bool success)\n+util::Result<NoCopy, NoCopy> NoCopyFn(int i, bool success)\n {\n     if (success) return {i};\n-    return util::Error{Untranslated(strprintf(\"nocopy %i error.\", i))};\n+    return {util::Error{Untranslated(strprintf(\"nocopy %i error.\", i))}, i};\n }\n \n-template <typename T>\n-void ExpectResult(const util::Result<T>& result, bool success, const bilingual_str& str)\n+util::Result<NoCopyNoMove, NoCopyNoMove> NoCopyNoMoveFn(int i, bool success)\n+{\n+    if (success) return {i};\n+    return {util::Error{Untranslated(strprintf(\"nocopynomove %i error.\", i))}, i};\n+}\n+\n+enum FnError { ERR1, ERR2 };\n+\n+util::Result<int, FnError> IntFailFn(int i, bool success)\n+{\n+    if (success) return i;\n+    return {util::Error{Untranslated(strprintf(\"int %i error.\", i))}, i % 2 ? ERR1 : ERR2};\n+}\n+\n+util::Result<NoCopyNoMove, FnError> EnumFailFn(FnError ret)\n+{\n+    return {util::Error{Untranslated(\"enum fail.\")}, ret};\n+}\n+\n+util::Result<void> WarnFn()\n+{\n+    return {util::Warning{Untranslated(\"warn.\")}};\n+}\n+\n+util::Result<int> MultiWarnFn(int ret)\n+{\n+    util::Result<void> result;\n+    for (int i = 0; i < ret; ++i) {\n+        result.AddWarning(strprintf(Untranslated(\"warn %i.\"), i));\n+    }\n+    return {std::move(result), ret};\n+}\n+\n+util::Result<void, int> ChainedFailFn(FnError arg, int ret)\n+{\n+    return {util::Error{Untranslated(\"chained fail.\")}, EnumFailFn(arg), WarnFn(), ret};\n+}\n+\n+util::Result<int, FnError> AccumulateFn(bool success)\n+{\n+    util::Result<int, FnError> result;\n+    util::Result<int> x = MultiWarnFn(1) >> result;\n+    BOOST_REQUIRE(x);\n+    util::Result<int> y = MultiWarnFn(2) >> result;\n+    BOOST_REQUIRE(y);\n+    result.Set(IntFailFn(*x + *y, success));\n+    return result;\n+}\n+\n+util::Result<int, int> TruthyFalsyFn(int i, bool success)\n+{\n+    if (success) return i;\n+    return {util::Error{Untranslated(strprintf(\"failure value %i.\", i))}, i};\n+}\n+",
      "path": "src/test/result_tests.cpp",
      "position": 136,
      "original_position": 111,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "28a954c7034077ac3a45083dd5e2b5cdb4d4cdde",
      "in_reply_to_id": 1234264247,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> I should probably add a tutorial-style document that describes how to use the Result class with standalone functions that return util::Result, chained functions that return util::Result values of the same type, and chained functions that return util::Result values of different types.\r\n\r\nI think this would be valuable, either in `util/result.h` directly or in `doc/developer-notes.md` or another file in `/doc`.",
      "created_at": "2023-07-23T19:32:16Z",
      "updated_at": "2023-07-23T19:33:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1271547869",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271547869"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 159,
      "original_line": 159,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276382028",
      "pull_request_review_id": 1550016002,
      "id": 1276382028,
      "node_id": "PRRC_kwDOABII585MFAtM",
      "diff_hunk": "@@ -45,42 +74,122 @@ util::Result<bilingual_str> StrFn(bilingual_str s, bool success)\n     return util::Error{strprintf(Untranslated(\"str %s error.\"), s.original)};\n }\n \n-util::Result<NoCopy> NoCopyFn(int i, bool success)\n+util::Result<NoCopy, NoCopy> NoCopyFn(int i, bool success)\n {\n     if (success) return {i};\n-    return util::Error{Untranslated(strprintf(\"nocopy %i error.\", i))};\n+    return {util::Error{Untranslated(strprintf(\"nocopy %i error.\", i))}, i};\n }\n \n-template <typename T>\n-void ExpectResult(const util::Result<T>& result, bool success, const bilingual_str& str)\n+util::Result<NoCopyNoMove, NoCopyNoMove> NoCopyNoMoveFn(int i, bool success)\n+{\n+    if (success) return {i};\n+    return {util::Error{Untranslated(strprintf(\"nocopynomove %i error.\", i))}, i};\n+}\n+\n+enum FnError { ERR1, ERR2 };\n+\n+util::Result<int, FnError> IntFailFn(int i, bool success)\n+{\n+    if (success) return i;\n+    return {util::Error{Untranslated(strprintf(\"int %i error.\", i))}, i % 2 ? ERR1 : ERR2};\n+}\n+\n+util::Result<NoCopyNoMove, FnError> EnumFailFn(FnError ret)\n+{\n+    return {util::Error{Untranslated(\"enum fail.\")}, ret};\n+}\n+\n+util::Result<void> WarnFn()\n+{\n+    return {util::Warning{Untranslated(\"warn.\")}};\n+}\n+\n+util::Result<int> MultiWarnFn(int ret)\n+{\n+    util::Result<void> result;\n+    for (int i = 0; i < ret; ++i) {\n+        result.AddWarning(strprintf(Untranslated(\"warn %i.\"), i));\n+    }\n+    return {std::move(result), ret};\n+}\n+\n+util::Result<void, int> ChainedFailFn(FnError arg, int ret)\n+{\n+    return {util::Error{Untranslated(\"chained fail.\")}, EnumFailFn(arg), WarnFn(), ret};\n+}\n+\n+util::Result<int, FnError> AccumulateFn(bool success)\n+{\n+    util::Result<int, FnError> result;\n+    util::Result<int> x = MultiWarnFn(1) >> result;\n+    BOOST_REQUIRE(x);\n+    util::Result<int> y = MultiWarnFn(2) >> result;\n+    BOOST_REQUIRE(y);\n+    result.Set(IntFailFn(*x + *y, success));\n+    return result;\n+}\n+\n+util::Result<int, int> TruthyFalsyFn(int i, bool success)\n+{\n+    if (success) return i;\n+    return {util::Error{Untranslated(strprintf(\"failure value %i.\", i))}, i};\n+}\n+",
      "path": "src/test/result_tests.cpp",
      "position": 136,
      "original_position": 111,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "28a954c7034077ac3a45083dd5e2b5cdb4d4cdde",
      "in_reply_to_id": 1234264247,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> I am also thinking of adding a util::Messages{Result&&} helper.\r\n\r\nThat sounds like a worthwhile improvement of the ergonomics here. \r\n",
      "created_at": "2023-07-27T14:33:47Z",
      "updated_at": "2023-07-27T14:57:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1276382028",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276382028"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 159,
      "original_line": 159,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276417417",
      "pull_request_review_id": 1550016002,
      "id": 1276417417,
      "node_id": "PRRC_kwDOABII585MFJWJ",
      "diff_hunk": "@@ -90,15 +90,52 @@ enum FnError { ERR1, ERR2 };\n \n util::Result<int, FnError> IntFailFn(int i, bool success)\n {\n-    if (success) return i;\n+    if (success) return {util::Warning{Untranslated(strprintf(\"int %i warn.\", i))}, i};\n     return {util::Error{Untranslated(strprintf(\"int %i error.\", i))}, i % 2 ? ERR1 : ERR2};\n }\n \n+util::Result<std::string, FnError> StrFailFn(int i, bool success)\n+{\n+    auto result = IntFailFn(i, success);\n+    if (!success) return {std::move(result), util::Error{Untranslated(\"str error\")}, result.GetFailure()};",
      "path": "src/test/result_tests.cpp",
      "position": 1,
      "original_position": 12,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "4d995d3fa66fbc3eb87c6627e5ba1b2a809402a4",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It strikes me as unfortunate that the move constructor cannot move the failure values across different result value types, meaning the failure needs to be passed in as a separate argument. At the same time the user would be allowed to return a `{std::move(result), util::Error{Untranslated(\"str error\")}`, potentially without the user noticing that this will not move the failure value ~and instead initialize a `Monostate` failure~ and instead default construct the failure value.",
      "created_at": "2023-07-27T14:57:25Z",
      "updated_at": "2023-07-28T17:12:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1276417417",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276417417"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 100,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1277584643",
      "pull_request_review_id": 1243960352,
      "id": 1277584643,
      "node_id": "PRRC_kwDOABII585MJmUD",
      "diff_hunk": "@@ -31,57 +140,134 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class M>\n-class Result\n+//!\n+//! Most code does not need different error-handling behavior for different\n+//! types of errors, and can suffice just using the type `T` success value on\n+//! success, and descriptive error strings when there's a failure. But\n+//! applications that do need more complicated error-handling behavior can\n+//! override the default `F = void` failure type and get failure values by\n+//! calling result.GetFailure().\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    using T = std::conditional_t<std::is_same_v<M, void>, std::monostate, M>;\n+protected:\n+    // Base Construct() function, called recursively by Construct() overloads below.\n+    template <bool Failure, typename... Args>\n+    void Construct(Args&&... args)\n+    {\n+        if constexpr (Failure) {\n+            this->Info().failure.emplace(std::forward<Args>(args)...);\n+        } else {\n+            this->ConstructValue(std::forward<Args>(args)...);\n+        }\n+    }\n+\n+    // Recursive Construct() function. Peel off error argument and call the next Construct().\n+    template <bool Failure, typename... Args>\n+    void Construct(Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct</*Failure=*/true>(std::forward<Args>(args)...);\n+    }\n+\n+    // Recursive Construct() function. Peel off earning argument and call the next Construct().\n+    template <bool Failure, typename... Args>\n+    void Construct(Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct<Failure>(std::forward<Args>(args)...);\n+    }\n \n-    std::variant<bilingual_str, T> m_variant;\n+    // Recursive Construct() function. Peel off other Result object to move errors and warnings from and call the next Construct.\n+    template <bool Failure, typename OT, typename OF, typename... Args>\n+    void Construct(Result<OT, OF>&& other, Args&&... args)\n+    {\n+        this->MoveMessages(other);\n+        Construct<Failure>(std::forward<Args>(args)...);\n+    }\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>&& other)\n+    {\n+        this->MoveMessages(other);\n+        if (other) {\n+            this->MoveValue(std::move(other));\n+        } else {\n+            this->Info().failure = std::move(other.m_info->failure);\n+        }\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename, typename>\n+    friend class Result;\n \n public:\n-    Result() : m_variant{std::in_place_index_t<1>{}, std::monostate{}} {}  // constructor for void\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename... Args>\n+    Result(Args&&... args)\n+    {\n+        Construct</*Failure=*/false>(std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(std::move(other)); }\n+\n+    // Disallow potentially dangerous assignment operators which might erase\n+    // error and warning messages while attempting to assign a result value. Use\n+    // Result::Set() method instead to set a result value while keeping any\n+    // existing errors and warnings.\n+    template <typename O>\n+    Result& operator=(O&& other) = delete;\n+\n+    Result& Set(Result&& other) LIFETIMEBOUND",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 224,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "775b54e88107b0b976bf995e607926013fa9bc42",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Would it make sense to rename this to `emplace`, to keep the interface in line with `optional` and `expected`?",
      "created_at": "2023-07-28T14:02:49Z",
      "updated_at": "2023-07-28T16:55:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1277584643",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1277584643"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 230,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1277588274",
      "pull_request_review_id": 1243960352,
      "id": 1277588274,
      "node_id": "PRRC_kwDOABII585MJnMy",
      "diff_hunk": "@@ -8,16 +8,125 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n-#include <variant>\n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper function to join messages in space separated string.\n+bilingual_str JoinMessages(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);\n+\n+//! Helper function to move messages from one vector to another.\n+void MoveMessages(std::vector<bilingual_str>& src, std::vector<bilingual_str>& dest);\n+\n+//! Subsitute for std::monostate that doesn't depend on std::variant.\n+struct MonoState{};\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same_v<F, void>, MonoState, F>> failure{};\n+    std::vector<bilingual_str> errors{};\n+    std::vector<bilingual_str> warnings{};\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    ErrorInfo<F>& Info() LIFETIMEBOUND\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        return *m_info;\n+    }\n+\n+    //! Value setter methods that do nothing because this class has value type T=void.\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O&& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    //! Success check.\n+    explicit operator bool() const { return !m_info || !m_info->failure; }\n+\n+    //! Error retrieval.\n+    const auto& GetFailure() const LIFETIMEBOUND { assert(!*this); return *m_info->failure; }\n+    const std::vector<bilingual_str>& GetErrors() const LIFETIMEBOUND { return m_info ? m_info->errors : EMPTY_LIST; }\n+    const std::vector<bilingual_str>& GetWarnings() const LIFETIMEBOUND { return m_info ? m_info->warnings : EMPTY_LIST; }\n+};\n+\n+//! Result base class for T value type. Holds value and provides accessor methods.\n+template <typename T, typename F>\n+class ResultBase : public ResultBase<void, F>\n+{\n+protected:\n+    //! Result success value. Uses anonymous union so success value is never\n+    //! constructed in failure case.\n+    union { T m_value; };\n+\n+    template <typename... Args>\n+    void ConstructValue(Args&&... args) { new (&m_value) T{std::forward<Args>(args)...}; }\n+    template <typename O>\n+    void MoveValue(O&& other) { new (&m_value) T{std::move(other.m_value)}; }\n+    void DestroyValue() { m_value.~T(); }\n+\n+    //! Empty constructor that needs to be declared because the class contains a union.\n+    ResultBase() {}\n+    ~ResultBase() { if (*this) DestroyValue(); }\n+\n+    template <typename, typename>\n+    friend class ResultBase;\n+\n+public:\n+    //! std::optional methods, so functions returning optional<T> can change to\n+    //! return Result<T> with minimal changes to existing code, and vice versa.\n+    bool has_value() const { return bool{*this}; }\n+    const T& value() const LIFETIMEBOUND { assert(*this); return m_value; }\n+    T& value() LIFETIMEBOUND { assert(*this); return m_value; }",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 96,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "775b54e88107b0b976bf995e607926013fa9bc42",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: would it be more idiomatic to use `has_value()` here?\r\n```suggestion\r\n    const T& value() const LIFETIMEBOUND { assert(has_value()); return m_value; }\r\n    T& value() LIFETIMEBOUND { assert(has_value()); return m_value; }\r\n```",
      "created_at": "2023-07-28T14:06:09Z",
      "updated_at": "2023-07-28T16:55:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1277588274",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1277588274"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": 101,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 102,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1277642391",
      "pull_request_review_id": 1243960352,
      "id": 1277642391,
      "node_id": "PRRC_kwDOABII585MJ0aX",
      "diff_hunk": "@@ -8,16 +8,125 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n-#include <variant>\n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper function to join messages in space separated string.\n+bilingual_str JoinMessages(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);\n+\n+//! Helper function to move messages from one vector to another.\n+void MoveMessages(std::vector<bilingual_str>& src, std::vector<bilingual_str>& dest);\n+\n+//! Subsitute for std::monostate that doesn't depend on std::variant.\n+struct MonoState{};\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same_v<F, void>, MonoState, F>> failure{};\n+    std::vector<bilingual_str> errors{};\n+    std::vector<bilingual_str> warnings{};\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 45,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "775b54e88107b0b976bf995e607926013fa9bc42",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: would `m_error` or (`m_error_info`) be a more appropriate name? E.g. in `bool()`, the meaning of `!m_error` is much more intuitive at first sight compared to `!m_info`, I think? (i.e. it's not really clear what it means to \"not have info\", whereas \"not have error\" is clear).\r\n\r\n```\r\nexplicit operator bool() const { return !m_info; }\r\n```",
      "created_at": "2023-07-28T14:44:23Z",
      "updated_at": "2023-07-28T16:55:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1277642391",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1277642391"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 116,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280960077",
      "pull_request_review_id": 1557519459,
      "id": 1280960077,
      "node_id": "PRRC_kwDOABII585MWeZN",
      "diff_hunk": "@@ -45,42 +74,122 @@ util::Result<bilingual_str> StrFn(bilingual_str s, bool success)\n     return util::Error{strprintf(Untranslated(\"str %s error.\"), s.original)};\n }\n \n-util::Result<NoCopy> NoCopyFn(int i, bool success)\n+util::Result<NoCopy, NoCopy> NoCopyFn(int i, bool success)\n {\n     if (success) return {i};\n-    return util::Error{Untranslated(strprintf(\"nocopy %i error.\", i))};\n+    return {util::Error{Untranslated(strprintf(\"nocopy %i error.\", i))}, i};\n }\n \n-template <typename T>\n-void ExpectResult(const util::Result<T>& result, bool success, const bilingual_str& str)\n+util::Result<NoCopyNoMove, NoCopyNoMove> NoCopyNoMoveFn(int i, bool success)\n+{\n+    if (success) return {i};\n+    return {util::Error{Untranslated(strprintf(\"nocopynomove %i error.\", i))}, i};\n+}\n+\n+enum FnError { ERR1, ERR2 };\n+\n+util::Result<int, FnError> IntFailFn(int i, bool success)\n+{\n+    if (success) return i;\n+    return {util::Error{Untranslated(strprintf(\"int %i error.\", i))}, i % 2 ? ERR1 : ERR2};\n+}\n+\n+util::Result<NoCopyNoMove, FnError> EnumFailFn(FnError ret)\n+{\n+    return {util::Error{Untranslated(\"enum fail.\")}, ret};\n+}\n+\n+util::Result<void> WarnFn()\n+{\n+    return {util::Warning{Untranslated(\"warn.\")}};\n+}\n+\n+util::Result<int> MultiWarnFn(int ret)\n+{\n+    util::Result<void> result;\n+    for (int i = 0; i < ret; ++i) {\n+        result.AddWarning(strprintf(Untranslated(\"warn %i.\"), i));\n+    }\n+    return {std::move(result), ret};\n+}\n+\n+util::Result<void, int> ChainedFailFn(FnError arg, int ret)\n+{\n+    return {util::Error{Untranslated(\"chained fail.\")}, EnumFailFn(arg), WarnFn(), ret};\n+}\n+\n+util::Result<int, FnError> AccumulateFn(bool success)\n+{\n+    util::Result<int, FnError> result;\n+    util::Result<int> x = MultiWarnFn(1) >> result;\n+    BOOST_REQUIRE(x);\n+    util::Result<int> y = MultiWarnFn(2) >> result;\n+    BOOST_REQUIRE(y);\n+    result.Set(IntFailFn(*x + *y, success));\n+    return result;\n+}\n+\n+util::Result<int, int> TruthyFalsyFn(int i, bool success)\n+{\n+    if (success) return i;\n+    return {util::Error{Untranslated(strprintf(\"failure value %i.\", i))}, i};\n+}\n+",
      "path": "src/test/result_tests.cpp",
      "position": 136,
      "original_position": 111,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "28a954c7034077ac3a45083dd5e2b5cdb4d4cdde",
      "in_reply_to_id": 1234264247,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1276382028\r\n\r\n> > I am also thinking of adding a util::Messages{Result&&} helper.\r\n> \r\n> That sounds like a worthwhile improvement of the ergonomics here.\r\n\r\nThanks, added this",
      "created_at": "2023-08-01T17:45:06Z",
      "updated_at": "2023-08-01T20:26:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1280960077",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280960077"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 159,
      "original_line": 159,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280960230",
      "pull_request_review_id": 1557519459,
      "id": 1280960230,
      "node_id": "PRRC_kwDOABII585MWebm",
      "diff_hunk": "@@ -8,16 +8,125 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n-#include <variant>\n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n+#include <vector>",
      "path": "src/util/result.h",
      "position": 11,
      "original_position": 9,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "775b54e88107b0b976bf995e607926013fa9bc42",
      "in_reply_to_id": 1271094067,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1271094067\r\n\r\n> [332e847](https://github.com/bitcoin/bitcoin/commit/332e847c9ec0241efd9681eee3b03ff819aaddc3) tuple not needed per iwyu in tidy ci https://cirrus-ci.com/task/6540065057275904?logs=ci#L20325, while touching could add the others\r\n\r\nThanks, updated includes",
      "created_at": "2023-08-01T17:45:16Z",
      "updated_at": "2023-08-01T20:26:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1280960230",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280960230"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 17,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280960343",
      "pull_request_review_id": 1557519459,
      "id": 1280960343,
      "node_id": "PRRC_kwDOABII585MWedX",
      "diff_hunk": "@@ -8,16 +8,125 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n-#include <variant>\n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper function to join messages in space separated string.\n+bilingual_str JoinMessages(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);\n+\n+//! Helper function to move messages from one vector to another.\n+void MoveMessages(std::vector<bilingual_str>& src, std::vector<bilingual_str>& dest);\n+\n+//! Subsitute for std::monostate that doesn't depend on std::variant.\n+struct MonoState{};\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same_v<F, void>, MonoState, F>> failure{};\n+    std::vector<bilingual_str> errors{};\n+    std::vector<bilingual_str> warnings{};\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 45,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "775b54e88107b0b976bf995e607926013fa9bc42",
      "in_reply_to_id": 1277642391,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1277642391\r\n\r\n> nit: would `m_error` or (`m_error_info`) be a more appropriate name? E.g. in `bool()`, the meaning of `!m_error` is much more intuitive at first sight compared to `!m_info`, I think? (i.e. it's not really clear what it means to \"not have info\", whereas \"not have error\" is clear).\r\n\r\nCalling it `m_error` would be misleading in later commits. The purpose of this field isn't to indicate the presence of an error. It happens to do that temporarily in the \"Add util::Result failure values\" commit, but in later commit \"Add util::Result multiple error and warning messages\", it can hold error and warning messages even in the success state.",
      "created_at": "2023-08-01T17:45:24Z",
      "updated_at": "2023-08-01T20:26:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1280960343",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280960343"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 116,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280960587",
      "pull_request_review_id": 1557519459,
      "id": 1280960587,
      "node_id": "PRRC_kwDOABII585MWehL",
      "diff_hunk": "@@ -8,16 +8,125 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n-#include <variant>\n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper function to join messages in space separated string.\n+bilingual_str JoinMessages(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);\n+\n+//! Helper function to move messages from one vector to another.\n+void MoveMessages(std::vector<bilingual_str>& src, std::vector<bilingual_str>& dest);\n+\n+//! Subsitute for std::monostate that doesn't depend on std::variant.\n+struct MonoState{};\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same_v<F, void>, MonoState, F>> failure{};\n+    std::vector<bilingual_str> errors{};\n+    std::vector<bilingual_str> warnings{};\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    ErrorInfo<F>& Info() LIFETIMEBOUND\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        return *m_info;\n+    }\n+\n+    //! Value setter methods that do nothing because this class has value type T=void.\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O&& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    //! Success check.\n+    explicit operator bool() const { return !m_info || !m_info->failure; }\n+\n+    //! Error retrieval.\n+    const auto& GetFailure() const LIFETIMEBOUND { assert(!*this); return *m_info->failure; }\n+    const std::vector<bilingual_str>& GetErrors() const LIFETIMEBOUND { return m_info ? m_info->errors : EMPTY_LIST; }\n+    const std::vector<bilingual_str>& GetWarnings() const LIFETIMEBOUND { return m_info ? m_info->warnings : EMPTY_LIST; }\n+};\n+\n+//! Result base class for T value type. Holds value and provides accessor methods.\n+template <typename T, typename F>\n+class ResultBase : public ResultBase<void, F>\n+{\n+protected:\n+    //! Result success value. Uses anonymous union so success value is never\n+    //! constructed in failure case.\n+    union { T m_value; };\n+\n+    template <typename... Args>\n+    void ConstructValue(Args&&... args) { new (&m_value) T{std::forward<Args>(args)...}; }\n+    template <typename O>\n+    void MoveValue(O&& other) { new (&m_value) T{std::move(other.m_value)}; }\n+    void DestroyValue() { m_value.~T(); }\n+\n+    //! Empty constructor that needs to be declared because the class contains a union.\n+    ResultBase() {}\n+    ~ResultBase() { if (*this) DestroyValue(); }\n+\n+    template <typename, typename>\n+    friend class ResultBase;\n+\n+public:\n+    //! std::optional methods, so functions returning optional<T> can change to\n+    //! return Result<T> with minimal changes to existing code, and vice versa.\n+    bool has_value() const { return bool{*this}; }\n+    const T& value() const LIFETIMEBOUND { assert(*this); return m_value; }\n+    T& value() LIFETIMEBOUND { assert(*this); return m_value; }",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 96,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "775b54e88107b0b976bf995e607926013fa9bc42",
      "in_reply_to_id": 1277588274,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1277588274\r\n\r\n> nit: would it be more idiomatic to use `has_value()` here?\r\n\r\nI don't think it's more idiomatic but the suggestion seems fine so I adopted it.",
      "created_at": "2023-08-01T17:45:39Z",
      "updated_at": "2023-08-01T20:26:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1280960587",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280960587"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": 101,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 102,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280960940",
      "pull_request_review_id": 1557519459,
      "id": 1280960940,
      "node_id": "PRRC_kwDOABII585MWems",
      "diff_hunk": "@@ -31,57 +140,134 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class M>\n-class Result\n+//!\n+//! Most code does not need different error-handling behavior for different\n+//! types of errors, and can suffice just using the type `T` success value on\n+//! success, and descriptive error strings when there's a failure. But\n+//! applications that do need more complicated error-handling behavior can\n+//! override the default `F = void` failure type and get failure values by\n+//! calling result.GetFailure().\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    using T = std::conditional_t<std::is_same_v<M, void>, std::monostate, M>;\n+protected:\n+    // Base Construct() function, called recursively by Construct() overloads below.\n+    template <bool Failure, typename... Args>\n+    void Construct(Args&&... args)\n+    {\n+        if constexpr (Failure) {\n+            this->Info().failure.emplace(std::forward<Args>(args)...);\n+        } else {\n+            this->ConstructValue(std::forward<Args>(args)...);\n+        }\n+    }\n+\n+    // Recursive Construct() function. Peel off error argument and call the next Construct().\n+    template <bool Failure, typename... Args>\n+    void Construct(Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct</*Failure=*/true>(std::forward<Args>(args)...);\n+    }\n+\n+    // Recursive Construct() function. Peel off earning argument and call the next Construct().\n+    template <bool Failure, typename... Args>\n+    void Construct(Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct<Failure>(std::forward<Args>(args)...);\n+    }\n \n-    std::variant<bilingual_str, T> m_variant;\n+    // Recursive Construct() function. Peel off other Result object to move errors and warnings from and call the next Construct.\n+    template <bool Failure, typename OT, typename OF, typename... Args>\n+    void Construct(Result<OT, OF>&& other, Args&&... args)\n+    {\n+        this->MoveMessages(other);\n+        Construct<Failure>(std::forward<Args>(args)...);\n+    }\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>&& other)\n+    {\n+        this->MoveMessages(other);\n+        if (other) {\n+            this->MoveValue(std::move(other));\n+        } else {\n+            this->Info().failure = std::move(other.m_info->failure);\n+        }\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename, typename>\n+    friend class Result;\n \n public:\n-    Result() : m_variant{std::in_place_index_t<1>{}, std::monostate{}} {}  // constructor for void\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename... Args>\n+    Result(Args&&... args)\n+    {\n+        Construct</*Failure=*/false>(std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(std::move(other)); }\n+\n+    // Disallow potentially dangerous assignment operators which might erase\n+    // error and warning messages while attempting to assign a result value. Use\n+    // Result::Set() method instead to set a result value while keeping any\n+    // existing errors and warnings.\n+    template <typename O>\n+    Result& operator=(O&& other) = delete;\n+\n+    Result& Set(Result&& other) LIFETIMEBOUND",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 224,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "775b54e88107b0b976bf995e607926013fa9bc42",
      "in_reply_to_id": 1277584643,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1277584643\r\n\r\n> Would it make sense to rename this to `emplace`, to keep the interface in line with `optional` and `expected`?\r\n\r\nThis isn't an actually an emplace method, it's an assignment method. An emplace method for a `Result<T>` object would take arguments that would be accepted by one of `T`'s constructors, and construct a new `T` object in place with them.\r\n\r\nBy contrast, this method doesn't accept arguments that could be forwarded to a `T` constructor. Instead this method takes a `Result<T>` argument, and is basically the same as an `operator=(Result&&)` method.\r\n\r\nAdded better documentation about this in the \"multiple error and warning messages\" commit:\r\n\r\n```c++\r\n    //! Move success or failure values from another result object to this\r\n    //! object. Also move any error and warning messages from the other result\r\n    //! object to this one. If this result object has an existing success or\r\n    //! failure value it is cleared and replaced by the other value. If this\r\n    //! result object has any error or warning messages, they are not cleared\r\n    //! the messages will accumulate.\r\n    Result& Set(Result&& other) LIFETIMEBOUND\r\n```",
      "created_at": "2023-08-01T17:46:03Z",
      "updated_at": "2023-08-02T12:09:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1280960940",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280960940"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 230,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280961487",
      "pull_request_review_id": 1557519459,
      "id": 1280961487,
      "node_id": "PRRC_kwDOABII585MWevP",
      "diff_hunk": "@@ -90,15 +90,52 @@ enum FnError { ERR1, ERR2 };\n \n util::Result<int, FnError> IntFailFn(int i, bool success)\n {\n-    if (success) return i;\n+    if (success) return {util::Warning{Untranslated(strprintf(\"int %i warn.\", i))}, i};\n     return {util::Error{Untranslated(strprintf(\"int %i error.\", i))}, i % 2 ? ERR1 : ERR2};\n }\n \n+util::Result<std::string, FnError> StrFailFn(int i, bool success)\n+{\n+    auto result = IntFailFn(i, success);\n+    if (!success) return {std::move(result), util::Error{Untranslated(\"str error\")}, result.GetFailure()};",
      "path": "src/test/result_tests.cpp",
      "position": 1,
      "original_position": 12,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "4d995d3fa66fbc3eb87c6627e5ba1b2a809402a4",
      "in_reply_to_id": 1276417417,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1276417417\r\n\r\n> It strikes me as unfortunate that the move constructor cannot move the failure values across different result value types, meaning the failure needs to be passed in as a separate argument. At the same time the user would be allowed to return a `{std::move(result), util::Error{Untranslated(\"str error\")}`, potentially without the user noticing that this will not move the failure value ~and instead initialize a `Monostate` failure~ and instead default construct the failure value.\r\n\r\nYes agree that would have been misleading. This should be fixed with the new `util::Messages` helper. Now just passing a bare `std::move(result)` is no longer allowed, so it shouldn't look like the failure value is being moved. If you want to return a value from a `Result<T1, F>` function using a `Result<T2, F> result` value, now you have to write:\r\n\r\n```c++\r\nreturn {util::Error{}, util::Messages(std::move(result), result.GetFailure()};\r\n```\r\n\r\n---\r\n\r\n- EDIT: After the latest push, `util::Messages` is replaced by `util::MoveMessages` so this is now:\r\n\r\n  ```c++\r\n  return {util::Error{}, util::MoveMessages(result), result.GetFailure()};\r\n  ```\r\n---\r\n\r\nI'm not sure how common it will be to have functions calling each other that have different success types but the same failure type. If it does turn out to be common, it should be possible to add syntax sugar so that can be shortened to:\r\n\r\n```c++\r\nreturn {util::Error{}, std::move(result)};\r\n```",
      "created_at": "2023-08-01T17:46:38Z",
      "updated_at": "2023-08-01T22:44:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1280961487",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280961487"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 100,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280961601",
      "pull_request_review_id": 1557519459,
      "id": 1280961601,
      "node_id": "PRRC_kwDOABII585MWexB",
      "diff_hunk": "@@ -0,0 +1,28 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <util/result.h>\n+#include <util/string.h>",
      "path": "src/util/result.cpp",
      "position": 1,
      "original_position": 6,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "775b54e88107b0b976bf995e607926013fa9bc42",
      "in_reply_to_id": 1271096350,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1271096350\r\n\r\n> [332e847](https://github.com/bitcoin/bitcoin/commit/332e847c9ec0241efd9681eee3b03ff819aaddc3) per iwyu in https://cirrus-ci.com/task/6540065057275904?logs=ci#L20305\r\n\r\nThanks, updated includes",
      "created_at": "2023-08-01T17:46:45Z",
      "updated_at": "2023-08-01T20:26:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1280961601",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280961601"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1282487687",
      "pull_request_review_id": 1559945927,
      "id": 1282487687,
      "node_id": "PRRC_kwDOABII585McTWH",
      "diff_hunk": "@@ -31,57 +151,139 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class M>\n-class Result\n+//!\n+//! Most code does not need different error-handling behavior for different\n+//! types of errors, and can suffice just using the type `T` success value on\n+//! success, and descriptive error strings when there's a failure. But\n+//! applications that do need more complicated error-handling behavior can\n+//! override the default `F = void` failure type and get failure values by\n+//! calling result.GetFailure().\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    using T = std::conditional_t<std::is_same_v<M, void>, std::monostate, M>;\n+protected:\n+    // Base Construct() function, called recursively by Construct() overloads below.\n+    template <bool Failure, typename... Args>\n+    void Construct(Args&&... args)\n+    {\n+        if constexpr (Failure) {\n+            this->Info().failure.emplace(std::forward<Args>(args)...);\n+        } else {\n+            this->ConstructValue(std::forward<Args>(args)...);\n+        }\n+    }\n+\n+    // Recursive Construct() function. Peel off error argument and call the next Construct().\n+    template <bool Failure, typename... Args>\n+    void Construct(Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct</*Failure=*/true>(std::forward<Args>(args)...);\n+    }\n+\n+    // Recursive Construct() function. Peel off earning argument and call the next Construct().",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 178,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "08f5febfc571220043436bbec96a326beebdee22",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Here and line 192 below: \"earning\"?",
      "created_at": "2023-08-02T22:56:44Z",
      "updated_at": "2023-08-02T23:45:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1282487687",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1282487687"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 184,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1282499219",
      "pull_request_review_id": 1559945927,
      "id": 1282499219,
      "node_id": "PRRC_kwDOABII585McWKT",
      "diff_hunk": "@@ -187,9 +188,9 @@ ChainstateLoadResult LoadChainstate(ChainstateManager& chainman, const CacheSize\n     // Load a chain created from a UTXO snapshot, if any exist.\n     chainman.DetectSnapshotChainstate(options.mempool);\n \n-    auto [init_status, init_error] = CompleteChainstateInitialization(chainman, cache_sizes, options);\n-    if (init_status != ChainstateLoadStatus::SUCCESS) {\n-        return {init_status, init_error};\n+    auto result{CompleteChainstateInitialization(chainman, cache_sizes, options)};\n+    if (!result) {\n+        return result;",
      "path": "src/node/chainstate.cpp",
      "position": 137,
      "original_position": 116,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "08f5febfc571220043436bbec96a326beebdee22",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "584e3fa Not sure, but these `if (!result) return result;` idioms (here and lines 228-229 below) seem \"odd\" enough that an explanatory comment might be helpful.",
      "created_at": "2023-08-02T23:22:25Z",
      "updated_at": "2023-08-02T23:45:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1282499219",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1282499219"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 191,
      "original_line": 191,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1282502389",
      "pull_request_review_id": 1559945927,
      "id": 1282502389,
      "node_id": "PRRC_kwDOABII585McW71",
      "diff_hunk": "@@ -8,16 +8,136 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n-#include <variant>\n+#include <cassert>\n+#include <memory>\n+#include <new>\n+#include <optional>\n+#include <type_traits>\n+#include <utility>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper function to join messages in space separated string.\n+bilingual_str JoinMessages(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);\n+\n+//! Helper function to move messages from one vector to another.\n+void MoveMessages(std::vector<bilingual_str>& src, std::vector<bilingual_str>& dest);\n+\n+//! Subsitute for std::monostate that doesn't depend on std::variant.",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 24,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "08f5febfc571220043436bbec96a326beebdee22",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n//! Substitute for std::monostate that doesn't depend on std::variant.\r\n```\r\n-----\r\n\r\n<details><summary>also, per the lint CI / spelling linter</summary><p>\r\n\r\n```\r\nsrc/util/result.h:30: Subsitute ==> Substitute\r\nsrc/util/result.h:200: OT ==> TO, OF, OR, NOT\r\nsrc/util/result.h:201: OT ==> TO, OF, OR, NOT\r\nsrc/util/result.h:221: OT ==> TO, OF, OR, NOT\r\nsrc/util/result.h:222: OT ==> TO, OF, OR, NOT\r\n^ Warning: codespell identified likely spelling errors. Any false positives? Add them to the list of ignored words in test/lint/spelling.ignore-words.txt\r\n```\r\n</p></details>\r\n",
      "created_at": "2023-08-02T23:29:37Z",
      "updated_at": "2023-08-02T23:48:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1282502389",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1282502389"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1282503773",
      "pull_request_review_id": 1559945927,
      "id": 1282503773,
      "node_id": "PRRC_kwDOABII585McXRd",
      "diff_hunk": "@@ -2,6 +2,7 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <util/check.h>",
      "path": "src/test/result_tests.cpp",
      "position": 5,
      "original_position": 4,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "08f5febfc571220043436bbec96a326beebdee22",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "<details><summary>Tidy CI iwyu suggestions</summary><p>\r\n\r\n```diff\r\n+#include <tinyformat.h>\r\n+#include <util/translation.h3\r\n\r\n+#include <algorithm>\r\n+#include <memory>\r\n+#include <ostream>\r\n+#include <string>\r\n+#include <utility>\r\n```\r\n</p></details>\r\n",
      "created_at": "2023-08-02T23:32:58Z",
      "updated_at": "2023-08-02T23:45:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1282503773",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1282503773"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 6,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1282507096",
      "pull_request_review_id": 1559945927,
      "id": 1282507096,
      "node_id": "PRRC_kwDOABII585McYFY",
      "diff_hunk": "@@ -8,16 +8,136 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n-#include <variant>\n+#include <cassert>\n+#include <memory>\n+#include <new>\n+#include <optional>\n+#include <type_traits>\n+#include <utility>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper function to join messages in space separated string.\n+bilingual_str JoinMessages(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);\n+\n+//! Helper function to move messages from one vector to another.\n+void MoveMessages(std::vector<bilingual_str>& src, std::vector<bilingual_str>& dest);\n+\n+//! Subsitute for std::monostate that doesn't depend on std::variant.\n+struct MonoState{};\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same_v<F, void>, MonoState, F>> failure{};\n+    std::vector<bilingual_str> errors{};\n+    std::vector<bilingual_str> warnings{};\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    ErrorInfo<F>& Info() LIFETIMEBOUND\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        return *m_info;\n+    }\n+\n+    //! Value setter methods that do nothing because this class has value type T=void.\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O&& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    //! Success check.\n+    explicit operator bool() const { return !m_info || !m_info->failure; }\n+\n+    //! Error retrieval.\n+    const auto& GetFailure() const LIFETIMEBOUND { assert(!*this); return *m_info->failure; }\n+    const std::vector<bilingual_str>& GetErrors() const LIFETIMEBOUND { return m_info ? m_info->errors : EMPTY_LIST; }\n+    const std::vector<bilingual_str>& GetWarnings() const LIFETIMEBOUND { return m_info ? m_info->warnings : EMPTY_LIST; }",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 68,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "08f5febfc571220043436bbec96a326beebdee22",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "6ddcc9be `GetErrors()` and `GetWarnings()` don't seem to have any test coverage yet. Note that there is also already a `GetWarnings()` in `src/warnings.{h.cpp}`, perhaps disambiguate naming/grepping-wise in addition to namespace-wise.",
      "created_at": "2023-08-02T23:40:53Z",
      "updated_at": "2023-08-02T23:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1282507096",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1282507096"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 209,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1283623420",
      "pull_request_review_id": 1561722494,
      "id": 1283623420,
      "node_id": "PRRC_kwDOABII585Mgon8",
      "diff_hunk": "@@ -187,9 +188,9 @@ ChainstateLoadResult LoadChainstate(ChainstateManager& chainman, const CacheSize\n     // Load a chain created from a UTXO snapshot, if any exist.\n     chainman.DetectSnapshotChainstate(options.mempool);\n \n-    auto [init_status, init_error] = CompleteChainstateInitialization(chainman, cache_sizes, options);\n-    if (init_status != ChainstateLoadStatus::SUCCESS) {\n-        return {init_status, init_error};\n+    auto result{CompleteChainstateInitialization(chainman, cache_sizes, options)};\n+    if (!result) {\n+        return result;",
      "path": "src/node/chainstate.cpp",
      "position": 137,
      "original_position": 116,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "08f5febfc571220043436bbec96a326beebdee22",
      "in_reply_to_id": 1282499219,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1282499219\r\n\r\n> [584e3fa](https://github.com/bitcoin/bitcoin/commit/584e3fa4ea8ca15b3a8b46e023f218c5e0ed73b0) Not sure, but these `if (!result) return result;` idioms (here and lines 228-229 below) seem \"odd\" enough that an explanatory comment might be helpful.\r\n\r\nI think this will probably be a common pattern and it would be too verbose to explain what is happening each place it is used. If the code were misleading, I think I would want to do something to fix it now. But if it's just a little unusual looking, I think that's expected at this point, and we can see what improvements would be useful in the future as it is used more widely.",
      "created_at": "2023-08-03T19:20:33Z",
      "updated_at": "2023-08-03T20:42:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1283623420",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1283623420"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 191,
      "original_line": 191,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1283623667",
      "pull_request_review_id": 1561722494,
      "id": 1283623667,
      "node_id": "PRRC_kwDOABII585Mgorz",
      "diff_hunk": "@@ -2,6 +2,7 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <util/check.h>",
      "path": "src/test/result_tests.cpp",
      "position": 5,
      "original_position": 4,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "08f5febfc571220043436bbec96a326beebdee22",
      "in_reply_to_id": 1282503773,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1282503773\r\n\r\n> Tidy CI iwyu suggestions\r\n\r\nThanks applied these",
      "created_at": "2023-08-03T19:20:48Z",
      "updated_at": "2023-08-03T20:42:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1283623667",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1283623667"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 6,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1283624276",
      "pull_request_review_id": 1561722494,
      "id": 1283624276,
      "node_id": "PRRC_kwDOABII585Mgo1U",
      "diff_hunk": "@@ -8,16 +8,136 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n-#include <variant>\n+#include <cassert>\n+#include <memory>\n+#include <new>\n+#include <optional>\n+#include <type_traits>\n+#include <utility>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper function to join messages in space separated string.\n+bilingual_str JoinMessages(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);\n+\n+//! Helper function to move messages from one vector to another.\n+void MoveMessages(std::vector<bilingual_str>& src, std::vector<bilingual_str>& dest);\n+\n+//! Subsitute for std::monostate that doesn't depend on std::variant.",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 24,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "08f5febfc571220043436bbec96a326beebdee22",
      "in_reply_to_id": 1282502389,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1282502389\r\n\r\n> also, per the lint CI / spelling linter\r\n\r\nThanks, fixed spelling",
      "created_at": "2023-08-03T19:21:31Z",
      "updated_at": "2023-08-03T20:42:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1283624276",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1283624276"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1283629856",
      "pull_request_review_id": 1561722494,
      "id": 1283629856,
      "node_id": "PRRC_kwDOABII585MgqMg",
      "diff_hunk": "@@ -8,16 +8,136 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n-#include <variant>\n+#include <cassert>\n+#include <memory>\n+#include <new>\n+#include <optional>\n+#include <type_traits>\n+#include <utility>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper function to join messages in space separated string.\n+bilingual_str JoinMessages(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);\n+\n+//! Helper function to move messages from one vector to another.\n+void MoveMessages(std::vector<bilingual_str>& src, std::vector<bilingual_str>& dest);\n+\n+//! Subsitute for std::monostate that doesn't depend on std::variant.\n+struct MonoState{};\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same_v<F, void>, MonoState, F>> failure{};\n+    std::vector<bilingual_str> errors{};\n+    std::vector<bilingual_str> warnings{};\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    ErrorInfo<F>& Info() LIFETIMEBOUND\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        return *m_info;\n+    }\n+\n+    //! Value setter methods that do nothing because this class has value type T=void.\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O&& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    //! Success check.\n+    explicit operator bool() const { return !m_info || !m_info->failure; }\n+\n+    //! Error retrieval.\n+    const auto& GetFailure() const LIFETIMEBOUND { assert(!*this); return *m_info->failure; }\n+    const std::vector<bilingual_str>& GetErrors() const LIFETIMEBOUND { return m_info ? m_info->errors : EMPTY_LIST; }\n+    const std::vector<bilingual_str>& GetWarnings() const LIFETIMEBOUND { return m_info ? m_info->warnings : EMPTY_LIST; }",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 68,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "08f5febfc571220043436bbec96a326beebdee22",
      "in_reply_to_id": 1282507096,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1282507096\r\n\r\n> [6ddcc9b](https://github.com/bitcoin/bitcoin/commit/6ddcc9bec8f64148b7f4b6d03b8dd85a5e748175) `GetErrors()` and `GetWarnings()` don't seem to have any test coverage yet. Note that there is also already a `GetWarnings()` in `src/warnings.{h.cpp}`, perhaps disambiguate naming/grepping-wise in addition to namespace-wise.\r\n\r\nThanks, added some test coverage. On the `warnings.h` overlap, I think that `GetWarnings()` is not a great name for a top level function, and that function would be better to rename (or delete) regardless.",
      "created_at": "2023-08-03T19:26:24Z",
      "updated_at": "2023-08-03T20:42:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1283629856",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1283629856"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 209,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1283630635",
      "pull_request_review_id": 1561722494,
      "id": 1283630635,
      "node_id": "PRRC_kwDOABII585MgqYr",
      "diff_hunk": "@@ -31,57 +151,139 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class M>\n-class Result\n+//!\n+//! Most code does not need different error-handling behavior for different\n+//! types of errors, and can suffice just using the type `T` success value on\n+//! success, and descriptive error strings when there's a failure. But\n+//! applications that do need more complicated error-handling behavior can\n+//! override the default `F = void` failure type and get failure values by\n+//! calling result.GetFailure().\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    using T = std::conditional_t<std::is_same_v<M, void>, std::monostate, M>;\n+protected:\n+    // Base Construct() function, called recursively by Construct() overloads below.\n+    template <bool Failure, typename... Args>\n+    void Construct(Args&&... args)\n+    {\n+        if constexpr (Failure) {\n+            this->Info().failure.emplace(std::forward<Args>(args)...);\n+        } else {\n+            this->ConstructValue(std::forward<Args>(args)...);\n+        }\n+    }\n+\n+    // Recursive Construct() function. Peel off error argument and call the next Construct().\n+    template <bool Failure, typename... Args>\n+    void Construct(Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct</*Failure=*/true>(std::forward<Args>(args)...);\n+    }\n+\n+    // Recursive Construct() function. Peel off earning argument and call the next Construct().",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 178,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "08f5febfc571220043436bbec96a326beebdee22",
      "in_reply_to_id": 1282487687,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1282487687\r\n\r\n> Here and line 192 below: \"earning\"?\r\n\r\nThanks, rewrote these comments now",
      "created_at": "2023-08-03T19:26:57Z",
      "updated_at": "2023-08-03T20:42:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1283630635",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1283630635"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 184,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1284653088",
      "pull_request_review_id": 1563250744,
      "id": 1284653088,
      "node_id": "PRRC_kwDOABII585MkkAg",
      "diff_hunk": "@@ -8,58 +8,256 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n-#include <variant>\n+#include <cassert>\n+#include <memory>\n+#include <new>\n+#include <optional>\n+#include <type_traits>\n+#include <utility>\n+#include <vector>\n \n namespace util {\n \n+//! The `Result` class provides a standard way for functions to return error and\n+//! warning strings in addition to optional result values.\n+//!\n+//! The easiest way to understand `Result<T>` is to think of it as a substitute\n+//! for `std::optional<T>`, that just contains error and warning strings in\n+//! addition to the optional return value. For example:\n+//!\n+//!    util::Result<int> AddNumbers(int a, int b)\n+//!    {\n+//!        if (b == 0) return util::Error{_(\"Not adding 0, that's dumb.\")};\n+//!        return a + b;\n+//!    }\n+//!\n+//!    void TryAddNumbers(int a, int b)\n+//!    {\n+//!        if (auto result = AddNumbers(a, b)) {\n+//!            printf(\"%i + %i = %i\\n\", a, b, *result);\n+//!        } else {\n+//!            printf(\"Error: %s\\n\", util::ErrorString(result).translated.c_str());\n+//!        }\n+//!    }\n+//!\n+//! The `Result` class is intended to be used for high-level functions that need\n+//! to report error messages to end users. Low-level functions that don't need\n+//! error-reporting and only need error-handling should avoid `Result` and\n+//! instead use standard classes like `std::optional`, `std::variant`,\n+//! `std::expected`, and `std::tuple`, or custom structs and enum types to\n+//! return function results.\n+//!\n+//! Usage examples can be found in \\example ../test/result_tests.cpp, but in\n+//! general code using `Result<T>` return values is similar to code using\n+//! `std::optional<T>` return values. Existing functions returning\n+//! `std::optional<T>` can be updated to return `Result<T>` usually just\n+//! replacing `return std::nullopt;` with `return util::Error{error_string};`.\n+//!\n+//! An optional failure type `F` can be passed as a `Result<T, F>` template\n+//! argument. The default type `F = void` is sufficient for most code that just\n+//! needs an error description without more complicated error handling. But code\n+//! that does need more fine-grained failure information can set custom error\n+//! values of type `F` and retrieve them with the `GetFailure()` method.\n+template <typename T, typename F = void>\n+class Result;\n+\n+//! Wrapper types to pass error and warning strings to Result constructors.\n struct Error {\n     bilingual_str message;\n };\n+struct Warning {\n+    bilingual_str message;\n+};\n \n-//! The util::Result class provides a standard way for functions to return\n-//! either error messages or result values.\n-//!\n-//! It is intended for high-level functions that need to report error strings to\n-//! end users. Lower-level functions that don't need this error-reporting and\n-//! only need error-handling should avoid util::Result and instead use standard\n-//! classes like std::optional, std::variant, and std::tuple, or custom structs\n-//! and enum types to return function results.\n-//!\n-//! Usage examples can be found in \\example ../test/result_tests.cpp, but in\n-//! general code returning `util::Result<T>` values is very similar to code\n-//! returning `std::optional<T>` values. Existing functions returning\n-//! `std::optional<T>` can be updated to return `util::Result<T>` and return\n-//! error strings usually just replacing `return std::nullopt;` with `return\n-//! util::Error{error_string};`.\n-template <class M>\n-class Result\n+//! Wrapper type to move error and warning strings from an existing Result object to a new Result constructor.\n+template <typename Result>\n+struct MoveMessages {\n+    MoveMessages(Result&& result) : m_result(result) {}\n+    Result& m_result;\n+};\n+\n+//! Template deduction guide for MoveMessages class.\n+template <class Result>\n+MoveMessages(Result&& result) -> MoveMessages<Result&&>;\n+\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 96,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9e80d0b754a28733c79a52c8e0431616c31d071c",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "835f094 It looks like this empty vector might be declarable `constexpr`, at least with clang 16.0.6 arm64. Possibly not uniformly until C++20.",
      "created_at": "2023-08-04T16:53:26Z",
      "updated_at": "2023-08-04T17:11:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1284653088",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1284653088"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1284654294",
      "pull_request_review_id": 1563250744,
      "id": 1284654294,
      "node_id": "PRRC_kwDOABII585MkkTW",
      "diff_hunk": "@@ -70,18 +268,81 @@ class Result\n     {\n         return has_value() ? std::move(value()) : std::forward<U>(default_value);\n     }\n-    explicit operator bool() const noexcept { return has_value(); }\n     const T* operator->() const LIFETIMEBOUND { return &value(); }\n     const T& operator*() const LIFETIMEBOUND { return value(); }\n     T* operator->() LIFETIMEBOUND { return &value(); }\n     T& operator*() LIFETIMEBOUND { return value(); }\n };\n+} // namespace detail\n \n-template <typename T>\n-bilingual_str ErrorString(const Result<T>& result)\n+template <typename T, typename F>\n+class Result : public detail::ResultBase<T, F>\n {\n-    return result ? bilingual_str{} : std::get<0>(result.m_variant);\n-}\n+protected:\n+    using Base = detail::ResultBase<T, F>;",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 312,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9e80d0b754a28733c79a52c8e0431616c31d071c",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "9ec1bda Can `Base` here be private instead of protected?",
      "created_at": "2023-08-04T16:54:58Z",
      "updated_at": "2023-08-04T17:08:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1284654294",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1284654294"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 286,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1284664601",
      "pull_request_review_id": 1563250744,
      "id": 1284664601,
      "node_id": "PRRC_kwDOABII585Mkm0Z",
      "diff_hunk": "@@ -70,18 +268,81 @@ class Result\n     {\n         return has_value() ? std::move(value()) : std::forward<U>(default_value);\n     }\n-    explicit operator bool() const noexcept { return has_value(); }\n     const T* operator->() const LIFETIMEBOUND { return &value(); }\n     const T& operator*() const LIFETIMEBOUND { return value(); }\n     T* operator->() LIFETIMEBOUND { return &value(); }\n     T& operator*() LIFETIMEBOUND { return value(); }\n };\n+} // namespace detail\n \n-template <typename T>\n-bilingual_str ErrorString(const Result<T>& result)\n+template <typename T, typename F>\n+class Result : public detail::ResultBase<T, F>\n {\n-    return result ? bilingual_str{} : std::get<0>(result.m_variant);\n-}\n+protected:\n+    using Base = detail::ResultBase<T, F>;\n+\n+public:\n+    //! Construct a Result object setting a success or failure value and\n+    //! optional warning and error messages. Initial util::Error, util::Warning,\n+    //! and util::MoveMessages arguments are processed first to add warning and\n+    //! error messages. Then, any remaining arguments are passed to the type `T`\n+    //! constructor and used to construct a success value in the success case.\n+    //! In the failure case, any remaining arguments are passed to the type `F`\n+    //! constructor and used to construct a failure value.\n+    template <typename... Args>\n+    Result(Args&&... args)\n+    {\n+        Base::template ConstructResult</*Failure=*/false>(*this, std::forward<Args>(args)...);\n+    }\n+\n+    //! Move-construct a Result object from another Result object, moving the\n+    //! success or failure value any any error or warning messages.\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other)",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 331,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9e80d0b754a28733c79a52c8e0431616c31d071c",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "9ec1bda\r\n```\r\nsrc/util/result.h:300: OT ==> TO, OF, OR, NOT\r\nsrc/util/result.h:301: OT ==> TO, OF, OR, NOT\r\n^ Warning: codespell identified likely spelling errors. Any false positives? Add them to the list of ignored words in test/lint/spelling.ignore-words.txt\r\n```\r\n",
      "created_at": "2023-08-04T17:05:08Z",
      "updated_at": "2023-08-04T17:08:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1284664601",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1284664601"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 301,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1284708030",
      "pull_request_review_id": 1563338368,
      "id": 1284708030,
      "node_id": "PRRC_kwDOABII585Mkxa-",
      "diff_hunk": "@@ -70,18 +268,81 @@ class Result\n     {\n         return has_value() ? std::move(value()) : std::forward<U>(default_value);\n     }\n-    explicit operator bool() const noexcept { return has_value(); }\n     const T* operator->() const LIFETIMEBOUND { return &value(); }\n     const T& operator*() const LIFETIMEBOUND { return value(); }\n     T* operator->() LIFETIMEBOUND { return &value(); }\n     T& operator*() LIFETIMEBOUND { return value(); }\n };\n+} // namespace detail\n \n-template <typename T>\n-bilingual_str ErrorString(const Result<T>& result)\n+template <typename T, typename F>\n+class Result : public detail::ResultBase<T, F>\n {\n-    return result ? bilingual_str{} : std::get<0>(result.m_variant);\n-}\n+protected:\n+    using Base = detail::ResultBase<T, F>;",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 312,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9e80d0b754a28733c79a52c8e0431616c31d071c",
      "in_reply_to_id": 1284654294,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1284654294\r\n\r\n> [9ec1bda](https://github.com/bitcoin/bitcoin/commit/9ec1bdaff1cba965772a210e1e8326fc4f010aee) Can `Base` here be private instead of protected?\r\n\r\nIt could, but in general I prefer to use `protected` over `private` when it is safe for extensibility and testing, and in this case I want to support adding a `ResultPtr` type like the one in #26022 which inherits from `Result`. Also, `Base` is just a type alias for a public type, so making it private could only make the alias private, not the type, and only force type declarations to be more verbose. \r\n\r\nConceptually, I think the inheritance used in result.h is basically just an implementation detail, and that ResultBase/Result/ResultPtr classes should act like a single class and have full access to result state without any unnecessary obstacles or verbosity or layers of abstraction. In the future it would even be nice to combine Result and ResultBase classes together using [c++23's deduced this](https://devblogs.microsoft.com/cppblog/cpp23-deducing-this/#crtp) or maybe doing it without waiting for c++23 using the CRTP pattern mentioned at that link.",
      "created_at": "2023-08-04T18:01:26Z",
      "updated_at": "2023-08-07T18:06:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1284708030",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1284708030"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 286,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285999628",
      "pull_request_review_id": 1563338368,
      "id": 1285999628,
      "node_id": "PRRC_kwDOABII585MpswM",
      "diff_hunk": "@@ -8,58 +8,256 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n-#include <variant>\n+#include <cassert>\n+#include <memory>\n+#include <new>\n+#include <optional>\n+#include <type_traits>\n+#include <utility>\n+#include <vector>\n \n namespace util {\n \n+//! The `Result` class provides a standard way for functions to return error and\n+//! warning strings in addition to optional result values.\n+//!\n+//! The easiest way to understand `Result<T>` is to think of it as a substitute\n+//! for `std::optional<T>`, that just contains error and warning strings in\n+//! addition to the optional return value. For example:\n+//!\n+//!    util::Result<int> AddNumbers(int a, int b)\n+//!    {\n+//!        if (b == 0) return util::Error{_(\"Not adding 0, that's dumb.\")};\n+//!        return a + b;\n+//!    }\n+//!\n+//!    void TryAddNumbers(int a, int b)\n+//!    {\n+//!        if (auto result = AddNumbers(a, b)) {\n+//!            printf(\"%i + %i = %i\\n\", a, b, *result);\n+//!        } else {\n+//!            printf(\"Error: %s\\n\", util::ErrorString(result).translated.c_str());\n+//!        }\n+//!    }\n+//!\n+//! The `Result` class is intended to be used for high-level functions that need\n+//! to report error messages to end users. Low-level functions that don't need\n+//! error-reporting and only need error-handling should avoid `Result` and\n+//! instead use standard classes like `std::optional`, `std::variant`,\n+//! `std::expected`, and `std::tuple`, or custom structs and enum types to\n+//! return function results.\n+//!\n+//! Usage examples can be found in \\example ../test/result_tests.cpp, but in\n+//! general code using `Result<T>` return values is similar to code using\n+//! `std::optional<T>` return values. Existing functions returning\n+//! `std::optional<T>` can be updated to return `Result<T>` usually just\n+//! replacing `return std::nullopt;` with `return util::Error{error_string};`.\n+//!\n+//! An optional failure type `F` can be passed as a `Result<T, F>` template\n+//! argument. The default type `F = void` is sufficient for most code that just\n+//! needs an error description without more complicated error handling. But code\n+//! that does need more fine-grained failure information can set custom error\n+//! values of type `F` and retrieve them with the `GetFailure()` method.\n+template <typename T, typename F = void>\n+class Result;\n+\n+//! Wrapper types to pass error and warning strings to Result constructors.\n struct Error {\n     bilingual_str message;\n };\n+struct Warning {\n+    bilingual_str message;\n+};\n \n-//! The util::Result class provides a standard way for functions to return\n-//! either error messages or result values.\n-//!\n-//! It is intended for high-level functions that need to report error strings to\n-//! end users. Lower-level functions that don't need this error-reporting and\n-//! only need error-handling should avoid util::Result and instead use standard\n-//! classes like std::optional, std::variant, and std::tuple, or custom structs\n-//! and enum types to return function results.\n-//!\n-//! Usage examples can be found in \\example ../test/result_tests.cpp, but in\n-//! general code returning `util::Result<T>` values is very similar to code\n-//! returning `std::optional<T>` values. Existing functions returning\n-//! `std::optional<T>` can be updated to return `util::Result<T>` and return\n-//! error strings usually just replacing `return std::nullopt;` with `return\n-//! util::Error{error_string};`.\n-template <class M>\n-class Result\n+//! Wrapper type to move error and warning strings from an existing Result object to a new Result constructor.\n+template <typename Result>\n+struct MoveMessages {\n+    MoveMessages(Result&& result) : m_result(result) {}\n+    Result& m_result;\n+};\n+\n+//! Template deduction guide for MoveMessages class.\n+template <class Result>\n+MoveMessages(Result&& result) -> MoveMessages<Result&&>;\n+\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 96,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9e80d0b754a28733c79a52c8e0431616c31d071c",
      "in_reply_to_id": 1284653088,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1284653088\r\n\r\n> [835f094](https://github.com/bitcoin/bitcoin/commit/835f09452be5449f67fa44ecfa8a178404bff956) It looks like this empty vector might be declarable `constexpr`, at least with clang 16.0.6 arm64. Possibly not uniformly until C++20.\r\n\r\nThis is a good idea, but I think you are right it requires c++20. With my compiler (clang 13) I see:\r\n\r\n```c++\r\n./util/result.h:85:38: error: constexpr variable cannot have non-literal type 'const std::vector<bilingual_str>'\r\nconstexpr std::vector<bilingual_str> EMPTY_LIST{};\r\n                                     ^\r\n/nix/store/acbklvmaxi32lj3f7k1m1y00017f89ix-gcc-11.3.0/include/c++/11.3.0/bits/stl_vector.h:389:11: note: 'vector<bilingual_str>' is not literal because it is not an aggregate and has no constexpr constructors other than copy or move constructors\r\n    class vector : protected _Vector_base<_Tp, _Alloc>\r\n```",
      "created_at": "2023-08-07T14:54:48Z",
      "updated_at": "2023-08-07T18:06:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1285999628",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285999628"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286183719",
      "pull_request_review_id": 1563338368,
      "id": 1286183719,
      "node_id": "PRRC_kwDOABII585MqZsn",
      "diff_hunk": "@@ -70,18 +268,81 @@ class Result\n     {\n         return has_value() ? std::move(value()) : std::forward<U>(default_value);\n     }\n-    explicit operator bool() const noexcept { return has_value(); }\n     const T* operator->() const LIFETIMEBOUND { return &value(); }\n     const T& operator*() const LIFETIMEBOUND { return value(); }\n     T* operator->() LIFETIMEBOUND { return &value(); }\n     T& operator*() LIFETIMEBOUND { return value(); }\n };\n+} // namespace detail\n \n-template <typename T>\n-bilingual_str ErrorString(const Result<T>& result)\n+template <typename T, typename F>\n+class Result : public detail::ResultBase<T, F>\n {\n-    return result ? bilingual_str{} : std::get<0>(result.m_variant);\n-}\n+protected:\n+    using Base = detail::ResultBase<T, F>;\n+\n+public:\n+    //! Construct a Result object setting a success or failure value and\n+    //! optional warning and error messages. Initial util::Error, util::Warning,\n+    //! and util::MoveMessages arguments are processed first to add warning and\n+    //! error messages. Then, any remaining arguments are passed to the type `T`\n+    //! constructor and used to construct a success value in the success case.\n+    //! In the failure case, any remaining arguments are passed to the type `F`\n+    //! constructor and used to construct a failure value.\n+    template <typename... Args>\n+    Result(Args&&... args)\n+    {\n+        Base::template ConstructResult</*Failure=*/false>(*this, std::forward<Args>(args)...);\n+    }\n+\n+    //! Move-construct a Result object from another Result object, moving the\n+    //! success or failure value any any error or warning messages.\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other)",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 331,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9e80d0b754a28733c79a52c8e0431616c31d071c",
      "in_reply_to_id": 1284664601,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1284664601\r\n\r\n> ```\r\n> ^ Warning: codespell identified likely spelling errors. Any false positives? Add them to the list of ignored words in test/lint/spelling.ignore-words.txt\r\n> ```\r\n\r\nThanks, added",
      "created_at": "2023-08-07T17:22:01Z",
      "updated_at": "2023-08-07T18:06:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1286183719",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286183719"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 301,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1291349874",
      "pull_request_review_id": 1573685075,
      "id": 1291349874,
      "node_id": "PRRC_kwDOABII585M-G9y",
      "diff_hunk": "@@ -70,18 +268,81 @@ class Result\n     {\n         return has_value() ? std::move(value()) : std::forward<U>(default_value);\n     }\n-    explicit operator bool() const noexcept { return has_value(); }\n     const T* operator->() const LIFETIMEBOUND { return &value(); }\n     const T& operator*() const LIFETIMEBOUND { return value(); }\n     T* operator->() LIFETIMEBOUND { return &value(); }\n     T& operator*() LIFETIMEBOUND { return value(); }\n };\n+} // namespace detail\n \n-template <typename T>\n-bilingual_str ErrorString(const Result<T>& result)\n+template <typename T, typename F>\n+class Result : public detail::ResultBase<T, F>\n {\n-    return result ? bilingual_str{} : std::get<0>(result.m_variant);\n-}\n+protected:\n+    using Base = detail::ResultBase<T, F>;\n+\n+public:\n+    //! Construct a Result object setting a success or failure value and\n+    //! optional warning and error messages. Initial util::Error, util::Warning,\n+    //! and util::MoveMessages arguments are processed first to add warning and\n+    //! error messages. Then, any remaining arguments are passed to the type `T`\n+    //! constructor and used to construct a success value in the success case.\n+    //! In the failure case, any remaining arguments are passed to the type `F`\n+    //! constructor and used to construct a failure value.\n+    template <typename... Args>\n+    Result(Args&&... args)\n+    {\n+        Base::template ConstructResult</*Failure=*/false>(*this, std::forward<Args>(args)...);\n+    }\n+\n+    //! Move-construct a Result object from another Result object, moving the\n+    //! success or failure value any any error or warning messages.\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other)\n+    {\n+        Base::template MoveResult</*Constructed=*/false>(*this, std::move(other));\n+    }\n+\n+    //! Move success or failure values from another Result object to this\n+    //! object. Also move any error and warning messages from the other Result\n+    //! object to this one. If this Result object has an existing success or\n+    //! failure value, it is cleared and replaced by the other value. If this\n+    //! Result object has any error or warning messages, they are kept and\n+    //! appended to.\n+    Result& Set(Result&& other) LIFETIMEBOUND\n+    {\n+        Base::template MoveResult</*Constructed=*/true>(*this, std::move(other));\n+        return *this;\n+    }\n+\n+    //! Operator moving warning and error messages from a source result object\n+    //! to a destination result object. Only moves message strings, does not\n+    //! change success or failure values of either Result object.\n+    //!\n+    //! This is useful for combining error and warning messages from multiple\n+    //! result objects into a single object, e.g.:\n+    //!\n+    //!    util::Result<void> result;\n+    //!    auto r1 = DoSomething() >> result;\n+    //!    auto r2 = DoSomethingElse() >> result;\n+    //!    ...\n+    //!    return result;\n+    //!\n+    template<typename O>",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 361,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "7f883b33bb89205a9d00c2d20d363a36a0167c7c",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Style nit: Missing space.",
      "created_at": "2023-08-11T13:36:49Z",
      "updated_at": "2023-08-29T07:34:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1291349874",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1291349874"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 331,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308342946",
      "pull_request_review_id": 1573685075,
      "id": 1308342946,
      "node_id": "PRRC_kwDOABII585N-7qi",
      "diff_hunk": "@@ -8,58 +8,256 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n-#include <variant>\n+#include <cassert>\n+#include <memory>\n+#include <new>\n+#include <optional>\n+#include <type_traits>\n+#include <utility>\n+#include <vector>\n \n namespace util {\n \n+//! The `Result` class provides a standard way for functions to return error and\n+//! warning strings in addition to optional result values.\n+//!\n+//! The easiest way to understand `Result<T>` is to think of it as a substitute\n+//! for `std::optional<T>`, that just contains error and warning strings in\n+//! addition to the optional return value. For example:\n+//!\n+//!    util::Result<int> AddNumbers(int a, int b)\n+//!    {\n+//!        if (b == 0) return util::Error{_(\"Not adding 0, that's dumb.\")};\n+//!        return a + b;\n+//!    }\n+//!\n+//!    void TryAddNumbers(int a, int b)\n+//!    {\n+//!        if (auto result = AddNumbers(a, b)) {\n+//!            printf(\"%i + %i = %i\\n\", a, b, *result);\n+//!        } else {\n+//!            printf(\"Error: %s\\n\", util::ErrorString(result).translated.c_str());\n+//!        }\n+//!    }\n+//!\n+//! The `Result` class is intended to be used for high-level functions that need\n+//! to report error messages to end users. Low-level functions that don't need\n+//! error-reporting and only need error-handling should avoid `Result` and\n+//! instead use standard classes like `std::optional`, `std::variant`,\n+//! `std::expected`, and `std::tuple`, or custom structs and enum types to\n+//! return function results.\n+//!\n+//! Usage examples can be found in \\example ../test/result_tests.cpp, but in\n+//! general code using `Result<T>` return values is similar to code using\n+//! `std::optional<T>` return values. Existing functions returning\n+//! `std::optional<T>` can be updated to return `Result<T>` usually just\n+//! replacing `return std::nullopt;` with `return util::Error{error_string};`.\n+//!\n+//! An optional failure type `F` can be passed as a `Result<T, F>` template\n+//! argument. The default type `F = void` is sufficient for most code that just\n+//! needs an error description without more complicated error handling. But code\n+//! that does need more fine-grained failure information can set custom error\n+//! values of type `F` and retrieve them with the `GetFailure()` method.\n+template <typename T, typename F = void>\n+class Result;\n+\n+//! Wrapper types to pass error and warning strings to Result constructors.\n struct Error {\n     bilingual_str message;\n };\n+struct Warning {\n+    bilingual_str message;\n+};\n \n-//! The util::Result class provides a standard way for functions to return\n-//! either error messages or result values.\n-//!\n-//! It is intended for high-level functions that need to report error strings to\n-//! end users. Lower-level functions that don't need this error-reporting and\n-//! only need error-handling should avoid util::Result and instead use standard\n-//! classes like std::optional, std::variant, and std::tuple, or custom structs\n-//! and enum types to return function results.\n-//!\n-//! Usage examples can be found in \\example ../test/result_tests.cpp, but in\n-//! general code returning `util::Result<T>` values is very similar to code\n-//! returning `std::optional<T>` values. Existing functions returning\n-//! `std::optional<T>` can be updated to return `util::Result<T>` and return\n-//! error strings usually just replacing `return std::nullopt;` with `return\n-//! util::Error{error_string};`.\n-template <class M>\n-class Result\n+//! Wrapper type to move error and warning strings from an existing Result object to a new Result constructor.\n+template <typename Result>\n+struct MoveMessages {\n+    MoveMessages(Result&& result) : m_result(result) {}\n+    Result& m_result;\n+};\n+\n+//! Template deduction guide for MoveMessages class.\n+template <class Result>\n+MoveMessages(Result&& result) -> MoveMessages<Result&&>;\n+\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n+\n+//! Helper function to join messages in space separated string.\n+bilingual_str JoinMessages(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);\n+\n+//! Helper function to move messages from one vector to another.\n+void MoveMessages(std::vector<bilingual_str>& src, std::vector<bilingual_str>& dest);\n+\n+//! Substitute for std::monostate that doesn't depend on std::variant.\n+struct MonoState{};\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same_v<F, void>, MonoState, F>> failure{};\n+    std::vector<bilingual_str> errors{};\n+    std::vector<bilingual_str> warnings{};\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n {\n-private:\n-    using T = std::conditional_t<std::is_same_v<M, void>, std::monostate, M>;\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    ErrorInfo<F>& Info() LIFETIMEBOUND\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        return *m_info;\n+    }\n+\n+    //! Value setter methods which do nothing because this ResultBase class is\n+    //! specialized for type T=void, so there is no result value for it to hold.\n+    //! The other ResultBase specialization below for non-void T overrides these\n+    //! methods to manage the result value it contains.\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O&& other) {}\n+    void DestroyValue() {}\n+\n+    //! Helper function to construct a new Result success value or failure value\n+    //! using the arguments provided.\n+    template <bool Failure, typename Result, typename... Args>\n+    static void ConstructResult(Result& result, Args&&... args)\n+    {\n+        if constexpr (Failure) {\n+            result.Info().failure.emplace(std::forward<Args>(args)...);\n+        } else {\n+            result.ConstructValue(std::forward<Args>(args)...);\n+        }\n+    }\n \n-    std::variant<bilingual_str, T> m_variant;\n+    //! ConstructResult() overload peeling off a util::Error constructor argument.\n+    template <bool Failure, typename Result, typename... Args>\n+    static void ConstructResult(Result& result, util::Error error, Args&&... args)\n+    {\n+        result.AddError(std::move(error.message));\n+        ConstructResult</*Failure=*/true>(result, std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    //! ConstructResult() overload peeling off a util::Warning constructor argument.\n+    template <bool Failure, typename Result, typename... Args>\n+    static void ConstructResult(Result& result, util::Warning warning, Args&&... args)\n+    {\n+        result.AddWarning(std::move(warning.message));\n+        ConstructResult<Failure>(result, std::forward<Args>(args)...);\n+    }\n+\n+    //! ConstructResult() overload peeling off a util::MoveMessages constructor argument.\n+    template <bool Failure, typename Result, typename R, typename... Args>\n+    static void ConstructResult(Result& result, util::MoveMessages<R> messages, Args&&... args)\n+    {\n+        result.MoveMessages(std::move(messages.m_result));\n+        ConstructResult<Failure>(result, std::forward<Args>(args)...);\n+    }\n+\n+    //! Helper function to move success or failure values and any error and\n+    //! warning messages from one result object to another. The two result\n+    //! objects must have compatible success and failure types.\n+    template <bool Constructed, typename DstResult, typename SrcResult>\n+    static void MoveResult(DstResult& dst, SrcResult&& src)\n+    {\n+        if (Constructed) {\n+            if (dst) {\n+                dst.DestroyValue();\n+            } else {\n+                dst.m_info->failure.reset();",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 195,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "7f883b33bb89205a9d00c2d20d363a36a0167c7c",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This line is missing test coverage. It could be achieved with the following diff (though there might be a more elegant way to achieve this):\r\n```diff\r\n-util::Result<int, FnError> AccumulateFn(bool success)\r\n+util::Result<int, FnError> AccumulateFn(bool success, bool init_success)\r\n {\r\n-    util::Result<int, FnError> result;\r\n+    util::Result<int, FnError> result = IntFailFn(0, init_success);\r\n     util::Result<int> x = MultiWarnFn(1) >> result;\r\n     BOOST_REQUIRE(x);\r\n     util::Result<int> y = MultiWarnFn(2) >> result;\r\n@@ -195,8 +195,10 @@ BOOST_AUTO_TEST_CASE(check_returned)\r\n     ExpectFail(EnumFailFn(ERR2), Untranslated(\"enum fail.\"), ERR2);\r\n     ExpectFail(ChainedFailFn(ERR1, 5), Untranslated(\"chained fail. enum fail. warn.\"), 5);\r\n     ExpectSuccess(MultiWarnFn(3), Untranslated(\"warn 0. warn 1. warn 2.\"), 3);\r\n-    ExpectSuccess(AccumulateFn(true), Untranslated(\"warn 0. warn 0. warn 1. int 3 warn.\"), 3);\r\n-    ExpectFail(AccumulateFn(false), Untranslated(\"int 3 error. warn 0. warn 0. warn 1.\"), ERR1);\r\n+    ExpectSuccess(AccumulateFn(true, true), Untranslated(\"int 0 warn. warn 0. warn 0. warn 1. int 3 warn.\"), 3);\r\n+    ExpectFail(AccumulateFn(false, true), Untranslated(\"int 3 error. int 0 warn. warn 0. warn 0. warn 1.\"), ERR1);\r\n+    ExpectSuccess(AccumulateFn(true, false), Untranslated(\"int 0 error. warn 0. warn 0. warn 1. int 3 warn.\"), 3);\r\n+    ExpectFail(AccumulateFn(false, false), Untranslated(\"int 0 error. int 3 error. warn 0. warn 0. warn 1.\"), ERR1);\r\n     ExpectSuccess(TruthyFalsyFn(0, true), {}, 0);\r\n     ExpectFail(TruthyFalsyFn(0, false), Untranslated(\"failure value 0.\"), 0);\r\n     ExpectSuccess(TruthyFalsyFn(1, true), {}, 1);\r\n```",
      "created_at": "2023-08-29T07:30:50Z",
      "updated_at": "2023-08-29T07:34:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1308342946",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308342946"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 181,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310277702",
      "pull_request_review_id": 1602705708,
      "id": 1310277702,
      "node_id": "PRRC_kwDOABII585OGUBG",
      "diff_hunk": "@@ -8,68 +8,184 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n-#include <variant>\n+#include <cassert>\n+#include <memory>\n+#include <new>\n+#include <optional>\n+#include <type_traits>\n+#include <utility>\n+#include <vector>\n \n namespace util {\n \n+//! The `Result` class provides a standard way for functions to return an error\n+//! string in addition to optional result values.\n+//!\n+//! The easiest way to understand `Result<T>` is to think of it as a substitute\n+//! for `std::optional<T>`, that just contains an error string in\n+//! addition to the optional return value. For example:\n+//!\n+//!    util::Result<int> AddNumbers(int a, int b)\n+//!    {\n+//!        if (b == 0) return util::Error{_(\"Not adding 0, that's dumb.\")};\n+//!        return a + b;\n+//!    }\n+//!\n+//!    void TryAddNumbers(int a, int b)\n+//!    {\n+//!        if (auto result = AddNumbers(a, b)) {\n+//!            printf(\"%i + %i = %i\\n\", a, b, *result);\n+//!        } else {\n+//!            printf(\"Error: %s\\n\", util::ErrorString(result).translated.c_str());\n+//!        }\n+//!    }\n+//!\n+//! The `Result` class is intended to be used for high-level functions that need\n+//! to report error messages to end users. Low-level functions that don't need\n+//! error-reporting and only need error-handling should avoid `Result` and\n+//! instead use standard classes like `std::optional`, `std::variant`,\n+//! `std::expected`, and `std::tuple`, or custom structs and enum types to\n+//! return function results.\n+//!\n+//! Usage examples can be found in \\example ../test/result_tests.cpp, but in\n+//! general code using `Result<T>` return values is similar to code using\n+//! `std::optional<T>` return values. Existing functions returning\n+//! `std::optional<T>` can be updated to return `Result<T>` usually just\n+//! replacing `return std::nullopt;` with `return util::Error{error_string};`.\n+//!\n+//! An optional failure type `F` can be passed as a `Result<T, F>` template\n+//! argument. The default type `F = void` is sufficient for most code that just\n+//! needs an error description without more complicated error handling. But code\n+//! that does need more fine-grained failure information can set custom error\n+//! values of type `F` and retrieve them with the `GetFailure()` method.\n+template <typename T, typename F = void>\n+class Result;\n+\n+//! Wrapper type to pass error strings to Result constructors.\n struct Error {\n     bilingual_str message;\n };\n \n-//! The util::Result class provides a standard way for functions to return\n-//! either error messages or result values.\n-//!\n-//! It is intended for high-level functions that need to report error strings to\n-//! end users. Lower-level functions that don't need this error-reporting and\n-//! only need error-handling should avoid util::Result and instead use standard\n-//! classes like std::optional, std::variant, and std::tuple, or custom structs\n-//! and enum types to return function results.\n-//!\n-//! Usage examples can be found in \\example ../test/result_tests.cpp, but in\n-//! general code returning `util::Result<T>` values is very similar to code\n-//! returning `std::optional<T>` values. Existing functions returning\n-//! `std::optional<T>` can be updated to return `util::Result<T>` and return\n-//! error strings usually just replacing `return std::nullopt;` with `return\n-//! util::Error{error_string};`.\n-template <class M>\n-class Result\n+namespace detail {\n+//! Substitute for std::monostate that doesn't depend on std::variant.\n+struct MonoState{};\n+\n+//! Error information only allocated on failure.\n+template <typename F>\n+struct ErrorInfo {\n+    std::conditional_t<std::is_same_v<F, void>, MonoState, F> failure;\n+    bilingual_str error;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n {\n-private:\n-    using T = std::conditional_t<std::is_same_v<M, void>, std::monostate, M>;\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n \n-    std::variant<bilingual_str, T> m_variant;\n+    //! Value setter methods which do nothing because this ResultBase class is\n+    //! specialized for type T=void, so there is no result value for it to hold.\n+    //! The other ResultBase specialization below for non-void T overrides these\n+    //! methods to manage the result value it contains.\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O&& other) {}\n+    void DestroyValue() {}\n+\n+    //! Helper function to construct a new Result success value or failure value\n+    //! using the arguments provided.\n+    template <bool Failure, typename Result, typename... Args>\n+    static void ConstructResult(Result& result, Args&&... args)\n+    {\n+        if constexpr (Failure) {\n+            result.m_info.reset(new detail::ErrorInfo<F>{.failure{std::forward<Args>(args)...}, .error{}});\n+        } else {\n+            result.ConstructValue(std::forward<Args>(args)...);\n+        }\n+    }\n+\n+    //! ConstructResult() overload peeling off a util::Error constructor argument.\n+    template <bool Failure, typename Result, typename... Args>\n+    static void ConstructResult(Result& result, util::Error error, Args&&... args)\n+    {\n+        ConstructResult</*Failure=*/true>(result, std::forward<Args>(args)...);\n+        result.m_info->error = std::move(error.message);\n+    }\n+\n+    //! Helper function to move success or failure values and any error\n+    //! message from one result object to another. The two result\n+    //! objects must have compatible success and failure types.\n+    template <bool Constructed, typename DstResult, typename SrcResult>\n+    static void MoveResult(DstResult& dst, SrcResult&& src)\n+    {\n+        if (Constructed) {\n+            if (dst) {\n+                dst.DestroyValue();\n+            } else {\n+                dst.m_info.reset();\n+            }\n+        }\n+        if (src) {\n+            dst.MoveValue(std::move(src));\n+        } else {\n+            dst.m_info.reset(new detail::ErrorInfo<F>{std::move(*src.m_info)});\n+        }\n+    }\n \n     //! Disallow operator= and require explicit Result::Set() calls to avoid\n     //! confusion in the future when the Result class gains support for richer\n     //! error reporting, and callers should have ability to set a new result\n     //! value without clearing existing error messages.\n-    Result& operator=(const Result&) = default;\n-    Result& operator=(Result&&) = default;\n+    template <typename Result>\n+    ResultBase& operator=(Result&&) = delete;\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename, typename>\n+    friend class ResultBase;\n \n public:\n-    Result() : m_variant{std::in_place_index_t<1>{}, std::monostate{}} {}  // constructor for void\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n-    Result(const Result&) = default;\n-    Result(Result&&) = default;\n-    ~Result() = default;\n+    //! Success check.\n+    explicit operator bool() const { return !m_info; }\n+\n+    //! Error retrieval.\n+    const auto& GetFailure() const LIFETIMEBOUND { assert(!*this); return m_info->failure; }\n+};\n \n+//! Result base class for T value type. Holds value and provides accessor methods.\n+template <typename T, typename F>\n+class ResultBase : public ResultBase<void, F>\n+{\n+protected:\n+    //! Result success value. Uses anonymous union so success value is never\n+    //! constructed in failure case.\n+    union { T m_value; };\n+\n+    template <typename... Args>\n+    void ConstructValue(Args&&... args) { new (&m_value) T{std::forward<Args>(args)...}; }\n+    template <typename O>\n+    void MoveValue(O&& other) { new (&m_value) T{std::move(other.m_value)}; }\n+    void DestroyValue() { m_value.~T(); }\n+\n+    //! Empty constructor that needs to be declared because the class contains a union.\n+    ResultBase() {}\n+    ~ResultBase() { if (*this) DestroyValue(); }\n+\n+    template <typename, typename>\n+    friend class ResultBase;\n+\n+public:\n     //! std::optional methods, so functions returning optional<T> can change to\n     //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n-    {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n-    }\n-    T& value() LIFETIMEBOUND\n-    {\n-        assert(has_value());",
      "path": "src/util/result.h",
      "position": 190,
      "original_position": 218,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "03595104ccda64f301cac217d7de9aae69c0de67",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "in https://github.com/bitcoin/bitcoin/commit/03595104ccda64f301cac217d7de9aae69c0de67: clang-format new code to reduce this diff here?",
      "created_at": "2023-08-30T13:24:26Z",
      "updated_at": "2023-08-30T14:11:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1310277702",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310277702"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 72,
      "original_line": 72,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310285158",
      "pull_request_review_id": 1602705708,
      "id": 1310285158,
      "node_id": "PRRC_kwDOABII585OGV1m",
      "diff_hunk": "@@ -8,68 +8,184 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n-#include <variant>\n+#include <cassert>\n+#include <memory>\n+#include <new>\n+#include <optional>\n+#include <type_traits>\n+#include <utility>\n+#include <vector>\n \n namespace util {\n \n+//! The `Result` class provides a standard way for functions to return an error\n+//! string in addition to optional result values.\n+//!\n+//! The easiest way to understand `Result<T>` is to think of it as a substitute\n+//! for `std::optional<T>`, that just contains an error string in\n+//! addition to the optional return value. For example:\n+//!\n+//!    util::Result<int> AddNumbers(int a, int b)\n+//!    {\n+//!        if (b == 0) return util::Error{_(\"Not adding 0, that's dumb.\")};\n+//!        return a + b;\n+//!    }\n+//!\n+//!    void TryAddNumbers(int a, int b)\n+//!    {\n+//!        if (auto result = AddNumbers(a, b)) {\n+//!            printf(\"%i + %i = %i\\n\", a, b, *result);\n+//!        } else {\n+//!            printf(\"Error: %s\\n\", util::ErrorString(result).translated.c_str());\n+//!        }\n+//!    }\n+//!\n+//! The `Result` class is intended to be used for high-level functions that need\n+//! to report error messages to end users. Low-level functions that don't need\n+//! error-reporting and only need error-handling should avoid `Result` and\n+//! instead use standard classes like `std::optional`, `std::variant`,\n+//! `std::expected`, and `std::tuple`, or custom structs and enum types to\n+//! return function results.\n+//!\n+//! Usage examples can be found in \\example ../test/result_tests.cpp, but in\n+//! general code using `Result<T>` return values is similar to code using\n+//! `std::optional<T>` return values. Existing functions returning\n+//! `std::optional<T>` can be updated to return `Result<T>` usually just\n+//! replacing `return std::nullopt;` with `return util::Error{error_string};`.\n+//!\n+//! An optional failure type `F` can be passed as a `Result<T, F>` template\n+//! argument. The default type `F = void` is sufficient for most code that just\n+//! needs an error description without more complicated error handling. But code\n+//! that does need more fine-grained failure information can set custom error\n+//! values of type `F` and retrieve them with the `GetFailure()` method.\n+template <typename T, typename F = void>\n+class Result;\n+\n+//! Wrapper type to pass error strings to Result constructors.\n struct Error {\n     bilingual_str message;\n };\n \n-//! The util::Result class provides a standard way for functions to return\n-//! either error messages or result values.\n-//!\n-//! It is intended for high-level functions that need to report error strings to\n-//! end users. Lower-level functions that don't need this error-reporting and\n-//! only need error-handling should avoid util::Result and instead use standard\n-//! classes like std::optional, std::variant, and std::tuple, or custom structs\n-//! and enum types to return function results.\n-//!\n-//! Usage examples can be found in \\example ../test/result_tests.cpp, but in\n-//! general code returning `util::Result<T>` values is very similar to code\n-//! returning `std::optional<T>` values. Existing functions returning\n-//! `std::optional<T>` can be updated to return `util::Result<T>` and return\n-//! error strings usually just replacing `return std::nullopt;` with `return\n-//! util::Error{error_string};`.\n-template <class M>\n-class Result\n+namespace detail {\n+//! Substitute for std::monostate that doesn't depend on std::variant.\n+struct MonoState{};\n+\n+//! Error information only allocated on failure.\n+template <typename F>\n+struct ErrorInfo {\n+    std::conditional_t<std::is_same_v<F, void>, MonoState, F> failure;\n+    bilingual_str error;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n {\n-private:\n-    using T = std::conditional_t<std::is_same_v<M, void>, std::monostate, M>;\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n \n-    std::variant<bilingual_str, T> m_variant;\n+    //! Value setter methods which do nothing because this ResultBase class is\n+    //! specialized for type T=void, so there is no result value for it to hold.\n+    //! The other ResultBase specialization below for non-void T overrides these\n+    //! methods to manage the result value it contains.\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O&& other) {}\n+    void DestroyValue() {}\n+\n+    //! Helper function to construct a new Result success value or failure value\n+    //! using the arguments provided.\n+    template <bool Failure, typename Result, typename... Args>\n+    static void ConstructResult(Result& result, Args&&... args)\n+    {\n+        if constexpr (Failure) {\n+            result.m_info.reset(new detail::ErrorInfo<F>{.failure{std::forward<Args>(args)...}, .error{}});\n+        } else {\n+            result.ConstructValue(std::forward<Args>(args)...);\n+        }\n+    }\n+\n+    //! ConstructResult() overload peeling off a util::Error constructor argument.\n+    template <bool Failure, typename Result, typename... Args>\n+    static void ConstructResult(Result& result, util::Error error, Args&&... args)\n+    {\n+        ConstructResult</*Failure=*/true>(result, std::forward<Args>(args)...);\n+        result.m_info->error = std::move(error.message);\n+    }\n+\n+    //! Helper function to move success or failure values and any error\n+    //! message from one result object to another. The two result\n+    //! objects must have compatible success and failure types.\n+    template <bool Constructed, typename DstResult, typename SrcResult>\n+    static void MoveResult(DstResult& dst, SrcResult&& src)\n+    {\n+        if (Constructed) {",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 143,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "03595104ccda64f301cac217d7de9aae69c0de67",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "in https://github.com/bitcoin/bitcoin/commit/03595104ccda64f301cac217d7de9aae69c0de67: Doesn't matter, but could add `contexpr` here, or remove it above, for consistency, if it compiles?",
      "created_at": "2023-08-30T13:29:19Z",
      "updated_at": "2023-08-30T14:11:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1310285158",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310285158"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 129,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310289598",
      "pull_request_review_id": 1602705708,
      "id": 1310289598,
      "node_id": "PRRC_kwDOABII585OGW6-",
      "diff_hunk": "@@ -80,21 +196,56 @@ class Result\n     {\n         return has_value() ? std::move(value()) : std::forward<U>(default_value);\n     }\n-    explicit operator bool() const noexcept { return has_value(); }\n     const T* operator->() const LIFETIMEBOUND { return &value(); }\n     const T& operator*() const LIFETIMEBOUND { return value(); }\n     T* operator->() LIFETIMEBOUND { return &value(); }\n     T& operator*() LIFETIMEBOUND { return value(); }\n-\n-    //! Assign success or failure value from another result object.\n-    Result& Set(Result&& other) LIFETIMEBOUND { return *this = std::move(other); }\n };\n+} // namespace detail\n \n-template <typename T>\n-bilingual_str ErrorString(const Result<T>& result)\n+template <typename T, typename F>\n+class Result : public detail::ResultBase<T, F>\n {\n-    return result ? bilingual_str{} : std::get<0>(result.m_variant);\n-}\n+protected:\n+    using Base = detail::ResultBase<T, F>;\n+\n+public:\n+    //! Construct a Result object setting a success or failure value. An\n+    //! optional util::Error argument is processed first to set an error\n+    //! message. Then, any remaining arguments are passed to the type `T`\n+    //! constructor and used to construct a success value in the success case.\n+    //! In the failure case, any remaining arguments are passed to the type `F`\n+    //! constructor and used to construct a failure value.\n+    template <typename... Args>\n+    Result(Args&&... args)\n+    {\n+        Base::template ConstructResult</*Failure=*/false>(*this, std::forward<Args>(args)...);\n+    }\n+\n+    //! Move-construct a Result object from another Result object, moving the\n+    //! success or failure value and any error message.\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other)\n+    {\n+        Base::template MoveResult</*Constructed=*/false>(*this, std::move(other));\n+    }\n+\n+    //! Move success or failure values and any error message from another Result\n+    //! object to this object.\n+    Result& Set(Result&& other) LIFETIMEBOUND",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 275,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "03595104ccda64f301cac217d7de9aae69c0de67",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "in https://github.com/bitcoin/bitcoin/commit/03595104ccda64f301cac217d7de9aae69c0de67: Is there a unit test for this method? I am thinking about a test to check what happens when an error-result is `Set` a value-result, and vice-versa.",
      "created_at": "2023-08-30T13:32:15Z",
      "updated_at": "2023-08-30T14:11:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1310289598",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310289598"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 317,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310290697",
      "pull_request_review_id": 1602705708,
      "id": 1310290697,
      "node_id": "PRRC_kwDOABII585OGXMJ",
      "diff_hunk": "@@ -80,21 +196,56 @@ class Result\n     {\n         return has_value() ? std::move(value()) : std::forward<U>(default_value);\n     }\n-    explicit operator bool() const noexcept { return has_value(); }\n     const T* operator->() const LIFETIMEBOUND { return &value(); }\n     const T& operator*() const LIFETIMEBOUND { return value(); }\n     T* operator->() LIFETIMEBOUND { return &value(); }\n     T& operator*() LIFETIMEBOUND { return value(); }\n-\n-    //! Assign success or failure value from another result object.\n-    Result& Set(Result&& other) LIFETIMEBOUND { return *this = std::move(other); }\n };\n+} // namespace detail\n \n-template <typename T>\n-bilingual_str ErrorString(const Result<T>& result)\n+template <typename T, typename F>\n+class Result : public detail::ResultBase<T, F>\n {\n-    return result ? bilingual_str{} : std::get<0>(result.m_variant);\n-}\n+protected:\n+    using Base = detail::ResultBase<T, F>;\n+\n+public:\n+    //! Construct a Result object setting a success or failure value. An\n+    //! optional util::Error argument is processed first to set an error\n+    //! message. Then, any remaining arguments are passed to the type `T`\n+    //! constructor and used to construct a success value in the success case.\n+    //! In the failure case, any remaining arguments are passed to the type `F`\n+    //! constructor and used to construct a failure value.\n+    template <typename... Args>\n+    Result(Args&&... args)\n+    {\n+        Base::template ConstructResult</*Failure=*/false>(*this, std::forward<Args>(args)...);\n+    }\n+\n+    //! Move-construct a Result object from another Result object, moving the\n+    //! success or failure value and any error message.\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other)\n+    {\n+        Base::template MoveResult</*Constructed=*/false>(*this, std::move(other));\n+    }\n+\n+    //! Move success or failure values and any error message from another Result\n+    //! object to this object.\n+    Result& Set(Result&& other) LIFETIMEBOUND\n+    {\n+        Base::template MoveResult</*Constructed=*/true>(*this, std::move(other));\n+        return *this;\n+    }\n+\n+    inline friend bilingual_str _ErrorString(const Result& result)",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 281,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "03595104ccda64f301cac217d7de9aae69c0de67",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "in https://github.com/bitcoin/bitcoin/commit/03595104ccda64f301cac217d7de9aae69c0de67: Why inline? IIUC every member is inline, so this seems confusing, no?\r\n\r\nFrom the usage below it looks like this is `static` for some reason? Is `inline friend` an alias for `static friend`?",
      "created_at": "2023-08-30T13:33:02Z",
      "updated_at": "2023-08-30T14:11:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1310290697",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310290697"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 241,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310295516",
      "pull_request_review_id": 1602705708,
      "id": 1310295516,
      "node_id": "PRRC_kwDOABII585OGYXc",
      "diff_hunk": "@@ -8,68 +8,184 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n-#include <variant>\n+#include <cassert>\n+#include <memory>\n+#include <new>\n+#include <optional>\n+#include <type_traits>\n+#include <utility>\n+#include <vector>\n \n namespace util {\n \n+//! The `Result` class provides a standard way for functions to return an error\n+//! string in addition to optional result values.\n+//!\n+//! The easiest way to understand `Result<T>` is to think of it as a substitute\n+//! for `std::optional<T>`, that just contains an error string in\n+//! addition to the optional return value. For example:\n+//!\n+//!    util::Result<int> AddNumbers(int a, int b)\n+//!    {\n+//!        if (b == 0) return util::Error{_(\"Not adding 0, that's dumb.\")};\n+//!        return a + b;\n+//!    }\n+//!\n+//!    void TryAddNumbers(int a, int b)\n+//!    {\n+//!        if (auto result = AddNumbers(a, b)) {\n+//!            printf(\"%i + %i = %i\\n\", a, b, *result);\n+//!        } else {\n+//!            printf(\"Error: %s\\n\", util::ErrorString(result).translated.c_str());",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 33,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "03595104ccda64f301cac217d7de9aae69c0de67",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "in https://github.com/bitcoin/bitcoin/commit/03595104ccda64f301cac217d7de9aae69c0de67: Obviously doesn't matter, but if there is an alternative to say the same without `c_str()`, I'd prefer that :sweat_smile: ",
      "created_at": "2023-08-30T13:36:19Z",
      "updated_at": "2023-08-30T14:11:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1310295516",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310295516"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 39,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310327102",
      "pull_request_review_id": 1602705708,
      "id": 1310327102,
      "node_id": "PRRC_kwDOABII585OGgE-",
      "diff_hunk": "@@ -0,0 +1,31 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <algorithm>\n+#include <initializer_list>\n+#include <iterator>\n+#include <util/result.h>",
      "path": "src/util/result.cpp",
      "position": 1,
      "original_position": 8,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "b21e2b067e28e49a289e55a1bd25f67a7c342f76",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in b21e2b067e28e49a289e55a1bd25f67a7c342f76: The self-include must be in the first line and first section to catch missing includes.",
      "created_at": "2023-08-30T13:57:00Z",
      "updated_at": "2023-08-30T14:11:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1310327102",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310327102"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 8,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310327644",
      "pull_request_review_id": 1602705708,
      "id": 1310327644,
      "node_id": "PRRC_kwDOABII585OGgNc",
      "diff_hunk": "@@ -0,0 +1,31 @@\n+// Copyright (c) 2022 The Bitcoin Core developers",
      "path": "src/util/result.cpp",
      "position": 1,
      "original_position": 1,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "b21e2b067e28e49a289e55a1bd25f67a7c342f76",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in b21e2b067e28e49a289e55a1bd25f67a7c342f76: `2022-present` or no year for new code to avoid having to ever touch this again?",
      "created_at": "2023-08-30T13:57:23Z",
      "updated_at": "2023-08-30T14:11:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1310327644",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310327644"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310334699",
      "pull_request_review_id": 1602705708,
      "id": 1310334699,
      "node_id": "PRRC_kwDOABII585OGh7r",
      "diff_hunk": "@@ -61,20 +61,44 @@ namespace util {\n template <typename T, typename F = void>\n class Result;\n \n-//! Wrapper type to pass error strings to Result constructors.\n+//! Wrapper types to pass error and warning strings to Result constructors.\n struct Error {\n     bilingual_str message;\n };\n+struct Warning {\n+    bilingual_str message;\n+};\n+\n+//! Wrapper type to move error and warning strings from an existing Result object to a new Result constructor.\n+template <typename Result>\n+struct MoveMessages {\n+    MoveMessages(Result&& result) : m_result(result) {}\n+    Result& m_result;\n+};\n+\n+//! Template deduction guide for MoveMessages class.\n+template <class Result>\n+MoveMessages(Result&& result) -> MoveMessages<Result&&>;",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 37,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "b21e2b067e28e49a289e55a1bd25f67a7c342f76",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in https://github.com/bitcoin/bitcoin/commit/b21e2b067e28e49a289e55a1bd25f67a7c342f76: Are the `&&` on the right side needed? IIUC this should only affect `Result& m_result;`, which should be equal to `Result && & m_result;`, no?",
      "created_at": "2023-08-30T14:02:11Z",
      "updated_at": "2023-08-30T14:11:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1310334699",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310334699"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 81,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310341914",
      "pull_request_review_id": 1602705708,
      "id": 1310341914,
      "node_id": "PRRC_kwDOABII585OGjsa",
      "diff_hunk": "@@ -152,10 +199,35 @@ class ResultBase<void, F>\n \n public:\n     //! Success check.\n-    explicit operator bool() const { return !m_info; }\n+    explicit operator bool() const { return !m_info || !m_info->failure; }\n \n     //! Error retrieval.\n-    const auto& GetFailure() const LIFETIMEBOUND { assert(!*this); return m_info->failure; }\n+    const auto& GetFailure() const LIFETIMEBOUND { assert(!*this); return *m_info->failure; }",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 155,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "b21e2b067e28e49a289e55a1bd25f67a7c342f76",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in https://github.com/bitcoin/bitcoin/commit/b21e2b067e28e49a289e55a1bd25f67a7c342f76: Missing `assert(m_info)` to avoid UB, no?",
      "created_at": "2023-08-30T14:07:32Z",
      "updated_at": "2023-08-30T14:11:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1310341914",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310341914"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 207,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316303748",
      "pull_request_review_id": 1611776309,
      "id": 1316303748,
      "node_id": "PRRC_kwDOABII585OdTOE",
      "diff_hunk": "@@ -0,0 +1,31 @@\n+// Copyright (c) 2022 The Bitcoin Core developers",
      "path": "src/util/result.cpp",
      "position": 1,
      "original_position": 1,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "b21e2b067e28e49a289e55a1bd25f67a7c342f76",
      "in_reply_to_id": 1310327644,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1310327644\r\n\r\n> nit in [b21e2b0](https://github.com/bitcoin/bitcoin/commit/b21e2b067e28e49a289e55a1bd25f67a7c342f76): `2022-present` or no year for new code to avoid having to ever touch this again?\r\n\r\nJust leaving alone for now. The \"present\" idea is interesting but doesn't seem right. I'd expect \"present\" to mean \"when I'm writing this,\" or \"when you're reading this,\" not \"when this code was last changed,\" which is what we want. Would be happy to drop the year or drop the whole line though.",
      "created_at": "2023-09-05T19:19:16Z",
      "updated_at": "2023-09-06T18:02:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1316303748",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316303748"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316303805",
      "pull_request_review_id": 1611776309,
      "id": 1316303805,
      "node_id": "PRRC_kwDOABII585OdTO9",
      "diff_hunk": "@@ -0,0 +1,31 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <algorithm>\n+#include <initializer_list>\n+#include <iterator>\n+#include <util/result.h>",
      "path": "src/util/result.cpp",
      "position": 1,
      "original_position": 8,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "b21e2b067e28e49a289e55a1bd25f67a7c342f76",
      "in_reply_to_id": 1310327102,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1310327102\r\n\r\n> nit in [b21e2b0](https://github.com/bitcoin/bitcoin/commit/b21e2b067e28e49a289e55a1bd25f67a7c342f76): The self-include must be in the first line and first section to catch missing includes.\r\n\r\nMakes sense, moved",
      "created_at": "2023-09-05T19:19:23Z",
      "updated_at": "2023-09-06T18:02:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1316303805",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316303805"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 8,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316303930",
      "pull_request_review_id": 1611776309,
      "id": 1316303930,
      "node_id": "PRRC_kwDOABII585OdTQ6",
      "diff_hunk": "@@ -8,68 +8,184 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n-#include <variant>\n+#include <cassert>\n+#include <memory>\n+#include <new>\n+#include <optional>\n+#include <type_traits>\n+#include <utility>\n+#include <vector>\n \n namespace util {\n \n+//! The `Result` class provides a standard way for functions to return an error\n+//! string in addition to optional result values.\n+//!\n+//! The easiest way to understand `Result<T>` is to think of it as a substitute\n+//! for `std::optional<T>`, that just contains an error string in\n+//! addition to the optional return value. For example:\n+//!\n+//!    util::Result<int> AddNumbers(int a, int b)\n+//!    {\n+//!        if (b == 0) return util::Error{_(\"Not adding 0, that's dumb.\")};\n+//!        return a + b;\n+//!    }\n+//!\n+//!    void TryAddNumbers(int a, int b)\n+//!    {\n+//!        if (auto result = AddNumbers(a, b)) {\n+//!            printf(\"%i + %i = %i\\n\", a, b, *result);\n+//!        } else {\n+//!            printf(\"Error: %s\\n\", util::ErrorString(result).translated.c_str());",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 33,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "03595104ccda64f301cac217d7de9aae69c0de67",
      "in_reply_to_id": 1310295516,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1310295516\r\n\r\n> in [0359510](https://github.com/bitcoin/bitcoin/commit/03595104ccda64f301cac217d7de9aae69c0de67): Obviously doesn't matter, but if there is an alternative to say the same without `c_str()`, I'd prefer that 😅\r\n\r\nMakes sense, switched to LogPrintf",
      "created_at": "2023-09-05T19:19:30Z",
      "updated_at": "2023-09-06T18:02:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1316303930",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316303930"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 39,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316304019",
      "pull_request_review_id": 1611776309,
      "id": 1316304019,
      "node_id": "PRRC_kwDOABII585OdTST",
      "diff_hunk": "@@ -61,20 +61,44 @@ namespace util {\n template <typename T, typename F = void>\n class Result;\n \n-//! Wrapper type to pass error strings to Result constructors.\n+//! Wrapper types to pass error and warning strings to Result constructors.\n struct Error {\n     bilingual_str message;\n };\n+struct Warning {\n+    bilingual_str message;\n+};\n+\n+//! Wrapper type to move error and warning strings from an existing Result object to a new Result constructor.\n+template <typename Result>\n+struct MoveMessages {\n+    MoveMessages(Result&& result) : m_result(result) {}\n+    Result& m_result;\n+};\n+\n+//! Template deduction guide for MoveMessages class.\n+template <class Result>\n+MoveMessages(Result&& result) -> MoveMessages<Result&&>;",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 37,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "b21e2b067e28e49a289e55a1bd25f67a7c342f76",
      "in_reply_to_id": 1310334699,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1310334699\r\n\r\n> nit in [b21e2b0](https://github.com/bitcoin/bitcoin/commit/b21e2b067e28e49a289e55a1bd25f67a7c342f76): Are the `&&` on the right side needed? IIUC this should only affect `Result& m_result;`, which should be equal to `Result && & m_result;`, no?\r\n\r\nGood catch, dropped this.",
      "created_at": "2023-09-05T19:19:36Z",
      "updated_at": "2023-09-06T18:02:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1316304019",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316304019"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 81,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316304240",
      "pull_request_review_id": 1611776309,
      "id": 1316304240,
      "node_id": "PRRC_kwDOABII585OdTVw",
      "diff_hunk": "@@ -8,68 +8,184 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n-#include <variant>\n+#include <cassert>\n+#include <memory>\n+#include <new>\n+#include <optional>\n+#include <type_traits>\n+#include <utility>\n+#include <vector>\n \n namespace util {\n \n+//! The `Result` class provides a standard way for functions to return an error\n+//! string in addition to optional result values.\n+//!\n+//! The easiest way to understand `Result<T>` is to think of it as a substitute\n+//! for `std::optional<T>`, that just contains an error string in\n+//! addition to the optional return value. For example:\n+//!\n+//!    util::Result<int> AddNumbers(int a, int b)\n+//!    {\n+//!        if (b == 0) return util::Error{_(\"Not adding 0, that's dumb.\")};\n+//!        return a + b;\n+//!    }\n+//!\n+//!    void TryAddNumbers(int a, int b)\n+//!    {\n+//!        if (auto result = AddNumbers(a, b)) {\n+//!            printf(\"%i + %i = %i\\n\", a, b, *result);\n+//!        } else {\n+//!            printf(\"Error: %s\\n\", util::ErrorString(result).translated.c_str());\n+//!        }\n+//!    }\n+//!\n+//! The `Result` class is intended to be used for high-level functions that need\n+//! to report error messages to end users. Low-level functions that don't need\n+//! error-reporting and only need error-handling should avoid `Result` and\n+//! instead use standard classes like `std::optional`, `std::variant`,\n+//! `std::expected`, and `std::tuple`, or custom structs and enum types to\n+//! return function results.\n+//!\n+//! Usage examples can be found in \\example ../test/result_tests.cpp, but in\n+//! general code using `Result<T>` return values is similar to code using\n+//! `std::optional<T>` return values. Existing functions returning\n+//! `std::optional<T>` can be updated to return `Result<T>` usually just\n+//! replacing `return std::nullopt;` with `return util::Error{error_string};`.\n+//!\n+//! An optional failure type `F` can be passed as a `Result<T, F>` template\n+//! argument. The default type `F = void` is sufficient for most code that just\n+//! needs an error description without more complicated error handling. But code\n+//! that does need more fine-grained failure information can set custom error\n+//! values of type `F` and retrieve them with the `GetFailure()` method.\n+template <typename T, typename F = void>\n+class Result;\n+\n+//! Wrapper type to pass error strings to Result constructors.\n struct Error {\n     bilingual_str message;\n };\n \n-//! The util::Result class provides a standard way for functions to return\n-//! either error messages or result values.\n-//!\n-//! It is intended for high-level functions that need to report error strings to\n-//! end users. Lower-level functions that don't need this error-reporting and\n-//! only need error-handling should avoid util::Result and instead use standard\n-//! classes like std::optional, std::variant, and std::tuple, or custom structs\n-//! and enum types to return function results.\n-//!\n-//! Usage examples can be found in \\example ../test/result_tests.cpp, but in\n-//! general code returning `util::Result<T>` values is very similar to code\n-//! returning `std::optional<T>` values. Existing functions returning\n-//! `std::optional<T>` can be updated to return `util::Result<T>` and return\n-//! error strings usually just replacing `return std::nullopt;` with `return\n-//! util::Error{error_string};`.\n-template <class M>\n-class Result\n+namespace detail {\n+//! Substitute for std::monostate that doesn't depend on std::variant.\n+struct MonoState{};\n+\n+//! Error information only allocated on failure.\n+template <typename F>\n+struct ErrorInfo {\n+    std::conditional_t<std::is_same_v<F, void>, MonoState, F> failure;\n+    bilingual_str error;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n {\n-private:\n-    using T = std::conditional_t<std::is_same_v<M, void>, std::monostate, M>;\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n \n-    std::variant<bilingual_str, T> m_variant;\n+    //! Value setter methods which do nothing because this ResultBase class is\n+    //! specialized for type T=void, so there is no result value for it to hold.\n+    //! The other ResultBase specialization below for non-void T overrides these\n+    //! methods to manage the result value it contains.\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O&& other) {}\n+    void DestroyValue() {}\n+\n+    //! Helper function to construct a new Result success value or failure value\n+    //! using the arguments provided.\n+    template <bool Failure, typename Result, typename... Args>\n+    static void ConstructResult(Result& result, Args&&... args)\n+    {\n+        if constexpr (Failure) {\n+            result.m_info.reset(new detail::ErrorInfo<F>{.failure{std::forward<Args>(args)...}, .error{}});\n+        } else {\n+            result.ConstructValue(std::forward<Args>(args)...);\n+        }\n+    }\n+\n+    //! ConstructResult() overload peeling off a util::Error constructor argument.\n+    template <bool Failure, typename Result, typename... Args>\n+    static void ConstructResult(Result& result, util::Error error, Args&&... args)\n+    {\n+        ConstructResult</*Failure=*/true>(result, std::forward<Args>(args)...);\n+        result.m_info->error = std::move(error.message);\n+    }\n+\n+    //! Helper function to move success or failure values and any error\n+    //! message from one result object to another. The two result\n+    //! objects must have compatible success and failure types.\n+    template <bool Constructed, typename DstResult, typename SrcResult>\n+    static void MoveResult(DstResult& dst, SrcResult&& src)\n+    {\n+        if (Constructed) {",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 143,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "03595104ccda64f301cac217d7de9aae69c0de67",
      "in_reply_to_id": 1310285158,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1310285158\r\n\r\n> in [0359510](https://github.com/bitcoin/bitcoin/commit/03595104ccda64f301cac217d7de9aae69c0de67): Doesn't matter, but could add `contexpr` here, or remove it above, for consistency, if it compiles?\r\n\r\nGood catch, done.",
      "created_at": "2023-09-05T19:19:51Z",
      "updated_at": "2023-09-06T18:02:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1316304240",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316304240"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 129,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316304363",
      "pull_request_review_id": 1611776309,
      "id": 1316304363,
      "node_id": "PRRC_kwDOABII585OdTXr",
      "diff_hunk": "@@ -8,58 +8,256 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n-#include <variant>\n+#include <cassert>\n+#include <memory>\n+#include <new>\n+#include <optional>\n+#include <type_traits>\n+#include <utility>\n+#include <vector>\n \n namespace util {\n \n+//! The `Result` class provides a standard way for functions to return error and\n+//! warning strings in addition to optional result values.\n+//!\n+//! The easiest way to understand `Result<T>` is to think of it as a substitute\n+//! for `std::optional<T>`, that just contains error and warning strings in\n+//! addition to the optional return value. For example:\n+//!\n+//!    util::Result<int> AddNumbers(int a, int b)\n+//!    {\n+//!        if (b == 0) return util::Error{_(\"Not adding 0, that's dumb.\")};\n+//!        return a + b;\n+//!    }\n+//!\n+//!    void TryAddNumbers(int a, int b)\n+//!    {\n+//!        if (auto result = AddNumbers(a, b)) {\n+//!            printf(\"%i + %i = %i\\n\", a, b, *result);\n+//!        } else {\n+//!            printf(\"Error: %s\\n\", util::ErrorString(result).translated.c_str());\n+//!        }\n+//!    }\n+//!\n+//! The `Result` class is intended to be used for high-level functions that need\n+//! to report error messages to end users. Low-level functions that don't need\n+//! error-reporting and only need error-handling should avoid `Result` and\n+//! instead use standard classes like `std::optional`, `std::variant`,\n+//! `std::expected`, and `std::tuple`, or custom structs and enum types to\n+//! return function results.\n+//!\n+//! Usage examples can be found in \\example ../test/result_tests.cpp, but in\n+//! general code using `Result<T>` return values is similar to code using\n+//! `std::optional<T>` return values. Existing functions returning\n+//! `std::optional<T>` can be updated to return `Result<T>` usually just\n+//! replacing `return std::nullopt;` with `return util::Error{error_string};`.\n+//!\n+//! An optional failure type `F` can be passed as a `Result<T, F>` template\n+//! argument. The default type `F = void` is sufficient for most code that just\n+//! needs an error description without more complicated error handling. But code\n+//! that does need more fine-grained failure information can set custom error\n+//! values of type `F` and retrieve them with the `GetFailure()` method.\n+template <typename T, typename F = void>\n+class Result;\n+\n+//! Wrapper types to pass error and warning strings to Result constructors.\n struct Error {\n     bilingual_str message;\n };\n+struct Warning {\n+    bilingual_str message;\n+};\n \n-//! The util::Result class provides a standard way for functions to return\n-//! either error messages or result values.\n-//!\n-//! It is intended for high-level functions that need to report error strings to\n-//! end users. Lower-level functions that don't need this error-reporting and\n-//! only need error-handling should avoid util::Result and instead use standard\n-//! classes like std::optional, std::variant, and std::tuple, or custom structs\n-//! and enum types to return function results.\n-//!\n-//! Usage examples can be found in \\example ../test/result_tests.cpp, but in\n-//! general code returning `util::Result<T>` values is very similar to code\n-//! returning `std::optional<T>` values. Existing functions returning\n-//! `std::optional<T>` can be updated to return `util::Result<T>` and return\n-//! error strings usually just replacing `return std::nullopt;` with `return\n-//! util::Error{error_string};`.\n-template <class M>\n-class Result\n+//! Wrapper type to move error and warning strings from an existing Result object to a new Result constructor.\n+template <typename Result>\n+struct MoveMessages {\n+    MoveMessages(Result&& result) : m_result(result) {}\n+    Result& m_result;\n+};\n+\n+//! Template deduction guide for MoveMessages class.\n+template <class Result>\n+MoveMessages(Result&& result) -> MoveMessages<Result&&>;\n+\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n+\n+//! Helper function to join messages in space separated string.\n+bilingual_str JoinMessages(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);\n+\n+//! Helper function to move messages from one vector to another.\n+void MoveMessages(std::vector<bilingual_str>& src, std::vector<bilingual_str>& dest);\n+\n+//! Substitute for std::monostate that doesn't depend on std::variant.\n+struct MonoState{};\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same_v<F, void>, MonoState, F>> failure{};\n+    std::vector<bilingual_str> errors{};\n+    std::vector<bilingual_str> warnings{};\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n {\n-private:\n-    using T = std::conditional_t<std::is_same_v<M, void>, std::monostate, M>;\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    ErrorInfo<F>& Info() LIFETIMEBOUND\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        return *m_info;\n+    }\n+\n+    //! Value setter methods which do nothing because this ResultBase class is\n+    //! specialized for type T=void, so there is no result value for it to hold.\n+    //! The other ResultBase specialization below for non-void T overrides these\n+    //! methods to manage the result value it contains.\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O&& other) {}\n+    void DestroyValue() {}\n+\n+    //! Helper function to construct a new Result success value or failure value\n+    //! using the arguments provided.\n+    template <bool Failure, typename Result, typename... Args>\n+    static void ConstructResult(Result& result, Args&&... args)\n+    {\n+        if constexpr (Failure) {\n+            result.Info().failure.emplace(std::forward<Args>(args)...);\n+        } else {\n+            result.ConstructValue(std::forward<Args>(args)...);\n+        }\n+    }\n \n-    std::variant<bilingual_str, T> m_variant;\n+    //! ConstructResult() overload peeling off a util::Error constructor argument.\n+    template <bool Failure, typename Result, typename... Args>\n+    static void ConstructResult(Result& result, util::Error error, Args&&... args)\n+    {\n+        result.AddError(std::move(error.message));\n+        ConstructResult</*Failure=*/true>(result, std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    //! ConstructResult() overload peeling off a util::Warning constructor argument.\n+    template <bool Failure, typename Result, typename... Args>\n+    static void ConstructResult(Result& result, util::Warning warning, Args&&... args)\n+    {\n+        result.AddWarning(std::move(warning.message));\n+        ConstructResult<Failure>(result, std::forward<Args>(args)...);\n+    }\n+\n+    //! ConstructResult() overload peeling off a util::MoveMessages constructor argument.\n+    template <bool Failure, typename Result, typename R, typename... Args>\n+    static void ConstructResult(Result& result, util::MoveMessages<R> messages, Args&&... args)\n+    {\n+        result.MoveMessages(std::move(messages.m_result));\n+        ConstructResult<Failure>(result, std::forward<Args>(args)...);\n+    }\n+\n+    //! Helper function to move success or failure values and any error and\n+    //! warning messages from one result object to another. The two result\n+    //! objects must have compatible success and failure types.\n+    template <bool Constructed, typename DstResult, typename SrcResult>\n+    static void MoveResult(DstResult& dst, SrcResult&& src)\n+    {\n+        if (Constructed) {\n+            if (dst) {\n+                dst.DestroyValue();\n+            } else {\n+                dst.m_info->failure.reset();",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 195,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "7f883b33bb89205a9d00c2d20d363a36a0167c7c",
      "in_reply_to_id": 1308342946,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1308342946\r\n\r\n> This line is missing test coverage. It could be achieved with the following diff (though there might be a more elegant way to achieve this):\r\n\r\nThanks, I added a test just calling the `Set` method to cover these branches. Suggestion to modify the AccumulateFn function instead was good, too, just seemed more complicated.",
      "created_at": "2023-09-05T19:19:59Z",
      "updated_at": "2023-09-06T18:03:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1316304363",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316304363"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 181,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316304460",
      "pull_request_review_id": 1611776309,
      "id": 1316304460,
      "node_id": "PRRC_kwDOABII585OdTZM",
      "diff_hunk": "@@ -152,10 +199,35 @@ class ResultBase<void, F>\n \n public:\n     //! Success check.\n-    explicit operator bool() const { return !m_info; }\n+    explicit operator bool() const { return !m_info || !m_info->failure; }\n \n     //! Error retrieval.\n-    const auto& GetFailure() const LIFETIMEBOUND { assert(!*this); return m_info->failure; }\n+    const auto& GetFailure() const LIFETIMEBOUND { assert(!*this); return *m_info->failure; }",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 155,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "b21e2b067e28e49a289e55a1bd25f67a7c342f76",
      "in_reply_to_id": 1310341914,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1310341914\r\n\r\n> nit in [b21e2b0](https://github.com/bitcoin/bitcoin/commit/b21e2b067e28e49a289e55a1bd25f67a7c342f76): Missing `assert(m_info)` to avoid UB, no?\r\n\r\nThis won't be UB unless the assert is disabled because the assert is checking that m_info is non-null and contains a failure value (see operator bool above)",
      "created_at": "2023-09-05T19:20:06Z",
      "updated_at": "2023-09-06T18:02:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1316304460",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316304460"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 207,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316304535",
      "pull_request_review_id": 1611776309,
      "id": 1316304535,
      "node_id": "PRRC_kwDOABII585OdTaX",
      "diff_hunk": "@@ -8,68 +8,184 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n-#include <variant>\n+#include <cassert>\n+#include <memory>\n+#include <new>\n+#include <optional>\n+#include <type_traits>\n+#include <utility>\n+#include <vector>\n \n namespace util {\n \n+//! The `Result` class provides a standard way for functions to return an error\n+//! string in addition to optional result values.\n+//!\n+//! The easiest way to understand `Result<T>` is to think of it as a substitute\n+//! for `std::optional<T>`, that just contains an error string in\n+//! addition to the optional return value. For example:\n+//!\n+//!    util::Result<int> AddNumbers(int a, int b)\n+//!    {\n+//!        if (b == 0) return util::Error{_(\"Not adding 0, that's dumb.\")};\n+//!        return a + b;\n+//!    }\n+//!\n+//!    void TryAddNumbers(int a, int b)\n+//!    {\n+//!        if (auto result = AddNumbers(a, b)) {\n+//!            printf(\"%i + %i = %i\\n\", a, b, *result);\n+//!        } else {\n+//!            printf(\"Error: %s\\n\", util::ErrorString(result).translated.c_str());\n+//!        }\n+//!    }\n+//!\n+//! The `Result` class is intended to be used for high-level functions that need\n+//! to report error messages to end users. Low-level functions that don't need\n+//! error-reporting and only need error-handling should avoid `Result` and\n+//! instead use standard classes like `std::optional`, `std::variant`,\n+//! `std::expected`, and `std::tuple`, or custom structs and enum types to\n+//! return function results.\n+//!\n+//! Usage examples can be found in \\example ../test/result_tests.cpp, but in\n+//! general code using `Result<T>` return values is similar to code using\n+//! `std::optional<T>` return values. Existing functions returning\n+//! `std::optional<T>` can be updated to return `Result<T>` usually just\n+//! replacing `return std::nullopt;` with `return util::Error{error_string};`.\n+//!\n+//! An optional failure type `F` can be passed as a `Result<T, F>` template\n+//! argument. The default type `F = void` is sufficient for most code that just\n+//! needs an error description without more complicated error handling. But code\n+//! that does need more fine-grained failure information can set custom error\n+//! values of type `F` and retrieve them with the `GetFailure()` method.\n+template <typename T, typename F = void>\n+class Result;\n+\n+//! Wrapper type to pass error strings to Result constructors.\n struct Error {\n     bilingual_str message;\n };\n \n-//! The util::Result class provides a standard way for functions to return\n-//! either error messages or result values.\n-//!\n-//! It is intended for high-level functions that need to report error strings to\n-//! end users. Lower-level functions that don't need this error-reporting and\n-//! only need error-handling should avoid util::Result and instead use standard\n-//! classes like std::optional, std::variant, and std::tuple, or custom structs\n-//! and enum types to return function results.\n-//!\n-//! Usage examples can be found in \\example ../test/result_tests.cpp, but in\n-//! general code returning `util::Result<T>` values is very similar to code\n-//! returning `std::optional<T>` values. Existing functions returning\n-//! `std::optional<T>` can be updated to return `util::Result<T>` and return\n-//! error strings usually just replacing `return std::nullopt;` with `return\n-//! util::Error{error_string};`.\n-template <class M>\n-class Result\n+namespace detail {\n+//! Substitute for std::monostate that doesn't depend on std::variant.\n+struct MonoState{};\n+\n+//! Error information only allocated on failure.\n+template <typename F>\n+struct ErrorInfo {\n+    std::conditional_t<std::is_same_v<F, void>, MonoState, F> failure;\n+    bilingual_str error;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n {\n-private:\n-    using T = std::conditional_t<std::is_same_v<M, void>, std::monostate, M>;\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n \n-    std::variant<bilingual_str, T> m_variant;\n+    //! Value setter methods which do nothing because this ResultBase class is\n+    //! specialized for type T=void, so there is no result value for it to hold.\n+    //! The other ResultBase specialization below for non-void T overrides these\n+    //! methods to manage the result value it contains.\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O&& other) {}\n+    void DestroyValue() {}\n+\n+    //! Helper function to construct a new Result success value or failure value\n+    //! using the arguments provided.\n+    template <bool Failure, typename Result, typename... Args>\n+    static void ConstructResult(Result& result, Args&&... args)\n+    {\n+        if constexpr (Failure) {\n+            result.m_info.reset(new detail::ErrorInfo<F>{.failure{std::forward<Args>(args)...}, .error{}});\n+        } else {\n+            result.ConstructValue(std::forward<Args>(args)...);\n+        }\n+    }\n+\n+    //! ConstructResult() overload peeling off a util::Error constructor argument.\n+    template <bool Failure, typename Result, typename... Args>\n+    static void ConstructResult(Result& result, util::Error error, Args&&... args)\n+    {\n+        ConstructResult</*Failure=*/true>(result, std::forward<Args>(args)...);\n+        result.m_info->error = std::move(error.message);\n+    }\n+\n+    //! Helper function to move success or failure values and any error\n+    //! message from one result object to another. The two result\n+    //! objects must have compatible success and failure types.\n+    template <bool Constructed, typename DstResult, typename SrcResult>\n+    static void MoveResult(DstResult& dst, SrcResult&& src)\n+    {\n+        if (Constructed) {\n+            if (dst) {\n+                dst.DestroyValue();\n+            } else {\n+                dst.m_info.reset();\n+            }\n+        }\n+        if (src) {\n+            dst.MoveValue(std::move(src));\n+        } else {\n+            dst.m_info.reset(new detail::ErrorInfo<F>{std::move(*src.m_info)});\n+        }\n+    }\n \n     //! Disallow operator= and require explicit Result::Set() calls to avoid\n     //! confusion in the future when the Result class gains support for richer\n     //! error reporting, and callers should have ability to set a new result\n     //! value without clearing existing error messages.\n-    Result& operator=(const Result&) = default;\n-    Result& operator=(Result&&) = default;\n+    template <typename Result>\n+    ResultBase& operator=(Result&&) = delete;\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename, typename>\n+    friend class ResultBase;\n \n public:\n-    Result() : m_variant{std::in_place_index_t<1>{}, std::monostate{}} {}  // constructor for void\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n-    Result(const Result&) = default;\n-    Result(Result&&) = default;\n-    ~Result() = default;\n+    //! Success check.\n+    explicit operator bool() const { return !m_info; }\n+\n+    //! Error retrieval.\n+    const auto& GetFailure() const LIFETIMEBOUND { assert(!*this); return m_info->failure; }\n+};\n \n+//! Result base class for T value type. Holds value and provides accessor methods.\n+template <typename T, typename F>\n+class ResultBase : public ResultBase<void, F>\n+{\n+protected:\n+    //! Result success value. Uses anonymous union so success value is never\n+    //! constructed in failure case.\n+    union { T m_value; };\n+\n+    template <typename... Args>\n+    void ConstructValue(Args&&... args) { new (&m_value) T{std::forward<Args>(args)...}; }\n+    template <typename O>\n+    void MoveValue(O&& other) { new (&m_value) T{std::move(other.m_value)}; }\n+    void DestroyValue() { m_value.~T(); }\n+\n+    //! Empty constructor that needs to be declared because the class contains a union.\n+    ResultBase() {}\n+    ~ResultBase() { if (*this) DestroyValue(); }\n+\n+    template <typename, typename>\n+    friend class ResultBase;\n+\n+public:\n     //! std::optional methods, so functions returning optional<T> can change to\n     //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n-    {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n-    }\n-    T& value() LIFETIMEBOUND\n-    {\n-        assert(has_value());",
      "path": "src/util/result.h",
      "position": 190,
      "original_position": 218,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "03595104ccda64f301cac217d7de9aae69c0de67",
      "in_reply_to_id": 1310277702,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1310277702\r\n\r\n> in [0359510](https://github.com/bitcoin/bitcoin/commit/03595104ccda64f301cac217d7de9aae69c0de67): clang-format new code to reduce this diff here?\r\n\r\nI can do it if there's another request, but I think simple accessor methods are more readable if declarations are on the left, implementations are on the right, to make it easier to find relevant information and notice differences between functions.",
      "created_at": "2023-09-05T19:20:12Z",
      "updated_at": "2023-09-06T18:02:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1316304535",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316304535"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 72,
      "original_line": 72,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316304845",
      "pull_request_review_id": 1611776309,
      "id": 1316304845,
      "node_id": "PRRC_kwDOABII585OdTfN",
      "diff_hunk": "@@ -80,21 +196,56 @@ class Result\n     {\n         return has_value() ? std::move(value()) : std::forward<U>(default_value);\n     }\n-    explicit operator bool() const noexcept { return has_value(); }\n     const T* operator->() const LIFETIMEBOUND { return &value(); }\n     const T& operator*() const LIFETIMEBOUND { return value(); }\n     T* operator->() LIFETIMEBOUND { return &value(); }\n     T& operator*() LIFETIMEBOUND { return value(); }\n-\n-    //! Assign success or failure value from another result object.\n-    Result& Set(Result&& other) LIFETIMEBOUND { return *this = std::move(other); }\n };\n+} // namespace detail\n \n-template <typename T>\n-bilingual_str ErrorString(const Result<T>& result)\n+template <typename T, typename F>\n+class Result : public detail::ResultBase<T, F>\n {\n-    return result ? bilingual_str{} : std::get<0>(result.m_variant);\n-}\n+protected:\n+    using Base = detail::ResultBase<T, F>;\n+\n+public:\n+    //! Construct a Result object setting a success or failure value. An\n+    //! optional util::Error argument is processed first to set an error\n+    //! message. Then, any remaining arguments are passed to the type `T`\n+    //! constructor and used to construct a success value in the success case.\n+    //! In the failure case, any remaining arguments are passed to the type `F`\n+    //! constructor and used to construct a failure value.\n+    template <typename... Args>\n+    Result(Args&&... args)\n+    {\n+        Base::template ConstructResult</*Failure=*/false>(*this, std::forward<Args>(args)...);\n+    }\n+\n+    //! Move-construct a Result object from another Result object, moving the\n+    //! success or failure value and any error message.\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other)\n+    {\n+        Base::template MoveResult</*Constructed=*/false>(*this, std::move(other));\n+    }\n+\n+    //! Move success or failure values and any error message from another Result\n+    //! object to this object.\n+    Result& Set(Result&& other) LIFETIMEBOUND",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 275,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "03595104ccda64f301cac217d7de9aae69c0de67",
      "in_reply_to_id": 1310289598,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1310289598\r\n\r\n> in [0359510](https://github.com/bitcoin/bitcoin/commit/03595104ccda64f301cac217d7de9aae69c0de67): Is there a unit test for this method? I am thinking about a test to check what happens when an error-result is `Set` a value-result, and vice-versa.\r\n\r\nGood suggestion. Added a test to exercise the Set() method with success & failure values. ",
      "created_at": "2023-09-05T19:20:33Z",
      "updated_at": "2023-09-06T18:02:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1316304845",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316304845"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 317,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316304916",
      "pull_request_review_id": 1611776309,
      "id": 1316304916,
      "node_id": "PRRC_kwDOABII585OdTgU",
      "diff_hunk": "@@ -70,18 +268,81 @@ class Result\n     {\n         return has_value() ? std::move(value()) : std::forward<U>(default_value);\n     }\n-    explicit operator bool() const noexcept { return has_value(); }\n     const T* operator->() const LIFETIMEBOUND { return &value(); }\n     const T& operator*() const LIFETIMEBOUND { return value(); }\n     T* operator->() LIFETIMEBOUND { return &value(); }\n     T& operator*() LIFETIMEBOUND { return value(); }\n };\n+} // namespace detail\n \n-template <typename T>\n-bilingual_str ErrorString(const Result<T>& result)\n+template <typename T, typename F>\n+class Result : public detail::ResultBase<T, F>\n {\n-    return result ? bilingual_str{} : std::get<0>(result.m_variant);\n-}\n+protected:\n+    using Base = detail::ResultBase<T, F>;\n+\n+public:\n+    //! Construct a Result object setting a success or failure value and\n+    //! optional warning and error messages. Initial util::Error, util::Warning,\n+    //! and util::MoveMessages arguments are processed first to add warning and\n+    //! error messages. Then, any remaining arguments are passed to the type `T`\n+    //! constructor and used to construct a success value in the success case.\n+    //! In the failure case, any remaining arguments are passed to the type `F`\n+    //! constructor and used to construct a failure value.\n+    template <typename... Args>\n+    Result(Args&&... args)\n+    {\n+        Base::template ConstructResult</*Failure=*/false>(*this, std::forward<Args>(args)...);\n+    }\n+\n+    //! Move-construct a Result object from another Result object, moving the\n+    //! success or failure value any any error or warning messages.\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other)\n+    {\n+        Base::template MoveResult</*Constructed=*/false>(*this, std::move(other));\n+    }\n+\n+    //! Move success or failure values from another Result object to this\n+    //! object. Also move any error and warning messages from the other Result\n+    //! object to this one. If this Result object has an existing success or\n+    //! failure value, it is cleared and replaced by the other value. If this\n+    //! Result object has any error or warning messages, they are kept and\n+    //! appended to.\n+    Result& Set(Result&& other) LIFETIMEBOUND\n+    {\n+        Base::template MoveResult</*Constructed=*/true>(*this, std::move(other));\n+        return *this;\n+    }\n+\n+    //! Operator moving warning and error messages from a source result object\n+    //! to a destination result object. Only moves message strings, does not\n+    //! change success or failure values of either Result object.\n+    //!\n+    //! This is useful for combining error and warning messages from multiple\n+    //! result objects into a single object, e.g.:\n+    //!\n+    //!    util::Result<void> result;\n+    //!    auto r1 = DoSomething() >> result;\n+    //!    auto r2 = DoSomethingElse() >> result;\n+    //!    ...\n+    //!    return result;\n+    //!\n+    template<typename O>",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 361,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "7f883b33bb89205a9d00c2d20d363a36a0167c7c",
      "in_reply_to_id": 1291349874,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1291349874\r\n\r\n> Style nit: Missing space.\r\n\r\nThanks, fixed",
      "created_at": "2023-09-05T19:20:39Z",
      "updated_at": "2023-09-06T18:02:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1316304916",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316304916"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 331,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316313690",
      "pull_request_review_id": 1611776309,
      "id": 1316313690,
      "node_id": "PRRC_kwDOABII585OdVpa",
      "diff_hunk": "@@ -80,21 +196,56 @@ class Result\n     {\n         return has_value() ? std::move(value()) : std::forward<U>(default_value);\n     }\n-    explicit operator bool() const noexcept { return has_value(); }\n     const T* operator->() const LIFETIMEBOUND { return &value(); }\n     const T& operator*() const LIFETIMEBOUND { return value(); }\n     T* operator->() LIFETIMEBOUND { return &value(); }\n     T& operator*() LIFETIMEBOUND { return value(); }\n-\n-    //! Assign success or failure value from another result object.\n-    Result& Set(Result&& other) LIFETIMEBOUND { return *this = std::move(other); }\n };\n+} // namespace detail\n \n-template <typename T>\n-bilingual_str ErrorString(const Result<T>& result)\n+template <typename T, typename F>\n+class Result : public detail::ResultBase<T, F>\n {\n-    return result ? bilingual_str{} : std::get<0>(result.m_variant);\n-}\n+protected:\n+    using Base = detail::ResultBase<T, F>;\n+\n+public:\n+    //! Construct a Result object setting a success or failure value. An\n+    //! optional util::Error argument is processed first to set an error\n+    //! message. Then, any remaining arguments are passed to the type `T`\n+    //! constructor and used to construct a success value in the success case.\n+    //! In the failure case, any remaining arguments are passed to the type `F`\n+    //! constructor and used to construct a failure value.\n+    template <typename... Args>\n+    Result(Args&&... args)\n+    {\n+        Base::template ConstructResult</*Failure=*/false>(*this, std::forward<Args>(args)...);\n+    }\n+\n+    //! Move-construct a Result object from another Result object, moving the\n+    //! success or failure value and any error message.\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other)\n+    {\n+        Base::template MoveResult</*Constructed=*/false>(*this, std::move(other));\n+    }\n+\n+    //! Move success or failure values and any error message from another Result\n+    //! object to this object.\n+    Result& Set(Result&& other) LIFETIMEBOUND\n+    {\n+        Base::template MoveResult</*Constructed=*/true>(*this, std::move(other));\n+        return *this;\n+    }\n+\n+    inline friend bilingual_str _ErrorString(const Result& result)",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 281,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "03595104ccda64f301cac217d7de9aae69c0de67",
      "in_reply_to_id": 1310290697,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1310290697\r\n\r\n> in [0359510](https://github.com/bitcoin/bitcoin/commit/03595104ccda64f301cac217d7de9aae69c0de67): Why inline? IIUC every member is inline, so this seems confusing, no?\r\n\r\nThis is just a friend function that is able to access private fields of the Result class, not a member. So I think inline was required to avoid duplicate symbol errors from the linker. I would have preferred to just make the `ErrorString` function a friend function directly, but this did not seem to be possible because it has template parameters, so I declared `_ErrorString` to be a friend function which can called by `ErrorString` to specify the template parameters.\r\n\r\nThis complexity goes away later when GetWarnings() / GetErrors() accessors are added. My main goal for all this is just to make the Result class a container for error strings, and keep any code dealing with the strings separate.",
      "created_at": "2023-09-05T19:31:06Z",
      "updated_at": "2023-09-06T18:02:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1316313690",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316313690"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 241,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1498934743",
      "pull_request_review_id": 1895353815,
      "id": 1498934743,
      "node_id": "PRRC_kwDOABII585ZV-3X",
      "diff_hunk": "@@ -231,20 +232,20 @@ ChainstateLoadResult LoadChainstate(ChainstateManager& chainman, const CacheSize\n         // for the fully validated chainstate.\n         chainman.ActiveChainstate().ClearBlockIndexCandidates();\n \n-        auto [init_status, init_error] = CompleteChainstateInitialization(chainman, cache_sizes, options);\n-        if (init_status != ChainstateLoadStatus::SUCCESS) {\n-            return {init_status, init_error};\n+        auto result{CompleteChainstateInitialization(chainman, cache_sizes, options)};\n+        if (!result) {\n+            return result;\n         }\n     } else {\n-        return {ChainstateLoadStatus::FAILURE, _(\n-           \"UTXO snapshot failed to validate. \"\n+        return util::Error{\n+           _(\"UTXO snapshot failed to validate. \"",
      "path": "src/node/chainstate.cpp",
      "position": 1,
      "original_position": 149,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "0d33bcbf01c560bfc28111373a59ddee7813bdd8",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "If I'm reading this right, not specifying a failure value will lead to it being default constructed, so this will have a value of `ChainstateLoadError::FAILURE`. Could omitting a failure value be a compile-time error if the failure type is non-void? ",
      "created_at": "2024-02-22T09:30:02Z",
      "updated_at": "2024-02-22T09:32:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1498934743",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1498934743"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 241,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499084153",
      "pull_request_review_id": 1895586586,
      "id": 1499084153,
      "node_id": "PRRC_kwDOABII585ZWjV5",
      "diff_hunk": "@@ -231,20 +232,20 @@ ChainstateLoadResult LoadChainstate(ChainstateManager& chainman, const CacheSize\n         // for the fully validated chainstate.\n         chainman.ActiveChainstate().ClearBlockIndexCandidates();\n \n-        auto [init_status, init_error] = CompleteChainstateInitialization(chainman, cache_sizes, options);\n-        if (init_status != ChainstateLoadStatus::SUCCESS) {\n-            return {init_status, init_error};\n+        auto result{CompleteChainstateInitialization(chainman, cache_sizes, options)};\n+        if (!result) {\n+            return result;\n         }\n     } else {\n-        return {ChainstateLoadStatus::FAILURE, _(\n-           \"UTXO snapshot failed to validate. \"\n+        return util::Error{\n+           _(\"UTXO snapshot failed to validate. \"",
      "path": "src/node/chainstate.cpp",
      "position": 1,
      "original_position": 149,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "0d33bcbf01c560bfc28111373a59ddee7813bdd8",
      "in_reply_to_id": 1498934743,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1498934743\r\n\r\n> Could omitting a failure value be a compile-time error if the failure type is non-void?\r\n\r\nNice catch. That's an interesting idea but it seems extreme because it would make it difficult to call a failure value's default constructor, and impossible to call it the class is not copyable or movable.\r\n\r\nI think in general if you don't want a failure value to be default-constructed you should pass a failure type that doesn't have a default constructor. But we could add a check for specifically for enums. The following seems to work:\r\n\r\n```diff\r\n--- a/src/util/result.h\r\n+++ b/src/util/result.h\r\n@@ -136,6 +136,7 @@ protected:\r\n     static void ConstructResult(Result& result, Args&&... args)\r\n     {\r\n         if constexpr (Failure) {\r\n+            static_assert(sizeof...(args) > 0 || !std::is_enum_v<F>, \"Refusing to default-construct enum failure value, please specify explicit value\");\r\n             result.Info().failure.emplace(std::forward<Args>(args)...);\r\n         } else {\r\n             result.ConstructValue(std::forward<Args>(args)...);\r\n\r\n```",
      "created_at": "2024-02-22T11:14:45Z",
      "updated_at": "2024-02-22T11:16:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1499084153",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499084153"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 241,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499122381",
      "pull_request_review_id": 1895634501,
      "id": 1499122381,
      "node_id": "PRRC_kwDOABII585ZWsrN",
      "diff_hunk": "@@ -231,20 +232,20 @@ ChainstateLoadResult LoadChainstate(ChainstateManager& chainman, const CacheSize\n         // for the fully validated chainstate.\n         chainman.ActiveChainstate().ClearBlockIndexCandidates();\n \n-        auto [init_status, init_error] = CompleteChainstateInitialization(chainman, cache_sizes, options);\n-        if (init_status != ChainstateLoadStatus::SUCCESS) {\n-            return {init_status, init_error};\n+        auto result{CompleteChainstateInitialization(chainman, cache_sizes, options)};\n+        if (!result) {\n+            return result;\n         }\n     } else {\n-        return {ChainstateLoadStatus::FAILURE, _(\n-           \"UTXO snapshot failed to validate. \"\n+        return util::Error{\n+           _(\"UTXO snapshot failed to validate. \"",
      "path": "src/node/chainstate.cpp",
      "position": 1,
      "original_position": 149,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "0d33bcbf01c560bfc28111373a59ddee7813bdd8",
      "in_reply_to_id": 1498934743,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1499084153\r\n\r\n> But we could add a check for specifically for enums.\r\n\r\nLatest push adds a slightly more general check that doesn't allow any scalar failure value (int, float, enum, or pointer) to be default constructed. Could adjust this condition or make it an option if default-constructing these types of values seems useful in the future.\r\n\r\nThis check is arguably too heavy handed because it is enforcing that the `result.GetFailure()` value is not default-constructed even though it technically has a default constructor. Even without the check, the Result object would be still constructed in a failure state and `if (result)` and `if (result.has_value())` would be false.  But it seems safest to start off requiring explicit scalar failure values in case they were omitted by accident.",
      "created_at": "2024-02-22T11:47:58Z",
      "updated_at": "2024-02-22T11:54:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1499122381",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499122381"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 241,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499213263",
      "pull_request_review_id": 1895808142,
      "id": 1499213263,
      "node_id": "PRRC_kwDOABII585ZXC3P",
      "diff_hunk": "@@ -231,20 +232,20 @@ ChainstateLoadResult LoadChainstate(ChainstateManager& chainman, const CacheSize\n         // for the fully validated chainstate.\n         chainman.ActiveChainstate().ClearBlockIndexCandidates();\n \n-        auto [init_status, init_error] = CompleteChainstateInitialization(chainman, cache_sizes, options);\n-        if (init_status != ChainstateLoadStatus::SUCCESS) {\n-            return {init_status, init_error};\n+        auto result{CompleteChainstateInitialization(chainman, cache_sizes, options)};\n+        if (!result) {\n+            return result;\n         }\n     } else {\n-        return {ChainstateLoadStatus::FAILURE, _(\n-           \"UTXO snapshot failed to validate. \"\n+        return util::Error{\n+           _(\"UTXO snapshot failed to validate. \"",
      "path": "src/node/chainstate.cpp",
      "position": 1,
      "original_position": 149,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "0d33bcbf01c560bfc28111373a59ddee7813bdd8",
      "in_reply_to_id": 1498934743,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Nice, the compile-time check can be tested with:\r\n```diff\r\ndiff --git a/src/test/result_tests.cpp b/src/test/result_tests.cpp\r\nindex 261e1f0b9b..053b45fceb 100644\r\n--- a/src/test/result_tests.cpp\r\n+++ b/src/test/result_tests.cpp\r\n@@ -28,0 +29,10 @@ BOOST_AUTO_TEST_SUITE(result_tests)\r\n+enum class DummyError {\r\n+    FAILURE_1,\r\n+    FAILURE_2,\r\n+    FAILURE_3,\r\n+};\r\n+\r\n+util::Result<void, DummyError> VoidDummyError() {\r\n+    return util::Error{Untranslated(\"void fail.\")};\r\n+}\r\n+\r\n@@ -203,0 +214,3 @@ BOOST_AUTO_TEST_CASE(check_returned)\r\n+\r\n+    auto res{VoidDummyError()};\r\n+    BOOST_CHECK(res.GetFailure() == DummyError::FAILURE_1);\r\n```",
      "created_at": "2024-02-22T13:05:47Z",
      "updated_at": "2024-02-22T13:05:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1499213263",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499213263"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 241,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1552459477",
      "pull_request_review_id": 1981198840,
      "id": 1552459477,
      "node_id": "PRRC_kwDOABII585ciKbV",
      "diff_hunk": "@@ -215,29 +294,59 @@ class Result : public detail::SuccessHolder<SuccessType_, FailureType_, Messages\n     template <bool Failure, typename Result, typename... Args>\n     static void Construct(Result& result, util::Error error, Args&&... args)\n     {\n-        result.EnsureFailData().messages = std::move(error.message);\n+        result.AddError(std::move(error.message));\n         Construct</*Failure=*/true>(result, std::forward<Args>(args)...);\n     }\n \n+    //! Construct() overload peeling off a util::Warning constructor argument.\n+    template <bool Failure, typename Result, typename... Args>\n+    static void Construct(Result& result, util::Warning warning, Args&&... args)\n+    {\n+        result.AddWarning(std::move(warning.message));\n+        Construct<Failure>(result, std::forward<Args>(args)...);\n+    }\n+\n+    //! Construct() overload peeling off a util::MoveFrom constructor argument.\n+    template <bool Failure, typename Result, typename R, typename... Args>\n+    static void Construct(Result& result, MoveFrom<R> other, Args&&... args)\n+    {\n+        other.m_result >> result;\n+        Construct<Failure>(result, std::forward<Args>(args)...);\n+    }\n+\n     //! Move success, failure, and messages from source Result object to\n-    //! destination object. The source and destination results are not required\n+    //! destination object. Existing values are merged (using\n+    //! ResultTraits::MergeInto specializations), so destination errors and\n+    //! warning messages get appended to instead of overwritten.\n+    //! The source and destination results are not required\n     //! to have the same types, and assigning void source types to non-void\n     //! destinations type is allowed, since no source information is lost. But\n     //! assigning non-void source types to void destination types is not\n     //! allowed, since this would discard source information.\n     template <bool DstConstructed, typename DstResult, typename SrcResult>\n     static void Move(DstResult& dst, SrcResult& src)\n     {\n-        // Move messages values first, then move success or failure value below.\n-        if (src.GetMessages() && !src.GetMessages()->empty()) {\n-            dst.EnsureMessages() = std::move(*src.GetMessages());\n-        }\n+        // Use operator>> to move messages values first, then move success or\n+        // failure value below.\n+        src >> dst;\n         // If DstConstructed is true, it means dst has either a success value or\n-        // a failure value set, which needs to be destroyed and replaced. If\n+        // a failure value set, which needs to be merged or replaced. If\n         // DstConstructed is false, then dst is being constructed now and has no\n         // values set.\n         if constexpr (DstConstructed) {\n-            if (dst) {\n+            if (dst && src) {\n+                // dst and src both hold success values, so merge them and return\n+                if constexpr (!std::is_same_v<typename SrcResult::SuccessType, void>) {\n+                    ResultTraits<typename SrcResult::SuccessType>::MergeInto(*dst, *src);",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 209,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9fe6a68170dc0265aeaf2fc2c1ffbd4ed7f3d1fb",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Reviewers might be wondering what the benefits of  the ResultTraits are. They are useful for potential future extensions of the move behaviour: https://github.com/bitcoin/bitcoin/pull/29700/commits/3951afc3b708326cea653951ef331d8f96a28682 .",
      "created_at": "2024-04-04T21:17:04Z",
      "updated_at": "2024-04-04T21:46:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1552459477",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1552459477"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 342,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1552474458",
      "pull_request_review_id": 1981198840,
      "id": 1552474458,
      "node_id": "PRRC_kwDOABII585ciOFa",
      "diff_hunk": "@@ -57,15 +63,77 @@ namespace util {\n //! return function results.\n //!\n //! Usage examples can be found in \\example ../test/result_tests.cpp.\n-template <typename SuccessType = void, typename FailureType = void, typename MessagesType = bilingual_str>\n+template <typename SuccessType = void, typename FailureType = void, typename MessagesType = Messages>\n class Result;\n \n //! Wrapper object to pass an error string to the Result constructor.\n struct Error {\n     bilingual_str message;\n };\n+//! Wrapper object to pass a warning string to the Result constructor.\n+struct Warning {\n+    bilingual_str message;\n+};\n+\n+//! Wrapper object to pass an existing Result object to the Result constructor,\n+//! moving messages into the new object, like operator>> below. Passing\n+//! MoveFrom(result) to the Result constructor is similar to passing\n+//! std::move(result), except it doesn't require the two result objects to have\n+//! compatible Success and Failure types, and it only moves message and info\n+//! fields, leaving success and value fields alone. Like operator>>, it is\n+//! useful for combining data from many result objects into a single result.\n+template <typename Result>\n+struct MoveFrom {\n+    MoveFrom(Result&& result) : m_result(result) {}\n+    Result& m_result;\n+};\n+\n+//! Template deduction guide for MoveFrom class.\n+template <class Result>\n+MoveFrom(Result&& result) -> MoveFrom<Result>;\n+\n+//! Extension point for overriding the way SuccessType / FailureType /\n+//! MergesType values are combined.\n+template<typename T>\n+struct ResultTraits {\n+    template<typename O>\n+    static void MergeInto(O& dst, T& src)\n+    {\n+        dst = std::move(src);\n+    }\n+};\n+\n+//! Extension point for specializing behavior of MessagesType\n+template<typename MessagesType>\n+struct MessagesTraits;\n+\n+//! ResultTraits specialization for Messages struct.\n+template<>\n+struct ResultTraits<Messages> {\n+    static void MergeInto(Messages& dst, Messages& src);\n+};\n+\n+//! MessagesTraits specialization for Messages struct.\n+template<>\n+struct MessagesTraits<Messages> {",
      "path": "src/util/result.h",
      "position": 146,
      "original_position": 74,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9fe6a68170dc0265aeaf2fc2c1ffbd4ed7f3d1fb",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I have not quite grasped yet what the immediate benefit of these more generic decorators on the Messages are. Am I missing something from your draft PRs? I like shiny generics though, so to me a clear benefit of this approach would be to future-proof the result type. I was asking myself if this could be a bit more readable if instead of a forward-declared struct, the `MessagesTraits` were made a concept. After implementing it, I think it is indeed a bit easier to parse at the call site. It also potentially allows the user to define their own types for the warnings and errors fields like this: https://github.com/TheCharlatan/bitcoin/commit/f5e5442cf80c58c0509562d8c689243c8d9becf2 . Could this also be leveraged in place of your future addition of an info type?\r\n\r\n\r\n\r\n",
      "created_at": "2024-04-04T21:30:34Z",
      "updated_at": "2024-04-04T21:46:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1552474458",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1552474458"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 109,
      "original_line": 109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1570820413",
      "pull_request_review_id": 2008992241,
      "id": 1570820413,
      "node_id": "PRRC_kwDOABII585doNE9",
      "diff_hunk": "@@ -57,15 +63,77 @@ namespace util {\n //! return function results.\n //!\n //! Usage examples can be found in \\example ../test/result_tests.cpp.\n-template <typename SuccessType = void, typename FailureType = void, typename MessagesType = bilingual_str>\n+template <typename SuccessType = void, typename FailureType = void, typename MessagesType = Messages>\n class Result;\n \n //! Wrapper object to pass an error string to the Result constructor.\n struct Error {\n     bilingual_str message;\n };\n+//! Wrapper object to pass a warning string to the Result constructor.\n+struct Warning {\n+    bilingual_str message;\n+};\n+\n+//! Wrapper object to pass an existing Result object to the Result constructor,\n+//! moving messages into the new object, like operator>> below. Passing\n+//! MoveFrom(result) to the Result constructor is similar to passing\n+//! std::move(result), except it doesn't require the two result objects to have\n+//! compatible Success and Failure types, and it only moves message and info\n+//! fields, leaving success and value fields alone. Like operator>>, it is\n+//! useful for combining data from many result objects into a single result.\n+template <typename Result>\n+struct MoveFrom {\n+    MoveFrom(Result&& result) : m_result(result) {}\n+    Result& m_result;\n+};\n+\n+//! Template deduction guide for MoveFrom class.\n+template <class Result>\n+MoveFrom(Result&& result) -> MoveFrom<Result>;\n+\n+//! Extension point for overriding the way SuccessType / FailureType /\n+//! MergesType values are combined.\n+template<typename T>\n+struct ResultTraits {\n+    template<typename O>\n+    static void MergeInto(O& dst, T& src)\n+    {\n+        dst = std::move(src);\n+    }\n+};\n+\n+//! Extension point for specializing behavior of MessagesType\n+template<typename MessagesType>\n+struct MessagesTraits;\n+\n+//! ResultTraits specialization for Messages struct.\n+template<>\n+struct ResultTraits<Messages> {\n+    static void MergeInto(Messages& dst, Messages& src);\n+};\n+\n+//! MessagesTraits specialization for Messages struct.\n+template<>\n+struct MessagesTraits<Messages> {",
      "path": "src/util/result.h",
      "position": 146,
      "original_position": 74,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9fe6a68170dc0265aeaf2fc2c1ffbd4ed7f3d1fb",
      "in_reply_to_id": 1552474458,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1552474458\r\n\r\n> I have not quite grasped yet what the immediate benefit of these more generic decorators on the Messages are. \r\n\r\nThe benefit is letting the `Result` struct work with any possible `MessagesType` without placing requirements on it. The PR provides a simple default type to hold error and warning messages:\r\n\r\n```c++\r\nstruct Messages {\r\n    std::vector<bilingual_str> errors{};\r\n    std::vector<bilingual_str> warnings{};\r\n};\r\n```\r\n\r\nThe type was defined this way because we currently have wallet code which returns lists of errors and warnings and wallet RPCs which return them in separate arrays. But I don't want to hardcode the `Result` type to use this particular struct, because it shouldn't care about `MessagesType` internals and because other representations of errors and warnings are reasonable too. Maybe a representation that preserved the relative order of errors and warnings instead of keeping them in separate arrays would be good. Maybe a representation that discarded translated strings, or only held errors without allowing warnings, or used a different data structure would be good. The `MessagesTraits` class lets the `Result` class not care about these things and work with any messages type.\r\n\r\n> I was asking myself if this could be a bit more readable if instead of a forward-declared struct, the `MessagesTraits` were made a concept. After implementing it, I think it is indeed a bit easier to parse at the call site. It also potentially allows the user to define their own types for the warnings and errors fields like this: [TheCharlatan@f5e5442](https://github.com/TheCharlatan/bitcoin/commit/f5e5442cf80c58c0509562d8c689243c8d9becf2) . Could this also be leveraged in place of your future addition of an info type?\r\n\r\nThat is interesting to see but I'm not sure it is more readable if you are familiar with the traits pattern. Another drawback is it requires every `MessagesType` to be a struct that has AddError, AddWarning, HasMessages, ErrorType, and WarningType members, which is not the case right now. Right now `MessagesType` could be any type including the simple `Messages` struct above, a plain string, even something like a bool or a custom type without public members. The suggestion is also +57 -36 lines excluding tests, so it doesn't really seem like a simplification, and the more complicated `Messages` struct definition also does not seem good to expose.",
      "created_at": "2024-04-18T13:58:41Z",
      "updated_at": "2024-04-18T16:24:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1570820413",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1570820413"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 109,
      "original_line": 109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1570823966",
      "pull_request_review_id": 2008992241,
      "id": 1570823966,
      "node_id": "PRRC_kwDOABII585doN8e",
      "diff_hunk": "@@ -215,29 +294,59 @@ class Result : public detail::SuccessHolder<SuccessType_, FailureType_, Messages\n     template <bool Failure, typename Result, typename... Args>\n     static void Construct(Result& result, util::Error error, Args&&... args)\n     {\n-        result.EnsureFailData().messages = std::move(error.message);\n+        result.AddError(std::move(error.message));\n         Construct</*Failure=*/true>(result, std::forward<Args>(args)...);\n     }\n \n+    //! Construct() overload peeling off a util::Warning constructor argument.\n+    template <bool Failure, typename Result, typename... Args>\n+    static void Construct(Result& result, util::Warning warning, Args&&... args)\n+    {\n+        result.AddWarning(std::move(warning.message));\n+        Construct<Failure>(result, std::forward<Args>(args)...);\n+    }\n+\n+    //! Construct() overload peeling off a util::MoveFrom constructor argument.\n+    template <bool Failure, typename Result, typename R, typename... Args>\n+    static void Construct(Result& result, MoveFrom<R> other, Args&&... args)\n+    {\n+        other.m_result >> result;\n+        Construct<Failure>(result, std::forward<Args>(args)...);\n+    }\n+\n     //! Move success, failure, and messages from source Result object to\n-    //! destination object. The source and destination results are not required\n+    //! destination object. Existing values are merged (using\n+    //! ResultTraits::MergeInto specializations), so destination errors and\n+    //! warning messages get appended to instead of overwritten.\n+    //! The source and destination results are not required\n     //! to have the same types, and assigning void source types to non-void\n     //! destinations type is allowed, since no source information is lost. But\n     //! assigning non-void source types to void destination types is not\n     //! allowed, since this would discard source information.\n     template <bool DstConstructed, typename DstResult, typename SrcResult>\n     static void Move(DstResult& dst, SrcResult& src)\n     {\n-        // Move messages values first, then move success or failure value below.\n-        if (src.GetMessages() && !src.GetMessages()->empty()) {\n-            dst.EnsureMessages() = std::move(*src.GetMessages());\n-        }\n+        // Use operator>> to move messages values first, then move success or\n+        // failure value below.\n+        src >> dst;\n         // If DstConstructed is true, it means dst has either a success value or\n-        // a failure value set, which needs to be destroyed and replaced. If\n+        // a failure value set, which needs to be merged or replaced. If\n         // DstConstructed is false, then dst is being constructed now and has no\n         // values set.\n         if constexpr (DstConstructed) {\n-            if (dst) {\n+            if (dst && src) {\n+                // dst and src both hold success values, so merge them and return\n+                if constexpr (!std::is_same_v<typename SrcResult::SuccessType, void>) {\n+                    ResultTraits<typename SrcResult::SuccessType>::MergeInto(*dst, *src);",
      "path": "src/util/result.h",
      "position": 1,
      "original_position": 209,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "9fe6a68170dc0265aeaf2fc2c1ffbd4ed7f3d1fb",
      "in_reply_to_id": 1552459477,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1552459477\r\n\r\n> Reviewers might be wondering what the benefits of the ResultTraits are. They are useful for potential future extensions of the move behaviour: [3951afc](https://github.com/bitcoin/bitcoin/commit/3951afc3b708326cea653951ef331d8f96a28682) .\r\n\r\nThanks I added a comment to the traits struct to make this clearer. Traits are an old pattern in c++ and are commonly used. The standard library has std::allocator_traits, std::iterator_traits, std::pointer_traits, std::hash, std::formatter, std::tuple_element, and std::tuple_size trait structs which allow generic library functions to work with user defined types. They all work the same way, by defining a template struct in the library that user code can specialize to control the behavior of library functions when called with custom types. This is an old explanation of traits which may be helpful: http://erdani.org/publications/traits.html",
      "created_at": "2024-04-18T14:00:07Z",
      "updated_at": "2024-04-18T16:24:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1570823966",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1570823966"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 342,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1665942681",
      "pull_request_review_id": 2159306748,
      "id": 1665942681,
      "node_id": "PRRC_kwDOABII585jTESZ",
      "diff_hunk": "@@ -57,35 +61,45 @@ static ChainstateLoadResult CompleteChainstateInitialization(\n         }\n     }\n \n-    if (chainman.m_interrupt) return {ChainstateLoadStatus::INTERRUPTED, {}};\n+    if (chainman.m_interrupt) {\n+        result.Update(Interrupted{});\n+        return result;",
      "path": "src/node/chainstate.cpp",
      "position": 1,
      "original_position": 27,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "79a970d4f12458a175317c453e251db7846c3561",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "79a970d4f12458a175317c453e251db7846c3561: I am not really sure, what the point of `Update` here is. A simple `return Interrupted{};` compiles as well. I fail to see why it would be wrong, because the default constructed monostate should not be returned either way.\r\n\r\n(Same for all code below)\r\n\r\nMy recommendation would be to keep the code as simple as possible and not add complicated features or complication that isn't required.\r\n\r\n<!--\r\n\r\ncommit fdcb7d752273d83fedfcc9829a9180d72ab87faa\r\nAuthor: MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz>\r\nDate:   Thu Jul 4 20:19:13 2024 +0200\r\n\r\n    refactor: Add util::Result failure values\r\n\r\ndiff --git a/src/util/result.h b/src/util/result.h\r\nindex 122a7638fa..50a242f5ce 100644\r\n--- a/src/util/result.h\r\n+++ b/src/util/result.h\r\n@@ -12,8 +12,9 @@\r\n \r\n namespace util {\r\n \r\n+template <class FailData = bilingual_str>\r\n struct Error {\r\n-    bilingual_str message;\r\n+    FailData message;\r\n };\r\n \r\n //! The util::Result class provides a standard way for functions to return\r\n@@ -31,13 +32,13 @@ struct Error {\r\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\r\n //! error strings usually just replacing `return std::nullopt;` with `return\r\n //! util::Error{error_string};`.\r\n-template <class M>\r\n+template <class M, class ErrorType = Error<>>\r\n class Result\r\n {\r\n private:\r\n     using T = std::conditional_t<std::is_same_v<M, void>, std::monostate, M>;\r\n \r\n-    std::variant<bilingual_str, T> m_variant;\r\n+    std::variant<ErrorType, T> m_variant;\r\n \r\n     //! Disallow copy constructor, require Result to be moved for efficiency.\r\n     Result(const Result&) = delete;\r\n@@ -55,7 +56,7 @@ private:\r\n public:\r\n     Result() : m_variant{std::in_place_index_t<1>{}, std::monostate{}} {}  // constructor for void\r\n     Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\r\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\r\n+    Result(ErrorType error) : m_variant{std::in_place_index_t<0>{}, std::move(error)} {}\r\n     Result(Result&&) = default;\r\n     ~Result() = default;\r\n \r\n@@ -83,8 +84,10 @@ public:\r\n         return has_value() ? std::move(value()) : std::forward<U>(default_value);\r\n     }\r\n     explicit operator bool() const noexcept { return has_value(); }\r\n+    const auto& GetFailure() const LIFETIMEBOUND { assert(!has_value()); return std::get<0>(m_variant); }\r\n     const T* operator->() const LIFETIMEBOUND { return &value(); }\r\n     const T& operator*() const LIFETIMEBOUND { return value(); }\r\n+    auto& GetFailure() LIFETIMEBOUND { assert(!has_value()); return std::get<0>(m_variant); }\r\n     T* operator->() LIFETIMEBOUND { return &value(); }\r\n     T& operator*() LIFETIMEBOUND { return value(); }\r\n };\r\n@@ -92,7 +95,7 @@ public:\r\n template <typename T>\r\n bilingual_str ErrorString(const Result<T>& result)\r\n {\r\n-    return result ? bilingual_str{} : std::get<0>(result.m_variant);\r\n+    return result ? bilingual_str{} : std::get<0>(result.m_variant).message;\r\n }\r\n } // namespace util\r\n \r\n",
      "created_at": "2024-07-04T17:23:32Z",
      "updated_at": "2024-07-04T18:33:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1665942681",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1665942681"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": 65,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1666644819",
      "pull_request_review_id": 2160449650,
      "id": 1666644819,
      "node_id": "PRRC_kwDOABII585jVvtT",
      "diff_hunk": "@@ -57,35 +61,45 @@ static ChainstateLoadResult CompleteChainstateInitialization(\n         }\n     }\n \n-    if (chainman.m_interrupt) return {ChainstateLoadStatus::INTERRUPTED, {}};\n+    if (chainman.m_interrupt) {\n+        result.Update(Interrupted{});\n+        return result;",
      "path": "src/node/chainstate.cpp",
      "position": 1,
      "original_position": 27,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "79a970d4f12458a175317c453e251db7846c3561",
      "in_reply_to_id": 1665942681,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I wrote a simple patch to make the existing `Result` more flexible (allow inner error types other than `bilingual_str`), for places that want to use something like `std::expected<A, B>` in code today by using `Result<A, B>`.\r\n\r\nI understand that the `ErrorString` helper won't be working as-is anymore. But that seems fine, because a standalone function can be provided to turn `B` into a string.\r\n\r\nI also understand that the approach does not allow for multiple failures, errors, and warnings.\r\n\r\nNot sure how to proceed here. Should I submit my patch as alternative pull request (it can be reverted here, if merged sooner)? Or should I backport `std::expected` into a separate header file? Or should I just wait until this pull is merged or C++23 happens, whichever happens earlier?\r\n\r\nFor reference, my patch is:\r\n\r\n```diff\r\ncommit fac1bdf332ccb241dbebf7ee421bb885381242ab\r\nAuthor: MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz>\r\nDate:   Fri Jul 5 09:54:12 2024 +0200\r\n\r\n    refactor: Add util::Result failure values\r\n    \r\n    This allows to use an inner error type different than bilingual_str. For\r\n    example, an enum class.\r\n    \r\n    The ErrorString helper will not compile in this case, and a GetFailure()\r\n    method is added to retrieve the error value.\r\n\r\ndiff --git a/src/util/result.h b/src/util/result.h\r\nindex 122a7638fa..038ed6336e 100644\r\n--- a/src/util/result.h\r\n+++ b/src/util/result.h\r\n@@ -12,8 +12,9 @@\r\n \r\n namespace util {\r\n \r\n+template <class Inner = bilingual_str>\r\n struct Error {\r\n-    bilingual_str message;\r\n+    Inner inner;\r\n };\r\n \r\n //! The util::Result class provides a standard way for functions to return\r\n@@ -31,13 +32,14 @@ struct Error {\r\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\r\n //! error strings usually just replacing `return std::nullopt;` with `return\r\n //! util::Error{error_string};`.\r\n-template <class M>\r\n+template <class M, class F = bilingual_str>\r\n class Result\r\n {\r\n private:\r\n     using T = std::conditional_t<std::is_same_v<M, void>, std::monostate, M>;\r\n+    using Error = Error<F>;\r\n \r\n-    std::variant<bilingual_str, T> m_variant;\r\n+    std::variant<Error, T> m_variant;\r\n \r\n     //! Disallow copy constructor, require Result to be moved for efficiency.\r\n     Result(const Result&) = delete;\r\n@@ -55,7 +57,7 @@ private:\r\n public:\r\n     Result() : m_variant{std::in_place_index_t<1>{}, std::monostate{}} {}  // constructor for void\r\n     Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\r\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\r\n+    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error)} {}\r\n     Result(Result&&) = default;\r\n     ~Result() = default;\r\n \r\n@@ -83,8 +85,10 @@ public:\r\n         return has_value() ? std::move(value()) : std::forward<U>(default_value);\r\n     }\r\n     explicit operator bool() const noexcept { return has_value(); }\r\n+    const auto& GetFailure() const LIFETIMEBOUND { assert(!has_value()); return std::get<0>(m_variant).inner; }\r\n     const T* operator->() const LIFETIMEBOUND { return &value(); }\r\n     const T& operator*() const LIFETIMEBOUND { return value(); }\r\n+    auto& GetFailure() LIFETIMEBOUND { assert(!has_value()); return std::get<0>(m_variant).inner; }\r\n     T* operator->() LIFETIMEBOUND { return &value(); }\r\n     T& operator*() LIFETIMEBOUND { return value(); }\r\n };\r\n@@ -92,7 +96,7 @@ public:\r\n template <typename T>\r\n bilingual_str ErrorString(const Result<T>& result)\r\n {\r\n-    return result ? bilingual_str{} : std::get<0>(result.m_variant);\r\n+    return result ? bilingual_str{} : result.GetFailure();\r\n }\r\n } // namespace util\r\n \r\n",
      "created_at": "2024-07-05T10:32:53Z",
      "updated_at": "2024-07-05T10:32:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1666644819",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1666644819"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": 65,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1668634381",
      "pull_request_review_id": 2163320420,
      "id": 1668634381,
      "node_id": "PRRC_kwDOABII585jdVcN",
      "diff_hunk": "@@ -57,35 +61,45 @@ static ChainstateLoadResult CompleteChainstateInitialization(\n         }\n     }\n \n-    if (chainman.m_interrupt) return {ChainstateLoadStatus::INTERRUPTED, {}};\n+    if (chainman.m_interrupt) {\n+        result.Update(Interrupted{});\n+        return result;",
      "path": "src/node/chainstate.cpp",
      "position": 1,
      "original_position": 27,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "79a970d4f12458a175317c453e251db7846c3561",
      "in_reply_to_id": 1665942681,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1666644819\r\n\r\n> I wrote a simple patch to make the existing `Result` more flexible (allow inner error types other than `bilingual_str`), for places that want to use something like `std::expected<A, B>` in code today by using `Result<A, B>`.\r\n\r\nI think it could be a good idea to introduce a `util::Expected<A, B>` class if you see places in our code that need to return structured failure information but do not need to return error messages along with the failure data. If we have a `util::Expected` class it should make it easier to transition code from `util::Expected` to `std::expected` (maybe even with a scripted-diff) than if that code were written `util::Result`.\r\n\r\nI do see benefits of `util::Result` and `std::expected` as being pretty different. I think `util::Result` class provides a good way to return complete error information for GUI, RPC, and libbitcoinkernel users when code is doing a big operation like loading a wallet, connecting a block, or creating a transaction, that can fail in complicated ways. It provides a way for wallet code in #25722 and kernel code in #29700 to return error information in a standard format in a single return value without ad-hoc `bilingual_string& error` `std::vector<bilingual_str>& warnings` `bool& fatal_error` `bool& is_interrupted` in/out arguments. I think `Result` class works best when you have a chain of `Result` functions calling other `Result` functions, because the class provides ways to safely merge information for types that can be merged, while triggering compile errors if there are attempts to combine incompatible results.\r\n\r\nBy contrast, `std::expected<A, B>` is basically syntax sugar over `std::variant<A, B>`, which is great, but I think doesn't help as much with problems in our codebase of returning error messages with enough context to users and making sure fatal errors and `SignalInterrupt` statuses are bubbled up to libbitcoinkernel callers.\r\n\r\nI'd very much encourage adding a `util::Expected` class which is a simple wrapper over `std::variant` like your patch, if you see potential uses for this. But if you think adding a separate `util::Expected` class would be overkill, and instead would prefer to build this functionality into `util::Result` that would also be fine with me. I just think it might make it harder to disentangle the different use-cases for `util::Result` and `std::expected` later when we update to c++23, if we are using one class instead of two.\r\n\r\n\r\n\r\n",
      "created_at": "2024-07-08T13:29:13Z",
      "updated_at": "2024-07-08T14:20:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1668634381",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1668634381"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": 65,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1668742748",
      "pull_request_review_id": 2163496267,
      "id": 1668742748,
      "node_id": "PRRC_kwDOABII585jdv5c",
      "diff_hunk": "@@ -57,35 +61,45 @@ static ChainstateLoadResult CompleteChainstateInitialization(\n         }\n     }\n \n-    if (chainman.m_interrupt) return {ChainstateLoadStatus::INTERRUPTED, {}};\n+    if (chainman.m_interrupt) {\n+        result.Update(Interrupted{});\n+        return result;",
      "path": "src/node/chainstate.cpp",
      "position": 1,
      "original_position": 27,
      "commit_id": "8b892d41fdeb5756fd83f6050f27a170338d260a",
      "original_commit_id": "79a970d4f12458a175317c453e251db7846c3561",
      "in_reply_to_id": 1665942681,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1665942681\r\n\r\n> [79a970d](https://github.com/bitcoin/bitcoin/commit/79a970d4f12458a175317c453e251db7846c3561): I am not really sure, what the point of `Update` here is. A simple `return Interrupted{};` compiles as well. I fail to see why it would be wrong, because the default constructed monostate should not be returned either way.\r\n> \r\n> (Same for all code below)\r\n> \r\n> My recommendation would be to keep the code as simple as possible and not add complicated features or complication that isn't required.\r\n\r\nI don't see a big difference in complexity here, but I'll make the suggested change since two people asked for it. Stickies suggested the same change in https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-2079388456 and posted a diff.\r\n\r\nFor background, a good reason to use the `result.Update()` pattern is when you have a function performing multiple operations, and you want to return warnings and errors from all operations, not just the last one.\r\n\r\nWhen I wrote more code using the `Result` class in #25722 and #29700, I found that whenever you have functions returning `Result` and calling other functions returning `Result`, a good way to write them was to declare a single `Result` variable at the top, and accumulate error and warning messages in it, and return it after updating it with a final success or failure value. Other patterns could work too, but this pattern was easy to follow, and worked in all cases including more complicated ones with loops, and nested if statements, and #ifdef code. In #25722 and #29700, for simpler `Result` functions that don't call other `Result` functions, I did use simpler pattern of just returning success values or `util::Error` directly, as you suggest.\r\n\r\nIn `CompleteChainstateInitialization` right now, either pattern works fine, because it does not currently call any other functions returning `Result`. I just thought `result.Update` pattern was appropriate because it is a pretty long function, and later in #29700 `LoadBlockIndex` and `MaybeRebalanceCaches` will be updated to return `Result` values, so using `result.Update` now could avoid code churn later.",
      "created_at": "2024-07-08T14:22:54Z",
      "updated_at": "2024-07-08T14:22:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1668742748",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1668742748"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": 65,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    }
  ]
}