{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33032",
    "id": 2683340623,
    "node_id": "PR_kwDOABII586f8IdP",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/33032",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/33032.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/33032.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33032",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33032/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33032/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33032/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/1cdb9161774ccf3edcdcb1e482b20be430ed5430",
    "number": 33032,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "wallet, test: Replace MockableDatabase with in-memory SQLiteDatabase",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "`MockableDatabase` was introduced for the tests to avoid tying non-database tests to a particular database type. However, since the only database type now is sqlite, and because the mockable behavior is no longer used by the tests, we can replace usage of the `MockabeDatabase` with a SQLite database that lives only in memory.\r\n\r\nThis is particularly useful for future work that has the wallet make use of SQLite's capabilities more, which are less conducive to having a separate mock database implementation.",
    "labels": [],
    "created_at": "2025-07-21T22:36:32Z",
    "updated_at": "2025-10-22T15:49:34Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "1ffea8ce60b33f61b746a98e1669185c2b3cd89c",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "achow101:sqlite-in-memory-db",
      "ref": "sqlite-in-memory-db",
      "sha": "1cdb9161774ccf3edcdcb1e482b20be430ed5430",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 45006379,
        "node_id": "MDEwOlJlcG9zaXRvcnk0NTAwNjM3OQ==",
        "name": "bitcoin",
        "full_name": "achow101/bitcoin",
        "owner": {
          "login": "achow101",
          "id": 3782274,
          "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
          "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/achow101",
          "html_url": "https://github.com/achow101",
          "followers_url": "https://api.github.com/users/achow101/followers",
          "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
          "organizations_url": "https://api.github.com/users/achow101/orgs",
          "repos_url": "https://api.github.com/users/achow101/repos",
          "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/achow101/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/achow101/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/achow101/bitcoin",
        "archive_url": "https://api.github.com/repos/achow101/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/achow101/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/achow101/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/achow101/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/achow101/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/achow101/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/achow101/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/achow101/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/achow101/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/achow101/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/achow101/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/achow101/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/achow101/bitcoin/events",
        "forks_url": "https://api.github.com/repos/achow101/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/achow101/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/achow101/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/achow101/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/achow101/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/achow101/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/achow101/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/achow101/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/achow101/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/achow101/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/achow101/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/achow101/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/achow101/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/achow101/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/achow101/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/achow101/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:achow101/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/achow101/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/achow101/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/achow101/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/achow101/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/achow101/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/achow101/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/achow101/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/achow101/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/achow101/bitcoin/hooks",
        "svn_url": "https://github.com/achow101/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 10,
        "stargazers_count": 41,
        "watchers_count": 41,
        "size": 310752,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-10-21T07:29:41Z",
        "created_at": "2015-10-27T00:20:28Z",
        "updated_at": "2025-09-06T09:25:53Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "5ad79b203505fe7b867c05139d78e9aa6d662dcc",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 38066,
        "stargazers_count": 86341,
        "watchers_count": 86341,
        "size": 295104,
        "default_branch": "master",
        "open_issues_count": 752,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-10-22T10:50:05Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-10-22T13:41:44Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33032"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 89,
    "deletions": 193,
    "changed_files": 6,
    "commits": 4,
    "review_comments": 14,
    "comments": 3
  },
  "events": [
    {
      "event": "commented",
      "id": 3099673910,
      "node_id": "IC_kwDOABII5864wUU2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3099673910",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-21T22:36:35Z",
      "updated_at": "2025-08-20T16:53:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/33032.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [rkrux](https://github.com/bitcoin/bitcoin/pull/33032#pullrequestreview-3054176313) |\n| Concept ACK | [brunoerg](https://github.com/bitcoin/bitcoin/pull/33032#pullrequestreview-3053056674) |\n| Stale ACK | [PeterWrighten](https://github.com/bitcoin/bitcoin/pull/33032#issuecomment-3104700592) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#33034](https://github.com/bitcoin/bitcoin/pull/33034) (wallet: Store transactions in a separate sqlite table by achow101)\n* [#32685](https://github.com/bitcoin/bitcoin/pull/32685) (wallet: Allow read-only database access for info and dump commands by PeterWrighten)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33032#issuecomment-3099673910",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33032"
    },
    {
      "event": "commented",
      "id": 3104700592,
      "node_id": "IC_kwDOABII5865Dfiw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3104700592",
      "actor": {
        "login": "PeterWrighten",
        "id": 45826386,
        "node_id": "MDQ6VXNlcjQ1ODI2Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/45826386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PeterWrighten",
        "html_url": "https://github.com/PeterWrighten",
        "followers_url": "https://api.github.com/users/PeterWrighten/followers",
        "following_url": "https://api.github.com/users/PeterWrighten/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PeterWrighten/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PeterWrighten/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PeterWrighten/subscriptions",
        "organizations_url": "https://api.github.com/users/PeterWrighten/orgs",
        "repos_url": "https://api.github.com/users/PeterWrighten/repos",
        "events_url": "https://api.github.com/users/PeterWrighten/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PeterWrighten/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-22T20:16:20Z",
      "updated_at": "2025-07-25T03:37:12Z",
      "author_association": "NONE",
      "body": "utACK 78897500676f7ab1b197da56c0a676efcb49ec41",
      "user": {
        "login": "PeterWrighten",
        "id": 45826386,
        "node_id": "MDQ6VXNlcjQ1ODI2Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/45826386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PeterWrighten",
        "html_url": "https://github.com/PeterWrighten",
        "followers_url": "https://api.github.com/users/PeterWrighten/followers",
        "following_url": "https://api.github.com/users/PeterWrighten/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PeterWrighten/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PeterWrighten/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PeterWrighten/subscriptions",
        "organizations_url": "https://api.github.com/users/PeterWrighten/orgs",
        "repos_url": "https://api.github.com/users/PeterWrighten/repos",
        "events_url": "https://api.github.com/users/PeterWrighten/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PeterWrighten/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33032#issuecomment-3104700592",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33032"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGIwOGE3NzU0OWUzNjk5ZGRkNzk4Nzg3ZjRhMTA3M2EyZDhiMGZhYjQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b08a77549e3699ddd798787f4a1073a2d8b0fab4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b08a77549e3699ddd798787f4a1073a2d8b0fab4",
      "tree": {
        "sha": "3981e93dbeaa849867ddb7cadb444188c3632836",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3981e93dbeaa849867ddb7cadb444188c3632836"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/900bb53905aaf0a7b45c1471c5248d7e340ba27b",
          "sha": "900bb53905aaf0a7b45c1471c5248d7e340ba27b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/900bb53905aaf0a7b45c1471c5248d7e340ba27b"
        }
      ],
      "message": "bench, wallet: Make WalletMigration's setup WalletBatch scoped\n\nWalletBatch needs to be in a scope so that it is destroyed before the\ndatabase is closed during migration.",
      "committer": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2025-07-23T00:03:07Z"
      },
      "author": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2025-07-07T22:15:07Z"
      },
      "sha": "b08a77549e3699ddd798787f4a1073a2d8b0fab4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDUzMDJiNDRjYTUwNGIxY2UwMDY2OWNiYWU4OGVhZDZmMWQxOGVlYzI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5302b44ca504b1ce00669cbae88ead6f1d18eec2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5302b44ca504b1ce00669cbae88ead6f1d18eec2",
      "tree": {
        "sha": "31656bb57cd2206bcb7cca75437728b135d4b980",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/31656bb57cd2206bcb7cca75437728b135d4b980"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b08a77549e3699ddd798787f4a1073a2d8b0fab4",
          "sha": "b08a77549e3699ddd798787f4a1073a2d8b0fab4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b08a77549e3699ddd798787f4a1073a2d8b0fab4"
        }
      ],
      "message": "test: Make duplicating MockableDatabases use cursor and batch\n\nInstead of directly copying the stored records map when duplicating a\nMockableDatabase, use a Cursor to read the records, and a Batch to write\nthem into the new database. This prepares for using SQLite as the\ndatabase backend for MockableDatabase.",
      "committer": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2025-07-23T00:03:07Z"
      },
      "author": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2025-07-07T21:12:58Z"
      },
      "sha": "5302b44ca504b1ce00669cbae88ead6f1d18eec2"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18762776302,
      "node_id": "HRFPE_lADOABII587BunDWzwAAAAReWT7u",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18762776302",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f69852441e56c70edaebeaa7e2db4c6249c7e17c",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/f69852441e56c70edaebeaa7e2db4c6249c7e17c",
      "created_at": "2025-07-23T00:05:00Z"
    },
    {
      "event": "reviewed",
      "id": 3051716437,
      "node_id": "PRR_kwDOABII58615X9V",
      "url": null,
      "actor": null,
      "commit_id": "f69852441e56c70edaebeaa7e2db4c6249c7e17c",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-07-24T14:12:01Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK f69852441e56c70edaebeaa7e2db4c6249c7e17c\r\n\r\nI have looked in depth only the last commit. Almost all of my suggestions merge towards having child mock class(es) extending the base SQLite specific classes, wherever required. They can be deleted in the future if the need arises without touching the base SQLite classes. Also, I believe they would not make it difficult to achieve the following goal stated in the PR desc.\r\n\r\n> This is particularly useful for future work that has the wallet make use of SQLite's capabilities more, which are less conducive to having a separate mock database implementation.",
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33032#pullrequestreview-3051716437",
      "submitted_at": "2025-07-24T14:12:01Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33032"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk5ODIzODkzNGYzZjk5NGY3YjU4MjljYWYyYzdhZGUwNDBmY2E2Zjc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/998238934f3f994f7b5829caf2c7ade040fca6f7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/998238934f3f994f7b5829caf2c7ade040fca6f7",
      "tree": {
        "sha": "6b5c2a3df137330d43e41ce5a9aab975bf978a82",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6b5c2a3df137330d43e41ce5a9aab975bf978a82"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5302b44ca504b1ce00669cbae88ead6f1d18eec2",
          "sha": "5302b44ca504b1ce00669cbae88ead6f1d18eec2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5302b44ca504b1ce00669cbae88ead6f1d18eec2"
        }
      ],
      "message": "wallet: Make Mockable{Database,Batch} subclasses of SQLite classes\n\nThe mocking functionality of MockableDatabase, MockableBatch, and\nMockableCursor was not really being used. These are changed to be\nsubclasses of their respective SQLite* classes and will use in-memory\nSQLite databases so that the tests are more representative of actual\ndatabase behavior.\n\nMockableCursor is removed as there are no overrides needed in\nSQLiteCursor for the tests.",
      "committer": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2025-07-24T19:24:49Z"
      },
      "author": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2025-07-24T18:31:47Z"
      },
      "sha": "998238934f3f994f7b5829caf2c7ade040fca6f7"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18801895948,
      "node_id": "HRFPE_lADOABII587BunDWzwAAAARgrioM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18801895948",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "98bb7efdf51ab982b7f6bf96f7916343eb5bccb6",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/98bb7efdf51ab982b7f6bf96f7916343eb5bccb6",
      "created_at": "2025-07-24T19:24:55Z"
    },
    {
      "event": "reviewed",
      "id": 3053056674,
      "node_id": "PRR_kwDOABII5861-fKi",
      "url": null,
      "actor": null,
      "commit_id": "98bb7efdf51ab982b7f6bf96f7916343eb5bccb6",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-07-24T19:43:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33032#pullrequestreview-3053056674",
      "submitted_at": "2025-07-24T19:43:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33032"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDFjZGI5MTYxNzc0Y2NmM2VkY2RjYjFlNDgyYjIwYmU0MzBlZDU0MzA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1cdb9161774ccf3edcdcb1e482b20be430ed5430",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1cdb9161774ccf3edcdcb1e482b20be430ed5430",
      "tree": {
        "sha": "ab1d589f08675bdd520adbf33e0ad9ac5f4731c3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ab1d589f08675bdd520adbf33e0ad9ac5f4731c3"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/998238934f3f994f7b5829caf2c7ade040fca6f7",
          "sha": "998238934f3f994f7b5829caf2c7ade040fca6f7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/998238934f3f994f7b5829caf2c7ade040fca6f7"
        }
      ],
      "message": "walletdb: Remove m_mock from SQLiteDatabase",
      "committer": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2025-07-24T20:16:20Z"
      },
      "author": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2025-07-24T19:21:47Z"
      },
      "sha": "1cdb9161774ccf3edcdcb1e482b20be430ed5430"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18802784488,
      "node_id": "HRFPE_lADOABII587BunDWzwAAAARgu7jo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18802784488",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1cdb9161774ccf3edcdcb1e482b20be430ed5430",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/1cdb9161774ccf3edcdcb1e482b20be430ed5430",
      "created_at": "2025-07-24T20:16:33Z"
    },
    {
      "event": "labeled",
      "id": 18802786435,
      "node_id": "LE_lADOABII587BunDWzwAAAARgu8CD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18802786435",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-24T20:16:42Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 3114797933,
      "node_id": "IC_kwDOABII5865qAtt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3114797933",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-24T20:16:44Z",
      "updated_at": "2025-07-24T20:16:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Task `MSan, depends`: https://github.com/bitcoin/bitcoin/runs/46676643655</sub>\n<sub>LLM reason (✨ experimental): The CI failure is caused by a compilation error due to the use of the `-Werror` flag, which treats a warning about an unused private field as an error, preventing successful build.</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33032#issuecomment-3114797933",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33032"
    },
    {
      "event": "reviewed",
      "id": 3054176313,
      "node_id": "PRR_kwDOABII5862Cwg5",
      "url": null,
      "actor": null,
      "commit_id": "1cdb9161774ccf3edcdcb1e482b20be430ed5430",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-07-25T05:49:07Z",
      "author_association": "CONTRIBUTOR",
      "body": "tACK 1cdb9161774ccf3edcdcb1e482b20be430ed5430\r\n\r\nThanks for incorporating suggestions.",
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33032#pullrequestreview-3054176313",
      "submitted_at": "2025-07-25T05:49:07Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33032"
    },
    {
      "event": "review_requested",
      "id": 18808166675,
      "node_id": "RRE_lADOABII587BunDWzwAAAARhDdkT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18808166675",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-25T05:49:10Z",
      "requested_reviewer": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "unlabeled",
      "id": 18809821349,
      "node_id": "UNLE_lADOABII587BunDWzwAAAARhJxil",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18809821349",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-25T08:01:35Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "review_requested",
      "id": 20434636177,
      "node_id": "RRE_lADOABII587BunDWzwAAAATB_82R",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20434636177",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-22T15:49:34Z",
      "requested_reviewer": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228547723",
      "pull_request_review_id": 3051716437,
      "id": 2228547723,
      "node_id": "PRRC_kwDOABII586E1PCL",
      "diff_hunk": "@@ -95,6 +89,14 @@ class SQLiteBatch : public DatabaseBatch\n     bool TxnCommit() override;\n     bool TxnAbort() override;\n     bool HasActiveTxn() override { return m_txn; }\n+\n+    // DO NOT CALL DIRECTLY, use DatabaseBatch::Read, Write, Erase, Exists, and ErasePrefix.\n+    // These functions are public for testing only.",
      "path": "src/wallet/sqlite.h",
      "position": 1,
      "original_position": 19,
      "commit_id": "1cdb9161774ccf3edcdcb1e482b20be430ed5430",
      "original_commit_id": "f69852441e56c70edaebeaa7e2db4c6249c7e17c",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In f69852441e56c70edaebeaa7e2db4c6249c7e17c \"test, wallet: Replace MockableDatabase with in-memory SQLiteDatabase\"\r\n\r\nOkay with removal of classes that extend the generic classes such as `WalletDatabase, DatabaseCursor, DatabaseBatch`, but I don't prefer seeing such comments in the non-test code. It's usually a sign of low cohesion in the design imho, which is not desirable.\r\n\r\nAn alternative could be to create a new class `MockSQLiteBatch` that extends `SQLiteBatch`. The test specific implementation can go inside the mock class.",
      "created_at": "2025-07-24T13:36:19Z",
      "updated_at": "2025-07-24T14:12:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33032#discussion_r2228547723",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228547723"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33032"
        }
      },
      "start_line": null,
      "original_start_line": 93,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 94,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228552486",
      "pull_request_review_id": 3051716437,
      "id": 2228552486,
      "node_id": "PRRC_kwDOABII586E1QMm",
      "diff_hunk": "@@ -150,12 +152,17 @@ class SQLiteDatabase : public WalletDatabase\n     /** Return paths to all database created files */\n     std::vector<fs::path> Files() override\n     {\n+        if (m_mock) return {};\n         std::vector<fs::path> files;\n         files.emplace_back(m_dir_path / fs::PathFromString(m_file_path));\n         files.emplace_back(m_dir_path / fs::PathFromString(m_file_path + \"-journal\"));\n         return files;\n     }\n-    std::string Format() override { return \"sqlite\"; }\n+    std::string Format() override\n+    {\n+        if (m_mock) return \"sqlite-mock\";\n+        return \"sqlite\";",
      "path": "src/wallet/sqlite.h",
      "position": 1,
      "original_position": 42,
      "commit_id": "1cdb9161774ccf3edcdcb1e482b20be430ed5430",
      "original_commit_id": "f69852441e56c70edaebeaa7e2db4c6249c7e17c",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In https://github.com/bitcoin/bitcoin/commit/f69852441e56c70edaebeaa7e2db4c6249c7e17c \"test, wallet: Replace MockableDatabase with in-memory SQLiteDatabase\"\r\n\r\nI don't think there should be mock related checks in the non-test code. A `MockSQLiteDatabase` class extending `SQLiteDatabase` class can override this function.",
      "created_at": "2025-07-24T13:38:03Z",
      "updated_at": "2025-07-24T14:12:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33032#discussion_r2228552486",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228552486"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33032"
        }
      },
      "start_line": null,
      "original_start_line": 163,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 164,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228558213",
      "pull_request_review_id": 3051716437,
      "id": 2228558213,
      "node_id": "PRRC_kwDOABII586E1RmF",
      "diff_hunk": "@@ -150,12 +152,17 @@ class SQLiteDatabase : public WalletDatabase\n     /** Return paths to all database created files */\n     std::vector<fs::path> Files() override\n     {\n+        if (m_mock) return {};",
      "path": "src/wallet/sqlite.h",
      "position": 1,
      "original_position": 32,
      "commit_id": "1cdb9161774ccf3edcdcb1e482b20be430ed5430",
      "original_commit_id": "f69852441e56c70edaebeaa7e2db4c6249c7e17c",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In https://github.com/bitcoin/bitcoin/commit/f69852441e56c70edaebeaa7e2db4c6249c7e17c \"test, wallet: Replace MockableDatabase with in-memory SQLiteDatabase\"\r\n\r\nI see the `m_mock` was already present in `SQLiteDatabase` class but perhaps this PR can be an opportunity to take it out from it by extending this class by a `MockSQLiteDatabase`. `git grep -n m_mock` shows limited `if` checks in the non-test code that can be removed now.",
      "created_at": "2025-07-24T13:40:18Z",
      "updated_at": "2025-07-24T14:12:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33032#discussion_r2228558213",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228558213"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33032"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 155,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228565019",
      "pull_request_review_id": 3051716437,
      "id": 2228565019,
      "node_id": "PRRC_kwDOABII586E1TQb",
      "diff_hunk": "@@ -110,103 +111,10 @@ CTxDestination getNewDestination(CWallet& w, OutputType output_type)\n     return *Assert(w.GetNewDestination(output_type, \"\"));\n }\n \n-MockableCursor::MockableCursor(const MockableData& records, bool pass, std::span<const std::byte> prefix)\n-{\n-    m_pass = pass;\n-    std::tie(m_cursor, m_cursor_end) = records.equal_range(BytePrefix{prefix});\n-}\n-\n-DatabaseCursor::Status MockableCursor::Next(DataStream& key, DataStream& value)\n-{\n-    if (!m_pass) {\n-        return Status::FAIL;\n-    }\n-    if (m_cursor == m_cursor_end) {\n-        return Status::DONE;\n-    }\n-    key.clear();\n-    value.clear();\n-    const auto& [key_data, value_data] = *m_cursor;\n-    key.write(key_data);\n-    value.write(value_data);\n-    m_cursor++;\n-    return Status::MORE;\n-}\n-\n-bool MockableBatch::ReadKey(DataStream&& key, DataStream& value)\n-{\n-    if (!m_pass) {\n-        return false;\n-    }\n-    SerializeData key_data{key.begin(), key.end()};\n-    const auto& it = m_records.find(key_data);\n-    if (it == m_records.end()) {\n-        return false;\n-    }\n-    value.clear();\n-    value.write(it->second);\n-    return true;\n-}\n-\n-bool MockableBatch::WriteKey(DataStream&& key, DataStream&& value, bool overwrite)\n-{\n-    if (!m_pass) {\n-        return false;\n-    }\n-    SerializeData key_data{key.begin(), key.end()};\n-    SerializeData value_data{value.begin(), value.end()};\n-    auto [it, inserted] = m_records.emplace(key_data, value_data);\n-    if (!inserted && overwrite) { // Overwrite if requested\n-        it->second = value_data;\n-        inserted = true;\n-    }\n-    return inserted;\n-}\n-\n-bool MockableBatch::EraseKey(DataStream&& key)\n-{\n-    if (!m_pass) {\n-        return false;\n-    }\n-    SerializeData key_data{key.begin(), key.end()};\n-    m_records.erase(key_data);\n-    return true;\n-}\n-\n-bool MockableBatch::HasKey(DataStream&& key)\n-{\n-    if (!m_pass) {\n-        return false;\n-    }\n-    SerializeData key_data{key.begin(), key.end()};\n-    return m_records.count(key_data) > 0;\n-}\n-\n-bool MockableBatch::ErasePrefix(std::span<const std::byte> prefix)\n-{\n-    if (!m_pass) {\n-        return false;\n-    }\n-    auto it = m_records.begin();\n-    while (it != m_records.end()) {\n-        auto& key = it->first;\n-        if (key.size() < prefix.size() || std::search(key.begin(), key.end(), prefix.begin(), prefix.end()) != key.begin()) {\n-            it++;\n-            continue;\n-        }\n-        it = m_records.erase(it);\n-    }\n-    return true;\n-}\n-\n std::unique_ptr<WalletDatabase> CreateMockableWalletDatabase()\n {\n-    return std::make_unique<MockableDatabase>();\n-}\n-\n-MockableDatabase& GetMockableDatabase(CWallet& wallet)\n-{\n-    return dynamic_cast<MockableDatabase&>(wallet.GetDatabase());\n+    DatabaseOptions dummy_options;\n+    return std::make_unique<SQLiteDatabase>(fs::PathFromString(\"mock/\"), fs::PathFromString(\"mock/wallet.dat\"), dummy_options, /*mock=*/true);",
      "path": "src/wallet/test/util.cpp",
      "position": 1,
      "original_position": 122,
      "commit_id": "1cdb9161774ccf3edcdcb1e482b20be430ed5430",
      "original_commit_id": "f69852441e56c70edaebeaa7e2db4c6249c7e17c",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In https://github.com/bitcoin/bitcoin/commit/f69852441e56c70edaebeaa7e2db4c6249c7e17c \"test, wallet: Replace MockableDatabase with in-memory SQLiteDatabase\"\r\n\r\n```diff\r\n- return std::make_unique<SQLiteDatabase>(fs::PathFromString(\"mock/\"), fs::PathFromString(\"mock/wallet.dat\"), dummy_options, /*mock=*/true);\r\n+ return std::make_unique<MockSQLiteDatabase>();\r\n```\r\n\r\nThe `MockSQLiteDatabase` constructor can hardcode most of these mock values.",
      "created_at": "2025-07-24T13:42:54Z",
      "updated_at": "2025-07-24T14:12:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33032#discussion_r2228565019",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228565019"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33032"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 117,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228606629",
      "pull_request_review_id": 3051716437,
      "id": 2228606629,
      "node_id": "PRRC_kwDOABII586E1dal",
      "diff_hunk": "@@ -3448,7 +3448,7 @@ void CWallet::SetupLegacyScriptPubKeyMan()\n         return;\n     }\n \n-    Assert(m_database->Format() == \"bdb_ro\" || m_database->Format() == \"mock\");\n+    Assert(m_database->Format() == \"bdb_ro\" || m_database->Format() == \"sqlite-mock\");",
      "path": "src/wallet/wallet.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "1cdb9161774ccf3edcdcb1e482b20be430ed5430",
      "original_commit_id": "f69852441e56c70edaebeaa7e2db4c6249c7e17c",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In https://github.com/bitcoin/bitcoin/commit/f69852441e56c70edaebeaa7e2db4c6249c7e17c \"test, wallet: Replace MockableDatabase with in-memory SQLiteDatabase\"\r\n\r\nNit and need not be done in this PR: To avoid hardcoding mocking constants in non-test code, perhaps the following? If the return value of `Format` had been an enum, the following would come across as a tighter check.\r\n\r\n```diff\r\n- Assert(m_database->Format() == \"bdb_ro\" || m_database->Format() == \"sqlite-mock\");\r\n+ Assert(m_database->Format() != \"sqlite\"); \r\n```\r\n",
      "created_at": "2025-07-24T13:58:00Z",
      "updated_at": "2025-07-24T14:12:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33032#discussion_r2228606629",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228606629"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33032"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3451,
      "original_line": 3451,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228624749",
      "pull_request_review_id": 3051716437,
      "id": 2228624749,
      "node_id": "PRRC_kwDOABII586E1h1t",
      "diff_hunk": "@@ -345,6 +345,7 @@ bool SQLiteDatabase::Rewrite()\n \n bool SQLiteDatabase::Backup(const std::string& dest) const\n {\n+    if (m_mock) return true;",
      "path": "src/wallet/sqlite.cpp",
      "position": 1,
      "original_position": 4,
      "commit_id": "1cdb9161774ccf3edcdcb1e482b20be430ed5430",
      "original_commit_id": "f69852441e56c70edaebeaa7e2db4c6249c7e17c",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In https://github.com/bitcoin/bitcoin/commit/f69852441e56c70edaebeaa7e2db4c6249c7e17c \"test, wallet: Replace MockableDatabase with in-memory SQLiteDatabase\"\r\n\r\nChecks like these can be distracting to read in non-test code and I believe can be avoided with the `MockSQLiteDatabase` class.",
      "created_at": "2025-07-24T14:04:47Z",
      "updated_at": "2025-07-24T14:36:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33032#discussion_r2228624749",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228624749"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33032"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 348,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228661636",
      "pull_request_review_id": 3051878182,
      "id": 2228661636,
      "node_id": "PRRC_kwDOABII586E1q2E",
      "diff_hunk": "@@ -95,6 +89,14 @@ class SQLiteBatch : public DatabaseBatch\n     bool TxnCommit() override;\n     bool TxnAbort() override;\n     bool HasActiveTxn() override { return m_txn; }\n+\n+    // DO NOT CALL DIRECTLY, use DatabaseBatch::Read, Write, Erase, Exists, and ErasePrefix.\n+    // These functions are public for testing only.",
      "path": "src/wallet/sqlite.h",
      "position": 1,
      "original_position": 19,
      "commit_id": "1cdb9161774ccf3edcdcb1e482b20be430ed5430",
      "original_commit_id": "f69852441e56c70edaebeaa7e2db4c6249c7e17c",
      "in_reply_to_id": 2228547723,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in 78897500676f7ab1b197da56c0a676efcb49ec41 : I guess there is no real risk in having them public, due to the types involved, but if you wanted to make them protected, it could be done with this diff:\r\n\r\n```diff\r\ndiff --git a/src/wallet/sqlite.h b/src/wallet/sqlite.h\r\nindex 57876bd83c..ce703f8f13 100644\r\n--- a/src/wallet/sqlite.h\r\n+++ b/src/wallet/sqlite.h\r\n@@ -75,6 +75,14 @@ private:\r\n     void SetupSQLStatements();\r\n     bool ExecStatement(sqlite3_stmt* stmt, std::span<const std::byte> blob);\r\n \r\n+protected:\r\n+\r\n+    bool ReadKey(DataStream&& key, DataStream& value) override;\r\n+    bool WriteKey(DataStream&& key, DataStream&& value, bool overwrite = true) override;\r\n+    bool EraseKey(DataStream&& key) override;\r\n+    bool HasKey(DataStream&& key) override;\r\n+    bool ErasePrefix(std::span<const std::byte> prefix) override;\r\n+\r\n public:\r\n     explicit SQLiteBatch(SQLiteDatabase& database);\r\n     ~SQLiteBatch() override { Close(); }\r\n@@ -89,14 +97,6 @@ public:\r\n     bool TxnCommit() override;\r\n     bool TxnAbort() override;\r\n     bool HasActiveTxn() override { return m_txn; }\r\n-\r\n-    // DO NOT CALL DIRECTLY, use DatabaseBatch::Read, Write, Erase, Exists, and ErasePrefix.\r\n-    // These functions are public for testing only.\r\n-    bool ReadKey(DataStream&& key, DataStream& value) override;\r\n-    bool WriteKey(DataStream&& key, DataStream&& value, bool overwrite = true) override;\r\n-    bool EraseKey(DataStream&& key) override;\r\n-    bool HasKey(DataStream&& key) override;\r\n-    bool ErasePrefix(std::span<const std::byte> prefix) override;\r\n };\r\n \r\n /** An instance of this class represents one SQLite3 database.\r\ndiff --git a/src/wallet/test/util.cpp b/src/wallet/test/util.cpp\r\nindex 5162baed9f..95255b7062 100644\r\n--- a/src/wallet/test/util.cpp\r\n+++ b/src/wallet/test/util.cpp\r\n@@ -79,6 +79,10 @@ void TestUnloadWallet(std::shared_ptr<CWallet>&& wallet)\r\n     WaitForDeleteWallet(std::move(wallet));\r\n }\r\n \r\n+struct SQLiteBatchTest:public SQLiteBatch{\r\n+using SQLiteBatch::WriteKey;\r\n+};\r\n+\r\n std::unique_ptr<WalletDatabase> DuplicateMockDatabase(WalletDatabase& database)\r\n {\r\n     std::unique_ptr<DatabaseBatch> batch_orig = database.MakeBatch();\r\n@@ -86,7 +90,7 @@ std::unique_ptr<WalletDatabase> DuplicateMockDatabase(WalletDatabase& database)\r\n \r\n     std::unique_ptr<WalletDatabase> new_db = CreateMockableWalletDatabase();\r\n     std::unique_ptr<DatabaseBatch> new_db_batch = new_db->MakeBatch();\r\n-    SQLiteBatch* batch_new = dynamic_cast<SQLiteBatch*>(new_db_batch.get());\r\n+    auto* batch_new = dynamic_cast<SQLiteBatchTest*>(new_db_batch.get());\r\n     Assert(batch_new);\r\n \r\n     while (true) {\r\n",
      "created_at": "2025-07-24T14:17:19Z",
      "updated_at": "2025-07-24T14:17:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33032#discussion_r2228661636",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228661636"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33032"
        }
      },
      "start_line": null,
      "original_start_line": 93,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 94,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2229390788",
      "pull_request_review_id": 3052988900,
      "id": 2229390788,
      "node_id": "PRRC_kwDOABII586E4c3E",
      "diff_hunk": "@@ -95,6 +89,14 @@ class SQLiteBatch : public DatabaseBatch\n     bool TxnCommit() override;\n     bool TxnAbort() override;\n     bool HasActiveTxn() override { return m_txn; }\n+\n+    // DO NOT CALL DIRECTLY, use DatabaseBatch::Read, Write, Erase, Exists, and ErasePrefix.\n+    // These functions are public for testing only.",
      "path": "src/wallet/sqlite.h",
      "position": 1,
      "original_position": 19,
      "commit_id": "1cdb9161774ccf3edcdcb1e482b20be430ed5430",
      "original_commit_id": "f69852441e56c70edaebeaa7e2db4c6249c7e17c",
      "in_reply_to_id": 2228547723,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Made a `MockableSQLiteBatch` and `MockableSQLiteDatabase` which does this.",
      "created_at": "2025-07-24T19:25:15Z",
      "updated_at": "2025-07-24T19:25:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33032#discussion_r2229390788",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2229390788"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33032"
        }
      },
      "start_line": null,
      "original_start_line": 93,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 94,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2229391286",
      "pull_request_review_id": 3052989878,
      "id": 2229391286,
      "node_id": "PRRC_kwDOABII586E4c-2",
      "diff_hunk": "@@ -150,12 +152,17 @@ class SQLiteDatabase : public WalletDatabase\n     /** Return paths to all database created files */\n     std::vector<fs::path> Files() override\n     {\n+        if (m_mock) return {};\n         std::vector<fs::path> files;\n         files.emplace_back(m_dir_path / fs::PathFromString(m_file_path));\n         files.emplace_back(m_dir_path / fs::PathFromString(m_file_path + \"-journal\"));\n         return files;\n     }\n-    std::string Format() override { return \"sqlite\"; }\n+    std::string Format() override\n+    {\n+        if (m_mock) return \"sqlite-mock\";\n+        return \"sqlite\";",
      "path": "src/wallet/sqlite.h",
      "position": 1,
      "original_position": 42,
      "commit_id": "1cdb9161774ccf3edcdcb1e482b20be430ed5430",
      "original_commit_id": "f69852441e56c70edaebeaa7e2db4c6249c7e17c",
      "in_reply_to_id": 2228552486,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Added `MockableSQLiteDatabase`",
      "created_at": "2025-07-24T19:25:31Z",
      "updated_at": "2025-07-24T19:25:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33032#discussion_r2229391286",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2229391286"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33032"
        }
      },
      "start_line": null,
      "original_start_line": 163,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 164,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2229391898",
      "pull_request_review_id": 3052991222,
      "id": 2229391898,
      "node_id": "PRRC_kwDOABII586E4dIa",
      "diff_hunk": "@@ -150,12 +152,17 @@ class SQLiteDatabase : public WalletDatabase\n     /** Return paths to all database created files */\n     std::vector<fs::path> Files() override\n     {\n+        if (m_mock) return {};",
      "path": "src/wallet/sqlite.h",
      "position": 1,
      "original_position": 32,
      "commit_id": "1cdb9161774ccf3edcdcb1e482b20be430ed5430",
      "original_commit_id": "f69852441e56c70edaebeaa7e2db4c6249c7e17c",
      "in_reply_to_id": 2228558213,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Removed now that there's `MockableSQLiteDatabase`",
      "created_at": "2025-07-24T19:25:47Z",
      "updated_at": "2025-07-24T19:25:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33032#discussion_r2229391898",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2229391898"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33032"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 155,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2229392087",
      "pull_request_review_id": 3052991476,
      "id": 2229392087,
      "node_id": "PRRC_kwDOABII586E4dLX",
      "diff_hunk": "@@ -110,103 +111,10 @@ CTxDestination getNewDestination(CWallet& w, OutputType output_type)\n     return *Assert(w.GetNewDestination(output_type, \"\"));\n }\n \n-MockableCursor::MockableCursor(const MockableData& records, bool pass, std::span<const std::byte> prefix)\n-{\n-    m_pass = pass;\n-    std::tie(m_cursor, m_cursor_end) = records.equal_range(BytePrefix{prefix});\n-}\n-\n-DatabaseCursor::Status MockableCursor::Next(DataStream& key, DataStream& value)\n-{\n-    if (!m_pass) {\n-        return Status::FAIL;\n-    }\n-    if (m_cursor == m_cursor_end) {\n-        return Status::DONE;\n-    }\n-    key.clear();\n-    value.clear();\n-    const auto& [key_data, value_data] = *m_cursor;\n-    key.write(key_data);\n-    value.write(value_data);\n-    m_cursor++;\n-    return Status::MORE;\n-}\n-\n-bool MockableBatch::ReadKey(DataStream&& key, DataStream& value)\n-{\n-    if (!m_pass) {\n-        return false;\n-    }\n-    SerializeData key_data{key.begin(), key.end()};\n-    const auto& it = m_records.find(key_data);\n-    if (it == m_records.end()) {\n-        return false;\n-    }\n-    value.clear();\n-    value.write(it->second);\n-    return true;\n-}\n-\n-bool MockableBatch::WriteKey(DataStream&& key, DataStream&& value, bool overwrite)\n-{\n-    if (!m_pass) {\n-        return false;\n-    }\n-    SerializeData key_data{key.begin(), key.end()};\n-    SerializeData value_data{value.begin(), value.end()};\n-    auto [it, inserted] = m_records.emplace(key_data, value_data);\n-    if (!inserted && overwrite) { // Overwrite if requested\n-        it->second = value_data;\n-        inserted = true;\n-    }\n-    return inserted;\n-}\n-\n-bool MockableBatch::EraseKey(DataStream&& key)\n-{\n-    if (!m_pass) {\n-        return false;\n-    }\n-    SerializeData key_data{key.begin(), key.end()};\n-    m_records.erase(key_data);\n-    return true;\n-}\n-\n-bool MockableBatch::HasKey(DataStream&& key)\n-{\n-    if (!m_pass) {\n-        return false;\n-    }\n-    SerializeData key_data{key.begin(), key.end()};\n-    return m_records.count(key_data) > 0;\n-}\n-\n-bool MockableBatch::ErasePrefix(std::span<const std::byte> prefix)\n-{\n-    if (!m_pass) {\n-        return false;\n-    }\n-    auto it = m_records.begin();\n-    while (it != m_records.end()) {\n-        auto& key = it->first;\n-        if (key.size() < prefix.size() || std::search(key.begin(), key.end(), prefix.begin(), prefix.end()) != key.begin()) {\n-            it++;\n-            continue;\n-        }\n-        it = m_records.erase(it);\n-    }\n-    return true;\n-}\n-\n std::unique_ptr<WalletDatabase> CreateMockableWalletDatabase()\n {\n-    return std::make_unique<MockableDatabase>();\n-}\n-\n-MockableDatabase& GetMockableDatabase(CWallet& wallet)\n-{\n-    return dynamic_cast<MockableDatabase&>(wallet.GetDatabase());\n+    DatabaseOptions dummy_options;\n+    return std::make_unique<SQLiteDatabase>(fs::PathFromString(\"mock/\"), fs::PathFromString(\"mock/wallet.dat\"), dummy_options, /*mock=*/true);",
      "path": "src/wallet/test/util.cpp",
      "position": 1,
      "original_position": 122,
      "commit_id": "1cdb9161774ccf3edcdcb1e482b20be430ed5430",
      "original_commit_id": "f69852441e56c70edaebeaa7e2db4c6249c7e17c",
      "in_reply_to_id": 2228565019,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done",
      "created_at": "2025-07-24T19:25:52Z",
      "updated_at": "2025-07-24T19:25:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33032#discussion_r2229392087",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2229392087"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33032"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 117,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2229393691",
      "pull_request_review_id": 3052994205,
      "id": 2229393691,
      "node_id": "PRRC_kwDOABII586E4dkb",
      "diff_hunk": "@@ -3448,7 +3448,7 @@ void CWallet::SetupLegacyScriptPubKeyMan()\n         return;\n     }\n \n-    Assert(m_database->Format() == \"bdb_ro\" || m_database->Format() == \"mock\");\n+    Assert(m_database->Format() == \"bdb_ro\" || m_database->Format() == \"sqlite-mock\");",
      "path": "src/wallet/wallet.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "1cdb9161774ccf3edcdcb1e482b20be430ed5430",
      "original_commit_id": "f69852441e56c70edaebeaa7e2db4c6249c7e17c",
      "in_reply_to_id": 2228606629,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I prefer to leave this as-is as it is a more specific check. It checks for the db types that are allowed to be legacy wallets, rather than allowing legacy wallets for all non-sqlite databases.",
      "created_at": "2025-07-24T19:26:31Z",
      "updated_at": "2025-07-24T19:26:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33032#discussion_r2229393691",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2229393691"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33032"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3451,
      "original_line": 3451,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2229393890",
      "pull_request_review_id": 3052994455,
      "id": 2229393890,
      "node_id": "PRRC_kwDOABII586E4dni",
      "diff_hunk": "@@ -345,6 +345,7 @@ bool SQLiteDatabase::Rewrite()\n \n bool SQLiteDatabase::Backup(const std::string& dest) const\n {\n+    if (m_mock) return true;",
      "path": "src/wallet/sqlite.cpp",
      "position": 1,
      "original_position": 4,
      "commit_id": "1cdb9161774ccf3edcdcb1e482b20be430ed5430",
      "original_commit_id": "f69852441e56c70edaebeaa7e2db4c6249c7e17c",
      "in_reply_to_id": 2228624749,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Removed now that there's `MockableSQLiteDatabase`",
      "created_at": "2025-07-24T19:26:37Z",
      "updated_at": "2025-07-24T19:26:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33032#discussion_r2229393890",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2229393890"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33032"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 348,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2230208195",
      "pull_request_review_id": 3054176313,
      "id": 2230208195,
      "node_id": "PRRC_kwDOABII586E7kbD",
      "diff_hunk": "@@ -83,9 +83,9 @@ std::unique_ptr<WalletDatabase> DuplicateMockDatabase(WalletDatabase& database)\n     std::unique_ptr<DatabaseBatch> batch_orig = database.MakeBatch();\n     std::unique_ptr<DatabaseCursor> cursor_orig = batch_orig->GetNewCursor();\n \n-    std::unique_ptr<WalletDatabase> new_db = std::make_unique<MockableDatabase>();\n+    std::unique_ptr<WalletDatabase> new_db = CreateMockableWalletDatabase();\n     std::unique_ptr<DatabaseBatch> new_db_batch = new_db->MakeBatch();\n-    MockableBatch* batch_new = dynamic_cast<MockableBatch*>(new_db_batch.get());\n+    MockableSQLiteBatch* batch_new = dynamic_cast<MockableSQLiteBatch*>(new_db_batch.get());\n     Assert(batch_new);\n \n     while (true) {",
      "path": "src/wallet/test/util.cpp",
      "position": 1,
      "original_position": 11,
      "commit_id": "1cdb9161774ccf3edcdcb1e482b20be430ed5430",
      "original_commit_id": "998238934f3f994f7b5829caf2c7ade040fca6f7",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Nit to use tighter function signature that goes along with the function name too. Builds & tests fine on my system.\r\n\r\n<details>\r\n<summary>Use MockableSQLiteDatabase in return type that passes for WalletDatabase</summary>\r\n\r\n```diff\r\ndiff --git a/src/wallet/test/util.cpp b/src/wallet/test/util.cpp\r\nindex 6017582395..58fafeecf7 100644\r\n--- a/src/wallet/test/util.cpp\r\n+++ b/src/wallet/test/util.cpp\r\n@@ -80,12 +80,12 @@ void TestUnloadWallet(std::shared_ptr<CWallet>&& wallet)\r\n     WaitForDeleteWallet(std::move(wallet));\r\n }\r\n \r\n-std::unique_ptr<WalletDatabase> DuplicateMockDatabase(WalletDatabase& database)\r\n+std::unique_ptr<MockableSQLiteDatabase> DuplicateMockDatabase(MockableSQLiteDatabase& database)\r\n {\r\n     std::unique_ptr<DatabaseBatch> batch_orig = database.MakeBatch();\r\n     std::unique_ptr<DatabaseCursor> cursor_orig = batch_orig->GetNewCursor();\r\n \r\n-    std::unique_ptr<WalletDatabase> new_db = CreateMockableWalletDatabase();\r\n+    std::unique_ptr<MockableSQLiteDatabase> new_db = CreateMockableWalletDatabase();\r\n     std::unique_ptr<DatabaseBatch> new_db_batch = new_db->MakeBatch();\r\n     MockableSQLiteBatch* batch_new = dynamic_cast<MockableSQLiteBatch*>(new_db_batch.get());\r\n     Assert(batch_new);\r\n@@ -116,7 +116,7 @@ MockableSQLiteDatabase::MockableSQLiteDatabase()\r\n     : SQLiteDatabase(fs::PathFromString(\"mock/\"), fs::PathFromString(\"mock/wallet.dat\"), DatabaseOptions(), SQLITE_OPEN_MEMORY)\r\n {}\r\n \r\n-std::unique_ptr<WalletDatabase> CreateMockableWalletDatabase()\r\n+std::unique_ptr<MockableSQLiteDatabase> CreateMockableWalletDatabase()\r\n {\r\n     return std::make_unique<MockableSQLiteDatabase>();\r\n }\r\ndiff --git a/src/wallet/test/util.h b/src/wallet/test/util.h\r\nindex a240a8ae4f..cedd37ee7e 100644\r\n--- a/src/wallet/test/util.h\r\n+++ b/src/wallet/test/util.h\r\n@@ -70,7 +70,7 @@ public:\r\n     std::unique_ptr<DatabaseBatch> MakeBatch() override { return std::make_unique<MockableSQLiteBatch>(*this); }\r\n };\r\n \r\n-std::unique_ptr<WalletDatabase> CreateMockableWalletDatabase();\r\n+std::unique_ptr<MockableSQLiteDatabase> CreateMockableWalletDatabase();\r\n MockableSQLiteDatabase& GetMockableDatabase(CWallet& wallet);\r\n \r\n DescriptorScriptPubKeyMan* CreateDescriptor(CWallet& keystore, const std::string& desc_str, const bool success);\r\n\r\n```\r\n</details>",
      "created_at": "2025-07-25T05:48:50Z",
      "updated_at": "2025-07-25T05:49:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33032#discussion_r2230208195",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2230208195"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33032"
        }
      },
      "start_line": null,
      "original_start_line": 83,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 91,
      "side": "RIGHT"
    }
  ]
}