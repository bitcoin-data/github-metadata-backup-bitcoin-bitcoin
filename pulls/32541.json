{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541",
    "id": 2525857444,
    "node_id": "PR_kwDOABII586WjYak",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/32541",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/32541.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/32541.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/961f94b293ba513ffaca09fa797b79d813134618",
    "number": 32541,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "index: store per-block transaction locations for efficient lookups",
    "user": {
      "login": "romanz",
      "id": 9900,
      "node_id": "MDQ6VXNlcjk5MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/romanz",
      "html_url": "https://github.com/romanz",
      "followers_url": "https://api.github.com/users/romanz/followers",
      "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
      "organizations_url": "https://api.github.com/users/romanz/orgs",
      "repos_url": "https://api.github.com/users/romanz/repos",
      "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/romanz/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "Currently, electrs and other indexers map between an address/scripthash to the list of the relevant transactions.\r\n\r\nHowever, in order to fetch those transactions from bitcoind, electrs relies on reading the whole block and post-filtering for a specific transaction[^1]. Other indexers use a `txindex` to fetch a transaction using its txid [^2][^3][^4].\r\n\r\nThe above approach has significant storage and CPU overhead, since the `txid` is a pseudo-random 32-byte value.\r\n\r\nThis PR is adding support for using the transaction's position within its block to be able to fetch it directly using [REST API](https://github.com/bitcoin/bitcoin/blob/master/doc/REST-interface.md), using the following HTTP request (to fetch the `N`-th transaction from `BLOCKHASH`):\r\n\r\n```\r\nGET /rest/txfromblock/BLOCKHASH-N.bin\r\n```\r\n\r\nIf binary response format is used, the transaction data will be read directly from the storage and sent back to the client, without any deserialization overhead.\r\n\r\nThe resulting index is much smaller (allowing it to be cached in RAM):\r\n```\r\n$ du -sh indexes/locations/ indexes/txindex/\r\n2.5G\tindexes/locations/\r\n57G\tindexes/txindex/\r\n```\r\n\r\nThe new index is using the following DB schema:\r\n\r\n```c++\r\nstruct DBKey {\r\n    uint256 hash;   // blockhash\r\n    uint32_t row;   // allow splitting one block's transactions into multiple DB rows\r\n};\r\n\r\nstruct DBValue {\r\n    FlatFilePos block_pos;          // file id + offset of the block\r\n    std::vector<uint32_t> offsets;  // a list of transaction offsets within the block\r\n};\r\n```\r\n\r\nFor example, when fetching the 5000th transaction of [block #90005](https://mempool.space/block/000000000000000000017bfd05b5fa367a424c4a565a4baf7950d9e8605df8ec) using `ab -k -c 1 -n 100000`, enabled `locationsindex` improves the performance [~19x (2.574ms → 0.136ms)](https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-3250323045). \r\n\r\nI am working on a proof-of-concept indexer (https://github.com/romanz/bindex-rs) which is using https://github.com/bitcoin/bitcoin/pull/32540 & https://github.com/bitcoin/bitcoin/pull/32541 - please let me know if there are any questions/comments/concerns :)\r\n\r\n[^1]: https://github.com/romanz/electrs/blob/master/doc/schema.md\r\n[^2]: https://github.com/Blockstream/electrs/blob/new-index/doc/schema.md#txstore\r\n[^3]: https://github.com/spesmilo/electrumx/blob/master/docs/HOWTO.rst#prerequisites\r\n[^4]: https://github.com/cculianu/Fulcrum/blob/master/README.md#requirements\r\n\r\n",
    "labels": [
      {
        "id": 97470796,
        "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
        "name": "UTXO Db and Indexes",
        "color": "fbca04",
        "default": false
      },
      {
        "id": 955867938,
        "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
        "name": "Needs rebase",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2025-05-17T07:27:58Z",
    "updated_at": "2025-10-11T20:50:20Z",
    "mergeable": false,
    "mergeable_state": "dirty",
    "merged": false,
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "romanz:locations-index",
      "ref": "locations-index",
      "sha": "961f94b293ba513ffaca09fa797b79d813134618",
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 125523455,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMjU1MjM0NTU=",
        "name": "bitcoin",
        "full_name": "romanz/bitcoin",
        "owner": {
          "login": "romanz",
          "id": 9900,
          "node_id": "MDQ6VXNlcjk5MDA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/romanz",
          "html_url": "https://github.com/romanz",
          "followers_url": "https://api.github.com/users/romanz/followers",
          "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
          "organizations_url": "https://api.github.com/users/romanz/orgs",
          "repos_url": "https://api.github.com/users/romanz/repos",
          "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/romanz/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/romanz/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/romanz/bitcoin",
        "archive_url": "https://api.github.com/repos/romanz/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/romanz/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/romanz/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/romanz/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/romanz/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/romanz/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/romanz/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/romanz/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/romanz/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/romanz/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/romanz/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/romanz/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/romanz/bitcoin/events",
        "forks_url": "https://api.github.com/repos/romanz/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/romanz/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/romanz/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/romanz/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/romanz/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/romanz/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/romanz/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/romanz/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/romanz/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/romanz/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/romanz/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/romanz/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/romanz/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/romanz/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/romanz/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/romanz/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:romanz/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/romanz/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/romanz/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/romanz/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/romanz/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/romanz/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/romanz/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/romanz/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/romanz/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/romanz/bitcoin/hooks",
        "svn_url": "https://github.com/romanz/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 268926,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-09-27T20:44:20Z",
        "created_at": "2018-03-16T13:59:02Z",
        "updated_at": "2023-11-29T23:29:01Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "2562fe1b2b63c3a510735ba417935340d533a844",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 38014,
        "stargazers_count": 86064,
        "watchers_count": 86064,
        "size": 294747,
        "default_branch": "master",
        "open_issues_count": 825,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-10-10T19:52:05Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-10-11T20:57:01Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 484,
    "deletions": 6,
    "changed_files": 15,
    "commits": 2,
    "review_comments": 84,
    "comments": 38
  },
  "events": [
    {
      "event": "commented",
      "id": 2888175898,
      "node_id": "IC_kwDOABII586sJhEa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2888175898",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-17T07:28:00Z",
      "updated_at": "2025-09-04T10:47:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/32541.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [TheCharlatan](https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-2888253440), [hodlinator](https://github.com/bitcoin/bitcoin/pull/32541#pullrequestreview-3081181690) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#30469](https://github.com/bitcoin/bitcoin/pull/30469) (index: Fix coinstats overflow by fjahr)\n* [#26966](https://github.com/bitcoin/bitcoin/pull/26966) (index: initial sync speedup, parallelize process by furszy)\n* [#17783](https://github.com/bitcoin/bitcoin/pull/17783) (common: Disallow calling IsArgSet() on ALLOW_LIST options by ryanofsky)\n* [#17581](https://github.com/bitcoin/bitcoin/pull/17581) (refactor: Remove settings merge reverse precedence code by ryanofsky)\n* [#17580](https://github.com/bitcoin/bitcoin/pull/17580) (refactor: Add ALLOW_LIST flags and enforce usage in CheckArgFlags by ryanofsky)\n* [#17493](https://github.com/bitcoin/bitcoin/pull/17493) (util: Forbid ambiguous multiple assignments in config file by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-2888175898",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "labeled",
      "id": 17697938432,
      "node_id": "LE_lADOABII5863BCXxzwAAAAQe4RwA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17697938432",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-17T07:28:23Z",
      "label": {
        "name": "UTXO Db and Indexes",
        "color": "fbca04"
      }
    },
    {
      "event": "labeled",
      "id": 17697974131,
      "node_id": "LE_lADOABII5863BCXxzwAAAAQe4adz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17697974131",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-17T07:37:14Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2888180707,
      "node_id": "IC_kwDOABII586sJiPj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2888180707",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-17T07:37:15Z",
      "updated_at": "2025-05-17T07:37:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Task `lint`: https://github.com/bitcoin/bitcoin/runs/42402043332</sub>\n<sub>LLM reason (✨ experimental): The CI failure is due to missing include guards in `src/index/locationsindex.h`.\n</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-2888180707",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17698036143,
      "node_id": "HRFPE_lADOABII5863BCXxzwAAAAQe4pmv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17698036143",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1f629743e6c6ba4fab77ef1a8578bb82f0a70566",
      "commit_url": "https://api.github.com/repos/romanz/bitcoin/commits/1f629743e6c6ba4fab77ef1a8578bb82f0a70566",
      "created_at": "2025-05-17T07:45:53Z"
    },
    {
      "event": "commented",
      "id": 2888253440,
      "node_id": "IC_kwDOABII586sJ0AA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2888253440",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-17T09:37:52Z",
      "updated_at": "2025-05-17T09:37:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK\r\n\r\nCan you add the schema of the index and the expected arguments for the REST API  to the pull request description? I was a bit confused at first if this now exposes the file position, but if I read it correctly now, this just allows querying a transaction by its index in the block. ",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-2888253440",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "commented",
      "id": 2888263760,
      "node_id": "IC_kwDOABII586sJ2hQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2888263760",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-17T10:00:56Z",
      "updated_at": "2025-05-17T10:00:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Concept ACK\r\n\r\nThanks!\r\n\r\n> Can you add the schema of the index and the expected arguments for the REST API to the pull request description? \r\n\r\nSure - updated in https://github.com/bitcoin/bitcoin/pull/32541#issue-3070502385.\r\n",
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-2888263760",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17698888490,
      "node_id": "HRFPE_lADOABII5863BCXxzwAAAAQe75sq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17698888490",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "c074ad2676631a9d27c05ccb7ee832a957ff11e2",
      "commit_url": "https://api.github.com/repos/romanz/bitcoin/commits/c074ad2676631a9d27c05ccb7ee832a957ff11e2",
      "created_at": "2025-05-17T11:55:07Z"
    },
    {
      "event": "commented",
      "id": 2888339681,
      "node_id": "IC_kwDOABII586sKJDh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2888339681",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-17T11:58:10Z",
      "updated_at": "2025-05-17T12:00:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "Fixed a few issues (following [SonarQube run](https://sonarcloud.io/project/issues?issueStatuses=OPEN%2CCONFIRMED&sinceLeakPeriod=true&branch=32541-1f629743e6c6ba4fab77ef1a8578bb82f0a70566&id=aureleoules_bitcoin)).",
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-2888339681",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "subscribed",
      "id": 17698975614,
      "node_id": "SE_lADOABII5863BCXxzwAAAAQe8O9-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17698975614",
      "actor": {
        "login": "dn4vzdx8xS15wUV0",
        "id": 211630628,
        "node_id": "U_kgDODJ06JA",
        "avatar_url": "https://avatars.githubusercontent.com/u/211630628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dn4vzdx8xS15wUV0",
        "html_url": "https://github.com/dn4vzdx8xS15wUV0",
        "followers_url": "https://api.github.com/users/dn4vzdx8xS15wUV0/followers",
        "following_url": "https://api.github.com/users/dn4vzdx8xS15wUV0/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dn4vzdx8xS15wUV0/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dn4vzdx8xS15wUV0/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dn4vzdx8xS15wUV0/subscriptions",
        "organizations_url": "https://api.github.com/users/dn4vzdx8xS15wUV0/orgs",
        "repos_url": "https://api.github.com/users/dn4vzdx8xS15wUV0/repos",
        "events_url": "https://api.github.com/users/dn4vzdx8xS15wUV0/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dn4vzdx8xS15wUV0/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-17T12:23:30Z"
    },
    {
      "event": "unlabeled",
      "id": 17699113847,
      "node_id": "UNLE_lADOABII5863BCXxzwAAAAQe8wt3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17699113847",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-17T13:13:14Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2895395162,
      "node_id": "IC_kwDOABII586slDla",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2895395162",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-20T18:15:32Z",
      "updated_at": "2025-05-20T18:15:32Z",
      "author_association": "MEMBER",
      "body": "How does this compare to `getrawtransaction <txid> 0 <blockhash>` without a txindex?",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-2895395162",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "commented",
      "id": 2897330791,
      "node_id": "IC_kwDOABII586sscJn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2897330791",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-21T09:51:22Z",
      "updated_at": "2025-08-30T05:57:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "I have used `ApacheBench 2.3` for benchmarking REST API, and [the following Rust client](https://gist.github.com/romanz/2630210f497b69d605cdb831fd057b98) for `getrawtransaction` RPC:\r\n\r\n# fetching using the new index\r\n```\r\n$ ab -k -c 1 -n 100000 http://localhost:8332/rest/txfromblock/0000000000000000000083a0cff38278aae196d6d923a7e8ee7e5a0e371226fe-42.bin\r\n\r\nDocument Path:          /rest/txfromblock/0000000000000000000083a0cff38278aae196d6d923a7e8ee7e5a0e371226fe-42.bin\r\nDocument Length:        301 bytes\r\n\r\nConcurrency Level:      1\r\nTime taken for tests:   13.760 seconds\r\nComplete requests:      100000\r\nFailed requests:        0\r\nKeep-Alive requests:    100000\r\nTotal transferred:      40500000 bytes\r\nHTML transferred:       30100000 bytes\r\nRequests per second:    7267.65 [#/sec] (mean)\r\nTime per request:       0.138 [ms] (mean)\r\nTime per request:       0.138 [ms] (mean, across all concurrent requests)\r\nTransfer rate:          2874.41 [Kbytes/sec] received\r\n```\r\n\r\n# fetching using `txindex`\r\n```\r\n$ ab -k -c 1 -n 100000 http://localhost:8332/rest/tx/4137d0dbad434d68a4f52b7bebcba91ddac3f7f5c92b84130432bd6b5e2ea57a.bin\r\n\r\nDocument Path:          /rest/tx/4137d0dbad434d68a4f52b7bebcba91ddac3f7f5c92b84130432bd6b5e2ea57a.bin\r\nDocument Length:        301 bytes\r\n\r\nConcurrency Level:      1\r\nTime taken for tests:   14.075 seconds\r\nComplete requests:      100000\r\nFailed requests:        0\r\nKeep-Alive requests:    100000\r\nTotal transferred:      40500000 bytes\r\nHTML transferred:       30100000 bytes\r\nRequests per second:    7104.78 [#/sec] (mean)\r\nTime per request:       0.141 [ms] (mean)\r\nTime per request:       0.141 [ms] (mean, across all concurrent requests)\r\nTransfer rate:          2810.00 [Kbytes/sec] received\r\n```\r\n\r\n# fetching without `txindex`\r\n```\r\ntime cargo run --release -- 4137d0dbad434d68a4f52b7bebcba91ddac3f7f5c92b84130432bd6b5e2ea57a 0000000000000000000083a0cff38278aae196d6d923a7e8ee7e5a0e371226fe\r\n    Finished `release` profile [optimized] target(s) in 0.02s\r\n     Running `target/release/bench-getrawtx 4137d0dbad434d68a4f52b7bebcba91ddac3f7f5c92b84130432bd6b5e2ea57a 0000000000000000000083a0cff38278aae196d6d923a7e8ee7e5a0e371226fe`\r\niterations = 1000\r\naverage RPC duration = 8.563491ms\r\n\r\nreal\t0m8.628s\r\nuser\t0m0.070s\r\nsys\t0m0.052s\r\n```\r\n\r\n# Conclusions\r\n\r\n - The new `LocationsIndex` is only a few percent faster than the old `TxIndex`, but the on-disk footprint is ~22x smaller.\r\n\r\n - `getrawtransaction` which is used in the last benchmark has an average RPC duration of ~8.6ms vs ~0.14ms for the ones above.",
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-2897330791",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "labeled",
      "id": 18138214571,
      "node_id": "LE_lADOABII5863BCXxzwAAAAQ5HzCr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18138214571",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-13T17:34:49Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2971073957,
      "node_id": "IC_kwDOABII586xFv2l",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2971073957",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-13T17:34:51Z",
      "updated_at": "2025-06-13T17:34:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Task `previous releases, depends DEBUG`: https://github.com/bitcoin/bitcoin/runs/42406243587</sub>\n<sub>LLM reason (✨ experimental): The CI failure is caused by a missing header file test/util/index.h during compilation.</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-2971073957",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18139260091,
      "node_id": "HRFPE_lADOABII5863BCXxzwAAAAQ5LyS7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18139260091",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d962c9a9170c72483ed970918ce3836cf538ec43",
      "commit_url": "https://api.github.com/repos/romanz/bitcoin/commits/d962c9a9170c72483ed970918ce3836cf538ec43",
      "created_at": "2025-06-13T18:35:54Z"
    },
    {
      "event": "commented",
      "id": 2971357956,
      "node_id": "IC_kwDOABII586xG1ME",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2971357956",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-13T19:02:07Z",
      "updated_at": "2025-06-13T19:02:07Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased to fix https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-2971073957.",
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-2971357956",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "unlabeled",
      "id": 18142641322,
      "node_id": "UNLE_lADOABII5863BCXxzwAAAAQ5Yryq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18142641322",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-13T22:50:53Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "convert_to_draft",
      "id": 18147525498,
      "node_id": "CTDE_lADOABII5863BCXxzwAAAAQ5rUN6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18147525498",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-14T08:58:50Z"
    },
    {
      "event": "ready_for_review",
      "id": 18149019268,
      "node_id": "RFRE_lADOABII5863BCXxzwAAAAQ5xA6E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18149019268",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-14T12:29:12Z"
    },
    {
      "event": "commented",
      "id": 2973968188,
      "node_id": "IC_kwDOABII586xQyc8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2973968188",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-15T14:34:19Z",
      "updated_at": "2025-06-15T14:34:19Z",
      "author_association": "CONTRIBUTOR",
      "body": "> How does this compare to getrawtransaction <txid> 0 <blockhash> without a txindex?\r\n\r\nAs far as I understand the index makes this operation faster by not requiring to read the entire block and then iterating through the transactions to find the match, which I am guessing is what the last benchmark is showing. romanz, would this new endpoint be used while creating the entire index initially, or to serve certain requests? It is not quite clear to me when an indexing client wouldn't want to read through the entire block and instead only get its transactions selectively.",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-2973968188",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "commented",
      "id": 2974308726,
      "node_id": "IC_kwDOABII586xSFl2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2974308726",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-15T17:20:24Z",
      "updated_at": "2025-08-31T07:05:45Z",
      "author_association": "CONTRIBUTOR",
      "body": "> As far as I understand the index makes this operation faster by not requiring to read the entire block and then iterating through the transactions to find the match\r\n\r\nCorrect - the proposed index improves the performance of fetching a single transaction (similar to `txindex`), requiring significantly less storage.\r\n\r\n> would this new endpoint be used while creating the entire index initially, or to serve certain requests?\r\n\r\nI would like the new index to be used to serve history-related queries.\r\nFor example, https://electrum-protocol.readthedocs.io/en/latest/protocol-methods.html#blockchain-scripthash-get-history. \r\n\r\nYou are right that during the history indexing process, the client doesn't need the proposed index, since it needs to read both the entire block ([and undo](https://github.com/bitcoin/bitcoin/pull/32540)) data in order to map from `ScriptPubKey` to list of { block hash + transaction index within the block }.\r\n\r\nBTW, I am working on a proof-of-concept indexer (https://github.com/romanz/bindex-rs) which is using #32540 & #32541 - please let me know if there are any questions/comments/concerns :)\r\n",
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-2974308726",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "reviewed",
      "id": 2945853711,
      "node_id": "PRR_kwDOABII586vlikP",
      "url": null,
      "actor": null,
      "commit_id": "d962c9a9170c72483ed970918ce3836cf538ec43",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-06-20T12:05:11Z",
      "author_association": "MEMBER",
      "body": "lgtm. I wonder if there should be a fallback?",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#pullrequestreview-2945853711",
      "submitted_at": "2025-06-20T12:05:11Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18256657123,
      "node_id": "HRFPE_lADOABII5863BCXxzwAAAARALnrj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18256657123",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "8d446fc2f4548d7bc998994cb0e86875fb8be335",
      "commit_url": "https://api.github.com/repos/romanz/bitcoin/commits/8d446fc2f4548d7bc998994cb0e86875fb8be335",
      "created_at": "2025-06-21T09:57:47Z"
    },
    {
      "event": "commented",
      "id": 2993496536,
      "node_id": "IC_kwDOABII586ybSHY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2993496536",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-21T09:58:51Z",
      "updated_at": "2025-06-21T09:58:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased over `master` to use `std::vector<std::byte>` (following https://github.com/bitcoin/bitcoin/pull/32743).",
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-2993496536",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "convert_to_draft",
      "id": 18257387391,
      "node_id": "CTDE_lADOABII5863BCXxzwAAAARAOZ9_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18257387391",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-21T14:29:27Z"
    },
    {
      "event": "labeled",
      "id": 18257424262,
      "node_id": "LE_lADOABII5863BCXxzwAAAARAOi-G",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18257424262",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-21T14:43:29Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2993616109,
      "node_id": "IC_kwDOABII586ybvTt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2993616109",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-21T14:43:31Z",
      "updated_at": "2025-06-21T14:43:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Task `MSan, depends`: https://github.com/bitcoin/bitcoin/runs/44528503073</sub>\n<sub>LLM reason (✨ experimental): The CI failure is caused by the abort in the locationsindex_tests subprocess.</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-2993616109",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18257793553,
      "node_id": "HRFPE_lADOABII5863BCXxzwAAAARAP9IR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18257793553",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "00c3651582b29465f681ff3c225b7c9e72c92d33",
      "commit_url": "https://api.github.com/repos/romanz/bitcoin/commits/00c3651582b29465f681ff3c225b7c9e72c92d33",
      "created_at": "2025-06-21T16:52:11Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18258085564,
      "node_id": "HRFPE_lADOABII5863BCXxzwAAAARAREa8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18258085564",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "df45388b97ea4d808256302531d4443526edf794",
      "commit_url": "https://api.github.com/repos/romanz/bitcoin/commits/df45388b97ea4d808256302531d4443526edf794",
      "created_at": "2025-06-21T18:10:11Z"
    },
    {
      "event": "ready_for_review",
      "id": 18258140604,
      "node_id": "RFRE_lADOABII5863BCXxzwAAAARARR28",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18258140604",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-21T18:20:09Z"
    },
    {
      "event": "unlabeled",
      "id": 18258294533,
      "node_id": "UNLE_lADOABII5863BCXxzwAAAARAR3cF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18258294533",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-21T19:03:31Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "review_requested",
      "id": 18258336199,
      "node_id": "RRE_lADOABII5863BCXxzwAAAARASBnH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18258336199",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-21T19:15:58Z",
      "requested_reviewer": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 2994005562,
      "node_id": "IC_kwDOABII586ydOY6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2994005562",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-22T07:32:56Z",
      "updated_at": "2025-06-22T07:32:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "BTW, if I understand correctly, this index may also improve the performance of [`SendBlockTransactions` during handling of `GETBLOCKTXN` requests](https://github.com/romanz/bitcoin/blob/df45388b97ea4d808256302531d4443526edf794/src/net_processing.cpp#L4181).\r\n",
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-2994005562",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "reviewed",
      "id": 2950110966,
      "node_id": "PRR_kwDOABII586v1x72",
      "url": null,
      "actor": null,
      "commit_id": "df45388b97ea4d808256302531d4443526edf794",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-06-23T13:20:38Z",
      "author_association": "MEMBER",
      "body": "lgtm",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#pullrequestreview-2950110966",
      "submitted_at": "2025-06-23T13:20:38Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
    },
    {
      "event": "commented",
      "id": 2996487357,
      "node_id": "IC_kwDOABII586ymsS9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2996487357",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-23T13:22:20Z",
      "updated_at": "2025-06-23T13:22:20Z",
      "author_association": "MEMBER",
      "body": "> BTW, if I understand correctly, this index may also improve the performance of [`SendBlockTransactions` during handling of `GETBLOCKTXN` requests](https://github.com/romanz/bitcoin/blob/df45388b97ea4d808256302531d4443526edf794/src/net_processing.cpp#L4181).\r\n\r\nThis is only the fallback where the recent block fell out of memory. If this happens, the performance either shouldn't matter, or it may be better to keep more recent blocks in memory than just a single one.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-2996487357",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18280362223,
      "node_id": "HRFPE_lADOABII5863BCXxzwAAAARBmDDv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18280362223",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "99b48777eeb54a11f1f68adae3d273c1a634c3e7",
      "commit_url": "https://api.github.com/repos/romanz/bitcoin/commits/99b48777eeb54a11f1f68adae3d273c1a634c3e7",
      "created_at": "2025-06-23T20:00:21Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18367563775,
      "node_id": "HRFPE_lADOABII5863BCXxzwAAAARGysf_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18367563775",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "80a9c724dc991b6603e4c59931333f91aaf56a30",
      "commit_url": "https://api.github.com/repos/romanz/bitcoin/commits/80a9c724dc991b6603e4c59931333f91aaf56a30",
      "created_at": "2025-06-28T06:41:13Z"
    },
    {
      "event": "commented",
      "id": 3015029219,
      "node_id": "IC_kwDOABII586ztbHj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3015029219",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-28T06:43:31Z",
      "updated_at": "2025-06-28T06:43:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased over `master` and fixed `rest_tx_from_block()` argument name case (in addition to https://github.com/bitcoin/bitcoin/pull/32825).",
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-3015029219",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18386564844,
      "node_id": "HRFPE_lADOABII5863BCXxzwAAAARH7Lbs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18386564844",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "75a38f4928b25f310f789b32217b162d8f805485",
      "commit_url": "https://api.github.com/repos/romanz/bitcoin/commits/75a38f4928b25f310f789b32217b162d8f805485",
      "created_at": "2025-06-30T13:11:34Z"
    },
    {
      "event": "commented",
      "id": 3019110833,
      "node_id": "IC_kwDOABII586z8_mx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3019110833",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-30T13:13:56Z",
      "updated_at": "2025-06-30T13:13:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased over `master` after https://github.com/bitcoin/bitcoin/pull/32825 is merged (to resolve a small conflict).",
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-3019110833",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "commented",
      "id": 3039513232,
      "node_id": "IC_kwDOABII5861K0qQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3039513232",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-05T18:07:56Z",
      "updated_at": "2025-07-05T18:07:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "Added a short description in `doc/REST-interface.md` and `doc/files.md`, and updated release notes in https://github.com/bitcoin/bitcoin/pull/32541/commits/c695d134683d52bce9e499a5848e4c4c7951155c.\r\nPlease let me know if there are any additional open issues :)",
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-3039513232",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "commented",
      "id": 3070627590,
      "node_id": "IC_kwDOABII5863Bg8G",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3070627590",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-14T18:54:35Z",
      "updated_at": "2025-07-14T18:54:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "Ping :)",
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-3070627590",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18623986336,
      "node_id": "HRFPE_lADOABII5863BCXxzwAAAARWE3qg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18623986336",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "024a91fc51865f6f862edae9a32bb13a7c0a316d",
      "commit_url": "https://api.github.com/repos/romanz/bitcoin/commits/024a91fc51865f6f862edae9a32bb13a7c0a316d",
      "created_at": "2025-07-14T19:00:56Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18712235227,
      "node_id": "HRFPE_lADOABII5863BCXxzwAAAARbVgzb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18712235227",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "commit_url": "https://api.github.com/repos/romanz/bitcoin/commits/1b928f58fc78f4727cef988902075abc05c372b2",
      "created_at": "2025-07-19T17:15:58Z"
    },
    {
      "event": "commented",
      "id": 3092464779,
      "node_id": "IC_kwDOABII5864U0SL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3092464779",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-19T17:18:51Z",
      "updated_at": "2025-07-19T17:18:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "I have split the content of this PR into 2 commits:\r\n- 784459ac79 is adding the new `/rest/txfromblock/` endpoint\r\n- 1b928f58fc is adding an optional `locationsindex` for optimizing lookups",
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-3092464779",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "reviewed",
      "id": 3081181690,
      "node_id": "PRR_kwDOABII5863pxn6",
      "url": null,
      "actor": null,
      "commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-02T21:19:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK 1b928f58fc78f4727cef988902075abc05c372b2\r\n\r\nCool way of compressing transaction metadata to significantly reduce on-disk footprint compared to `TxIndex` and make it more likely this one fits in RAM. (Fine as long as external code can fetch by block hash + tx index instead of by txid).\r\n\r\nOptimization as I understand it: All transactions within the same block have the same `FlatFilePos` base, which is compressed by a factor of 128 thanks to `TXS_PER_ROW`. Instead of storing an individual tx offset and size for each tx, it uses 2 offsets for a tx request, which allows re-use of offsets between adjacent txs.\r\n\r\nThanks for electrs!",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#pullrequestreview-3081181690",
      "submitted_at": "2025-08-02T21:19:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18955163824,
      "node_id": "HRFPE_lADOABII5863BCXxzwAAAARp0Niw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18955163824",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b2a22ce33dc69697181547fa1e83bd0ed3321565",
      "commit_url": "https://api.github.com/repos/romanz/bitcoin/commits/b2a22ce33dc69697181547fa1e83bd0ed3321565",
      "created_at": "2025-08-03T06:42:28Z"
    },
    {
      "event": "commented",
      "id": 3148142648,
      "node_id": "IC_kwDOABII5867pNg4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3148142648",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-03T07:50:14Z",
      "updated_at": "2025-08-04T12:47:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "Many thanks for the review!\r\nApplied the comments: [`1b928f5 -> b2a22ce`](https://github.com/bitcoin/bitcoin/compare/1b928f58fc78f4727cef988902075abc05c372b2..b2a22ce33dc69697181547fa1e83bd0ed3321565)\r\n",
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-3148142648",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "subscribed",
      "id": 18957029863,
      "node_id": "SE_lADOABII5863BCXxzwAAAARp7VHn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18957029863",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-03T11:15:14Z"
    },
    {
      "event": "review_requested",
      "id": 18957313372,
      "node_id": "RRE_lADOABII5863BCXxzwAAAARp8aVc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18957313372",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-03T12:41:09Z",
      "requested_reviewer": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 18957313501,
      "node_id": "RRE_lADOABII5863BCXxzwAAAARp8aXd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18957313501",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-03T12:41:11Z",
      "requested_reviewer": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18968399049,
      "node_id": "HRFPE_lADOABII5863BCXxzwAAAARqmszJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18968399049",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "commit_url": "https://api.github.com/repos/romanz/bitcoin/commits/4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "created_at": "2025-08-04T11:35:07Z"
    },
    {
      "event": "commented",
      "id": 3150541294,
      "node_id": "IC_kwDOABII5867yXHu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3150541294",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-04T12:48:03Z",
      "updated_at": "2025-08-04T12:48:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "Applied a few more fixes: [`b2a22ce -> 4441827`](https://github.com/bitcoin/bitcoin/compare/b2a22ce33dc69697181547fa1e83bd0ed3321565..4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69)\r\n",
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-3150541294",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "commented",
      "id": 3221463982,
      "node_id": "IC_kwDOABII587AA6Ou",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3221463982",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-25T19:20:05Z",
      "updated_at": "2025-08-25T19:20:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "Ping :)",
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-3221463982",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "reviewed",
      "id": 3155477609,
      "node_id": "PRR_kwDOABII5868FMRp",
      "url": null,
      "actor": null,
      "commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-27T11:42:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "Reviewed 4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69\r\n\r\nSorry for the bag of nits, take from it what you will. The questions have higher priority for sure. Tried adding coverage of `LocationsIndex` to *test/functional/feature_init.py* but ran into interference with `TxIndex`, could be some more general issue though. Haven't had time to uncover the reason yet.\r\n\r\nSuggestions+test branch:\r\nhttps://github.com/bitcoin/bitcoin/compare/4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69...hodlinator:bitcoin:pr/32541_suggestions\r\n\r\nFurther research idea:\r\nIt would be awesome to use `sendfile(socket, filein, offset, count)`/`TransmitFile()` for this to move that part to 100% kernel-space but not sure how we would cut through the abstractions for that:\r\nhttps://www.man7.org/linux/man-pages/man2/sendfile.2.html\r\nEdit regarding `sendfile`:\r\nOof, this is somewhat impossible unless one turns off XOR obfuscation.\r\nlibevent had native support for `sendfile` via `evbuffer_add_file` and I did a quick & dirty implementation for */rest/block/0000000000000000000515e202c8ae73c8155fc472422d7593af87aa74f2cf3d.bin* (fetching the taproot wizards 3.96MB block). Measured a 27% speedup (avg. 89.3ms vs 122.6ms for 1000 runs each).",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#pullrequestreview-3155477609",
      "submitted_at": "2025-08-27T07:34:16Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19424854645,
      "node_id": "HRFPE_lADOABII5863BCXxzwAAAASFz8J1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19424854645",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5e1c80a22f3d3c6ecf6d4e2777d67656423dd3f3",
      "commit_url": "https://api.github.com/repos/romanz/bitcoin/commits/5e1c80a22f3d3c6ecf6d4e2777d67656423dd3f3",
      "created_at": "2025-08-30T18:01:18Z"
    },
    {
      "event": "commented",
      "id": 3239432543,
      "node_id": "IC_kwDOABII587BFdFf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3239432543",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-30T18:02:30Z",
      "updated_at": "2025-08-30T18:02:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "Many thanks for the review and the suggested fixes!\r\nSquashed most the fixes into the above commits and force-pushed: https://github.com/bitcoin/bitcoin/compare/4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69...5e1c80a22f3d3c6ecf6d4e2777d67656423dd3f3",
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-3239432543",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "labeled",
      "id": 19425128245,
      "node_id": "LE_lADOABII5863BCXxzwAAAASF0-81",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19425128245",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-30T19:08:06Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 3239474521,
      "node_id": "IC_kwDOABII587BFnVZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3239474521",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-30T19:08:09Z",
      "updated_at": "2025-08-30T19:08:09Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Task `TSan, depends, no gui`: https://github.com/bitcoin/bitcoin/runs/49248056402</sub>\n<sub>LLM reason (✨ experimental): ThreadSanitizer detected a data race (width in ios:501:18) causing the mptest to fail.</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-3239474521",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "commented",
      "id": 3239789278,
      "node_id": "IC_kwDOABII587BG0Le",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3239789278",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-31T05:36:12Z",
      "updated_at": "2025-08-31T05:36:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebasing to resolve a conflict with `master`.",
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-3239789278",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19427222277,
      "node_id": "HRFPE_lADOABII5863BCXxzwAAAASF8-MF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19427222277",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "94389c28e1068ffcc116614d16ac3047eb3068e3",
      "commit_url": "https://api.github.com/repos/romanz/bitcoin/commits/94389c28e1068ffcc116614d16ac3047eb3068e3",
      "created_at": "2025-08-31T06:00:20Z"
    },
    {
      "event": "unlabeled",
      "id": 19427437482,
      "node_id": "UNLE_lADOABII5863BCXxzwAAAASF9yuq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19427437482",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-31T06:57:29Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "review_requested",
      "id": 19464764001,
      "node_id": "RRE_lADOABII5863BCXxzwAAAASIMLph",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19464764001",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-02T16:36:37Z",
      "requested_reviewer": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 3179176604,
      "node_id": "PRR_kwDOABII5869fmKc",
      "url": null,
      "actor": null,
      "commit_id": "94389c28e1068ffcc116614d16ac3047eb3068e3",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-09-03T09:18:22Z",
      "author_association": "CONTRIBUTOR",
      "body": "Reviewed 94389c28e1068ffcc116614d16ac3047eb3068e3\r\n\r\nMeasured a ~11% speed increase by enabling `LocationsIndex`, running on NVMe. Are you seeing greater improvements on other setups?\r\n\r\n#### `-locationsindex=0`\r\n\r\n```\r\n₿ hey -n 100000 http://localhost:8332/rest/txfromblock/0000000000000000000083a0cff38278aae196d6d923a7e8ee7e5a0e371226fe-42.bin\r\n\r\nSummary:\r\n  Total:\t2.3504 secs\r\n  Slowest:\t0.0193 secs\r\n  Fastest:\t0.0001 secs\r\n  Average:\t0.0012 secs\r\n  Requests/sec:\t42545.2261\r\n```\r\n\r\n#### `-locationsindex=1`\r\n\r\n```\r\n₿ hey -n 100000 http://localhost:8332/rest/txfromblock/0000000000000000000083a0cff38278aae196d6d923a7e8ee7e5a0e371226fe-42.bin\r\n\r\nSummary:\r\n  Total:  2.0951 secs\r\n  Slowest:  0.0417 secs\r\n  Fastest:  0.0001 secs\r\n  Average:  0.0010 secs\r\n  Requests/sec: 47730.5857\r\n```\r\n",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#pullrequestreview-3179176604",
      "submitted_at": "2025-09-03T09:18:22Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
    },
    {
      "event": "commented",
      "id": 3250323045,
      "node_id": "IC_kwDOABII587Bu_5l",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3250323045",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-03T18:32:19Z",
      "updated_at": "2025-09-05T05:36:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Are you seeing greater improvements on other setups?\r\n\r\nI think that the performance gain will increase when fetching transactions near the end of the block. \r\n\r\nFor example, when fetching the 5000th transaction of [block #90005](https://mempool.space/block/000000000000000000017bfd05b5fa367a424c4a565a4baf7950d9e8605df8ec) using `ab -k -c 1 -n 100000`[^1][^2], enabled `locationsindex` improves the performance ~19x (2.574ms → 0.136ms).\r\n\r\n<details>\r\n\r\n<summary> Details </summary>\r\n\r\n## `-locationsindex=1`\r\n\r\n```\r\nDocument Path:          /rest/txfromblock/000000000000000000017bfd05b5fa367a424c4a565a4baf7950d9e8605df8ec-5000.bin\r\nDocument Length:        234 bytes\r\n\r\nConcurrency Level:      1\r\nTime taken for tests:   13.598 seconds\r\nComplete requests:      100000\r\nFailed requests:        0\r\nKeep-Alive requests:    100000\r\nTotal transferred:      33800000 bytes\r\nHTML transferred:       23400000 bytes\r\nRequests per second:    7353.85 [#/sec] (mean)\r\nTime per request:       0.136 [ms] (mean)\r\nTime per request:       0.136 [ms] (mean, across all concurrent requests)\r\nTransfer rate:          2427.34 [Kbytes/sec] received\r\n```\r\n\r\n## `-locationsindex=0`\r\n\r\n```\r\nDocument Path:          /rest/txfromblock/000000000000000000017bfd05b5fa367a424c4a565a4baf7950d9e8605df8ec-5000.bin\r\nDocument Length:        234 bytes\r\n\r\nConcurrency Level:      1\r\nTime taken for tests:   257.400 seconds\r\nComplete requests:      100000\r\nFailed requests:        0\r\nKeep-Alive requests:    100000\r\nTotal transferred:      33800000 bytes\r\nHTML transferred:       23400000 bytes\r\nRequests per second:    388.50 [#/sec] (mean)\r\nTime per request:       2.574 [ms] (mean)\r\nTime per request:       2.574 [ms] (mean, across all concurrent requests)\r\nTransfer rate:          128.24 [Kbytes/sec] received\r\n```\r\n\r\n[^1]: ApacheBench 2.3\r\n[^2]: testing with warm OS block cache, i.e. measuring mostly HTTP & (de-)serialization\r\n\r\n</details>\r\n",
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-3250323045",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "commented",
      "id": 3250359798,
      "node_id": "IC_kwDOABII587BvI32",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3250359798",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-03T18:44:01Z",
      "updated_at": "2025-09-05T05:32:40Z",
      "author_association": "CONTRIBUTOR",
      "body": "Ran the same test using `hey` 0.1.4 - enabling `locationsindex` improves the performance ~15.8x (2.963ms → 0.187ms)\r\n\r\n<details>\r\n\r\n<summary> Details </summary>\r\n\r\n## `-locationsindex=1`\r\n```\r\n hey -c 1 -n 10000 http://localhost:8332/rest/txfromblock/$BLOCKHASH-5000.bin\r\n\r\nSummary:\r\n  Total:\t1.8766 secs\r\n  Slowest:\t0.0686 secs\r\n  Fastest:\t0.0001 secs\r\n  Average:\t0.0002 secs\r\n  Requests/sec:\t5328.8354\r\n  \r\n  Total data:\t2340000 bytes\r\n  Size/request:\t234 bytes\r\n\r\nResponse time histogram:\r\n  0.000 [1]\t|\r\n  0.007 [9998]\t|■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■\r\n  0.014 [0]\t|\r\n  0.021 [0]\t|\r\n  0.027 [0]\t|\r\n  0.034 [0]\t|\r\n  0.041 [0]\t|\r\n  0.048 [0]\t|\r\n  0.055 [0]\t|\r\n  0.062 [0]\t|\r\n  0.069 [1]\t|\r\n\r\n\r\nLatency distribution:\r\n  10% in 0.0001 secs\r\n  25% in 0.0002 secs\r\n  50% in 0.0002 secs\r\n  75% in 0.0002 secs\r\n  90% in 0.0002 secs\r\n  95% in 0.0002 secs\r\n  99% in 0.0003 secs\r\n\r\nDetails (average, fastest, slowest):\r\n  DNS+dialup:\t0.0000 secs, 0.0001 secs, 0.0686 secs\r\n  DNS-lookup:\t0.0000 secs, 0.0000 secs, 0.0003 secs\r\n  req write:\t0.0000 secs, 0.0000 secs, 0.0004 secs\r\n  resp wait:\t0.0002 secs, 0.0001 secs, 0.0685 secs\r\n  resp read:\t0.0000 secs, 0.0000 secs, 0.0005 secs\r\n\r\nStatus code distribution:\r\n  [200]\t10000 responses\r\n```\r\n\r\n## `-locationsindex=0`\r\n\r\n```\r\nhey -c 1 -n 10000 http://localhost:8332/rest/txfromblock/$BLOCKHASH-5000.bin\r\n\r\nSummary:\r\n  Total:\t29.6382 secs\r\n  Slowest:\t0.0546 secs\r\n  Fastest:\t0.0016 secs\r\n  Average:\t0.0030 secs\r\n  Requests/sec:\t337.4024\r\n  \r\n  Total data:\t2340000 bytes\r\n  Size/request:\t234 bytes\r\n\r\nResponse time histogram:\r\n  0.002 [1]\t|\r\n  0.007 [9998]\t|■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■\r\n  0.012 [0]\t|\r\n  0.018 [0]\t|\r\n  0.023 [0]\t|\r\n  0.028 [0]\t|\r\n  0.033 [0]\t|\r\n  0.039 [0]\t|\r\n  0.044 [0]\t|\r\n  0.049 [0]\t|\r\n  0.055 [1]\t|\r\n\r\n\r\nLatency distribution:\r\n  10% in 0.0029 secs\r\n  25% in 0.0030 secs\r\n  50% in 0.0030 secs\r\n  75% in 0.0031 secs\r\n  90% in 0.0031 secs\r\n  95% in 0.0032 secs\r\n  99% in 0.0033 secs\r\n\r\nDetails (average, fastest, slowest):\r\n  DNS+dialup:\t0.0000 secs, 0.0016 secs, 0.0546 secs\r\n  DNS-lookup:\t0.0000 secs, 0.0000 secs, 0.0006 secs\r\n  req write:\t0.0000 secs, 0.0000 secs, 0.0004 secs\r\n  resp wait:\t0.0029 secs, 0.0016 secs, 0.0545 secs\r\n  resp read:\t0.0000 secs, 0.0000 secs, 0.0005 secs\r\n\r\nStatus code distribution:\r\n  [200]\t10000 responses\r\n```\r\n\r\n</details>\r\n",
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-3250359798",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDc3MmVlNWM5NzMwYmQ1MjA0OWE5ODBlNmVjYmRiZjVhNWUzY2FiOWQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/772ee5c9730bd52049a980e6ecbdbf5a5e3cab9d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/772ee5c9730bd52049a980e6ecbdbf5a5e3cab9d",
      "tree": {
        "sha": "310e80eb99ad2e20a121fc38b5c332d15003aa86",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/310e80eb99ad2e20a121fc38b5c332d15003aa86"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 310e80eb99ad2e20a121fc38b5c332d15003aa86\nparent 7cc9a087069bfcdb79a08ce77eb3a60adf9483af\nauthor Roman Zeyde <me@romanzey.de> 1756543067 +0300\ncommitter Roman Zeyde <me@romanzey.de> 1756925499 +0300\n\nrest: allow fetching specific transaction from a block\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niIUEABMIAC0WIQQVyMNXSuTx4l8/NcWHyuX6RpF8uwUCaLiOPw8cbWVAcm9tYW56\nZXkuZGUACgkQh8rl+kaRfLtoqAEA3iThqfRnC7D43j5nYPrD6RDIz8oxl5eU0KQu\n14jU/n8A/Ahrygylw2T3ARHheh4SiQlEPRUR/eE+Y7q9ir11TQkN\n=Gbc6\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7cc9a087069bfcdb79a08ce77eb3a60adf9483af",
          "sha": "7cc9a087069bfcdb79a08ce77eb3a60adf9483af",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7cc9a087069bfcdb79a08ce77eb3a60adf9483af"
        }
      ],
      "message": "rest: allow fetching specific transaction from a block",
      "committer": {
        "name": "Roman Zeyde",
        "email": "me@romanzey.de",
        "date": "2025-09-03T18:51:39Z"
      },
      "author": {
        "name": "Roman Zeyde",
        "email": "me@romanzey.de",
        "date": "2025-08-30T08:37:47Z"
      },
      "sha": "772ee5c9730bd52049a980e6ecbdbf5a5e3cab9d"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19488612716,
      "node_id": "HRFPE_lADOABII5863BCXxzwAAAASJnKFs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19488612716",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "56e621d9f16b3ed56089fa4760cf2b1b00a67362",
      "commit_url": "https://api.github.com/repos/romanz/bitcoin/commits/56e621d9f16b3ed56089fa4760cf2b1b00a67362",
      "created_at": "2025-09-03T18:52:45Z"
    },
    {
      "event": "convert_to_draft",
      "id": 19490960348,
      "node_id": "CTDE_lADOABII5863BCXxzwAAAASJwHPc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19490960348",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-03T21:12:47Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19495585109,
      "node_id": "HRFPE_lADOABII5863BCXxzwAAAASKBwVV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19495585109",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "91408755df7bc04be4b6806dfd107827d4d2a4e4",
      "commit_url": "https://api.github.com/repos/romanz/bitcoin/commits/91408755df7bc04be4b6806dfd107827d4d2a4e4",
      "created_at": "2025-09-04T05:05:17Z"
    },
    {
      "event": "ready_for_review",
      "id": 19495793667,
      "node_id": "RFRE_lADOABII5863BCXxzwAAAASKCjQD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19495793667",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-04T05:25:45Z"
    },
    {
      "event": "review_requested",
      "id": 19496465615,
      "node_id": "RRE_lADOABII5863BCXxzwAAAASKFHTP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19496465615",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-04T06:20:11Z",
      "requested_reviewer": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 3252122010,
      "node_id": "IC_kwDOABII587B13Ga",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3252122010",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-04T06:29:32Z",
      "updated_at": "2025-09-05T05:34:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "Also tested with [`wrk`](https://github.com/wg/wrk) 4.1.0, with similar performance improvement.\r\n\r\n<details>\r\n\r\n<summary> Details </summary>\r\n\r\n## `-locationsindex=1`\r\n```\r\n$ wrk --latency -t 1 -c 1 -d 10s http://localhost:8332/rest/txfromblock/$BLOCKHASH-5000.bin\r\nRunning 10s test @ http://localhost:8332/rest/txfromblock/000000000000000000017bfd05b5fa367a424c4a565a4baf7950d9e8605df8ec-5000.bin\r\n  1 threads and 1 connections\r\n  Thread Stats   Avg      Stdev     Max   +/- Stdev\r\n    Latency   137.29us   33.60us   2.78ms   93.01%\r\n    Req/Sec     7.20k   518.79     8.84k    73.27%\r\n  Latency Distribution\r\n     50%  136.00us\r\n     75%  147.00us\r\n     90%  166.00us\r\n     99%  185.00us\r\n  72377 requests in 10.10s, 24.23MB read\r\nRequests/sec:   7165.98\r\nTransfer/sec:      2.40MB\r\n\r\n$ wrk --latency -t 4 -c 4 -d 10s http://localhost:8332/rest/txfromblock/$BLOCKHASH-5000.bin\r\nRunning 10s test @ http://localhost:8332/rest/txfromblock/000000000000000000017bfd05b5fa367a424c4a565a4baf7950d9e8605df8ec-5000.bin\r\n  4 threads and 4 connections\r\n  Thread Stats   Avg      Stdev     Max   +/- Stdev\r\n    Latency   139.39us   25.96us   1.02ms   74.11%\r\n    Req/Sec     7.08k   255.89     7.90k    68.73%\r\n  Latency Distribution\r\n     50%  138.00us\r\n     75%  154.00us\r\n     90%  169.00us\r\n     99%  205.00us\r\n  283910 requests in 10.10s, 95.04MB read\r\nRequests/sec:  28111.74\r\nTransfer/sec:      9.41MB\r\n```\r\n\r\n## `-locationsindex=0`\r\n```\r\n$ wrk --latency -t 1 -c 1 -d 10s http://localhost:8332/rest/txfromblock/$BLOCKHASH-5000.bin\r\nRunning 10s test @ http://localhost:8332/rest/txfromblock/000000000000000000017bfd05b5fa367a424c4a565a4baf7950d9e8605df8ec-5000.bin\r\n  1 threads and 1 connections\r\n  Thread Stats   Avg      Stdev     Max   +/- Stdev\r\n    Latency     2.29ms  646.55us   4.66ms   65.27%\r\n    Req/Sec   439.01    104.35   590.00     72.00%\r\n  Latency Distribution\r\n     50%    1.84ms\r\n     75%    2.92ms\r\n     90%    2.96ms\r\n     99%    3.30ms\r\n  4373 requests in 10.01s, 1.46MB read\r\nRequests/sec:    436.96\r\nTransfer/sec:    149.78KB\r\n\r\n$ wrk --latency -t 4 -c 4 -d 10s http://localhost:8332/rest/txfromblock/$BLOCKHASH-5000.bin\r\nRunning 10s test @ http://localhost:8332/rest/txfromblock/000000000000000000017bfd05b5fa367a424c4a565a4baf7950d9e8605df8ec-5000.bin\r\n  4 threads and 4 connections\r\n  Thread Stats   Avg      Stdev     Max   +/- Stdev\r\n    Latency     2.62ms  833.44us   5.88ms   58.59%\r\n    Req/Sec   382.58     44.82   515.00     69.25%\r\n  Latency Distribution\r\n     50%    2.53ms\r\n     75%    3.20ms\r\n     90%    3.69ms\r\n     99%    4.87ms\r\n  15244 requests in 10.01s, 5.10MB read\r\nRequests/sec:   1523.25\r\nTransfer/sec:    522.13KB\r\n```\r\n\r\n</details>",
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-3252122010",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "reviewed",
      "id": 3184231205,
      "node_id": "PRR_kwDOABII5869y4Ml",
      "url": null,
      "actor": null,
      "commit_id": "91408755df7bc04be4b6806dfd107827d4d2a4e4",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-09-04T09:19:40Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#pullrequestreview-3184231205",
      "submitted_at": "2025-09-04T09:19:40Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk2MWY5NGIyOTNiYTUxM2ZmYWNhMDlmYTc5N2I3OWQ4MTMxMzQ2MTg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/961f94b293ba513ffaca09fa797b79d813134618",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/961f94b293ba513ffaca09fa797b79d813134618",
      "tree": {
        "sha": "cf07ebf29c17e5675351f03ad07b6bf21c9833c8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cf07ebf29c17e5675351f03ad07b6bf21c9833c8"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree cf07ebf29c17e5675351f03ad07b6bf21c9833c8\nparent 772ee5c9730bd52049a980e6ecbdbf5a5e3cab9d\nauthor Roman Zeyde <me@romanzey.de> 1756542936 +0300\ncommitter Roman Zeyde <me@romanzey.de> 1756982834 +0300\n\nindex: store per-block transaction locations for efficient lookups\n\nCo-authored-by: Hodlinator <172445034+hodlinator@users.noreply.github.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niIUEABMIAC0WIQQVyMNXSuTx4l8/NcWHyuX6RpF8uwUCaLluMg8cbWVAcm9tYW56\nZXkuZGUACgkQh8rl+kaRfLu6TgD/aRg3R0mXmMPEXaC/E7HAOA3CJWT0wCxqjXa1\n5No1EI8A/RbpYKm2mw62LC/nlZHLY7FmfCXHl6PGlyOO6cDB/P3q\n=+AcD\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/772ee5c9730bd52049a980e6ecbdbf5a5e3cab9d",
          "sha": "772ee5c9730bd52049a980e6ecbdbf5a5e3cab9d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/772ee5c9730bd52049a980e6ecbdbf5a5e3cab9d"
        }
      ],
      "message": "index: store per-block transaction locations for efficient lookups\n\nCo-authored-by: Hodlinator <172445034+hodlinator@users.noreply.github.com>",
      "committer": {
        "name": "Roman Zeyde",
        "email": "me@romanzey.de",
        "date": "2025-09-04T10:47:14Z"
      },
      "author": {
        "name": "Roman Zeyde",
        "email": "me@romanzey.de",
        "date": "2025-08-30T08:35:36Z"
      },
      "sha": "961f94b293ba513ffaca09fa797b79d813134618"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19501296713,
      "node_id": "HRFPE_lADOABII5863BCXxzwAAAASKXixJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19501296713",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "commit_url": "https://api.github.com/repos/romanz/bitcoin/commits/961f94b293ba513ffaca09fa797b79d813134618",
      "created_at": "2025-09-04T10:47:46Z"
    },
    {
      "event": "commented",
      "id": 3253662102,
      "node_id": "IC_kwDOABII587B7vGW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3253662102",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-04T13:13:51Z",
      "updated_at": "2025-09-08T09:18:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "Waiting for indexing to complete, did a 1min perf dump:\r\n<img width=\"1684\" height=\"1177\" alt=\"image\" src=\"https://github.com/user-attachments/assets/b3da4ca7-57d1-4737-849a-f0ad1216f306\" />\r\n\r\n* 35.2% of the time is spent in the `CTransaction` constructor, eagerly computing hashes which `LocationsIndex` doesn't even use.\r\n* 11.7% is spent in the `GetSerializeSize` calls inside `LocationsIndex::CustomAppend()`.\r\n\r\nWould be nice for the `LocationsIndex` if hashes were lazily computed (avoided) and transactions had a serialized size field that was cached upon deserialization so we don't need to call `GetSerializeSize`.\r\n\r\nNext-day edit:\r\n1. Noticed I was accidentally running a debug build in the measurements above.\r\n2. ~Realized that 80+% of the 35.2% tx hash computation above was spent in serializing the transaction we had just deserialized.~ Edit: The re-serialization turned out to be cheap in the end, SHA256-hashing is performed *during serialization* and is where most of the time goes. (At the peaks of the flamegraphs, cropped away in the screenshot).",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-3253662102",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "commented",
      "id": 3255024309,
      "node_id": "IC_kwDOABII587CA7q1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3255024309",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-04T18:28:37Z",
      "updated_at": "2025-09-05T05:37:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Would be nice for the `LocationsIndex` if hashes were lazily computed (avoided) and transactions had a serialized size field that was cached upon deserialization so we don't need to call `GetSerializeSize`.\r\n\r\nIn [`bindex` library](https://github.com/romanz/bindex-rs), I am using @RCasatta's [`bitcoin_slices` crate](https://github.com/RCasatta/bitcoin_slices) which allows parsing Bitcoin blocks and transactions without extra allocations & hashing.\r\nMaybe we can use a similar approach for building the indices (since each index may need a different part of the indexed transaction)?",
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-3255024309",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "mentioned",
      "id": 19511855539,
      "node_id": "MEE_lADOABII5863BCXxzwAAAASK_0mz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19511855539",
      "actor": {
        "login": "RCasatta",
        "id": 6470319,
        "node_id": "MDQ6VXNlcjY0NzAzMTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6470319?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RCasatta",
        "html_url": "https://github.com/RCasatta",
        "followers_url": "https://api.github.com/users/RCasatta/followers",
        "following_url": "https://api.github.com/users/RCasatta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RCasatta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RCasatta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RCasatta/subscriptions",
        "organizations_url": "https://api.github.com/users/RCasatta/orgs",
        "repos_url": "https://api.github.com/users/RCasatta/repos",
        "events_url": "https://api.github.com/users/RCasatta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RCasatta/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-04T18:31:09Z"
    },
    {
      "event": "subscribed",
      "id": 19511855565,
      "node_id": "SE_lADOABII5863BCXxzwAAAASK_0nN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19511855565",
      "actor": {
        "login": "RCasatta",
        "id": 6470319,
        "node_id": "MDQ6VXNlcjY0NzAzMTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6470319?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RCasatta",
        "html_url": "https://github.com/RCasatta",
        "followers_url": "https://api.github.com/users/RCasatta/followers",
        "following_url": "https://api.github.com/users/RCasatta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RCasatta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RCasatta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RCasatta/subscriptions",
        "organizations_url": "https://api.github.com/users/RCasatta/orgs",
        "repos_url": "https://api.github.com/users/RCasatta/repos",
        "events_url": "https://api.github.com/users/RCasatta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RCasatta/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-04T18:31:09Z"
    },
    {
      "event": "commented",
      "id": 3255825130,
      "node_id": "IC_kwDOABII587CD_Lq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3255825130",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-04T21:38:52Z",
      "updated_at": "2025-09-05T11:11:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I think that the performance gain will increase when fetching transactions near the end of the block.\r\n\r\nOof, I can confirm. Skipping over the serialization of all the prior transactions really helps. :D\r\n\r\n(Edit: Accidentally ran these benchmarks in debug, updated numbers still confirm the improvement)\r\n\r\n<details><summary>Details</summary>\r\n\r\n### 1 worker - 16x improvement\r\n\r\n```shell\r\n₿ hey -c 1 -n 10000 http://localhost:8332/rest/txfromblock/000000000000000000017bfd05b5fa367a424c4a565a4baf7950d9e8605df8ec-5000.bin\r\n```\r\n\r\n#### -locationsindex=0\r\n\r\n```\r\nSummary:\r\n  Total:  19.9502 secs\r\n  Slowest:  0.0191 secs\r\n  Fastest:  0.0019 secs\r\n  Average:  0.0020 secs\r\n  Requests/sec: 501.2476\r\n```  \r\n\r\n#### -locationsindex=1\r\n\r\n```  \r\nSummary:\r\n  Total:\t1.2325 secs\r\n  Slowest:\t0.0178 secs\r\n  Fastest:\t0.0001 secs\r\n  Average:\t0.0001 secs\r\n  Requests/sec:\t8113.5517\r\n```  \r\n\r\n### 16 workers - 8.5x improvement\r\n\r\n```shell\r\n₿ hey -c 16 -n 10000 http://localhost:8332/rest/txfromblock/000000000000000000017bfd05b5fa367a424c4a565a4baf7950d9e8605df8ec-5000.bin\r\n```  \r\n\r\n#### -locationsindex=0\r\n\r\n```  \r\nSummary:\r\n  Total:  2.6111 secs\r\n  Slowest:  0.0222 secs\r\n  Fastest:  0.0019 secs\r\n  Average:  0.0042 secs\r\n  Requests/sec: 3829.8051\r\n```  \r\n  \r\n#### -locationsindex=1\r\n\r\n```  \r\nSummary:\r\n  Total:  0.3054 secs\r\n  Slowest:  0.0182 secs\r\n  Fastest:  0.0001 secs\r\n  Average:  0.0005 secs\r\n  Requests/sec: 32744.4170\r\n```  \r\n\r\n</details>",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-3255825130",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "reviewed",
      "id": 3189055673,
      "node_id": "PRR_kwDOABII586-FSC5",
      "url": null,
      "actor": null,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-09-08T12:34:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "Higher level flow:\r\n\r\n```mermaid\r\nsequenceDiagram\r\n    actor User\r\n    participant C as Electrum<br/>Client\r\n    participant S as Electrum<br/>Server\r\n    participant R as bitcoind<br/>REST interface\r\n    participant L as LocationsIndex\r\n    participant B as blockstorage\r\n\r\n    User->>+C: View wallet history\r\n    C->>+S: blockchain.scripthash.get_history(scripthash) [1]\r\n    note over C,S: https://electrum-protocol.readthedocs.io<br/>/en/latest/protocol-methods.html#blockchain-scripthash-get-history\r\n    loop Fetch history\r\n        S->>+R: GET /rest/txfromblock/BLOCKHASH-N.bin\r\n        R->>+L: LocationsIndex::ReadRawTransaction(block_hash, n)\r\n        note over L: BLOCKHASH+N is mapped to a LevelDB key with a compressed N-value\r\n        L->>+B: BlockManager::OpenBlockFile()\r\n        B->>-L: AutoFile\r\n        note over L: Read span of bytes for transaction\r\n        L->>-R: bytes\r\n        R->>-S: bytes\r\n        S->>-C: bytes\r\n    end\r\n    C->>-User: tx history\r\n```\r\n\r\nQ1: Could `LocationsIndex` live on the Electrum Server (bindex-rs) side, with bitcoind instead having a REST endpoint for reading a span of bytes from a given block?\r\n\r\n---\r\n\r\nQ2: Why is it better to implement a slow fallback in blockstorage than to fail over to requiring `TxIndex`? Is it a question of not wanting to store both blockhash+N *and* txid in case users switch around their configurations/bitcoind servers?\r\n\r\n---\r\n\r\n> > Would be nice for the `LocationsIndex` if hashes were lazily computed (avoided) and transactions had a serialized size field that was cached upon deserialization so we don't need to call `GetSerializeSize`.\r\n> \r\n> In [`bindex` library](https://github.com/romanz/bindex-rs), I am using @RCasatta's [`bitcoin_slices` crate](https://github.com/RCasatta/bitcoin_slices) which allows parsing Bitcoin blocks and transactions without extra allocations & hashing. Maybe we can use a similar approach for building the indices (since each index may need a different part of the indexed transaction)?\r\n\r\nYeah, would be sweet if we could just allocate the block into a 4MB scratch buffer without any transformations and maybe even have the tx hashes appended to the end of blocks so they don't need to be recomputed (could still have some simple CRC over block + hashes to catch storage medium failure).",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#pullrequestreview-3189055673",
      "submitted_at": "2025-09-08T12:34:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
    },
    {
      "event": "commented",
      "id": 3267485313,
      "node_id": "IC_kwDOABII587Cwd6B",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3267485313",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-08T18:44:26Z",
      "updated_at": "2025-09-08T18:44:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Q1: Could `LocationsIndex` live on the Electrum Server (bindex-rs) side, with bitcoind instead having a REST endpoint for reading a span of bytes from a given block?\r\n\r\nGreat idea, thanks!\r\nI would try this approach in a separate `bindex` branch, to evaluate its performance.\r\n\r\n> Q2: Why is it better to implement a slow fallback in blockstorage than to fail over to requiring TxIndex? Is it a question of not wanting to store both blockhash+N and txid in case users switch around their configurations/bitcoind servers?\r\n\r\nThe drawback of `TxIndex` is its size (currently ~60GB).\r\nIt also requires `bindex` to use txids (to query `TxIndex`), whose storage is estimated to take additional tens of GBs (~1B txids, each being 32-byte pseudo-random values).\r\n\r\nCurrently `bindex` is using 4-byte `txnum`[^1] (the \"position\" of the tx in the chain, when enumerating all the transactions from genesis), which can be used to efficiently find its block height and its offset within the block - without using txids :)\r\n\r\n[^1]: https://docs.google.com/presentation/d/1Zez-6DApKRu59kke4i_g9jwxQlaFKKRpOPdYFYsFXfA/edit?slide=id.g2b9ee1c7587_0_71#slide=id.g2b9ee1c7587_0_71",
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-3267485313",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "labeled",
      "id": 19577274866,
      "node_id": "LE_lADOABII5863BCXxzwAAAASO5YHy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19577274866",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-09T01:38:25Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 3268560226,
      "node_id": "IC_kwDOABII587C0kVi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3268560226",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-09T01:38:26Z",
      "updated_at": "2025-09-09T01:38:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--cf906140f33d8803c4a75a2196329ecb-->\n🐙 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-3268560226",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "commented",
      "id": 3393623978,
      "node_id": "IC_kwDOABII587KRpeq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3393623978",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-11T19:56:52Z",
      "updated_at": "2025-10-11T19:56:52Z",
      "author_association": "CONTRIBUTOR",
      "body": ">  I would try this approach in a separate bindex branch, to evaluate its performance.\r\n\r\nWhat came of this @romanz?",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-3393623978",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "mentioned",
      "id": 20226934080,
      "node_id": "MEE_lADOABII5863BCXxzwAAAAS1noVA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20226934080",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-11T19:56:53Z"
    },
    {
      "event": "subscribed",
      "id": 20226934083,
      "node_id": "SE_lADOABII5863BCXxzwAAAAS1noVD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20226934083",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-11T19:56:53Z"
    },
    {
      "event": "commented",
      "id": 3393628474,
      "node_id": "IC_kwDOABII587KRqk6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3393628474",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-11T20:05:59Z",
      "updated_at": "2025-10-11T20:05:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "Sorry, unfortunately I didn't have the time to implement and benchmark the new approach in the last month - but I expect it to have similar lookup performance, and since it wouldn'd require an additional Bitcoin Core index, I will prefer it over my original approach. WDYT?",
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-3393628474",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "commented",
      "id": 3393634975,
      "node_id": "IC_kwDOABII587KRsKf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3393634975",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-11T20:18:54Z",
      "updated_at": "2025-10-11T20:18:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I expect it to have similar lookup performance, and since it wouldn'd require an additional Bitcoin Core index, I will prefer it over my original approach.\r\n\r\nIf the performance is similar, that sounds like the better course of action. I guess you'd still need the REST endpoint for retrieving the actual transaction?",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-3393634975",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "commented",
      "id": 3393650305,
      "node_id": "IC_kwDOABII587KRv6B",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3393650305",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-11T20:50:20Z",
      "updated_at": "2025-10-11T20:50:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "Yes - it will need way to fetch partial block data, e.g. https://github.com/romanz/bitcoin/commit/5a319571e728de009fb81a27d2bb86f8f8811d09",
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-3393650305",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2158804941",
      "pull_request_review_id": 2945853711,
      "id": 2158804941,
      "node_id": "PRRC_kwDOABII586ArL_N",
      "diff_hunk": "@@ -364,6 +365,92 @@ static bool rest_block_notxdetails(const std::any& context, HTTPRequest* req, co\n     return rest_block(context, req, strURIPart, TxVerbosity::SHOW_TXID);\n }\n \n+\n+static bool rest_tx_from_block(const std::any& context, HTTPRequest* req, const std::string& strURIPart)\n+{\n+    if (!CheckWarmup(req)) return false;\n+\n+    std::string param;\n+    const RESTResponseFormat rf = ParseDataFormat(param, strURIPart);\n+\n+    // request is sent over URI scheme /rest/txfromblock/blockhash-index\n+    std::vector<std::string_view> uriParts{util::Split<std::string_view>(param, '-')};\n+    if (uriParts.size() != 2) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid URI format: %s\", param));\n+    }\n+\n+    std::optional<uint256> block_hash{uint256::FromHex(uriParts[0])};\n+    if (!block_hash) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid hash: %s\", uriParts[0]));\n+    }\n+\n+    const std::optional<size_t> parsed_index{ToIntegral<size_t>(uriParts[1])};\n+    if (!parsed_index.has_value()) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Transaction index is invalid: %s\", uriParts[1]));\n+    }\n+    const size_t index = *parsed_index;\n+    {\n+        ChainstateManager* maybe_chainman = GetChainman(context, req);\n+        if (!maybe_chainman) return false;\n+        ChainstateManager& chainman = *maybe_chainman;\n+\n+        LOCK(cs_main);\n+        const CBlockIndex* pindex{chainman.m_blockman.LookupBlockIndex(*block_hash)};\n+        if (pindex == nullptr) {\n+            return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Block %s not found\", uriParts[0]));\n+        }\n+        if (pindex->nHeight > 0 && !pindex->IsValid(BLOCK_VALID_SCRIPTS)) {\n+            return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Block %s not validated\", uriParts[0]));\n+        }\n+        if (index >= pindex->nTx) {\n+            return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Block %s has only %d transactions\", uriParts[0], pindex->nTx));\n+        }\n+    }\n+\n+    const LocationsIndex* locations_index = g_locations_index.get();\n+    if (!locations_index) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, \"Locations index is not enabled\");",
      "path": "src/rest.cpp",
      "position": 1,
      "original_position": 56,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "d962c9a9170c72483ed970918ce3836cf538ec43",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "not sure about returning an error here. Should be easy to implement a fallback?\r\n\r\nThis should also make it easier to benchmark the benefit of the index.\r\n\r\n(I guess it is clear that RPC with json overhead eats some CPU, but out of curiosity   I wonder what the difference is between reading the db value (tx location) + reading the tx versus reading the full block and implementing a raw-tx-seeker to jump to the raw bytes of the tx in the block. This should be possible by just reading the length prefixes and then skipping them. I guess the worst case scenario is when its the last transaction, where the prior transaction(s) are mostly filled with minimally sized length prefixes)",
      "created_at": "2025-06-20T12:04:55Z",
      "updated_at": "2025-06-20T12:05:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2158804941",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2158804941"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 412,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2159265802",
      "pull_request_review_id": 2946634361,
      "id": 2159265802,
      "node_id": "PRRC_kwDOABII586As8gK",
      "diff_hunk": "@@ -364,6 +365,92 @@ static bool rest_block_notxdetails(const std::any& context, HTTPRequest* req, co\n     return rest_block(context, req, strURIPart, TxVerbosity::SHOW_TXID);\n }\n \n+\n+static bool rest_tx_from_block(const std::any& context, HTTPRequest* req, const std::string& strURIPart)\n+{\n+    if (!CheckWarmup(req)) return false;\n+\n+    std::string param;\n+    const RESTResponseFormat rf = ParseDataFormat(param, strURIPart);\n+\n+    // request is sent over URI scheme /rest/txfromblock/blockhash-index\n+    std::vector<std::string_view> uriParts{util::Split<std::string_view>(param, '-')};\n+    if (uriParts.size() != 2) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid URI format: %s\", param));\n+    }\n+\n+    std::optional<uint256> block_hash{uint256::FromHex(uriParts[0])};\n+    if (!block_hash) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid hash: %s\", uriParts[0]));\n+    }\n+\n+    const std::optional<size_t> parsed_index{ToIntegral<size_t>(uriParts[1])};\n+    if (!parsed_index.has_value()) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Transaction index is invalid: %s\", uriParts[1]));\n+    }\n+    const size_t index = *parsed_index;\n+    {\n+        ChainstateManager* maybe_chainman = GetChainman(context, req);\n+        if (!maybe_chainman) return false;\n+        ChainstateManager& chainman = *maybe_chainman;\n+\n+        LOCK(cs_main);\n+        const CBlockIndex* pindex{chainman.m_blockman.LookupBlockIndex(*block_hash)};\n+        if (pindex == nullptr) {\n+            return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Block %s not found\", uriParts[0]));\n+        }\n+        if (pindex->nHeight > 0 && !pindex->IsValid(BLOCK_VALID_SCRIPTS)) {\n+            return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Block %s not validated\", uriParts[0]));\n+        }\n+        if (index >= pindex->nTx) {\n+            return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Block %s has only %d transactions\", uriParts[0], pindex->nTx));\n+        }\n+    }\n+\n+    const LocationsIndex* locations_index = g_locations_index.get();\n+    if (!locations_index) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, \"Locations index is not enabled\");",
      "path": "src/rest.cpp",
      "position": 1,
      "original_position": 56,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "d962c9a9170c72483ed970918ce3836cf538ec43",
      "in_reply_to_id": 2158804941,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks!\r\n\r\n> This should also make it easier to benchmark the benefit of the index.\r\n\r\nSounds good - will implement a fallback.",
      "created_at": "2025-06-20T15:35:09Z",
      "updated_at": "2025-06-20T16:25:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2159265802",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2159265802"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 412,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2160039017",
      "pull_request_review_id": 2947768242,
      "id": 2160039017,
      "node_id": "PRRC_kwDOABII586Av5Rp",
      "diff_hunk": "@@ -364,6 +365,92 @@ static bool rest_block_notxdetails(const std::any& context, HTTPRequest* req, co\n     return rest_block(context, req, strURIPart, TxVerbosity::SHOW_TXID);\n }\n \n+\n+static bool rest_tx_from_block(const std::any& context, HTTPRequest* req, const std::string& strURIPart)\n+{\n+    if (!CheckWarmup(req)) return false;\n+\n+    std::string param;\n+    const RESTResponseFormat rf = ParseDataFormat(param, strURIPart);\n+\n+    // request is sent over URI scheme /rest/txfromblock/blockhash-index\n+    std::vector<std::string_view> uriParts{util::Split<std::string_view>(param, '-')};\n+    if (uriParts.size() != 2) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid URI format: %s\", param));\n+    }\n+\n+    std::optional<uint256> block_hash{uint256::FromHex(uriParts[0])};\n+    if (!block_hash) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid hash: %s\", uriParts[0]));\n+    }\n+\n+    const std::optional<size_t> parsed_index{ToIntegral<size_t>(uriParts[1])};\n+    if (!parsed_index.has_value()) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Transaction index is invalid: %s\", uriParts[1]));\n+    }\n+    const size_t index = *parsed_index;\n+    {\n+        ChainstateManager* maybe_chainman = GetChainman(context, req);\n+        if (!maybe_chainman) return false;\n+        ChainstateManager& chainman = *maybe_chainman;\n+\n+        LOCK(cs_main);\n+        const CBlockIndex* pindex{chainman.m_blockman.LookupBlockIndex(*block_hash)};\n+        if (pindex == nullptr) {\n+            return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Block %s not found\", uriParts[0]));\n+        }\n+        if (pindex->nHeight > 0 && !pindex->IsValid(BLOCK_VALID_SCRIPTS)) {\n+            return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Block %s not validated\", uriParts[0]));\n+        }\n+        if (index >= pindex->nTx) {\n+            return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Block %s has only %d transactions\", uriParts[0], pindex->nTx));\n+        }\n+    }\n+\n+    const LocationsIndex* locations_index = g_locations_index.get();\n+    if (!locations_index) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, \"Locations index is not enabled\");",
      "path": "src/rest.cpp",
      "position": 1,
      "original_position": 56,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "d962c9a9170c72483ed970918ce3836cf538ec43",
      "in_reply_to_id": 2158804941,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Implemented in df45388b97.\r\n",
      "created_at": "2025-06-21T13:29:03Z",
      "updated_at": "2025-06-21T18:18:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2160039017",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2160039017"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 412,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2160238302",
      "pull_request_review_id": 2948073543,
      "id": 2160238302,
      "node_id": "PRRC_kwDOABII586Awp7e",
      "diff_hunk": "@@ -364,6 +365,92 @@ static bool rest_block_notxdetails(const std::any& context, HTTPRequest* req, co\n     return rest_block(context, req, strURIPart, TxVerbosity::SHOW_TXID);\n }\n \n+\n+static bool rest_tx_from_block(const std::any& context, HTTPRequest* req, const std::string& strURIPart)\n+{\n+    if (!CheckWarmup(req)) return false;\n+\n+    std::string param;\n+    const RESTResponseFormat rf = ParseDataFormat(param, strURIPart);\n+\n+    // request is sent over URI scheme /rest/txfromblock/blockhash-index\n+    std::vector<std::string_view> uriParts{util::Split<std::string_view>(param, '-')};\n+    if (uriParts.size() != 2) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid URI format: %s\", param));\n+    }\n+\n+    std::optional<uint256> block_hash{uint256::FromHex(uriParts[0])};\n+    if (!block_hash) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid hash: %s\", uriParts[0]));\n+    }\n+\n+    const std::optional<size_t> parsed_index{ToIntegral<size_t>(uriParts[1])};\n+    if (!parsed_index.has_value()) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Transaction index is invalid: %s\", uriParts[1]));\n+    }\n+    const size_t index = *parsed_index;\n+    {\n+        ChainstateManager* maybe_chainman = GetChainman(context, req);\n+        if (!maybe_chainman) return false;\n+        ChainstateManager& chainman = *maybe_chainman;\n+\n+        LOCK(cs_main);\n+        const CBlockIndex* pindex{chainman.m_blockman.LookupBlockIndex(*block_hash)};\n+        if (pindex == nullptr) {\n+            return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Block %s not found\", uriParts[0]));\n+        }\n+        if (pindex->nHeight > 0 && !pindex->IsValid(BLOCK_VALID_SCRIPTS)) {\n+            return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Block %s not validated\", uriParts[0]));\n+        }\n+        if (index >= pindex->nTx) {\n+            return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Block %s has only %d transactions\", uriParts[0], pindex->nTx));\n+        }\n+    }\n+\n+    const LocationsIndex* locations_index = g_locations_index.get();\n+    if (!locations_index) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, \"Locations index is not enabled\");",
      "path": "src/rest.cpp",
      "position": 1,
      "original_position": 56,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "d962c9a9170c72483ed970918ce3836cf538ec43",
      "in_reply_to_id": 2158804941,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Tested using [the following Testnet4 block](https://mempool.space/testnet4/block/00000000000000047b26e3ef164e30f0475c12408d0ece060f90f722aa90787b):\r\n\r\n# `-locationsindex=1`\r\n\r\n```\r\n$ BLOCKHASH=00000000000000047b26e3ef164e30f0475c12408d0ece060f90f722aa90787b\r\n$ ab -k -c 1 -n 100000 http://localhost:48332/rest/txfromblock/$BLOCKHASH-0.bin\r\n\r\nDocument Path:          /rest/txfromblock/00000000000000047b26e3ef164e30f0475c12408d0ece060f90f722aa90787b-0.bin\r\nDocument Length:        273 bytes\r\n\r\nConcurrency Level:      1\r\nTime taken for tests:   2.983 seconds\r\nComplete requests:      100000\r\nFailed requests:        0\r\nKeep-Alive requests:    100000\r\nTotal transferred:      37700000 bytes\r\nHTML transferred:       27300000 bytes\r\nRequests per second:    33527.87 [#/sec] (mean)\r\nTime per request:       0.030 [ms] (mean)\r\nTime per request:       0.030 [ms] (mean, across all concurrent requests)\r\nTransfer rate:          12343.76 [Kbytes/sec] received\r\n\r\n$ ab -k -c 1 -n 100000 http://localhost:48332/rest/txfromblock/$BLOCKHASH-1000.bin\r\n\r\nDocument Path:          /rest/txfromblock/00000000000000047b26e3ef164e30f0475c12408d0ece060f90f722aa90787b-1000.bin\r\nDocument Length:        308 bytes\r\n\r\nConcurrency Level:      1\r\nTime taken for tests:   3.122 seconds\r\nComplete requests:      100000\r\nFailed requests:        0\r\nKeep-Alive requests:    100000\r\nTotal transferred:      41200000 bytes\r\nHTML transferred:       30800000 bytes\r\nRequests per second:    32032.96 [#/sec] (mean)\r\nTime per request:       0.031 [ms] (mean)\r\nTime per request:       0.031 [ms] (mean, across all concurrent requests)\r\nTransfer rate:          12888.26 [Kbytes/sec] received\r\n\r\n$ ab -k -c 1 -n 100000 http://localhost:48332/rest/txfromblock/$BLOCKHASH-2000.bin\r\n\r\nDocument Path:          /rest/txfromblock/00000000000000047b26e3ef164e30f0475c12408d0ece060f90f722aa90787b-2000.bin\r\nDocument Length:        308 bytes\r\n\r\nConcurrency Level:      1\r\nTime taken for tests:   3.030 seconds\r\nComplete requests:      100000\r\nFailed requests:        0\r\nKeep-Alive requests:    100000\r\nTotal transferred:      41200000 bytes\r\nHTML transferred:       30800000 bytes\r\nRequests per second:    33003.94 [#/sec] (mean)\r\nTime per request:       0.030 [ms] (mean)\r\nTime per request:       0.030 [ms] (mean, across all concurrent requests)\r\nTransfer rate:          13278.93 [Kbytes/sec] received\r\n\r\n$ ab -k -c 1 -n 100000 http://localhost:48332/rest/txfromblock/$BLOCKHASH-3000.bin\r\n\r\nDocument Path:          /rest/txfromblock/00000000000000047b26e3ef164e30f0475c12408d0ece060f90f722aa90787b-3000.bin\r\nDocument Length:        309 bytes\r\n\r\nConcurrency Level:      1\r\nTime taken for tests:   3.362 seconds\r\nComplete requests:      100000\r\nFailed requests:        0\r\nKeep-Alive requests:    100000\r\nTotal transferred:      41300000 bytes\r\nHTML transferred:       30900000 bytes\r\nRequests per second:    29745.72 [#/sec] (mean)\r\nTime per request:       0.034 [ms] (mean)\r\nTime per request:       0.034 [ms] (mean, across all concurrent requests)\r\nTransfer rate:          11997.05 [Kbytes/sec] received\r\n\r\n$ ab -k -c 1 -n 100000 http://localhost:48332/rest/txfromblock/$BLOCKHASH-4000.bin\r\n\r\nDocument Path:          /rest/txfromblock/00000000000000047b26e3ef164e30f0475c12408d0ece060f90f722aa90787b-4000.bin\r\nDocument Length:        309 bytes\r\n\r\nConcurrency Level:      1\r\nTime taken for tests:   2.854 seconds\r\nComplete requests:      100000\r\nFailed requests:        0\r\nKeep-Alive requests:    100000\r\nTotal transferred:      41300000 bytes\r\nHTML transferred:       30900000 bytes\r\nRequests per second:    35040.53 [#/sec] (mean)\r\nTime per request:       0.029 [ms] (mean)\r\nTime per request:       0.029 [ms] (mean, across all concurrent requests)\r\nTransfer rate:          14132.56 [Kbytes/sec] received\r\n```\r\n\r\n# `-locationsindex=0`\r\n\r\n```\r\n$ ab -k -c 1 -n 100000 http://localhost:48332/rest/txfromblock/$BLOCKHASH-0.bin\r\n\r\nConcurrency Level:      1\r\nTime taken for tests:   3.245 seconds\r\nComplete requests:      100000\r\nFailed requests:        0\r\nKeep-Alive requests:    100000\r\nTotal transferred:      37700000 bytes\r\nHTML transferred:       27300000 bytes\r\nRequests per second:    30819.31 [#/sec] (mean)\r\nTime per request:       0.032 [ms] (mean)\r\nTime per request:       0.032 [ms] (mean, across all concurrent requests)\r\nTransfer rate:          11346.56 [Kbytes/sec] received\r\n\r\n$ ab -k -c 1 -n 10000 http://localhost:48332/rest/txfromblock/$BLOCKHASH-1000.bin\r\n\r\nConcurrency Level:      1\r\nTime taken for tests:   4.588 seconds\r\nComplete requests:      10000\r\nFailed requests:        0\r\nKeep-Alive requests:    10000\r\nTotal transferred:      4120000 bytes\r\nHTML transferred:       3080000 bytes\r\nRequests per second:    2179.68 [#/sec] (mean)\r\nTime per request:       0.459 [ms] (mean)\r\nTime per request:       0.459 [ms] (mean, across all concurrent requests)\r\nTransfer rate:          876.98 [Kbytes/sec] received\r\n\r\n$ ab -k -c 1 -n 10000 http://localhost:48332/rest/txfromblock/$BLOCKHASH-2000.bin\r\n\r\nConcurrency Level:      1\r\nTime taken for tests:   9.388 seconds\r\nComplete requests:      10000\r\nFailed requests:        0\r\nKeep-Alive requests:    10000\r\nTotal transferred:      4120000 bytes\r\nHTML transferred:       3080000 bytes\r\nRequests per second:    1065.20 [#/sec] (mean)\r\nTime per request:       0.939 [ms] (mean)\r\nTime per request:       0.939 [ms] (mean, across all concurrent requests)\r\nTransfer rate:          428.58 [Kbytes/sec] received\r\n\r\n$ ab -k -c 1 -n 10000 http://localhost:48332/rest/txfromblock/$BLOCKHASH-3000.bin\r\n\r\nConcurrency Level:      1\r\nTime taken for tests:   12.819 seconds\r\nComplete requests:      10000\r\nFailed requests:        0\r\nKeep-Alive requests:    10000\r\nTotal transferred:      4130000 bytes\r\nHTML transferred:       3090000 bytes\r\nRequests per second:    780.10 [#/sec] (mean)\r\nTime per request:       1.282 [ms] (mean)\r\nTime per request:       1.282 [ms] (mean, across all concurrent requests)\r\nTransfer rate:          314.63 [Kbytes/sec] received\r\n\r\n$ ab -k -c 1 -n 10000 http://localhost:48332/rest/txfromblock/$BLOCKHASH-4000.bin\r\n\r\nConcurrency Level:      1\r\nTime taken for tests:   17.962 seconds\r\nComplete requests:      10000\r\nFailed requests:        0\r\nKeep-Alive requests:    10000\r\nTotal transferred:      4130000 bytes\r\nHTML transferred:       3090000 bytes\r\nRequests per second:    556.73 [#/sec] (mean)\r\nTime per request:       1.796 [ms] (mean)\r\nTime per request:       1.796 [ms] (mean, across all concurrent requests)\r\nTransfer rate:          224.54 [Kbytes/sec] received\r\n```\r\n",
      "created_at": "2025-06-22T06:39:16Z",
      "updated_at": "2025-06-22T06:39:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2160238302",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2160238302"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 412,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2161623385",
      "pull_request_review_id": 2950110966,
      "id": 2161623385,
      "node_id": "PRRC_kwDOABII586A18FZ",
      "diff_hunk": "@@ -1080,6 +1080,119 @@ bool BlockManager::ReadRawBlock(std::vector<std::byte>& block, const FlatFilePos\n     return true;\n }\n \n+static const uint32_t HEADER_SIZE = ::GetSerializeSize(CBlockHeader{});\n+\n+template <typename T>\n+struct SkipVector {\n+    size_t count;\n+    T elem; // use for skipping element-related data\n+\n+    void clear()\n+    {\n+        count = 0;\n+    }\n+\n+    size_t size() const\n+    {\n+        return count;\n+    }\n+\n+    T& operator[](size_t)\n+    {\n+        return elem;\n+    }\n+\n+    template <typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        count = ReadCompactSize(s);\n+        for (size_t i = 0; i < count; ++i) {\n+            s >> elem;\n+        }\n+    }\n+};\n+\n+struct SkipBytes {\n+    template <typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        size_t size = ReadCompactSize(s);\n+        s.ignore(size);\n+    }\n+};\n+\n+struct SkipScriptWitness {\n+    SkipVector<SkipBytes> stack;\n+};\n+\n+struct SkipTxIn {\n+    SkipScriptWitness scriptWitness; // accessed by UnserializeTransaction\n+\n+    template <typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        COutPoint prevout;\n+        SkipBytes scriptSig;\n+        uint32_t nSequence;\n+\n+        s >> prevout >> scriptSig >> nSequence;\n+    }\n+};\n+\n+struct SkipTxOut {\n+    template <typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        CAmount nValue;\n+        SkipBytes scriptPubKey;\n+\n+        s >> nValue >> scriptPubKey;\n+    }\n+};\n+\n+struct SkipTransaction {\n+    SkipVector<SkipTxIn> vin;\n+    SkipVector<SkipTxOut> vout;\n+    uint32_t version;\n+    uint32_t nLockTime;\n+\n+    template <typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        UnserializeTransaction(*this, s, TX_WITH_WITNESS);\n+    }\n+\n+    bool HasWitness() const { return true; }\n+};\n+\n+bool BlockManager::ReadRawTxFromBlock(std::vector<std::byte>& tx_bytes, const FlatFilePos& block_pos, size_t tx_index) const\n+{\n+    AutoFile filein{OpenBlockFile(block_pos, /*fReadOnly=*/true)};\n+    if (filein.IsNull()) {\n+        LogError(\"OpenBlockFile failed for %s while reading raw transaction from block\", block_pos.ToString());\n+        return false;\n+    }\n+\n+    filein.ignore(HEADER_SIZE);\n+    size_t tx_count = ReadCompactSize(filein);\n+    if (tx_index >= tx_count) {\n+        return false;\n+    }\n+\n+    SkipTransaction skip_tx;",
      "path": "src/node/blockstorage.cpp",
      "position": 1,
      "original_position": 103,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "df45388b97ea4d808256302531d4443526edf794",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "thanks for implementing this idea. Though, at least locally on my system it looks like it didn't improve the end-to-end performance for me, at least not in a significant benchmark.\r\n\r\nSo it seems fine to use the \"normal\" deserialization and even go through a redundant ser-deser loop?\r\n\r\n\r\n```diff\r\ndiff --git a/src/node/blockstorage.cpp b/src/node/blockstorage.cpp\r\nindex a049122894..64cb914cb1 100644\r\n--- a/src/node/blockstorage.cpp\r\n+++ b/src/node/blockstorage.cpp\r\n@@ -1179,17 +1179,14 @@ bool BlockManager::ReadRawTxFromBlock(std::vector<std::byte>& tx_bytes, const Fl\r\n         return false;\r\n     }\r\n \r\n-    SkipTransaction skip_tx;\r\n+    CMutableTransaction skip_tx;\r\n     for (size_t i = 0; i < tx_index; ++i) {\r\n-        filein >> skip_tx;\r\n+        filein >> TX_WITH_WITNESS(skip_tx);\r\n     }\r\n-    int64_t tx_start = filein.tell();\r\n-    filein >> skip_tx;\r\n-    int64_t tx_end = filein.tell();\r\n+        filein >> TX_WITH_WITNESS(skip_tx);\r\n \r\n-    tx_bytes.resize(tx_end - tx_start);\r\n-    filein.seek(tx_start, SEEK_SET);\r\n-    filein.read(tx_bytes);\r\n+    tx_bytes.resize(0);\r\n+    VectorWriter {*(std::vector<unsigned char> *)&tx_bytes,tx_bytes.size()}<<TX_WITH_WITNESS(skip_tx);\r\n     return true;\r\n }\r\n \r\n",
      "created_at": "2025-06-23T13:20:28Z",
      "updated_at": "2025-06-23T13:20:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2161623385",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2161623385"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1182,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2161877867",
      "pull_request_review_id": 2950518449,
      "id": 2161877867,
      "node_id": "PRRC_kwDOABII586A26Nr",
      "diff_hunk": "@@ -1080,6 +1080,119 @@ bool BlockManager::ReadRawBlock(std::vector<std::byte>& block, const FlatFilePos\n     return true;\n }\n \n+static const uint32_t HEADER_SIZE = ::GetSerializeSize(CBlockHeader{});\n+\n+template <typename T>\n+struct SkipVector {\n+    size_t count;\n+    T elem; // use for skipping element-related data\n+\n+    void clear()\n+    {\n+        count = 0;\n+    }\n+\n+    size_t size() const\n+    {\n+        return count;\n+    }\n+\n+    T& operator[](size_t)\n+    {\n+        return elem;\n+    }\n+\n+    template <typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        count = ReadCompactSize(s);\n+        for (size_t i = 0; i < count; ++i) {\n+            s >> elem;\n+        }\n+    }\n+};\n+\n+struct SkipBytes {\n+    template <typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        size_t size = ReadCompactSize(s);\n+        s.ignore(size);\n+    }\n+};\n+\n+struct SkipScriptWitness {\n+    SkipVector<SkipBytes> stack;\n+};\n+\n+struct SkipTxIn {\n+    SkipScriptWitness scriptWitness; // accessed by UnserializeTransaction\n+\n+    template <typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        COutPoint prevout;\n+        SkipBytes scriptSig;\n+        uint32_t nSequence;\n+\n+        s >> prevout >> scriptSig >> nSequence;\n+    }\n+};\n+\n+struct SkipTxOut {\n+    template <typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        CAmount nValue;\n+        SkipBytes scriptPubKey;\n+\n+        s >> nValue >> scriptPubKey;\n+    }\n+};\n+\n+struct SkipTransaction {\n+    SkipVector<SkipTxIn> vin;\n+    SkipVector<SkipTxOut> vout;\n+    uint32_t version;\n+    uint32_t nLockTime;\n+\n+    template <typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        UnserializeTransaction(*this, s, TX_WITH_WITNESS);\n+    }\n+\n+    bool HasWitness() const { return true; }\n+};\n+\n+bool BlockManager::ReadRawTxFromBlock(std::vector<std::byte>& tx_bytes, const FlatFilePos& block_pos, size_t tx_index) const\n+{\n+    AutoFile filein{OpenBlockFile(block_pos, /*fReadOnly=*/true)};\n+    if (filein.IsNull()) {\n+        LogError(\"OpenBlockFile failed for %s while reading raw transaction from block\", block_pos.ToString());\n+        return false;\n+    }\n+\n+    filein.ignore(HEADER_SIZE);\n+    size_t tx_count = ReadCompactSize(filein);\n+    if (tx_index >= tx_count) {\n+        return false;\n+    }\n+\n+    SkipTransaction skip_tx;",
      "path": "src/node/blockstorage.cpp",
      "position": 1,
      "original_position": 103,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "df45388b97ea4d808256302531d4443526edf794",
      "in_reply_to_id": 2161623385,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Wrapping the autofile into `BufferedReader` helped more on my system with reading later transactions in the block via this fallback branch.",
      "created_at": "2025-06-23T15:16:13Z",
      "updated_at": "2025-06-23T15:16:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2161877867",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2161877867"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1182,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2162435719",
      "pull_request_review_id": 2951384573,
      "id": 2162435719,
      "node_id": "PRRC_kwDOABII586A5CaH",
      "diff_hunk": "@@ -1080,6 +1080,119 @@ bool BlockManager::ReadRawBlock(std::vector<std::byte>& block, const FlatFilePos\n     return true;\n }\n \n+static const uint32_t HEADER_SIZE = ::GetSerializeSize(CBlockHeader{});\n+\n+template <typename T>\n+struct SkipVector {\n+    size_t count;\n+    T elem; // use for skipping element-related data\n+\n+    void clear()\n+    {\n+        count = 0;\n+    }\n+\n+    size_t size() const\n+    {\n+        return count;\n+    }\n+\n+    T& operator[](size_t)\n+    {\n+        return elem;\n+    }\n+\n+    template <typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        count = ReadCompactSize(s);\n+        for (size_t i = 0; i < count; ++i) {\n+            s >> elem;\n+        }\n+    }\n+};\n+\n+struct SkipBytes {\n+    template <typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        size_t size = ReadCompactSize(s);\n+        s.ignore(size);\n+    }\n+};\n+\n+struct SkipScriptWitness {\n+    SkipVector<SkipBytes> stack;\n+};\n+\n+struct SkipTxIn {\n+    SkipScriptWitness scriptWitness; // accessed by UnserializeTransaction\n+\n+    template <typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        COutPoint prevout;\n+        SkipBytes scriptSig;\n+        uint32_t nSequence;\n+\n+        s >> prevout >> scriptSig >> nSequence;\n+    }\n+};\n+\n+struct SkipTxOut {\n+    template <typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        CAmount nValue;\n+        SkipBytes scriptPubKey;\n+\n+        s >> nValue >> scriptPubKey;\n+    }\n+};\n+\n+struct SkipTransaction {\n+    SkipVector<SkipTxIn> vin;\n+    SkipVector<SkipTxOut> vout;\n+    uint32_t version;\n+    uint32_t nLockTime;\n+\n+    template <typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        UnserializeTransaction(*this, s, TX_WITH_WITNESS);\n+    }\n+\n+    bool HasWitness() const { return true; }\n+};\n+\n+bool BlockManager::ReadRawTxFromBlock(std::vector<std::byte>& tx_bytes, const FlatFilePos& block_pos, size_t tx_index) const\n+{\n+    AutoFile filein{OpenBlockFile(block_pos, /*fReadOnly=*/true)};\n+    if (filein.IsNull()) {\n+        LogError(\"OpenBlockFile failed for %s while reading raw transaction from block\", block_pos.ToString());\n+        return false;\n+    }\n+\n+    filein.ignore(HEADER_SIZE);\n+    size_t tx_count = ReadCompactSize(filein);\n+    if (tx_index >= tx_count) {\n+        return false;\n+    }\n+\n+    SkipTransaction skip_tx;",
      "path": "src/node/blockstorage.cpp",
      "position": 1,
      "original_position": 103,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "df45388b97ea4d808256302531d4443526edf794",
      "in_reply_to_id": 2161623385,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks! \r\nPlease take a look at https://github.com/bitcoin/bitcoin/pull/32541/commits/99b48777eeb54a11f1f68adae3d273c1a634c3e7.",
      "created_at": "2025-06-23T20:02:53Z",
      "updated_at": "2025-06-23T20:02:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2162435719",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2162435719"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1182,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2169518557",
      "pull_request_review_id": 2962834674,
      "id": 2169518557,
      "node_id": "PRRC_kwDOABII586BUDnd",
      "diff_hunk": "@@ -1080,6 +1080,119 @@ bool BlockManager::ReadRawBlock(std::vector<std::byte>& block, const FlatFilePos\n     return true;\n }\n \n+static const uint32_t HEADER_SIZE = ::GetSerializeSize(CBlockHeader{});\n+\n+template <typename T>\n+struct SkipVector {\n+    size_t count;\n+    T elem; // use for skipping element-related data\n+\n+    void clear()\n+    {\n+        count = 0;\n+    }\n+\n+    size_t size() const\n+    {\n+        return count;\n+    }\n+\n+    T& operator[](size_t)\n+    {\n+        return elem;\n+    }\n+\n+    template <typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        count = ReadCompactSize(s);\n+        for (size_t i = 0; i < count; ++i) {\n+            s >> elem;\n+        }\n+    }\n+};\n+\n+struct SkipBytes {\n+    template <typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        size_t size = ReadCompactSize(s);\n+        s.ignore(size);\n+    }\n+};\n+\n+struct SkipScriptWitness {\n+    SkipVector<SkipBytes> stack;\n+};\n+\n+struct SkipTxIn {\n+    SkipScriptWitness scriptWitness; // accessed by UnserializeTransaction\n+\n+    template <typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        COutPoint prevout;\n+        SkipBytes scriptSig;\n+        uint32_t nSequence;\n+\n+        s >> prevout >> scriptSig >> nSequence;\n+    }\n+};\n+\n+struct SkipTxOut {\n+    template <typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        CAmount nValue;\n+        SkipBytes scriptPubKey;\n+\n+        s >> nValue >> scriptPubKey;\n+    }\n+};\n+\n+struct SkipTransaction {\n+    SkipVector<SkipTxIn> vin;\n+    SkipVector<SkipTxOut> vout;\n+    uint32_t version;\n+    uint32_t nLockTime;\n+\n+    template <typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        UnserializeTransaction(*this, s, TX_WITH_WITNESS);\n+    }\n+\n+    bool HasWitness() const { return true; }\n+};\n+\n+bool BlockManager::ReadRawTxFromBlock(std::vector<std::byte>& tx_bytes, const FlatFilePos& block_pos, size_t tx_index) const\n+{\n+    AutoFile filein{OpenBlockFile(block_pos, /*fReadOnly=*/true)};\n+    if (filein.IsNull()) {\n+        LogError(\"OpenBlockFile failed for %s while reading raw transaction from block\", block_pos.ToString());\n+        return false;\n+    }\n+\n+    filein.ignore(HEADER_SIZE);\n+    size_t tx_count = ReadCompactSize(filein);\n+    if (tx_index >= tx_count) {\n+        return false;\n+    }\n+\n+    SkipTransaction skip_tx;",
      "path": "src/node/blockstorage.cpp",
      "position": 1,
      "original_position": 103,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "df45388b97ea4d808256302531d4443526edf794",
      "in_reply_to_id": 2161623385,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "# Benchmark results\r\n\r\nTested 99b48777ee using `ab -k -c 1 -n 10000` over [block 900005 (having >5000 txs)](https://mempool.space/block/000000000000000000017bfd05b5fa367a424c4a565a4baf7950d9e8605df8ec).\r\n\r\n```\r\nBLOCKHASH=000000000000000000017bfd05b5fa367a424c4a565a4baf7950d9e8605df8ec\r\n```\r\n\r\n## `-locationsindex=1`\r\n\r\n```\r\nDocument Path:          /rest/txfromblock/$BLOCKHASH-0.bin\r\nDocument Length:        384 bytes\r\nRequests per second:    7387.93 [#/sec] (mean)\r\nTime per request:       0.135 [ms] (mean)\r\n\r\nDocument Path:          /rest/txfromblock/$BLOCKHASH-1000.bin\r\nDocument Length:        234 bytes\r\nRequests per second:    7875.35 [#/sec] (mean)\r\nTime per request:       0.127 [ms] (mean)\r\n\r\nDocument Path:          /rest/txfromblock/$BLOCKHASH-2000.bin\r\nDocument Length:        234 bytes\r\nRequests per second:    7470.15 [#/sec] (mean)\r\nTime per request:       0.134 [ms] (mean)\r\n\r\nDocument Path:          /rest/txfromblock/$BLOCKHASH-3000.bin\r\nDocument Length:        220 bytes\r\nRequests per second:    7102.34 [#/sec] (mean)\r\nTime per request:       0.141 [ms] (mean)\r\n\r\nDocument Path:          /rest/txfromblock/$BLOCKHASH-4000.bin\r\nDocument Length:        221 bytes\r\nRequests per second:    7569.49 [#/sec] (mean)\r\nTime per request:       0.132 [ms] (mean)\r\n\r\nDocument Path:          /rest/txfromblock/$BLOCKHASH-5000.bin\r\nDocument Length:        234 bytes\r\nRequests per second:    7333.99 [#/sec] (mean)\r\nTime per request:       0.136 [ms] (mean)\r\n```\r\n\r\n## `-locationsindex=0`\r\n\r\n```\r\nDocument Path:          /rest/txfromblock/$BLOCKHASH-0.bin\r\nDocument Length:        384 bytes\r\nRequests per second:    4030.87 [#/sec] (mean)\r\nTime per request:       0.248 [ms] (mean)\r\n\r\nDocument Path:          /rest/txfromblock/$BLOCKHASH-1000.bin\r\nDocument Length:        234 bytes\r\nRequests per second:    764.46 [#/sec] (mean)\r\nTime per request:       1.308 [ms] (mean)\r\n\r\nDocument Path:          /rest/txfromblock/$BLOCKHASH-2000.bin\r\nDocument Length:        234 bytes\r\nRequests per second:    526.17 [#/sec] (mean)\r\nTime per request:       1.901 [ms] (mean)\r\n\r\nDocument Path:          /rest/txfromblock/$BLOCKHASH-3000.bin\r\nDocument Length:        220 bytes\r\nRequests per second:    391.21 [#/sec] (mean)\r\nTime per request:       2.556 [ms] (mean)\r\n\r\nDocument Path:          /rest/txfromblock/$BLOCKHASH-4000.bin\r\nDocument Length:        221 bytes\r\nRequests per second:    261.30 [#/sec] (mean)\r\nTime per request:       3.827 [ms] (mean)\r\n\r\nDocument Path:          /rest/txfromblock/$BLOCKHASH-5000.bin\r\nDocument Length:        234 bytes\r\nRequests per second:    208.15 [#/sec] (mean)\r\nTime per request:       4.804 [ms] (mean)\r\n```",
      "created_at": "2025-06-26T17:11:26Z",
      "updated_at": "2025-06-26T17:19:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2169518557",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2169518557"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1182,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249347002",
      "pull_request_review_id": 3081181690,
      "id": 2249347002,
      "node_id": "PRRC_kwDOABII586GEk-6",
      "diff_hunk": "@@ -1080,6 +1080,32 @@ bool BlockManager::ReadRawBlock(std::vector<std::byte>& block, const FlatFilePos\n     return true;\n }\n \n+static const uint32_t HEADER_SIZE = ::GetSerializeSize(CBlockHeader{});",
      "path": "src/node/blockstorage.cpp",
      "position": 1,
      "original_position": 4,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "784459ac79a89f591eb52a4c6c266c421ca8baec",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Unused variable. Was this supposed to be used to skip forward in the stream instead of deserializing the header?",
      "created_at": "2025-08-02T18:25:53Z",
      "updated_at": "2025-08-02T21:19:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249347002",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249347002"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1083,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249348139",
      "pull_request_review_id": 3081181690,
      "id": 2249348139,
      "node_id": "PRRC_kwDOABII586GElQr",
      "diff_hunk": "@@ -0,0 +1,143 @@\n+// Copyright (c) 2018-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <map>\n+\n+#include <blockencodings.h>\n+#include <clientversion.h>\n+#include <common/args.h>\n+#include <dbwrapper.h>\n+#include <hash.h>\n+#include <index/locationsindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <primitives/block.h>\n+#include <serialize.h>\n+#include <util/fs_helpers.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_BLOCK_HASH{'s'};\n+\n+constexpr uint32_t TXS_PER_ROW{128};\n+\n+namespace {\n+\n+struct DBKey {\n+    uint256 hash;\n+    uint32_t part; // allow splitting one block's transactions into multiple DB rows\n+\n+    explicit DBKey(const uint256& hash_in, uint32_t part_in) : hash(hash_in), part(part_in) {}\n+\n+    SERIALIZE_METHODS(DBKey, obj)\n+    {\n+        uint8_t prefix{DB_BLOCK_HASH};\n+        READWRITE(prefix);\n+        if (prefix != DB_BLOCK_HASH) {\n+            throw std::ios_base::failure(\"Invalid format for location index DB hash key\");\n+        }\n+\n+        READWRITE(obj.hash);\n+        READWRITE(COMPACTSIZE(obj.part));\n+    }\n+};\n+\n+struct DBValue {\n+    FlatFilePos block_pos;\n+    std::vector<uint32_t> offsets{};\n+\n+    SERIALIZE_METHODS(DBValue, obj)\n+    {\n+        READWRITE(obj.block_pos);\n+        READWRITE(Using<VectorFormatter<DifferenceFormatter>>(obj.offsets));\n+    }\n+};\n+\n+}; // namespace\n+\n+std::unique_ptr<LocationsIndex> g_locations_index;\n+\n+LocationsIndex::LocationsIndex(std::unique_ptr<interfaces::Chain> chain,\n+                               size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"locationsindex\")\n+{\n+    fs::path path = gArgs.GetDataDirNet() / \"indexes\" / \"locations\";\n+    fs::create_directories(path);\n+\n+    m_db = std::make_unique<BaseIndex::DB>(path / \"db\", n_cache_size, f_memory, f_wipe);\n+}\n+\n+static const uint32_t HEADER_SIZE = ::GetSerializeSize(CBlockHeader{});",
      "path": "src/index/locationsindex.cpp",
      "position": 1,
      "original_position": 70,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Would prefer it be moved to function-local scope so we don't add any startup time for those who never enable -locationsindex or use the REST interface.",
      "created_at": "2025-08-02T18:29:01Z",
      "updated_at": "2025-08-02T21:19:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249348139",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249348139"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249349229",
      "pull_request_review_id": 3081181690,
      "id": 2249349229,
      "node_id": "PRRC_kwDOABII586GElht",
      "diff_hunk": "@@ -36,6 +36,14 @@ Responds with 404 if the transaction doesn't exist.\n By default, this endpoint will only search the mempool.\n To query for a confirmed transaction, enable the transaction index via \"txindex=1\" command line / configuration option.\n \n+`GET /rest/txfromblock/<BLOCK-HASH>-<TX-OFFSET>.<bin|hex|json>`\n+\n+Given a block hash and transaction offset within it: returns a transaction in binary, hex-encoded binary, or JSON formats.\n+Responds with 404 if the transaction doesn't exist.\n+\n+By default, this endpoint will read also the leading transactions, before reading and returning the requested one.",
      "path": "doc/REST-interface.md",
      "position": 1,
      "original_position": 9,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit:\r\n* Improved order?\r\n* Clarify that wasted work is being done.\r\n```suggestion\r\nBy default, this endpoint will also deserialize the leading transactions, before reading and returning the requested one.\r\n```",
      "created_at": "2025-08-02T18:33:48Z",
      "updated_at": "2025-08-02T21:19:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249349229",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249349229"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249350168",
      "pull_request_review_id": 3081181690,
      "id": 2249350168,
      "node_id": "PRRC_kwDOABII586GElwY",
      "diff_hunk": "@@ -0,0 +1,143 @@\n+// Copyright (c) 2018-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <map>",
      "path": "src/index/locationsindex.cpp",
      "position": 1,
      "original_position": 5,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Please order std library headers last. Seems unused though.",
      "created_at": "2025-08-02T18:37:49Z",
      "updated_at": "2025-08-02T21:19:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249350168",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249350168"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249355515",
      "pull_request_review_id": 3081181690,
      "id": 2249355515,
      "node_id": "PRRC_kwDOABII586GEnD7",
      "diff_hunk": "@@ -472,6 +473,111 @@ static bool rest_block_notxdetails(const std::any& context, HTTPRequest* req, co\n     return rest_block(context, req, uri_part, TxVerbosity::SHOW_TXID);\n }\n \n+\n+static bool rest_tx_from_block(const std::any& context, HTTPRequest* req, const std::string& uri_part)\n+{\n+    if (!CheckWarmup(req)) return false;\n+\n+    std::string param;\n+    const RESTResponseFormat rf = ParseDataFormat(param, uri_part);\n+\n+    // request is sent over URI scheme /rest/txfromblock/blockhash-index\n+    std::vector<std::string_view> uriParts{util::Split<std::string_view>(param, '-')};\n+    if (uriParts.size() != 2) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid URI format: %s\", param));\n+    }\n+\n+    std::optional<uint256> block_hash{uint256::FromHex(uriParts[0])};\n+    if (!block_hash) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid hash: %s\", uriParts[0]));\n+    }\n+\n+    const std::optional<size_t> parsed_index{ToIntegral<size_t>(uriParts[1])};\n+    if (!parsed_index.has_value()) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Transaction index is invalid: %s\", uriParts[1]));\n+    }\n+    const size_t index = *parsed_index;\n+\n+    ChainstateManager* maybe_chainman = GetChainman(context, req);\n+    if (!maybe_chainman) return false;\n+    ChainstateManager& chainman = *maybe_chainman;\n+\n+    FlatFilePos block_pos{};\n+    {\n+        LOCK(cs_main);\n+        const CBlockIndex* pindex{chainman.m_blockman.LookupBlockIndex(*block_hash)};\n+        if (pindex == nullptr) {\n+            return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Block %s not found\", uriParts[0]));\n+        }\n+        if (pindex->nHeight > 0 && !pindex->IsValid(BLOCK_VALID_SCRIPTS)) {\n+            return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Block %s not validated\", uriParts[0]));\n+        }\n+        if (index >= pindex->nTx) {\n+            return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Block %s has only %d transactions\", uriParts[0], pindex->nTx));\n+        }\n+        block_pos = pindex->GetBlockPos();\n+    }",
      "path": "src/rest.cpp",
      "position": 1,
      "original_position": 55,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "We can skip this work if `LocationsIndex` is enabled as it doesn't use `block_pos`.",
      "created_at": "2025-08-02T18:50:08Z",
      "updated_at": "2025-08-02T21:19:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249355515",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249355515"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": 505,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 524,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249356202",
      "pull_request_review_id": 3081181690,
      "id": 2249356202,
      "node_id": "PRRC_kwDOABII586GEnOq",
      "diff_hunk": "@@ -472,6 +473,111 @@ static bool rest_block_notxdetails(const std::any& context, HTTPRequest* req, co\n     return rest_block(context, req, uri_part, TxVerbosity::SHOW_TXID);\n }\n \n+\n+static bool rest_tx_from_block(const std::any& context, HTTPRequest* req, const std::string& uri_part)\n+{\n+    if (!CheckWarmup(req)) return false;\n+\n+    std::string param;\n+    const RESTResponseFormat rf = ParseDataFormat(param, uri_part);\n+\n+    // request is sent over URI scheme /rest/txfromblock/blockhash-index\n+    std::vector<std::string_view> uriParts{util::Split<std::string_view>(param, '-')};\n+    if (uriParts.size() != 2) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid URI format: %s\", param));\n+    }\n+\n+    std::optional<uint256> block_hash{uint256::FromHex(uriParts[0])};\n+    if (!block_hash) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid hash: %s\", uriParts[0]));\n+    }\n+\n+    const std::optional<size_t> parsed_index{ToIntegral<size_t>(uriParts[1])};\n+    if (!parsed_index.has_value()) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Transaction index is invalid: %s\", uriParts[1]));\n+    }\n+    const size_t index = *parsed_index;\n+\n+    ChainstateManager* maybe_chainman = GetChainman(context, req);\n+    if (!maybe_chainman) return false;\n+    ChainstateManager& chainman = *maybe_chainman;\n+\n+    FlatFilePos block_pos{};\n+    {\n+        LOCK(cs_main);\n+        const CBlockIndex* pindex{chainman.m_blockman.LookupBlockIndex(*block_hash)};\n+        if (pindex == nullptr) {\n+            return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Block %s not found\", uriParts[0]));\n+        }\n+        if (pindex->nHeight > 0 && !pindex->IsValid(BLOCK_VALID_SCRIPTS)) {\n+            return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Block %s not validated\", uriParts[0]));\n+        }\n+        if (index >= pindex->nTx) {\n+            return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Block %s has only %d transactions\", uriParts[0], pindex->nTx));\n+        }\n+        block_pos = pindex->GetBlockPos();\n+    }\n+\n+    CTransactionRef tx{};\n+    std::vector<std::byte> tx_bytes{};\n+    bool success{false};\n+    const LocationsIndex* locations_index = g_locations_index.get();\n+    if (!locations_index) {\n+        // Read full block and skip irrelevant transactions\n+        success = chainman.m_blockman.ReadTxFromBlock(tx, block_pos, index);\n+    } else {\n+        if (!locations_index->BlockUntilSyncedToCurrentChain()) {\n+            RESTERR(req, HTTP_SERVICE_UNAVAILABLE, \"Locations index is still syncing\");\n+        }\n+        success = locations_index->ReadRawTransaction(*block_hash, index, tx_bytes);\n+    }\n+\n+    if (!success) {\n+        return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Failed to read transaction #%d from block %s\", index, (*block_hash).ToString()));",
      "path": "src/rest.cpp",
      "position": 1,
      "original_position": 72,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit:\r\n```suggestion\r\n        return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Failed to read transaction #%d from block %s\", index, block_hash->ToString()));\r\n```",
      "created_at": "2025-08-02T18:52:20Z",
      "updated_at": "2025-08-02T21:19:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249356202",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249356202"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 536,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249370232",
      "pull_request_review_id": 3081181690,
      "id": 2249370232,
      "node_id": "PRRC_kwDOABII586GEqp4",
      "diff_hunk": "@@ -0,0 +1,143 @@\n+// Copyright (c) 2018-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <map>\n+\n+#include <blockencodings.h>\n+#include <clientversion.h>\n+#include <common/args.h>\n+#include <dbwrapper.h>\n+#include <hash.h>\n+#include <index/locationsindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <primitives/block.h>\n+#include <serialize.h>\n+#include <util/fs_helpers.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_BLOCK_HASH{'s'};\n+\n+constexpr uint32_t TXS_PER_ROW{128};\n+\n+namespace {\n+\n+struct DBKey {\n+    uint256 hash;\n+    uint32_t part; // allow splitting one block's transactions into multiple DB rows",
      "path": "src/index/locationsindex.cpp",
      "position": 1,
      "original_position": 28,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Might be less confusing to use \"row\" everywhere here instead of \"part\"?",
      "created_at": "2025-08-02T19:37:56Z",
      "updated_at": "2025-08-02T21:19:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249370232",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249370232"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249370654",
      "pull_request_review_id": 3081181690,
      "id": 2249370654,
      "node_id": "PRRC_kwDOABII586GEqwe",
      "diff_hunk": "@@ -0,0 +1,143 @@\n+// Copyright (c) 2018-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <map>\n+\n+#include <blockencodings.h>\n+#include <clientversion.h>\n+#include <common/args.h>\n+#include <dbwrapper.h>\n+#include <hash.h>\n+#include <index/locationsindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <primitives/block.h>\n+#include <serialize.h>\n+#include <util/fs_helpers.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_BLOCK_HASH{'s'};\n+\n+constexpr uint32_t TXS_PER_ROW{128};\n+\n+namespace {\n+\n+struct DBKey {\n+    uint256 hash;\n+    uint32_t part; // allow splitting one block's transactions into multiple DB rows\n+\n+    explicit DBKey(const uint256& hash_in, uint32_t part_in) : hash(hash_in), part(part_in) {}\n+\n+    SERIALIZE_METHODS(DBKey, obj)\n+    {\n+        uint8_t prefix{DB_BLOCK_HASH};\n+        READWRITE(prefix);\n+        if (prefix != DB_BLOCK_HASH) {\n+            throw std::ios_base::failure(\"Invalid format for location index DB hash key\");\n+        }\n+\n+        READWRITE(obj.hash);\n+        READWRITE(COMPACTSIZE(obj.part));\n+    }\n+};\n+\n+struct DBValue {\n+    FlatFilePos block_pos;\n+    std::vector<uint32_t> offsets{};\n+\n+    SERIALIZE_METHODS(DBValue, obj)\n+    {\n+        READWRITE(obj.block_pos);\n+        READWRITE(Using<VectorFormatter<DifferenceFormatter>>(obj.offsets));\n+    }\n+};\n+\n+}; // namespace\n+\n+std::unique_ptr<LocationsIndex> g_locations_index;\n+\n+LocationsIndex::LocationsIndex(std::unique_ptr<interfaces::Chain> chain,\n+                               size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"locationsindex\")\n+{\n+    fs::path path = gArgs.GetDataDirNet() / \"indexes\" / \"locations\";\n+    fs::create_directories(path);\n+\n+    m_db = std::make_unique<BaseIndex::DB>(path / \"db\", n_cache_size, f_memory, f_wipe);\n+}\n+\n+static const uint32_t HEADER_SIZE = ::GetSerializeSize(CBlockHeader{});\n+\n+bool LocationsIndex::CustomAppend(const interfaces::BlockInfo& block)\n+{\n+    assert(block.data);\n+    assert(block.file_number >= 0);\n+\n+    const uint32_t nTx = block.data->vtx.size();\n+    uint32_t nTxOffset = HEADER_SIZE + GetSizeOfCompactSize(nTx);\n+\n+    std::vector<uint32_t> block_offsets{};\n+    block_offsets.reserve(nTx + 1);\n+    block_offsets.push_back(nTxOffset); // first transaction offset within the block\n+\n+    for (const auto& tx : block.data->vtx) {\n+        nTxOffset += ::GetSerializeSize(TX_WITH_WITNESS(*tx));\n+        block_offsets.push_back(nTxOffset);\n+    }\n+\n+    CDBBatch batch{GetDB()};\n+    uint32_t copied = 0;\n+    for (uint32_t part = 0; copied < nTx; ++part) {\n+        size_t part_size = std::min(nTx - copied, TXS_PER_ROW);\n+        std::span<uint32_t> part_offsets{&block_offsets[copied], part_size + 1};\n+\n+        DBKey key{block.hash, part};\n+        DBValue value{{block.file_number, block.data_pos}, {part_offsets.begin(), part_offsets.end()}};\n+\n+        copied += part_size;\n+        batch.Write(key, value);\n+    }\n+    return GetDB().WriteBatch(batch);\n+}\n+\n+bool LocationsIndex::ReadRawTransaction(const uint256& block_hash, size_t i, std::vector<std::byte>& out) const\n+{\n+    uint32_t part = i / TXS_PER_ROW; // used to find the correct DB row\n+    i = i % TXS_PER_ROW;             // index within a single DB row",
      "path": "src/index/locationsindex.cpp",
      "position": 1,
      "original_position": 107,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Could use local variable with descriptive name rather than mutating in-param:\r\n```suggestion\r\n    const auto column = i % TXS_PER_ROW;             // index within a single DB row\r\n```",
      "created_at": "2025-08-02T19:39:15Z",
      "updated_at": "2025-08-02T21:19:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249370654",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249370654"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 107,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249371490",
      "pull_request_review_id": 3081181690,
      "id": 2249371490,
      "node_id": "PRRC_kwDOABII586GEq9i",
      "diff_hunk": "@@ -0,0 +1,143 @@\n+// Copyright (c) 2018-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <map>\n+\n+#include <blockencodings.h>\n+#include <clientversion.h>\n+#include <common/args.h>\n+#include <dbwrapper.h>\n+#include <hash.h>\n+#include <index/locationsindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <primitives/block.h>\n+#include <serialize.h>\n+#include <util/fs_helpers.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_BLOCK_HASH{'s'};\n+\n+constexpr uint32_t TXS_PER_ROW{128};\n+\n+namespace {\n+\n+struct DBKey {\n+    uint256 hash;\n+    uint32_t part; // allow splitting one block's transactions into multiple DB rows\n+\n+    explicit DBKey(const uint256& hash_in, uint32_t part_in) : hash(hash_in), part(part_in) {}\n+\n+    SERIALIZE_METHODS(DBKey, obj)\n+    {\n+        uint8_t prefix{DB_BLOCK_HASH};\n+        READWRITE(prefix);\n+        if (prefix != DB_BLOCK_HASH) {\n+            throw std::ios_base::failure(\"Invalid format for location index DB hash key\");\n+        }\n+\n+        READWRITE(obj.hash);\n+        READWRITE(COMPACTSIZE(obj.part));\n+    }\n+};\n+\n+struct DBValue {\n+    FlatFilePos block_pos;\n+    std::vector<uint32_t> offsets{};\n+\n+    SERIALIZE_METHODS(DBValue, obj)\n+    {\n+        READWRITE(obj.block_pos);\n+        READWRITE(Using<VectorFormatter<DifferenceFormatter>>(obj.offsets));\n+    }\n+};\n+\n+}; // namespace\n+\n+std::unique_ptr<LocationsIndex> g_locations_index;\n+\n+LocationsIndex::LocationsIndex(std::unique_ptr<interfaces::Chain> chain,\n+                               size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"locationsindex\")\n+{\n+    fs::path path = gArgs.GetDataDirNet() / \"indexes\" / \"locations\";\n+    fs::create_directories(path);\n+\n+    m_db = std::make_unique<BaseIndex::DB>(path / \"db\", n_cache_size, f_memory, f_wipe);\n+}\n+\n+static const uint32_t HEADER_SIZE = ::GetSerializeSize(CBlockHeader{});\n+\n+bool LocationsIndex::CustomAppend(const interfaces::BlockInfo& block)\n+{\n+    assert(block.data);\n+    assert(block.file_number >= 0);\n+\n+    const uint32_t nTx = block.data->vtx.size();\n+    uint32_t nTxOffset = HEADER_SIZE + GetSizeOfCompactSize(nTx);\n+\n+    std::vector<uint32_t> block_offsets{};\n+    block_offsets.reserve(nTx + 1);\n+    block_offsets.push_back(nTxOffset); // first transaction offset within the block\n+\n+    for (const auto& tx : block.data->vtx) {\n+        nTxOffset += ::GetSerializeSize(TX_WITH_WITNESS(*tx));\n+        block_offsets.push_back(nTxOffset);\n+    }\n+\n+    CDBBatch batch{GetDB()};\n+    uint32_t copied = 0;\n+    for (uint32_t part = 0; copied < nTx; ++part) {\n+        size_t part_size = std::min(nTx - copied, TXS_PER_ROW);\n+        std::span<uint32_t> part_offsets{&block_offsets[copied], part_size + 1};\n+\n+        DBKey key{block.hash, part};\n+        DBValue value{{block.file_number, block.data_pos}, {part_offsets.begin(), part_offsets.end()}};\n+\n+        copied += part_size;\n+        batch.Write(key, value);\n+    }\n+    return GetDB().WriteBatch(batch);\n+}\n+\n+bool LocationsIndex::ReadRawTransaction(const uint256& block_hash, size_t i, std::vector<std::byte>& out) const\n+{\n+    uint32_t part = i / TXS_PER_ROW; // used to find the correct DB row\n+    i = i % TXS_PER_ROW;             // index within a single DB row\n+\n+    DBValue value{};\n+    if (!m_db->Read(DBKey{block_hash, part}, value)) {\n+        return false;\n+    }\n+\n+    if (value.offsets.empty()) {\n+        LogError(\"%s: LocationsIndex entry for %s:%u must have >1 offsets\\n\", __func__, block_hash.ToString(), part);\n+        return false;\n+    }\n+    size_t nTx = value.offsets.size() - 1;",
      "path": "src/index/locationsindex.cpp",
      "position": 1,
      "original_position": 118,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Should use snake_case naming convention as per developer-notes.md, `n_tx`/`num_tx`/`tx_count`?",
      "created_at": "2025-08-02T19:42:00Z",
      "updated_at": "2025-08-02T21:19:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249371490",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249371490"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 118,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249373267",
      "pull_request_review_id": 3081181690,
      "id": 2249373267,
      "node_id": "PRRC_kwDOABII586GErZT",
      "diff_hunk": "@@ -0,0 +1,143 @@\n+// Copyright (c) 2018-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <map>\n+\n+#include <blockencodings.h>\n+#include <clientversion.h>\n+#include <common/args.h>\n+#include <dbwrapper.h>\n+#include <hash.h>\n+#include <index/locationsindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <primitives/block.h>\n+#include <serialize.h>\n+#include <util/fs_helpers.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_BLOCK_HASH{'s'};\n+\n+constexpr uint32_t TXS_PER_ROW{128};\n+\n+namespace {\n+\n+struct DBKey {\n+    uint256 hash;\n+    uint32_t part; // allow splitting one block's transactions into multiple DB rows\n+\n+    explicit DBKey(const uint256& hash_in, uint32_t part_in) : hash(hash_in), part(part_in) {}\n+\n+    SERIALIZE_METHODS(DBKey, obj)\n+    {\n+        uint8_t prefix{DB_BLOCK_HASH};\n+        READWRITE(prefix);\n+        if (prefix != DB_BLOCK_HASH) {\n+            throw std::ios_base::failure(\"Invalid format for location index DB hash key\");\n+        }\n+\n+        READWRITE(obj.hash);\n+        READWRITE(COMPACTSIZE(obj.part));\n+    }\n+};\n+\n+struct DBValue {\n+    FlatFilePos block_pos;\n+    std::vector<uint32_t> offsets{};\n+\n+    SERIALIZE_METHODS(DBValue, obj)\n+    {\n+        READWRITE(obj.block_pos);\n+        READWRITE(Using<VectorFormatter<DifferenceFormatter>>(obj.offsets));\n+    }\n+};\n+\n+}; // namespace\n+\n+std::unique_ptr<LocationsIndex> g_locations_index;\n+\n+LocationsIndex::LocationsIndex(std::unique_ptr<interfaces::Chain> chain,\n+                               size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"locationsindex\")\n+{\n+    fs::path path = gArgs.GetDataDirNet() / \"indexes\" / \"locations\";\n+    fs::create_directories(path);\n+\n+    m_db = std::make_unique<BaseIndex::DB>(path / \"db\", n_cache_size, f_memory, f_wipe);\n+}\n+\n+static const uint32_t HEADER_SIZE = ::GetSerializeSize(CBlockHeader{});\n+\n+bool LocationsIndex::CustomAppend(const interfaces::BlockInfo& block)\n+{\n+    assert(block.data);\n+    assert(block.file_number >= 0);\n+\n+    const uint32_t nTx = block.data->vtx.size();\n+    uint32_t nTxOffset = HEADER_SIZE + GetSizeOfCompactSize(nTx);\n+\n+    std::vector<uint32_t> block_offsets{};\n+    block_offsets.reserve(nTx + 1);\n+    block_offsets.push_back(nTxOffset); // first transaction offset within the block\n+\n+    for (const auto& tx : block.data->vtx) {\n+        nTxOffset += ::GetSerializeSize(TX_WITH_WITNESS(*tx));\n+        block_offsets.push_back(nTxOffset);\n+    }\n+\n+    CDBBatch batch{GetDB()};\n+    uint32_t copied = 0;\n+    for (uint32_t part = 0; copied < nTx; ++part) {\n+        size_t part_size = std::min(nTx - copied, TXS_PER_ROW);\n+        std::span<uint32_t> part_offsets{&block_offsets[copied], part_size + 1};\n+\n+        DBKey key{block.hash, part};\n+        DBValue value{{block.file_number, block.data_pos}, {part_offsets.begin(), part_offsets.end()}};\n+\n+        copied += part_size;\n+        batch.Write(key, value);\n+    }\n+    return GetDB().WriteBatch(batch);\n+}\n+\n+bool LocationsIndex::ReadRawTransaction(const uint256& block_hash, size_t i, std::vector<std::byte>& out) const\n+{\n+    uint32_t part = i / TXS_PER_ROW; // used to find the correct DB row\n+    i = i % TXS_PER_ROW;             // index within a single DB row\n+\n+    DBValue value{};\n+    if (!m_db->Read(DBKey{block_hash, part}, value)) {\n+        return false;\n+    }\n+\n+    if (value.offsets.empty()) {",
      "path": "src/index/locationsindex.cpp",
      "position": 1,
      "original_position": 114,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Off-by-one - should match error message and later code:\r\n```suggestion\r\n    if (value.offsets.size() < 2) {\r\n```",
      "created_at": "2025-08-02T19:48:39Z",
      "updated_at": "2025-08-02T21:19:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249373267",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249373267"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 114,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249374257",
      "pull_request_review_id": 3081181690,
      "id": 2249374257,
      "node_id": "PRRC_kwDOABII586GErox",
      "diff_hunk": "@@ -0,0 +1,41 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INDEX_LOCATIONSINDEX_H\n+#define BITCOIN_INDEX_LOCATIONSINDEX_H\n+\n+#include <attributes.h>\n+#include <chain.h>\n+#include <flatfile.h>",
      "path": "src/index/locationsindex.h",
      "position": 1,
      "original_position": 10,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Unused header.",
      "created_at": "2025-08-02T19:51:19Z",
      "updated_at": "2025-08-02T21:19:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249374257",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249374257"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 10,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249388983",
      "pull_request_review_id": 3081181690,
      "id": 2249388983,
      "node_id": "PRRC_kwDOABII586GEvO3",
      "diff_hunk": "@@ -0,0 +1,105 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <addresstype.h>\n+#include <chainparams.h>\n+#include <index/locationsindex.h>\n+#include <interfaces/chain.h>\n+#include <sync.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_AUTO_TEST_SUITE(locationsindex_tests)\n+\n+struct LocationsIndexSetup : public TestChain100Setup {\n+    LocationsIndex index;\n+\n+    LocationsIndexSetup() : index(interfaces::MakeChain(m_node), 1 << 20, true)\n+    {\n+        BOOST_REQUIRE(index.Init());\n+    }\n+\n+    CTransactionRef ReadTransaction(const uint256& block_hash, size_t i)\n+    {\n+        std::vector<std::byte> out;\n+        if (!index.ReadRawTransaction(block_hash, i, out)) {\n+            return nullptr;\n+        }\n+        CTransactionRef tx;\n+        DataStream ssTx(out);\n+        ssTx >> TX_WITH_WITNESS(tx);\n+        return tx;\n+    }\n+\n+    CTransactionRef ReadTransactionFallback(FlatFilePos block_pos, size_t i)\n+    {\n+        CTransactionRef tx{};\n+        if (!m_node.chainman->m_blockman.ReadTxFromBlock(tx, block_pos, i)) {\n+            return nullptr;\n+        }\n+        return tx;\n+    }\n+};\n+\n+\n+BOOST_FIXTURE_TEST_CASE(index_initial_sync, LocationsIndexSetup)\n+{\n+    // Transaction should not be found in the index before it is started.\n+    BOOST_CHECK(!ReadTransaction(Params().GenesisBlock().GetHash(), 0));\n+\n+    // BlockUntilSyncedToCurrentChain should return false before index is started.\n+    BOOST_CHECK(!index.BlockUntilSyncedToCurrentChain());\n+\n+    index.Sync();\n+\n+    // Check that index includes all mined transactions.\n+    const CBlockIndex* tip = WITH_LOCK(cs_main, return m_node.chainman->ActiveTip());\n+    BOOST_REQUIRE(tip);\n+    while (tip) {\n+        uint256 block_hash = tip->GetBlockHash();\n+        CBlockIndex* block_index{nullptr};\n+        FlatFilePos block_pos{};\n+        {\n+            LOCK(cs_main);\n+            block_index = m_node.chainman->m_blockman.LookupBlockIndex(block_hash);\n+            block_pos = block_index->GetBlockPos();\n+        }\n+        BOOST_REQUIRE(block_index);",
      "path": "src/test/locationsindex_tests.cpp",
      "position": 1,
      "original_position": 70,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Do we need to fetch a second `CBlockIndex`? This passes the test:\r\n```suggestion\r\n        FlatFilePos block_pos{WITH_LOCK(cs_main, return tip->GetBlockPos())};\r\n```",
      "created_at": "2025-08-02T20:42:45Z",
      "updated_at": "2025-08-02T21:19:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249388983",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249388983"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": 63,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249608455",
      "pull_request_review_id": 3081763836,
      "id": 2249608455,
      "node_id": "PRRC_kwDOABII586GFk0H",
      "diff_hunk": "@@ -0,0 +1,105 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <addresstype.h>\n+#include <chainparams.h>\n+#include <index/locationsindex.h>\n+#include <interfaces/chain.h>\n+#include <sync.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_AUTO_TEST_SUITE(locationsindex_tests)\n+\n+struct LocationsIndexSetup : public TestChain100Setup {\n+    LocationsIndex index;\n+\n+    LocationsIndexSetup() : index(interfaces::MakeChain(m_node), 1 << 20, true)\n+    {\n+        BOOST_REQUIRE(index.Init());\n+    }\n+\n+    CTransactionRef ReadTransaction(const uint256& block_hash, size_t i)\n+    {\n+        std::vector<std::byte> out;\n+        if (!index.ReadRawTransaction(block_hash, i, out)) {\n+            return nullptr;\n+        }\n+        CTransactionRef tx;\n+        DataStream ssTx(out);\n+        ssTx >> TX_WITH_WITNESS(tx);\n+        return tx;\n+    }\n+\n+    CTransactionRef ReadTransactionFallback(FlatFilePos block_pos, size_t i)\n+    {\n+        CTransactionRef tx{};\n+        if (!m_node.chainman->m_blockman.ReadTxFromBlock(tx, block_pos, i)) {\n+            return nullptr;\n+        }\n+        return tx;\n+    }\n+};\n+\n+\n+BOOST_FIXTURE_TEST_CASE(index_initial_sync, LocationsIndexSetup)\n+{\n+    // Transaction should not be found in the index before it is started.\n+    BOOST_CHECK(!ReadTransaction(Params().GenesisBlock().GetHash(), 0));\n+\n+    // BlockUntilSyncedToCurrentChain should return false before index is started.\n+    BOOST_CHECK(!index.BlockUntilSyncedToCurrentChain());\n+\n+    index.Sync();\n+\n+    // Check that index includes all mined transactions.\n+    const CBlockIndex* tip = WITH_LOCK(cs_main, return m_node.chainman->ActiveTip());\n+    BOOST_REQUIRE(tip);\n+    while (tip) {\n+        uint256 block_hash = tip->GetBlockHash();\n+        CBlockIndex* block_index{nullptr};\n+        FlatFilePos block_pos{};\n+        {\n+            LOCK(cs_main);\n+            block_index = m_node.chainman->m_blockman.LookupBlockIndex(block_hash);\n+            block_pos = block_index->GetBlockPos();\n+        }\n+        BOOST_REQUIRE(block_index);",
      "path": "src/test/locationsindex_tests.cpp",
      "position": 1,
      "original_position": 70,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": 2249388983,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "You're right, thanks - removed the unneeded code and renamed `tip` to `block_index`.",
      "created_at": "2025-08-03T06:34:24Z",
      "updated_at": "2025-08-03T06:34:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249608455",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249608455"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": 63,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249617802",
      "pull_request_review_id": 3081777976,
      "id": 2249617802,
      "node_id": "PRRC_kwDOABII586GFnGK",
      "diff_hunk": "@@ -0,0 +1,41 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INDEX_LOCATIONSINDEX_H\n+#define BITCOIN_INDEX_LOCATIONSINDEX_H\n+\n+#include <attributes.h>\n+#include <chain.h>\n+#include <flatfile.h>",
      "path": "src/index/locationsindex.h",
      "position": 1,
      "original_position": 10,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": 2249374257,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Removed.",
      "created_at": "2025-08-03T06:42:40Z",
      "updated_at": "2025-08-03T06:42:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249617802",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249617802"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 10,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249617820",
      "pull_request_review_id": 3081778004,
      "id": 2249617820,
      "node_id": "PRRC_kwDOABII586GFnGc",
      "diff_hunk": "@@ -0,0 +1,143 @@\n+// Copyright (c) 2018-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <map>\n+\n+#include <blockencodings.h>\n+#include <clientversion.h>\n+#include <common/args.h>\n+#include <dbwrapper.h>\n+#include <hash.h>\n+#include <index/locationsindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <primitives/block.h>\n+#include <serialize.h>\n+#include <util/fs_helpers.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_BLOCK_HASH{'s'};\n+\n+constexpr uint32_t TXS_PER_ROW{128};\n+\n+namespace {\n+\n+struct DBKey {\n+    uint256 hash;\n+    uint32_t part; // allow splitting one block's transactions into multiple DB rows\n+\n+    explicit DBKey(const uint256& hash_in, uint32_t part_in) : hash(hash_in), part(part_in) {}\n+\n+    SERIALIZE_METHODS(DBKey, obj)\n+    {\n+        uint8_t prefix{DB_BLOCK_HASH};\n+        READWRITE(prefix);\n+        if (prefix != DB_BLOCK_HASH) {\n+            throw std::ios_base::failure(\"Invalid format for location index DB hash key\");\n+        }\n+\n+        READWRITE(obj.hash);\n+        READWRITE(COMPACTSIZE(obj.part));\n+    }\n+};\n+\n+struct DBValue {\n+    FlatFilePos block_pos;\n+    std::vector<uint32_t> offsets{};\n+\n+    SERIALIZE_METHODS(DBValue, obj)\n+    {\n+        READWRITE(obj.block_pos);\n+        READWRITE(Using<VectorFormatter<DifferenceFormatter>>(obj.offsets));\n+    }\n+};\n+\n+}; // namespace\n+\n+std::unique_ptr<LocationsIndex> g_locations_index;\n+\n+LocationsIndex::LocationsIndex(std::unique_ptr<interfaces::Chain> chain,\n+                               size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"locationsindex\")\n+{\n+    fs::path path = gArgs.GetDataDirNet() / \"indexes\" / \"locations\";\n+    fs::create_directories(path);\n+\n+    m_db = std::make_unique<BaseIndex::DB>(path / \"db\", n_cache_size, f_memory, f_wipe);\n+}\n+\n+static const uint32_t HEADER_SIZE = ::GetSerializeSize(CBlockHeader{});\n+\n+bool LocationsIndex::CustomAppend(const interfaces::BlockInfo& block)\n+{\n+    assert(block.data);\n+    assert(block.file_number >= 0);\n+\n+    const uint32_t nTx = block.data->vtx.size();\n+    uint32_t nTxOffset = HEADER_SIZE + GetSizeOfCompactSize(nTx);\n+\n+    std::vector<uint32_t> block_offsets{};\n+    block_offsets.reserve(nTx + 1);\n+    block_offsets.push_back(nTxOffset); // first transaction offset within the block\n+\n+    for (const auto& tx : block.data->vtx) {\n+        nTxOffset += ::GetSerializeSize(TX_WITH_WITNESS(*tx));\n+        block_offsets.push_back(nTxOffset);\n+    }\n+\n+    CDBBatch batch{GetDB()};\n+    uint32_t copied = 0;\n+    for (uint32_t part = 0; copied < nTx; ++part) {\n+        size_t part_size = std::min(nTx - copied, TXS_PER_ROW);\n+        std::span<uint32_t> part_offsets{&block_offsets[copied], part_size + 1};\n+\n+        DBKey key{block.hash, part};\n+        DBValue value{{block.file_number, block.data_pos}, {part_offsets.begin(), part_offsets.end()}};\n+\n+        copied += part_size;\n+        batch.Write(key, value);\n+    }\n+    return GetDB().WriteBatch(batch);\n+}\n+\n+bool LocationsIndex::ReadRawTransaction(const uint256& block_hash, size_t i, std::vector<std::byte>& out) const\n+{\n+    uint32_t part = i / TXS_PER_ROW; // used to find the correct DB row\n+    i = i % TXS_PER_ROW;             // index within a single DB row\n+\n+    DBValue value{};\n+    if (!m_db->Read(DBKey{block_hash, part}, value)) {\n+        return false;\n+    }\n+\n+    if (value.offsets.empty()) {",
      "path": "src/index/locationsindex.cpp",
      "position": 1,
      "original_position": 114,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": 2249373267,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good catch, thanks!",
      "created_at": "2025-08-03T06:42:44Z",
      "updated_at": "2025-08-03T06:42:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249617820",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249617820"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 114,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249617848",
      "pull_request_review_id": 3081778031,
      "id": 2249617848,
      "node_id": "PRRC_kwDOABII586GFnG4",
      "diff_hunk": "@@ -0,0 +1,143 @@\n+// Copyright (c) 2018-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <map>\n+\n+#include <blockencodings.h>\n+#include <clientversion.h>\n+#include <common/args.h>\n+#include <dbwrapper.h>\n+#include <hash.h>\n+#include <index/locationsindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <primitives/block.h>\n+#include <serialize.h>\n+#include <util/fs_helpers.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_BLOCK_HASH{'s'};\n+\n+constexpr uint32_t TXS_PER_ROW{128};\n+\n+namespace {\n+\n+struct DBKey {\n+    uint256 hash;\n+    uint32_t part; // allow splitting one block's transactions into multiple DB rows\n+\n+    explicit DBKey(const uint256& hash_in, uint32_t part_in) : hash(hash_in), part(part_in) {}\n+\n+    SERIALIZE_METHODS(DBKey, obj)\n+    {\n+        uint8_t prefix{DB_BLOCK_HASH};\n+        READWRITE(prefix);\n+        if (prefix != DB_BLOCK_HASH) {\n+            throw std::ios_base::failure(\"Invalid format for location index DB hash key\");\n+        }\n+\n+        READWRITE(obj.hash);\n+        READWRITE(COMPACTSIZE(obj.part));\n+    }\n+};\n+\n+struct DBValue {\n+    FlatFilePos block_pos;\n+    std::vector<uint32_t> offsets{};\n+\n+    SERIALIZE_METHODS(DBValue, obj)\n+    {\n+        READWRITE(obj.block_pos);\n+        READWRITE(Using<VectorFormatter<DifferenceFormatter>>(obj.offsets));\n+    }\n+};\n+\n+}; // namespace\n+\n+std::unique_ptr<LocationsIndex> g_locations_index;\n+\n+LocationsIndex::LocationsIndex(std::unique_ptr<interfaces::Chain> chain,\n+                               size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"locationsindex\")\n+{\n+    fs::path path = gArgs.GetDataDirNet() / \"indexes\" / \"locations\";\n+    fs::create_directories(path);\n+\n+    m_db = std::make_unique<BaseIndex::DB>(path / \"db\", n_cache_size, f_memory, f_wipe);\n+}\n+\n+static const uint32_t HEADER_SIZE = ::GetSerializeSize(CBlockHeader{});\n+\n+bool LocationsIndex::CustomAppend(const interfaces::BlockInfo& block)\n+{\n+    assert(block.data);\n+    assert(block.file_number >= 0);\n+\n+    const uint32_t nTx = block.data->vtx.size();\n+    uint32_t nTxOffset = HEADER_SIZE + GetSizeOfCompactSize(nTx);\n+\n+    std::vector<uint32_t> block_offsets{};\n+    block_offsets.reserve(nTx + 1);\n+    block_offsets.push_back(nTxOffset); // first transaction offset within the block\n+\n+    for (const auto& tx : block.data->vtx) {\n+        nTxOffset += ::GetSerializeSize(TX_WITH_WITNESS(*tx));\n+        block_offsets.push_back(nTxOffset);\n+    }\n+\n+    CDBBatch batch{GetDB()};\n+    uint32_t copied = 0;\n+    for (uint32_t part = 0; copied < nTx; ++part) {\n+        size_t part_size = std::min(nTx - copied, TXS_PER_ROW);\n+        std::span<uint32_t> part_offsets{&block_offsets[copied], part_size + 1};\n+\n+        DBKey key{block.hash, part};\n+        DBValue value{{block.file_number, block.data_pos}, {part_offsets.begin(), part_offsets.end()}};\n+\n+        copied += part_size;\n+        batch.Write(key, value);\n+    }\n+    return GetDB().WriteBatch(batch);\n+}\n+\n+bool LocationsIndex::ReadRawTransaction(const uint256& block_hash, size_t i, std::vector<std::byte>& out) const\n+{\n+    uint32_t part = i / TXS_PER_ROW; // used to find the correct DB row\n+    i = i % TXS_PER_ROW;             // index within a single DB row\n+\n+    DBValue value{};\n+    if (!m_db->Read(DBKey{block_hash, part}, value)) {\n+        return false;\n+    }\n+\n+    if (value.offsets.empty()) {\n+        LogError(\"%s: LocationsIndex entry for %s:%u must have >1 offsets\\n\", __func__, block_hash.ToString(), part);\n+        return false;\n+    }\n+    size_t nTx = value.offsets.size() - 1;",
      "path": "src/index/locationsindex.cpp",
      "position": 1,
      "original_position": 118,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": 2249371490,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks - renamed to `tx_count`.",
      "created_at": "2025-08-03T06:42:46Z",
      "updated_at": "2025-08-03T06:42:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249617848",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249617848"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 118,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249617854",
      "pull_request_review_id": 3081778040,
      "id": 2249617854,
      "node_id": "PRRC_kwDOABII586GFnG-",
      "diff_hunk": "@@ -0,0 +1,143 @@\n+// Copyright (c) 2018-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <map>\n+\n+#include <blockencodings.h>\n+#include <clientversion.h>\n+#include <common/args.h>\n+#include <dbwrapper.h>\n+#include <hash.h>\n+#include <index/locationsindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <primitives/block.h>\n+#include <serialize.h>\n+#include <util/fs_helpers.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_BLOCK_HASH{'s'};\n+\n+constexpr uint32_t TXS_PER_ROW{128};\n+\n+namespace {\n+\n+struct DBKey {\n+    uint256 hash;\n+    uint32_t part; // allow splitting one block's transactions into multiple DB rows\n+\n+    explicit DBKey(const uint256& hash_in, uint32_t part_in) : hash(hash_in), part(part_in) {}\n+\n+    SERIALIZE_METHODS(DBKey, obj)\n+    {\n+        uint8_t prefix{DB_BLOCK_HASH};\n+        READWRITE(prefix);\n+        if (prefix != DB_BLOCK_HASH) {\n+            throw std::ios_base::failure(\"Invalid format for location index DB hash key\");\n+        }\n+\n+        READWRITE(obj.hash);\n+        READWRITE(COMPACTSIZE(obj.part));\n+    }\n+};\n+\n+struct DBValue {\n+    FlatFilePos block_pos;\n+    std::vector<uint32_t> offsets{};\n+\n+    SERIALIZE_METHODS(DBValue, obj)\n+    {\n+        READWRITE(obj.block_pos);\n+        READWRITE(Using<VectorFormatter<DifferenceFormatter>>(obj.offsets));\n+    }\n+};\n+\n+}; // namespace\n+\n+std::unique_ptr<LocationsIndex> g_locations_index;\n+\n+LocationsIndex::LocationsIndex(std::unique_ptr<interfaces::Chain> chain,\n+                               size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"locationsindex\")\n+{\n+    fs::path path = gArgs.GetDataDirNet() / \"indexes\" / \"locations\";\n+    fs::create_directories(path);\n+\n+    m_db = std::make_unique<BaseIndex::DB>(path / \"db\", n_cache_size, f_memory, f_wipe);\n+}\n+\n+static const uint32_t HEADER_SIZE = ::GetSerializeSize(CBlockHeader{});\n+\n+bool LocationsIndex::CustomAppend(const interfaces::BlockInfo& block)\n+{\n+    assert(block.data);\n+    assert(block.file_number >= 0);\n+\n+    const uint32_t nTx = block.data->vtx.size();\n+    uint32_t nTxOffset = HEADER_SIZE + GetSizeOfCompactSize(nTx);\n+\n+    std::vector<uint32_t> block_offsets{};\n+    block_offsets.reserve(nTx + 1);\n+    block_offsets.push_back(nTxOffset); // first transaction offset within the block\n+\n+    for (const auto& tx : block.data->vtx) {\n+        nTxOffset += ::GetSerializeSize(TX_WITH_WITNESS(*tx));\n+        block_offsets.push_back(nTxOffset);\n+    }\n+\n+    CDBBatch batch{GetDB()};\n+    uint32_t copied = 0;\n+    for (uint32_t part = 0; copied < nTx; ++part) {\n+        size_t part_size = std::min(nTx - copied, TXS_PER_ROW);\n+        std::span<uint32_t> part_offsets{&block_offsets[copied], part_size + 1};\n+\n+        DBKey key{block.hash, part};\n+        DBValue value{{block.file_number, block.data_pos}, {part_offsets.begin(), part_offsets.end()}};\n+\n+        copied += part_size;\n+        batch.Write(key, value);\n+    }\n+    return GetDB().WriteBatch(batch);\n+}\n+\n+bool LocationsIndex::ReadRawTransaction(const uint256& block_hash, size_t i, std::vector<std::byte>& out) const\n+{\n+    uint32_t part = i / TXS_PER_ROW; // used to find the correct DB row\n+    i = i % TXS_PER_ROW;             // index within a single DB row",
      "path": "src/index/locationsindex.cpp",
      "position": 1,
      "original_position": 107,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": 2249370654,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks - fixed.",
      "created_at": "2025-08-03T06:42:48Z",
      "updated_at": "2025-08-03T06:42:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249617854",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249617854"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 107,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249617938",
      "pull_request_review_id": 3081778204,
      "id": 2249617938,
      "node_id": "PRRC_kwDOABII586GFnIS",
      "diff_hunk": "@@ -0,0 +1,143 @@\n+// Copyright (c) 2018-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <map>\n+\n+#include <blockencodings.h>\n+#include <clientversion.h>\n+#include <common/args.h>\n+#include <dbwrapper.h>\n+#include <hash.h>\n+#include <index/locationsindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <primitives/block.h>\n+#include <serialize.h>\n+#include <util/fs_helpers.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_BLOCK_HASH{'s'};\n+\n+constexpr uint32_t TXS_PER_ROW{128};\n+\n+namespace {\n+\n+struct DBKey {\n+    uint256 hash;\n+    uint32_t part; // allow splitting one block's transactions into multiple DB rows",
      "path": "src/index/locationsindex.cpp",
      "position": 1,
      "original_position": 28,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": 2249370232,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks - renamed to `row`.",
      "created_at": "2025-08-03T06:42:52Z",
      "updated_at": "2025-08-03T06:42:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249617938",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249617938"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249618007",
      "pull_request_review_id": 3081778338,
      "id": 2249618007,
      "node_id": "PRRC_kwDOABII586GFnJX",
      "diff_hunk": "@@ -472,6 +473,111 @@ static bool rest_block_notxdetails(const std::any& context, HTTPRequest* req, co\n     return rest_block(context, req, uri_part, TxVerbosity::SHOW_TXID);\n }\n \n+\n+static bool rest_tx_from_block(const std::any& context, HTTPRequest* req, const std::string& uri_part)\n+{\n+    if (!CheckWarmup(req)) return false;\n+\n+    std::string param;\n+    const RESTResponseFormat rf = ParseDataFormat(param, uri_part);\n+\n+    // request is sent over URI scheme /rest/txfromblock/blockhash-index\n+    std::vector<std::string_view> uriParts{util::Split<std::string_view>(param, '-')};\n+    if (uriParts.size() != 2) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid URI format: %s\", param));\n+    }\n+\n+    std::optional<uint256> block_hash{uint256::FromHex(uriParts[0])};\n+    if (!block_hash) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid hash: %s\", uriParts[0]));\n+    }\n+\n+    const std::optional<size_t> parsed_index{ToIntegral<size_t>(uriParts[1])};\n+    if (!parsed_index.has_value()) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Transaction index is invalid: %s\", uriParts[1]));\n+    }\n+    const size_t index = *parsed_index;\n+\n+    ChainstateManager* maybe_chainman = GetChainman(context, req);\n+    if (!maybe_chainman) return false;\n+    ChainstateManager& chainman = *maybe_chainman;\n+\n+    FlatFilePos block_pos{};\n+    {\n+        LOCK(cs_main);\n+        const CBlockIndex* pindex{chainman.m_blockman.LookupBlockIndex(*block_hash)};\n+        if (pindex == nullptr) {\n+            return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Block %s not found\", uriParts[0]));\n+        }\n+        if (pindex->nHeight > 0 && !pindex->IsValid(BLOCK_VALID_SCRIPTS)) {\n+            return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Block %s not validated\", uriParts[0]));\n+        }\n+        if (index >= pindex->nTx) {\n+            return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Block %s has only %d transactions\", uriParts[0], pindex->nTx));\n+        }\n+        block_pos = pindex->GetBlockPos();\n+    }\n+\n+    CTransactionRef tx{};\n+    std::vector<std::byte> tx_bytes{};\n+    bool success{false};\n+    const LocationsIndex* locations_index = g_locations_index.get();\n+    if (!locations_index) {\n+        // Read full block and skip irrelevant transactions\n+        success = chainman.m_blockman.ReadTxFromBlock(tx, block_pos, index);\n+    } else {\n+        if (!locations_index->BlockUntilSyncedToCurrentChain()) {\n+            RESTERR(req, HTTP_SERVICE_UNAVAILABLE, \"Locations index is still syncing\");\n+        }\n+        success = locations_index->ReadRawTransaction(*block_hash, index, tx_bytes);\n+    }\n+\n+    if (!success) {\n+        return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Failed to read transaction #%d from block %s\", index, (*block_hash).ToString()));",
      "path": "src/rest.cpp",
      "position": 1,
      "original_position": 72,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": 2249356202,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks - fixed.",
      "created_at": "2025-08-03T06:42:55Z",
      "updated_at": "2025-08-03T06:42:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249618007",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249618007"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 536,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249618092",
      "pull_request_review_id": 3081778479,
      "id": 2249618092,
      "node_id": "PRRC_kwDOABII586GFnKs",
      "diff_hunk": "@@ -472,6 +473,111 @@ static bool rest_block_notxdetails(const std::any& context, HTTPRequest* req, co\n     return rest_block(context, req, uri_part, TxVerbosity::SHOW_TXID);\n }\n \n+\n+static bool rest_tx_from_block(const std::any& context, HTTPRequest* req, const std::string& uri_part)\n+{\n+    if (!CheckWarmup(req)) return false;\n+\n+    std::string param;\n+    const RESTResponseFormat rf = ParseDataFormat(param, uri_part);\n+\n+    // request is sent over URI scheme /rest/txfromblock/blockhash-index\n+    std::vector<std::string_view> uriParts{util::Split<std::string_view>(param, '-')};\n+    if (uriParts.size() != 2) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid URI format: %s\", param));\n+    }\n+\n+    std::optional<uint256> block_hash{uint256::FromHex(uriParts[0])};\n+    if (!block_hash) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid hash: %s\", uriParts[0]));\n+    }\n+\n+    const std::optional<size_t> parsed_index{ToIntegral<size_t>(uriParts[1])};\n+    if (!parsed_index.has_value()) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Transaction index is invalid: %s\", uriParts[1]));\n+    }\n+    const size_t index = *parsed_index;\n+\n+    ChainstateManager* maybe_chainman = GetChainman(context, req);\n+    if (!maybe_chainman) return false;\n+    ChainstateManager& chainman = *maybe_chainman;\n+\n+    FlatFilePos block_pos{};\n+    {\n+        LOCK(cs_main);\n+        const CBlockIndex* pindex{chainman.m_blockman.LookupBlockIndex(*block_hash)};\n+        if (pindex == nullptr) {\n+            return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Block %s not found\", uriParts[0]));\n+        }\n+        if (pindex->nHeight > 0 && !pindex->IsValid(BLOCK_VALID_SCRIPTS)) {\n+            return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Block %s not validated\", uriParts[0]));\n+        }\n+        if (index >= pindex->nTx) {\n+            return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Block %s has only %d transactions\", uriParts[0], pindex->nTx));\n+        }\n+        block_pos = pindex->GetBlockPos();\n+    }",
      "path": "src/rest.cpp",
      "position": 1,
      "original_position": 55,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": 2249355515,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good catch - fixed.",
      "created_at": "2025-08-03T06:42:58Z",
      "updated_at": "2025-08-03T06:42:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249618092",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249618092"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": 505,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 524,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249618203",
      "pull_request_review_id": 3081778702,
      "id": 2249618203,
      "node_id": "PRRC_kwDOABII586GFnMb",
      "diff_hunk": "@@ -0,0 +1,143 @@\n+// Copyright (c) 2018-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <map>",
      "path": "src/index/locationsindex.cpp",
      "position": 1,
      "original_position": 5,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": 2249350168,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Removed.",
      "created_at": "2025-08-03T06:43:01Z",
      "updated_at": "2025-08-03T06:43:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249618203",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249618203"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249618256",
      "pull_request_review_id": 3081778773,
      "id": 2249618256,
      "node_id": "PRRC_kwDOABII586GFnNQ",
      "diff_hunk": "@@ -36,6 +36,14 @@ Responds with 404 if the transaction doesn't exist.\n By default, this endpoint will only search the mempool.\n To query for a confirmed transaction, enable the transaction index via \"txindex=1\" command line / configuration option.\n \n+`GET /rest/txfromblock/<BLOCK-HASH>-<TX-OFFSET>.<bin|hex|json>`\n+\n+Given a block hash and transaction offset within it: returns a transaction in binary, hex-encoded binary, or JSON formats.\n+Responds with 404 if the transaction doesn't exist.\n+\n+By default, this endpoint will read also the leading transactions, before reading and returning the requested one.",
      "path": "doc/REST-interface.md",
      "position": 1,
      "original_position": 9,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": 2249349229,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks - fixed.",
      "created_at": "2025-08-03T06:43:04Z",
      "updated_at": "2025-08-03T06:43:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249618256",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249618256"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249618312",
      "pull_request_review_id": 3081778837,
      "id": 2249618312,
      "node_id": "PRRC_kwDOABII586GFnOI",
      "diff_hunk": "@@ -0,0 +1,143 @@\n+// Copyright (c) 2018-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <map>\n+\n+#include <blockencodings.h>\n+#include <clientversion.h>\n+#include <common/args.h>\n+#include <dbwrapper.h>\n+#include <hash.h>\n+#include <index/locationsindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <primitives/block.h>\n+#include <serialize.h>\n+#include <util/fs_helpers.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_BLOCK_HASH{'s'};\n+\n+constexpr uint32_t TXS_PER_ROW{128};\n+\n+namespace {\n+\n+struct DBKey {\n+    uint256 hash;\n+    uint32_t part; // allow splitting one block's transactions into multiple DB rows\n+\n+    explicit DBKey(const uint256& hash_in, uint32_t part_in) : hash(hash_in), part(part_in) {}\n+\n+    SERIALIZE_METHODS(DBKey, obj)\n+    {\n+        uint8_t prefix{DB_BLOCK_HASH};\n+        READWRITE(prefix);\n+        if (prefix != DB_BLOCK_HASH) {\n+            throw std::ios_base::failure(\"Invalid format for location index DB hash key\");\n+        }\n+\n+        READWRITE(obj.hash);\n+        READWRITE(COMPACTSIZE(obj.part));\n+    }\n+};\n+\n+struct DBValue {\n+    FlatFilePos block_pos;\n+    std::vector<uint32_t> offsets{};\n+\n+    SERIALIZE_METHODS(DBValue, obj)\n+    {\n+        READWRITE(obj.block_pos);\n+        READWRITE(Using<VectorFormatter<DifferenceFormatter>>(obj.offsets));\n+    }\n+};\n+\n+}; // namespace\n+\n+std::unique_ptr<LocationsIndex> g_locations_index;\n+\n+LocationsIndex::LocationsIndex(std::unique_ptr<interfaces::Chain> chain,\n+                               size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"locationsindex\")\n+{\n+    fs::path path = gArgs.GetDataDirNet() / \"indexes\" / \"locations\";\n+    fs::create_directories(path);\n+\n+    m_db = std::make_unique<BaseIndex::DB>(path / \"db\", n_cache_size, f_memory, f_wipe);\n+}\n+\n+static const uint32_t HEADER_SIZE = ::GetSerializeSize(CBlockHeader{});",
      "path": "src/index/locationsindex.cpp",
      "position": 1,
      "original_position": 70,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": 2249348139,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks - moved into `LocationsIndex::CustomAppend()`.",
      "created_at": "2025-08-03T06:43:07Z",
      "updated_at": "2025-08-03T06:43:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249618312",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249618312"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249618367",
      "pull_request_review_id": 3081778903,
      "id": 2249618367,
      "node_id": "PRRC_kwDOABII586GFnO_",
      "diff_hunk": "@@ -1080,6 +1080,32 @@ bool BlockManager::ReadRawBlock(std::vector<std::byte>& block, const FlatFilePos\n     return true;\n }\n \n+static const uint32_t HEADER_SIZE = ::GetSerializeSize(CBlockHeader{});",
      "path": "src/node/blockstorage.cpp",
      "position": 1,
      "original_position": 4,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "784459ac79a89f591eb52a4c6c266c421ca8baec",
      "in_reply_to_id": 2249347002,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks - removed.\r\n\r\n> Was this supposed to be used to skip forward in the stream instead of deserializing the header?\r\n\r\nYes, but now it's not needed here.",
      "created_at": "2025-08-03T06:43:14Z",
      "updated_at": "2025-08-03T06:43:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249618367",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249618367"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1083,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2250618511",
      "pull_request_review_id": 3082984358,
      "id": 2250618511,
      "node_id": "PRRC_kwDOABII586GJbaP",
      "diff_hunk": "@@ -1080,6 +1080,32 @@ bool BlockManager::ReadRawBlock(std::vector<std::byte>& block, const FlatFilePos\n     return true;\n }\n \n+static const uint32_t HEADER_SIZE = ::GetSerializeSize(CBlockHeader{});",
      "path": "src/node/blockstorage.cpp",
      "position": 1,
      "original_position": 4,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "784459ac79a89f591eb52a4c6c266c421ca8baec",
      "in_reply_to_id": 2249347002,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Better to not add it in 784459ac79a89f591eb52a4c6c266c421ca8baec?",
      "created_at": "2025-08-04T07:17:37Z",
      "updated_at": "2025-08-04T07:27:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2250618511",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2250618511"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1083,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2250635349",
      "pull_request_review_id": 3082984358,
      "id": 2250635349,
      "node_id": "PRRC_kwDOABII586GJfhV",
      "diff_hunk": "@@ -36,6 +36,14 @@ Responds with 404 if the transaction doesn't exist.\n By default, this endpoint will only search the mempool.\n To query for a confirmed transaction, enable the transaction index via \"txindex=1\" command line / configuration option.\n \n+`GET /rest/txfromblock/<BLOCK-HASH>-<TX-OFFSET>.<bin|hex|json>`\n+\n+Given a block hash and transaction offset within it: returns a transaction in binary, hex-encoded binary, or JSON formats.\n+Responds with 404 if the transaction doesn't exist.\n+\n+By default, this endpoint will read also the leading transactions, before reading and returning the requested one.",
      "path": "doc/REST-interface.md",
      "position": 1,
      "original_position": 9,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": 2249349229,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Typo in added parenthesis: beggining",
      "created_at": "2025-08-04T07:25:39Z",
      "updated_at": "2025-08-04T07:27:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2250635349",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2250635349"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2251210391",
      "pull_request_review_id": 3083784499,
      "id": 2251210391,
      "node_id": "PRRC_kwDOABII586GLr6X",
      "diff_hunk": "@@ -1080,6 +1080,32 @@ bool BlockManager::ReadRawBlock(std::vector<std::byte>& block, const FlatFilePos\n     return true;\n }\n \n+static const uint32_t HEADER_SIZE = ::GetSerializeSize(CBlockHeader{});",
      "path": "src/node/blockstorage.cpp",
      "position": 1,
      "original_position": 4,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "784459ac79a89f591eb52a4c6c266c421ca8baec",
      "in_reply_to_id": 2249347002,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Definitely - should be fixed now:\r\n```diff\r\n$ git diff 784459ac79 104b40c8c9\r\ndiff --git a/src/node/blockstorage.cpp b/src/node/blockstorage.cpp\r\nindex c8d824bb6c..05ec73697c 100644\r\n--- a/src/node/blockstorage.cpp\r\n+++ b/src/node/blockstorage.cpp\r\n@@ -1080,8 +1080,6 @@ bool BlockManager::ReadRawBlock(std::vector<std::byte>& block, const FlatFilePos\r\n     return true;\r\n }\r\n \r\n-static const uint32_t HEADER_SIZE = ::GetSerializeSize(CBlockHeader{});\r\n-\r\n bool BlockManager::ReadTxFromBlock(CTransactionRef& tx, const FlatFilePos& block_pos, size_t tx_index) const\r\n {\r\n     AutoFile file{OpenBlockFile(block_pos, /*fReadOnly=*/true)};\r\n```",
      "created_at": "2025-08-04T11:32:45Z",
      "updated_at": "2025-08-04T11:32:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2251210391",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2251210391"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1083,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2251213333",
      "pull_request_review_id": 3083788382,
      "id": 2251213333,
      "node_id": "PRRC_kwDOABII586GLsoV",
      "diff_hunk": "@@ -36,6 +36,14 @@ Responds with 404 if the transaction doesn't exist.\n By default, this endpoint will only search the mempool.\n To query for a confirmed transaction, enable the transaction index via \"txindex=1\" command line / configuration option.\n \n+`GET /rest/txfromblock/<BLOCK-HASH>-<TX-OFFSET>.<bin|hex|json>`\n+\n+Given a block hash and transaction offset within it: returns a transaction in binary, hex-encoded binary, or JSON formats.\n+Responds with 404 if the transaction doesn't exist.\n+\n+By default, this endpoint will read also the leading transactions, before reading and returning the requested one.",
      "path": "doc/REST-interface.md",
      "position": 1,
      "original_position": 9,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": 2249349229,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Oops, sorry -> should be fixed now:\r\n```diff\r\n$ git diff b2a22ce33d 4441827ef4\r\ndiff --git a/doc/REST-interface.md b/doc/REST-interface.md\r\nindex ffb3c09af1..8f8431c29a 100644\r\n--- a/doc/REST-interface.md\r\n+++ b/doc/REST-interface.md\r\n@@ -42,7 +42,7 @@ Given a block hash and transaction offset within it: returns a transaction in bi\r\n Responds with 404 if the transaction doesn't exist.\r\n \r\n By default, this endpoint will also deserialize the leading transactions, before reading and returning the requested one\r\n-(which results in wasted deserialization work if the transaction is not in the beggining of the block).\r\n+(which results in wasted deserialization work if the transaction is not in the beginning of the block).\r\n To read the requested transaction directly, enable the transaction locations' index via \"locationsindex=1\" command line / configuration option.\r\n \r\n #### Blocks\r\n```",
      "created_at": "2025-08-04T11:34:18Z",
      "updated_at": "2025-08-04T11:34:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2251213333",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2251213333"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2300885992",
      "pull_request_review_id": 3155477609,
      "id": 2300885992,
      "node_id": "PRRC_kwDOABII586JJLvo",
      "diff_hunk": "@@ -0,0 +1,141 @@\n+// Copyright (c) 2018-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockencodings.h>\n+#include <clientversion.h>",
      "path": "src/index/locationsindex.cpp",
      "position": 1,
      "original_position": 6,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Unused: clientversion.h",
      "created_at": "2025-08-26T12:47:56Z",
      "updated_at": "2025-08-27T07:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2300885992",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2300885992"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2300903099",
      "pull_request_review_id": 3155477609,
      "id": 2300903099,
      "node_id": "PRRC_kwDOABII586JJP67",
      "diff_hunk": "@@ -0,0 +1,141 @@\n+// Copyright (c) 2018-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockencodings.h>\n+#include <clientversion.h>\n+#include <common/args.h>\n+#include <dbwrapper.h>\n+#include <hash.h>\n+#include <index/locationsindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <primitives/block.h>\n+#include <serialize.h>\n+#include <util/fs_helpers.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_BLOCK_HASH{'s'};\n+\n+constexpr uint32_t TXS_PER_ROW{128};\n+\n+namespace {\n+\n+struct DBKey {\n+    uint256 hash;\n+    uint32_t row; // allow splitting one block's transactions into multiple DB rows\n+\n+    explicit DBKey(const uint256& hash_in, uint32_t row_in) : hash(hash_in), row(row_in) {}\n+\n+    SERIALIZE_METHODS(DBKey, obj)\n+    {\n+        uint8_t prefix{DB_BLOCK_HASH};\n+        READWRITE(prefix);\n+        if (prefix != DB_BLOCK_HASH) {\n+            throw std::ios_base::failure(\"Invalid format for location index DB hash key\");\n+        }\n+\n+        READWRITE(obj.hash);\n+        READWRITE(COMPACTSIZE(obj.row));\n+    }\n+};\n+\n+struct DBValue {\n+    FlatFilePos block_pos;\n+    std::vector<uint32_t> offsets{};\n+\n+    SERIALIZE_METHODS(DBValue, obj)\n+    {\n+        READWRITE(obj.block_pos);\n+        READWRITE(Using<VectorFormatter<DifferenceFormatter>>(obj.offsets));\n+    }\n+};\n+\n+}; // namespace\n+\n+std::unique_ptr<LocationsIndex> g_locations_index;\n+\n+LocationsIndex::LocationsIndex(std::unique_ptr<interfaces::Chain> chain,\n+                               size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"locationsindex\")\n+{\n+    fs::path path = gArgs.GetDataDirNet() / \"indexes\" / \"locations\";\n+    fs::create_directories(path);\n+\n+    m_db = std::make_unique<BaseIndex::DB>(path / \"db\", n_cache_size, f_memory, f_wipe);\n+}\n+\n+bool LocationsIndex::CustomAppend(const interfaces::BlockInfo& block)\n+{\n+    static const uint32_t HEADER_SIZE = ::GetSerializeSize(CBlockHeader{});\n+\n+    assert(block.data);\n+    assert(block.file_number >= 0);\n+\n+    const uint32_t nTx = block.data->vtx.size();\n+    uint32_t nTxOffset = HEADER_SIZE + GetSizeOfCompactSize(nTx);",
      "path": "src/index/locationsindex.cpp",
      "position": 1,
      "original_position": 76,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: snake_case and narrower types:\r\n```suggestion\r\n    Assume(block.data->vtx.size() <= std::numeric_limits<uint32_t>::max());\r\n    const uint32_t tx_count{static_cast<uint32_t>(block.data->vtx.size())};\r\n    uint32_t tx_offset{HEADER_SIZE + GetSizeOfCompactSize(tx_count)};\r\n```",
      "created_at": "2025-08-26T12:54:30Z",
      "updated_at": "2025-08-27T07:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2300903099",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2300903099"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": 75,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2300933020",
      "pull_request_review_id": 3155477609,
      "id": 2300933020,
      "node_id": "PRRC_kwDOABII586JJXOc",
      "diff_hunk": "@@ -0,0 +1,141 @@\n+// Copyright (c) 2018-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockencodings.h>\n+#include <clientversion.h>\n+#include <common/args.h>\n+#include <dbwrapper.h>\n+#include <hash.h>\n+#include <index/locationsindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <primitives/block.h>\n+#include <serialize.h>\n+#include <util/fs_helpers.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_BLOCK_HASH{'s'};\n+\n+constexpr uint32_t TXS_PER_ROW{128};\n+\n+namespace {\n+\n+struct DBKey {\n+    uint256 hash;\n+    uint32_t row; // allow splitting one block's transactions into multiple DB rows\n+\n+    explicit DBKey(const uint256& hash_in, uint32_t row_in) : hash(hash_in), row(row_in) {}\n+\n+    SERIALIZE_METHODS(DBKey, obj)\n+    {\n+        uint8_t prefix{DB_BLOCK_HASH};\n+        READWRITE(prefix);\n+        if (prefix != DB_BLOCK_HASH) {\n+            throw std::ios_base::failure(\"Invalid format for location index DB hash key\");\n+        }\n+\n+        READWRITE(obj.hash);\n+        READWRITE(COMPACTSIZE(obj.row));\n+    }\n+};\n+\n+struct DBValue {\n+    FlatFilePos block_pos;\n+    std::vector<uint32_t> offsets{};\n+\n+    SERIALIZE_METHODS(DBValue, obj)\n+    {\n+        READWRITE(obj.block_pos);\n+        READWRITE(Using<VectorFormatter<DifferenceFormatter>>(obj.offsets));\n+    }\n+};\n+\n+}; // namespace\n+\n+std::unique_ptr<LocationsIndex> g_locations_index;\n+\n+LocationsIndex::LocationsIndex(std::unique_ptr<interfaces::Chain> chain,\n+                               size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"locationsindex\")\n+{\n+    fs::path path = gArgs.GetDataDirNet() / \"indexes\" / \"locations\";\n+    fs::create_directories(path);\n+\n+    m_db = std::make_unique<BaseIndex::DB>(path / \"db\", n_cache_size, f_memory, f_wipe);\n+}\n+\n+bool LocationsIndex::CustomAppend(const interfaces::BlockInfo& block)\n+{\n+    static const uint32_t HEADER_SIZE = ::GetSerializeSize(CBlockHeader{});\n+\n+    assert(block.data);\n+    assert(block.file_number >= 0);\n+\n+    const uint32_t nTx = block.data->vtx.size();\n+    uint32_t nTxOffset = HEADER_SIZE + GetSizeOfCompactSize(nTx);\n+\n+    std::vector<uint32_t> block_offsets{};\n+    block_offsets.reserve(nTx + 1);\n+    block_offsets.push_back(nTxOffset); // first transaction offset within the block\n+\n+    for (const auto& tx : block.data->vtx) {\n+        nTxOffset += ::GetSerializeSize(TX_WITH_WITNESS(*tx));\n+        block_offsets.push_back(nTxOffset);\n+    }\n+\n+    CDBBatch batch{GetDB()};\n+    uint32_t copied = 0;\n+    for (uint32_t row = 0; copied < nTx; ++row) {\n+        size_t row_size = std::min(nTx - copied, TXS_PER_ROW);\n+        std::span<uint32_t> row_offsets{&block_offsets[copied], row_size + 1};\n+\n+        DBKey key{block.hash, row};\n+        DBValue value{{block.file_number, block.data_pos}, {row_offsets.begin(), row_offsets.end()}};\n+\n+        copied += row_size;\n+        batch.Write(key, value);\n+    }\n+    return GetDB().WriteBatch(batch);\n+}\n+\n+bool LocationsIndex::ReadRawTransaction(const uint256& block_hash, size_t i, std::vector<std::byte>& out) const\n+{\n+    uint32_t row = i / TXS_PER_ROW;      // used to find the correct DB row\n+    const auto column = i % TXS_PER_ROW; // index within a single DB row",
      "path": "src/index/locationsindex.cpp",
      "position": 1,
      "original_position": 105,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Could make `row` `const` as well and nail down the types:\r\n```suggestion\r\nbool LocationsIndex::ReadRawTransaction(const uint256& block_hash, uint32_t i, std::vector<std::byte>& out) const\r\n{\r\n    const uint32_t row{i / TXS_PER_ROW};      // used to find the correct DB row\r\n    const uint32_t column{i % TXS_PER_ROW}; // index within a single DB row\r\n```",
      "created_at": "2025-08-26T13:05:48Z",
      "updated_at": "2025-08-27T07:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2300933020",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2300933020"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": 102,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 105,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2300949481",
      "pull_request_review_id": 3155477609,
      "id": 2300949481,
      "node_id": "PRRC_kwDOABII586JJbPp",
      "diff_hunk": "@@ -0,0 +1,141 @@\n+// Copyright (c) 2018-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockencodings.h>\n+#include <clientversion.h>\n+#include <common/args.h>\n+#include <dbwrapper.h>\n+#include <hash.h>\n+#include <index/locationsindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <primitives/block.h>\n+#include <serialize.h>\n+#include <util/fs_helpers.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_BLOCK_HASH{'s'};\n+\n+constexpr uint32_t TXS_PER_ROW{128};\n+\n+namespace {\n+\n+struct DBKey {\n+    uint256 hash;\n+    uint32_t row; // allow splitting one block's transactions into multiple DB rows\n+\n+    explicit DBKey(const uint256& hash_in, uint32_t row_in) : hash(hash_in), row(row_in) {}\n+\n+    SERIALIZE_METHODS(DBKey, obj)\n+    {\n+        uint8_t prefix{DB_BLOCK_HASH};\n+        READWRITE(prefix);\n+        if (prefix != DB_BLOCK_HASH) {\n+            throw std::ios_base::failure(\"Invalid format for location index DB hash key\");\n+        }\n+\n+        READWRITE(obj.hash);\n+        READWRITE(COMPACTSIZE(obj.row));\n+    }\n+};\n+\n+struct DBValue {\n+    FlatFilePos block_pos;\n+    std::vector<uint32_t> offsets{};\n+\n+    SERIALIZE_METHODS(DBValue, obj)\n+    {\n+        READWRITE(obj.block_pos);\n+        READWRITE(Using<VectorFormatter<DifferenceFormatter>>(obj.offsets));\n+    }\n+};\n+\n+}; // namespace\n+\n+std::unique_ptr<LocationsIndex> g_locations_index;\n+\n+LocationsIndex::LocationsIndex(std::unique_ptr<interfaces::Chain> chain,\n+                               size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"locationsindex\")\n+{\n+    fs::path path = gArgs.GetDataDirNet() / \"indexes\" / \"locations\";\n+    fs::create_directories(path);\n+\n+    m_db = std::make_unique<BaseIndex::DB>(path / \"db\", n_cache_size, f_memory, f_wipe);\n+}\n+\n+bool LocationsIndex::CustomAppend(const interfaces::BlockInfo& block)\n+{\n+    static const uint32_t HEADER_SIZE = ::GetSerializeSize(CBlockHeader{});\n+\n+    assert(block.data);\n+    assert(block.file_number >= 0);\n+\n+    const uint32_t nTx = block.data->vtx.size();\n+    uint32_t nTxOffset = HEADER_SIZE + GetSizeOfCompactSize(nTx);\n+\n+    std::vector<uint32_t> block_offsets{};\n+    block_offsets.reserve(nTx + 1);\n+    block_offsets.push_back(nTxOffset); // first transaction offset within the block\n+\n+    for (const auto& tx : block.data->vtx) {\n+        nTxOffset += ::GetSerializeSize(TX_WITH_WITNESS(*tx));\n+        block_offsets.push_back(nTxOffset);\n+    }\n+\n+    CDBBatch batch{GetDB()};\n+    uint32_t copied = 0;\n+    for (uint32_t row = 0; copied < nTx; ++row) {\n+        size_t row_size = std::min(nTx - copied, TXS_PER_ROW);\n+        std::span<uint32_t> row_offsets{&block_offsets[copied], row_size + 1};\n+\n+        DBKey key{block.hash, row};\n+        DBValue value{{block.file_number, block.data_pos}, {row_offsets.begin(), row_offsets.end()}};\n+\n+        copied += row_size;\n+        batch.Write(key, value);\n+    }\n+    return GetDB().WriteBatch(batch);\n+}\n+\n+bool LocationsIndex::ReadRawTransaction(const uint256& block_hash, size_t i, std::vector<std::byte>& out) const\n+{\n+    uint32_t row = i / TXS_PER_ROW;      // used to find the correct DB row\n+    const auto column = i % TXS_PER_ROW; // index within a single DB row\n+\n+    DBValue value{};\n+    if (!m_db->Read(DBKey{block_hash, row}, value)) {\n+        return false;\n+    }\n+\n+    if (value.offsets.size() <= 1) {\n+        LogError(\"%s: LocationsIndex entry for %s:%u must have >1 offsets\\n\", __func__, block_hash.ToString(), row);\n+        return false;\n+    }\n+    size_t tx_count = value.offsets.size() - 1;\n+    if (column >= tx_count) {\n+        LogError(\"%s: LocationsIndex entry for %s:%u has %d transactions\\n\", __func__, block_hash.ToString(), row, tx_count);\n+        return false;\n+    }\n+\n+    FlatFilePos tx_pos{value.block_pos};\n+    tx_pos.nPos += value.offsets[column];\n+    size_t tx_size = value.offsets[column + 1] - value.offsets[column];\n+\n+    AutoFile file{m_chainstate->m_blockman.OpenBlockFile(tx_pos, true)};\n+    if (file.IsNull()) {\n+        LogError(\"%s: OpenBlockFile failed\\n\", __func__);\n+        return false;\n+    }\n+\n+    out.resize(tx_size); // Zeroing of memory is intentional here",
      "path": "src/index/locationsindex.cpp",
      "position": 1,
      "original_position": 132,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Don't see a good way around zeroing the memory, but comment makes it sound like a good thing?\r\nI guess it's slightly better than returning a vector containing garbage upon failure, but even better would be to clear it upon failure?\r\n\r\nnit: Could change:\r\n```diff\r\n-    bool ReadRawTransaction(const uint256& block_hash, size_t i, std::vector<std::byte>& out) const;\r\n+    std::vector<std::byte> ReadRawTransaction(const uint256& block_hash, uint32_t i) const;\r\n```\r\nAnd only return non-empty vector on success instead of having a separate bool? Somewhat unorthodox compared to other Index-implementations but more modern in that it exploits the fact that vectors are movable.",
      "created_at": "2025-08-26T13:11:35Z",
      "updated_at": "2025-08-27T07:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2300949481",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2300949481"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 132,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2301676036",
      "pull_request_review_id": 3155477609,
      "id": 2301676036,
      "node_id": "PRRC_kwDOABII586JMMoE",
      "diff_hunk": "@@ -472,6 +473,112 @@ static bool rest_block_notxdetails(const std::any& context, HTTPRequest* req, co\n     return rest_block(context, req, uri_part, TxVerbosity::SHOW_TXID);\n }\n \n+\n+static bool rest_tx_from_block(const std::any& context, HTTPRequest* req, const std::string& uri_part)\n+{\n+    if (!CheckWarmup(req)) return false;\n+\n+    std::string param;\n+    const RESTResponseFormat rf = ParseDataFormat(param, uri_part);\n+\n+    // request is sent over URI scheme /rest/txfromblock/blockhash-index\n+    std::vector<std::string_view> uriParts{util::Split<std::string_view>(param, '-')};\n+    if (uriParts.size() != 2) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid URI format: %s\", param));\n+    }\n+\n+    std::optional<uint256> block_hash{uint256::FromHex(uriParts[0])};\n+    if (!block_hash) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid hash: %s\", uriParts[0]));\n+    }\n+\n+    const std::optional<size_t> parsed_index{ToIntegral<size_t>(uriParts[1])};\n+    if (!parsed_index.has_value()) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Transaction index is invalid: %s\", uriParts[1]));\n+    }\n+    const size_t index = *parsed_index;\n+\n+    ChainstateManager* maybe_chainman = GetChainman(context, req);\n+    if (!maybe_chainman) return false;\n+    ChainstateManager& chainman = *maybe_chainman;\n+\n+    const LocationsIndex* locations_index = g_locations_index.get();\n+    if (locations_index && !locations_index->BlockUntilSyncedToCurrentChain()) {\n+        RESTERR(req, HTTP_SERVICE_UNAVAILABLE, \"Locations index is still syncing\");\n+    }\n+\n+    FlatFilePos block_pos{};\n+    if (!locations_index) {\n+        LOCK(cs_main);\n+        const CBlockIndex* pindex{chainman.m_blockman.LookupBlockIndex(*block_hash)};\n+        if (pindex == nullptr) {\n+            return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Block %s not found\", uriParts[0]));\n+        }\n+        if (pindex->nHeight > 0 && !pindex->IsValid(BLOCK_VALID_SCRIPTS)) {\n+            return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Block %s not validated\", uriParts[0]));\n+        }\n+        if (index >= pindex->nTx) {\n+            return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Block %s has only %d transactions\", uriParts[0], pindex->nTx));\n+        }\n+        block_pos = pindex->GetBlockPos();\n+    }\n+\n+    CTransactionRef tx{};\n+    std::vector<std::byte> tx_bytes{};\n+    bool success{false};\n+    if (!locations_index) {\n+        // Read full block and skip irrelevant transactions\n+        success = chainman.m_blockman.ReadTxFromBlock(tx, block_pos, index);\n+    } else {\n+        success = locations_index->ReadRawTransaction(*block_hash, index, tx_bytes);\n+    }\n+\n+    if (!success) {\n+        return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Failed to read transaction #%d from block %s\", index, block_hash->ToString()));\n+    }\n+\n+    DataStream serialized{};\n+    switch (rf) {\n+    case RESTResponseFormat::BINARY: {\n+        req->WriteHeader(\"Content-Type\", \"application/octet-stream\");\n+        std::span<std::byte> result{tx_bytes};\n+        if (tx) {\n+            serialized << TX_WITH_WITNESS(tx);\n+            result = serialized;\n+        }\n+        req->WriteReply(HTTP_OK, result);\n+        return true;\n+    }\n+    case RESTResponseFormat::HEX: {\n+        std::string strHex{};\n+        if (tx) {\n+            serialized << TX_WITH_WITNESS(tx);\n+            strHex = HexStr(serialized);\n+        } else {\n+            strHex = HexStr(tx_bytes);\n+        }\n+        strHex.append(\"\\n\");",
      "path": "src/rest.cpp",
      "position": 1,
      "original_position": 96,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Might as well use the fact that it's only 1 char:\r\n```suggestion\r\n        strHex.push_back('\\n');\r\n```",
      "created_at": "2025-08-26T17:34:45Z",
      "updated_at": "2025-08-27T07:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2301676036",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2301676036"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 560,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2301676647",
      "pull_request_review_id": 3155477609,
      "id": 2301676647,
      "node_id": "PRRC_kwDOABII586JMMxn",
      "diff_hunk": "@@ -472,6 +473,112 @@ static bool rest_block_notxdetails(const std::any& context, HTTPRequest* req, co\n     return rest_block(context, req, uri_part, TxVerbosity::SHOW_TXID);\n }\n \n+\n+static bool rest_tx_from_block(const std::any& context, HTTPRequest* req, const std::string& uri_part)\n+{\n+    if (!CheckWarmup(req)) return false;\n+\n+    std::string param;\n+    const RESTResponseFormat rf = ParseDataFormat(param, uri_part);\n+\n+    // request is sent over URI scheme /rest/txfromblock/blockhash-index\n+    std::vector<std::string_view> uriParts{util::Split<std::string_view>(param, '-')};\n+    if (uriParts.size() != 2) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid URI format: %s\", param));\n+    }\n+\n+    std::optional<uint256> block_hash{uint256::FromHex(uriParts[0])};\n+    if (!block_hash) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid hash: %s\", uriParts[0]));\n+    }\n+\n+    const std::optional<size_t> parsed_index{ToIntegral<size_t>(uriParts[1])};\n+    if (!parsed_index.has_value()) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Transaction index is invalid: %s\", uriParts[1]));\n+    }\n+    const size_t index = *parsed_index;\n+\n+    ChainstateManager* maybe_chainman = GetChainman(context, req);\n+    if (!maybe_chainman) return false;\n+    ChainstateManager& chainman = *maybe_chainman;\n+\n+    const LocationsIndex* locations_index = g_locations_index.get();\n+    if (locations_index && !locations_index->BlockUntilSyncedToCurrentChain()) {\n+        RESTERR(req, HTTP_SERVICE_UNAVAILABLE, \"Locations index is still syncing\");\n+    }\n+\n+    FlatFilePos block_pos{};\n+    if (!locations_index) {\n+        LOCK(cs_main);\n+        const CBlockIndex* pindex{chainman.m_blockman.LookupBlockIndex(*block_hash)};\n+        if (pindex == nullptr) {\n+            return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Block %s not found\", uriParts[0]));\n+        }\n+        if (pindex->nHeight > 0 && !pindex->IsValid(BLOCK_VALID_SCRIPTS)) {\n+            return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Block %s not validated\", uriParts[0]));\n+        }\n+        if (index >= pindex->nTx) {\n+            return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Block %s has only %d transactions\", uriParts[0], pindex->nTx));\n+        }\n+        block_pos = pindex->GetBlockPos();\n+    }\n+\n+    CTransactionRef tx{};\n+    std::vector<std::byte> tx_bytes{};\n+    bool success{false};\n+    if (!locations_index) {\n+        // Read full block and skip irrelevant transactions\n+        success = chainman.m_blockman.ReadTxFromBlock(tx, block_pos, index);\n+    } else {\n+        success = locations_index->ReadRawTransaction(*block_hash, index, tx_bytes);\n+    }\n+\n+    if (!success) {\n+        return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Failed to read transaction #%d from block %s\", index, block_hash->ToString()));\n+    }\n+\n+    DataStream serialized{};\n+    switch (rf) {\n+    case RESTResponseFormat::BINARY: {\n+        req->WriteHeader(\"Content-Type\", \"application/octet-stream\");\n+        std::span<std::byte> result{tx_bytes};\n+        if (tx) {\n+            serialized << TX_WITH_WITNESS(tx);\n+            result = serialized;\n+        }\n+        req->WriteReply(HTTP_OK, result);\n+        return true;\n+    }\n+    case RESTResponseFormat::HEX: {\n+        std::string strHex{};\n+        if (tx) {\n+            serialized << TX_WITH_WITNESS(tx);\n+            strHex = HexStr(serialized);\n+        } else {\n+            strHex = HexStr(tx_bytes);\n+        }\n+        strHex.append(\"\\n\");\n+        req->WriteHeader(\"Content-Type\", \"text/plain\");\n+        req->WriteReply(HTTP_OK, strHex);\n+        return true;\n+    }\n+    case RESTResponseFormat::JSON: {\n+        if (!tx) {\n+            DataStream{tx_bytes} >> TX_WITH_WITNESS(tx);\n+        }\n+        UniValue objTx(UniValue::VOBJ);\n+        TxToUniv(*tx, /*block_hash=*/{}, /*entry=*/objTx);\n+        std::string strJSON = objTx.write() + \"\\n\";",
      "path": "src/rest.cpp",
      "position": 1,
      "original_position": 107,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit:\r\n```suggestion\r\n        std::string strJSON = objTx.write() + '\\n';\r\n```",
      "created_at": "2025-08-26T17:35:04Z",
      "updated_at": "2025-08-27T07:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2301676647",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2301676647"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 571,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2301692085",
      "pull_request_review_id": 3155477609,
      "id": 2301692085,
      "node_id": "PRRC_kwDOABII586JMQi1",
      "diff_hunk": "@@ -472,6 +473,112 @@ static bool rest_block_notxdetails(const std::any& context, HTTPRequest* req, co\n     return rest_block(context, req, uri_part, TxVerbosity::SHOW_TXID);\n }\n \n+\n+static bool rest_tx_from_block(const std::any& context, HTTPRequest* req, const std::string& uri_part)\n+{\n+    if (!CheckWarmup(req)) return false;\n+\n+    std::string param;\n+    const RESTResponseFormat rf = ParseDataFormat(param, uri_part);\n+\n+    // request is sent over URI scheme /rest/txfromblock/blockhash-index\n+    std::vector<std::string_view> uriParts{util::Split<std::string_view>(param, '-')};\n+    if (uriParts.size() != 2) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid URI format: %s\", param));\n+    }\n+\n+    std::optional<uint256> block_hash{uint256::FromHex(uriParts[0])};\n+    if (!block_hash) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid hash: %s\", uriParts[0]));\n+    }\n+\n+    const std::optional<size_t> parsed_index{ToIntegral<size_t>(uriParts[1])};\n+    if (!parsed_index.has_value()) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Transaction index is invalid: %s\", uriParts[1]));\n+    }\n+    const size_t index = *parsed_index;\n+\n+    ChainstateManager* maybe_chainman = GetChainman(context, req);\n+    if (!maybe_chainman) return false;\n+    ChainstateManager& chainman = *maybe_chainman;\n+\n+    const LocationsIndex* locations_index = g_locations_index.get();\n+    if (locations_index && !locations_index->BlockUntilSyncedToCurrentChain()) {\n+        RESTERR(req, HTTP_SERVICE_UNAVAILABLE, \"Locations index is still syncing\");\n+    }\n+\n+    FlatFilePos block_pos{};\n+    if (!locations_index) {\n+        LOCK(cs_main);\n+        const CBlockIndex* pindex{chainman.m_blockman.LookupBlockIndex(*block_hash)};",
      "path": "src/rest.cpp",
      "position": 1,
      "original_position": 49,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Since we already have `index` and `locations_index` in scope here, could call this `block`, or `block_index`?\r\n```suggestion\r\n        const CBlockIndex* block{chainman.m_blockman.LookupBlockIndex(*block_hash)};\r\n```",
      "created_at": "2025-08-26T17:42:41Z",
      "updated_at": "2025-08-27T07:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2301692085",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2301692085"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 513,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2301697459",
      "pull_request_review_id": 3155477609,
      "id": 2301697459,
      "node_id": "PRRC_kwDOABII586JMR2z",
      "diff_hunk": "@@ -472,6 +473,112 @@ static bool rest_block_notxdetails(const std::any& context, HTTPRequest* req, co\n     return rest_block(context, req, uri_part, TxVerbosity::SHOW_TXID);\n }\n \n+\n+static bool rest_tx_from_block(const std::any& context, HTTPRequest* req, const std::string& uri_part)\n+{\n+    if (!CheckWarmup(req)) return false;\n+\n+    std::string param;\n+    const RESTResponseFormat rf = ParseDataFormat(param, uri_part);\n+\n+    // request is sent over URI scheme /rest/txfromblock/blockhash-index\n+    std::vector<std::string_view> uriParts{util::Split<std::string_view>(param, '-')};",
      "path": "src/rest.cpp",
      "position": 1,
      "original_position": 21,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Should use snake_case as per developer-notes.md:\r\n* `uri_parts`\r\n* `str_hex`\r\n* `obj_tx`\r\n* `str_JSON`",
      "created_at": "2025-08-26T17:45:18Z",
      "updated_at": "2025-08-27T07:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2301697459",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2301697459"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 485,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2301710958",
      "pull_request_review_id": 3155477609,
      "id": 2301710958,
      "node_id": "PRRC_kwDOABII586JMVJu",
      "diff_hunk": "@@ -0,0 +1,40 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INDEX_LOCATIONSINDEX_H\n+#define BITCOIN_INDEX_LOCATIONSINDEX_H\n+\n+#include <attributes.h>\n+#include <chain.h>\n+#include <index/base.h>\n+\n+static constexpr bool DEFAULT_LOCATIONSINDEX{false};\n+\n+/**\n+ * LocationsIndex is used to store and retrieve transactions' location within a block.",
      "path": "src/index/locationsindex.h",
      "position": 1,
      "original_position": 15,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "2 nits:\r\n1. Could reword and elaborate\r\n    ```suggestion\r\n     * LocationsIndex is used to store and retrieve the location of transactions within a block.\r\n     *\r\n     * This is done in a compressed manner, allowing the whole index to fit in RAM on decent hardware.\r\n     * For example, the on-disk size was <X>GiB at block height <Y>.\r\n    ```\r\n2. Could clarify PR description unless I'm mistaken.\r\n    ```diff\r\n    -allowing it to be cached\r\n    +allowing it to be cached in RAM\r\n    ```",
      "created_at": "2025-08-26T17:51:49Z",
      "updated_at": "2025-08-27T07:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2301710958",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2301710958"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2301776737",
      "pull_request_review_id": 3155477609,
      "id": 2301776737,
      "node_id": "PRRC_kwDOABII586JMlNh",
      "diff_hunk": "@@ -238,6 +238,7 @@ add_library(bitcoin_node STATIC EXCLUDE_FROM_ALL\n   index/base.cpp",
      "path": "src/CMakeLists.txt",
      "position": 1,
      "original_position": 1,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "(Inline comment in random location to keep main thread cleaner).\r\n\r\nnit:\r\nAt https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-2974308726 you write:\r\n\r\n> You are right that during the history indexing process, the client doesn't need the proposed index, since it needs to read both the entire block (and undo) data in order to create a map between a transaction's location and its ScriptPubKeys.\r\n\r\nIIUC, saying something closer to \"map from ScriptPubKey to list of { block hash + tx index within the block }\" would be more precise? If so, might be good to edit for future reviewers.",
      "created_at": "2025-08-26T18:19:02Z",
      "updated_at": "2025-08-27T07:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2301776737",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2301776737"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 193,
      "original_line": 193,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2301851875",
      "pull_request_review_id": 3155477609,
      "id": 2301851875,
      "node_id": "PRRC_kwDOABII586JM3jj",
      "diff_hunk": "@@ -238,6 +238,7 @@ add_library(bitcoin_node STATIC EXCLUDE_FROM_ALL\n   index/base.cpp\n   index/blockfilterindex.cpp",
      "path": "src/CMakeLists.txt",
      "position": 2,
      "original_position": 2,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "(Inline comment in random location to keep main thread cleaner).\r\n\r\nnit:\r\nIn the benchmark comment https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-2897330791\r\n\r\nMaybe you could edit it to add something like:\r\n\r\n---\r\n\r\nConclusions:\r\nThe new `LocationsIndex` is only a few percent faster than the old `TxIndex`, but the on-disk footprint is ~22x smaller.\r\n\r\n`getrawtransaction` which is used in the last benchmark has an average RPC duration of ~8.6ms vs ~0.14ms for the ones above.\r\n\r\n---\r\n\r\nThe reason I push for this is that I had to do a double-take even when coming back to this PR. I think it would assist reviewers. Hopefully this would not be grinding down the dinner into mushy baby food, making the reviews less thorough and leaving jaws underdeveloped.",
      "created_at": "2025-08-26T18:52:31Z",
      "updated_at": "2025-08-27T07:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2301851875",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2301851875"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 194,
      "original_line": 194,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2301880011",
      "pull_request_review_id": 3155477609,
      "id": 2301880011,
      "node_id": "PRRC_kwDOABII586JM-bL",
      "diff_hunk": "@@ -1777,6 +1780,11 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n         node.indexes.emplace_back(g_coin_stats_index.get());\n     }\n \n+    if (args.GetBoolArg(\"-locationsindex\", DEFAULT_LOCATIONSINDEX)) {\n+        g_locations_index = std::make_unique<LocationsIndex>(interfaces::MakeChain(node), /*cache_size=*/0, false, do_reindex);",
      "path": "src/init.cpp",
      "position": 1,
      "original_position": 29,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Have you experimented with different cache sizes?",
      "created_at": "2025-08-26T19:02:04Z",
      "updated_at": "2025-08-27T07:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2301880011",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2301880011"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1784,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2301891461",
      "pull_request_review_id": 3155477609,
      "id": 2301891461,
      "node_id": "PRRC_kwDOABII586JNBOF",
      "diff_hunk": "@@ -1777,6 +1780,11 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n         node.indexes.emplace_back(g_coin_stats_index.get());\n     }\n \n+    if (args.GetBoolArg(\"-locationsindex\", DEFAULT_LOCATIONSINDEX)) {\n+        g_locations_index = std::make_unique<LocationsIndex>(interfaces::MakeChain(node), /*cache_size=*/0, false, do_reindex);",
      "path": "src/init.cpp",
      "position": 1,
      "original_position": 29,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit:\r\nBetter to name `bool` parameter:\r\n```suggestion\r\n        g_locations_index = std::make_unique<LocationsIndex>(interfaces::MakeChain(node), /*cache_size=*/0, /*f_memory=*/false, do_reindex);\r\n```\r\n(These comments are validated by clang-tidy btw).\r\n\r\nEven though `BaseIndex::DB::DB()` names it `f_memory`, I think it would be clearer to use the term in `DBParams`:\r\n```suggestion\r\n        g_locations_index = std::make_unique<LocationsIndex>(interfaces::MakeChain(node), /*cache_size=*/0, /*memory_only=*/false, do_reindex);\r\n```\r\n(If you do this, please rename it in *LocationsIndex.h/cpp*).\r\n",
      "created_at": "2025-08-26T19:07:38Z",
      "updated_at": "2025-08-27T07:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2301891461",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2301891461"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1784,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2301912424",
      "pull_request_review_id": 3155477609,
      "id": 2301912424,
      "node_id": "PRRC_kwDOABII586JNGVo",
      "diff_hunk": "@@ -472,6 +473,112 @@ static bool rest_block_notxdetails(const std::any& context, HTTPRequest* req, co\n     return rest_block(context, req, uri_part, TxVerbosity::SHOW_TXID);\n }\n \n+\n+static bool rest_tx_from_block(const std::any& context, HTTPRequest* req, const std::string& uri_part)\n+{\n+    if (!CheckWarmup(req)) return false;\n+\n+    std::string param;\n+    const RESTResponseFormat rf = ParseDataFormat(param, uri_part);\n+\n+    // request is sent over URI scheme /rest/txfromblock/blockhash-index\n+    std::vector<std::string_view> uriParts{util::Split<std::string_view>(param, '-')};\n+    if (uriParts.size() != 2) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid URI format: %s\", param));\n+    }\n+\n+    std::optional<uint256> block_hash{uint256::FromHex(uriParts[0])};\n+    if (!block_hash) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid hash: %s\", uriParts[0]));\n+    }\n+\n+    const std::optional<size_t> parsed_index{ToIntegral<size_t>(uriParts[1])};\n+    if (!parsed_index.has_value()) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Transaction index is invalid: %s\", uriParts[1]));\n+    }\n+    const size_t index = *parsed_index;\n+\n+    ChainstateManager* maybe_chainman = GetChainman(context, req);\n+    if (!maybe_chainman) return false;\n+    ChainstateManager& chainman = *maybe_chainman;",
      "path": "src/rest.cpp",
      "position": 1,
      "original_position": 39,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: `chainman` is only used in the `!locations_index` scenario, so could be skipped unless you want to always require one.",
      "created_at": "2025-08-26T19:17:24Z",
      "updated_at": "2025-08-27T07:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2301912424",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2301912424"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": 501,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 503,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2302039524",
      "pull_request_review_id": 3155477609,
      "id": 2302039524,
      "node_id": "PRRC_kwDOABII586JNlXk",
      "diff_hunk": "@@ -0,0 +1,141 @@\n+// Copyright (c) 2018-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockencodings.h>\n+#include <clientversion.h>\n+#include <common/args.h>\n+#include <dbwrapper.h>\n+#include <hash.h>\n+#include <index/locationsindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <primitives/block.h>\n+#include <serialize.h>\n+#include <util/fs_helpers.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_BLOCK_HASH{'s'};\n+\n+constexpr uint32_t TXS_PER_ROW{128};\n+\n+namespace {\n+\n+struct DBKey {\n+    uint256 hash;\n+    uint32_t row; // allow splitting one block's transactions into multiple DB rows\n+\n+    explicit DBKey(const uint256& hash_in, uint32_t row_in) : hash(hash_in), row(row_in) {}\n+\n+    SERIALIZE_METHODS(DBKey, obj)\n+    {\n+        uint8_t prefix{DB_BLOCK_HASH};\n+        READWRITE(prefix);\n+        if (prefix != DB_BLOCK_HASH) {\n+            throw std::ios_base::failure(\"Invalid format for location index DB hash key\");\n+        }\n+\n+        READWRITE(obj.hash);\n+        READWRITE(COMPACTSIZE(obj.row));\n+    }\n+};\n+\n+struct DBValue {\n+    FlatFilePos block_pos;\n+    std::vector<uint32_t> offsets{};\n+\n+    SERIALIZE_METHODS(DBValue, obj)\n+    {\n+        READWRITE(obj.block_pos);\n+        READWRITE(Using<VectorFormatter<DifferenceFormatter>>(obj.offsets));\n+    }\n+};\n+\n+}; // namespace\n+\n+std::unique_ptr<LocationsIndex> g_locations_index;\n+\n+LocationsIndex::LocationsIndex(std::unique_ptr<interfaces::Chain> chain,\n+                               size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"locationsindex\")\n+{\n+    fs::path path = gArgs.GetDataDirNet() / \"indexes\" / \"locations\";\n+    fs::create_directories(path);\n+\n+    m_db = std::make_unique<BaseIndex::DB>(path / \"db\", n_cache_size, f_memory, f_wipe);",
      "path": "src/index/locationsindex.cpp",
      "position": 1,
      "original_position": 65,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Not sure why explicit `create_directories()` is needed, this seems to work:\r\n```suggestion\r\n    , m_db{std::make_unique<BaseIndex::DB>(gArgs.GetDataDirNet() / \"indexes\" / \"locations\" / \"db\",\r\n                                           n_cache_size, f_memory, f_wipe)}\r\n{\r\n```",
      "created_at": "2025-08-26T20:13:25Z",
      "updated_at": "2025-08-27T07:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2302039524",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2302039524"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": 61,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2302066922",
      "pull_request_review_id": 3155477609,
      "id": 2302066922,
      "node_id": "PRRC_kwDOABII586JNsDq",
      "diff_hunk": "@@ -53,7 +53,7 @@ def filter_output_indices_by_value(vouts, value):\n class RESTTest (BitcoinTestFramework):",
      "path": "test/functional/interface_rest.py",
      "position": 1,
      "original_position": 1,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "(Inline comment in random location to keep main thread cleaner).\r\n\r\nPlayed around with adding coverage in `feature_init.py`. However, I encountered some weird interaction between txindex and locationsindex. Not sure how incidental it is (going above a certain number of files) or whether some kind of interference is happening. See comment \"If we add this, then we fail later while perturbing txindex\":\r\n\r\n```diff\r\ndiff --git a/test/functional/feature_init.py b/test/functional/feature_init.py\r\nindex 15b3e8595f..47e29655ce 100755\r\n--- a/test/functional/feature_init.py\r\n+++ b/test/functional/feature_init.py\r\n@@ -49,7 +49,7 @@ class InitTest(BitcoinTestFramework):\r\n \r\n         def start_expecting_error(err_fragment):\r\n             node.assert_start_raises_init_error(\r\n-                extra_args=['-txindex=1', '-blockfilterindex=1', '-coinstatsindex=1', '-checkblocks=200', '-checklevel=4'],\r\n+                extra_args=['-txindex=1', '-blockfilterindex=1', '-coinstatsindex=1', '-locationsindex=1', '-checkblocks=200', '-checklevel=4'],\r\n                 expected_msg=err_fragment,\r\n                 match=ErrorMatch.PARTIAL_REGEX,\r\n             )\r\n@@ -77,6 +77,7 @@ class InitTest(BitcoinTestFramework):\r\n             b'txindex thread start',\r\n             b'block filter index thread start',\r\n             b'coinstatsindex thread start',\r\n+            b'locationsindex thread start',\r\n             b'msghand thread start',\r\n             b'net thread start',\r\n             b'addcon thread start',\r\n@@ -84,7 +85,7 @@ class InitTest(BitcoinTestFramework):\r\n         if self.is_wallet_compiled():\r\n             lines_to_terminate_after.append(b'Verifying wallet')\r\n \r\n-        args = ['-txindex=1', '-blockfilterindex=1', '-coinstatsindex=1']\r\n+        args = ['-txindex=1', '-blockfilterindex=1', '-coinstatsindex=1', '-locationsindex=1']\r\n         for terminate_line in lines_to_terminate_after:\r\n             self.log.info(f\"Starting node and will terminate after line {terminate_line}\")\r\n             with node.busy_wait_for_debug_log([terminate_line]):\r\n@@ -101,12 +102,13 @@ class InitTest(BitcoinTestFramework):\r\n         self.stop_node(0)\r\n \r\n         self.log.info(\"Test startup errors after removing certain essential files\")\r\n-\r\n         files_to_delete = {\r\n             'blocks/index/*.ldb': 'Error opening block database.',\r\n             'chainstate/*.ldb': 'Error opening coins database.',\r\n             'blocks/blk*.dat': 'Error loading block database.',\r\n             'indexes/txindex/MANIFEST*': 'LevelDB error: Corruption: CURRENT points to a non-existent file',\r\n+            # If we add this, then we fail later while perturbing txindex!?:\r\n+            #'indexes/locations/db/MANIFEST*': 'LevelDB error: Corruption: CURRENT points to a non-existent file',\r\n             # Removing these files does not result in a startup error:\r\n             # 'indexes/blockfilter/basic/*.dat', 'indexes/blockfilter/basic/db/*.*', 'indexes/coinstats/db/*.*',\r\n             # 'indexes/txindex/*.log', 'indexes/txindex/CURRENT', 'indexes/txindex/LOCK'\r\n@@ -120,6 +122,8 @@ class InitTest(BitcoinTestFramework):\r\n             'indexes/coinstats/db/*.*': 'LevelDB error: Corruption',\r\n             'indexes/txindex/*.log': 'LevelDB error: Corruption',\r\n             'indexes/txindex/CURRENT': 'LevelDB error: Corruption',\r\n+            'indexes/locations/db/*.log': 'LevelDB error: Corruption',\r\n+            'indexes/locations/db/CURRENT': 'LevelDB error: Corruption',\r\n             # Perturbing these files does not result in a startup error:\r\n             # 'indexes/blockfilter/basic/*.dat', 'indexes/txindex/MANIFEST*', 'indexes/txindex/LOCK'\r\n         }\r\n```",
      "created_at": "2025-08-26T20:27:30Z",
      "updated_at": "2025-08-27T07:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2302066922",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2302066922"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 53,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2302097942",
      "pull_request_review_id": 3155477609,
      "id": 2302097942,
      "node_id": "PRRC_kwDOABII586JNzoW",
      "diff_hunk": "@@ -417,6 +417,8 @@ class BlockManager\n \n     bool ReadBlockUndo(CBlockUndo& blockundo, const CBlockIndex& index) const;\n \n+    bool ReadTxFromBlock(CTransactionRef& tx, const FlatFilePos& block_pos, size_t tx_index) const;",
      "path": "src/node/blockstorage.h",
      "position": 1,
      "original_position": 4,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Could use more modern style instead of returning duplicate bool state (also nail down index type):\r\n```suggestion\r\n    CTransactionRef ReadTxFromBlock(const FlatFilePos& block_pos, uint32_t tx_index) const;\r\n```",
      "created_at": "2025-08-26T20:42:27Z",
      "updated_at": "2025-08-27T07:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2302097942",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2302097942"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 420,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2303063088",
      "pull_request_review_id": 3155477609,
      "id": 2303063088,
      "node_id": "PRRC_kwDOABII586JRfQw",
      "diff_hunk": "@@ -472,6 +473,112 @@ static bool rest_block_notxdetails(const std::any& context, HTTPRequest* req, co\n     return rest_block(context, req, uri_part, TxVerbosity::SHOW_TXID);\n }\n \n+\n+static bool rest_tx_from_block(const std::any& context, HTTPRequest* req, const std::string& uri_part)\n+{\n+    if (!CheckWarmup(req)) return false;\n+\n+    std::string param;\n+    const RESTResponseFormat rf = ParseDataFormat(param, uri_part);\n+\n+    // request is sent over URI scheme /rest/txfromblock/blockhash-index",
      "path": "src/rest.cpp",
      "position": 20,
      "original_position": 20,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Have you considered the possibility of supporting batches of block-hash+tx-index in one GET?\r\n\r\n`rest_getutxos()` does something similar:\r\nhttps://github.com/bitcoin/bitcoin/blob/4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69/src/rest.cpp#L1007\r\n\r\nNo sure if it's best practices in the REST world though. Another option could be using a JSON blob in a HTTP header, but that may be even more frowned upon.\r\n\r\ncc @stickies-v who might have a feel for this kind of thing (came across his f959fc0397c3f3615e99bc28d2df549d9d52f277).",
      "created_at": "2025-08-27T07:03:45Z",
      "updated_at": "2025-08-27T07:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2303063088",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2303063088"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 484,
      "original_line": 484,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2312042115",
      "pull_request_review_id": 3171142737,
      "id": 2312042115,
      "node_id": "PRRC_kwDOABII586JzvaD",
      "diff_hunk": "@@ -417,6 +417,8 @@ class BlockManager\n \n     bool ReadBlockUndo(CBlockUndo& blockundo, const CBlockIndex& index) const;\n \n+    bool ReadTxFromBlock(CTransactionRef& tx, const FlatFilePos& block_pos, size_t tx_index) const;",
      "path": "src/node/blockstorage.h",
      "position": 1,
      "original_position": 4,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "in_reply_to_id": 2302097942,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "https://github.com/bitcoin/bitcoin/compare/4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69...5e1c80a22f3d3c6ecf6d4e2777d67656423dd3f3",
      "created_at": "2025-08-30T18:02:49Z",
      "updated_at": "2025-08-30T18:02:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2312042115",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2312042115"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 420,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2312042183",
      "pull_request_review_id": 3171142795,
      "id": 2312042183,
      "node_id": "PRRC_kwDOABII586JzvbH",
      "diff_hunk": "@@ -53,7 +53,7 @@ def filter_output_indices_by_value(vouts, value):\n class RESTTest (BitcoinTestFramework):",
      "path": "test/functional/interface_rest.py",
      "position": 1,
      "original_position": 1,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "in_reply_to_id": 2302066922,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good catch, will investigate.",
      "created_at": "2025-08-30T18:03:02Z",
      "updated_at": "2025-08-30T18:03:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2312042183",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2312042183"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 53,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2312042250",
      "pull_request_review_id": 3171142819,
      "id": 2312042250,
      "node_id": "PRRC_kwDOABII586JzvcK",
      "diff_hunk": "@@ -0,0 +1,141 @@\n+// Copyright (c) 2018-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockencodings.h>\n+#include <clientversion.h>\n+#include <common/args.h>\n+#include <dbwrapper.h>\n+#include <hash.h>\n+#include <index/locationsindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <primitives/block.h>\n+#include <serialize.h>\n+#include <util/fs_helpers.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_BLOCK_HASH{'s'};\n+\n+constexpr uint32_t TXS_PER_ROW{128};\n+\n+namespace {\n+\n+struct DBKey {\n+    uint256 hash;\n+    uint32_t row; // allow splitting one block's transactions into multiple DB rows\n+\n+    explicit DBKey(const uint256& hash_in, uint32_t row_in) : hash(hash_in), row(row_in) {}\n+\n+    SERIALIZE_METHODS(DBKey, obj)\n+    {\n+        uint8_t prefix{DB_BLOCK_HASH};\n+        READWRITE(prefix);\n+        if (prefix != DB_BLOCK_HASH) {\n+            throw std::ios_base::failure(\"Invalid format for location index DB hash key\");\n+        }\n+\n+        READWRITE(obj.hash);\n+        READWRITE(COMPACTSIZE(obj.row));\n+    }\n+};\n+\n+struct DBValue {\n+    FlatFilePos block_pos;\n+    std::vector<uint32_t> offsets{};\n+\n+    SERIALIZE_METHODS(DBValue, obj)\n+    {\n+        READWRITE(obj.block_pos);\n+        READWRITE(Using<VectorFormatter<DifferenceFormatter>>(obj.offsets));\n+    }\n+};\n+\n+}; // namespace\n+\n+std::unique_ptr<LocationsIndex> g_locations_index;\n+\n+LocationsIndex::LocationsIndex(std::unique_ptr<interfaces::Chain> chain,\n+                               size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"locationsindex\")\n+{\n+    fs::path path = gArgs.GetDataDirNet() / \"indexes\" / \"locations\";\n+    fs::create_directories(path);\n+\n+    m_db = std::make_unique<BaseIndex::DB>(path / \"db\", n_cache_size, f_memory, f_wipe);",
      "path": "src/index/locationsindex.cpp",
      "position": 1,
      "original_position": 65,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "in_reply_to_id": 2302039524,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "https://github.com/bitcoin/bitcoin/compare/4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69...5e1c80a22f3d3c6ecf6d4e2777d67656423dd3f3",
      "created_at": "2025-08-30T18:03:11Z",
      "updated_at": "2025-08-30T18:03:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2312042250",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2312042250"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": 61,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2312042291",
      "pull_request_review_id": 3171142863,
      "id": 2312042291,
      "node_id": "PRRC_kwDOABII586Jzvcz",
      "diff_hunk": "@@ -472,6 +473,112 @@ static bool rest_block_notxdetails(const std::any& context, HTTPRequest* req, co\n     return rest_block(context, req, uri_part, TxVerbosity::SHOW_TXID);\n }\n \n+\n+static bool rest_tx_from_block(const std::any& context, HTTPRequest* req, const std::string& uri_part)\n+{\n+    if (!CheckWarmup(req)) return false;\n+\n+    std::string param;\n+    const RESTResponseFormat rf = ParseDataFormat(param, uri_part);\n+\n+    // request is sent over URI scheme /rest/txfromblock/blockhash-index\n+    std::vector<std::string_view> uriParts{util::Split<std::string_view>(param, '-')};\n+    if (uriParts.size() != 2) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid URI format: %s\", param));\n+    }\n+\n+    std::optional<uint256> block_hash{uint256::FromHex(uriParts[0])};\n+    if (!block_hash) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid hash: %s\", uriParts[0]));\n+    }\n+\n+    const std::optional<size_t> parsed_index{ToIntegral<size_t>(uriParts[1])};\n+    if (!parsed_index.has_value()) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Transaction index is invalid: %s\", uriParts[1]));\n+    }\n+    const size_t index = *parsed_index;\n+\n+    ChainstateManager* maybe_chainman = GetChainman(context, req);\n+    if (!maybe_chainman) return false;\n+    ChainstateManager& chainman = *maybe_chainman;",
      "path": "src/rest.cpp",
      "position": 1,
      "original_position": 39,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "in_reply_to_id": 2301912424,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "https://github.com/bitcoin/bitcoin/compare/4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69...5e1c80a22f3d3c6ecf6d4e2777d67656423dd3f3",
      "created_at": "2025-08-30T18:03:23Z",
      "updated_at": "2025-08-30T18:03:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2312042291",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2312042291"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": 501,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 503,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2312042310",
      "pull_request_review_id": 3171142889,
      "id": 2312042310,
      "node_id": "PRRC_kwDOABII586JzvdG",
      "diff_hunk": "@@ -472,6 +473,112 @@ static bool rest_block_notxdetails(const std::any& context, HTTPRequest* req, co\n     return rest_block(context, req, uri_part, TxVerbosity::SHOW_TXID);\n }\n \n+\n+static bool rest_tx_from_block(const std::any& context, HTTPRequest* req, const std::string& uri_part)\n+{\n+    if (!CheckWarmup(req)) return false;\n+\n+    std::string param;\n+    const RESTResponseFormat rf = ParseDataFormat(param, uri_part);\n+\n+    // request is sent over URI scheme /rest/txfromblock/blockhash-index\n+    std::vector<std::string_view> uriParts{util::Split<std::string_view>(param, '-')};",
      "path": "src/rest.cpp",
      "position": 1,
      "original_position": 21,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "in_reply_to_id": 2301697459,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "https://github.com/bitcoin/bitcoin/compare/4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69...5e1c80a22f3d3c6ecf6d4e2777d67656423dd3f3",
      "created_at": "2025-08-30T18:03:32Z",
      "updated_at": "2025-08-30T18:03:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2312042310",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2312042310"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 485,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2312042321",
      "pull_request_review_id": 3171142901,
      "id": 2312042321,
      "node_id": "PRRC_kwDOABII586JzvdR",
      "diff_hunk": "@@ -472,6 +473,112 @@ static bool rest_block_notxdetails(const std::any& context, HTTPRequest* req, co\n     return rest_block(context, req, uri_part, TxVerbosity::SHOW_TXID);\n }\n \n+\n+static bool rest_tx_from_block(const std::any& context, HTTPRequest* req, const std::string& uri_part)\n+{\n+    if (!CheckWarmup(req)) return false;\n+\n+    std::string param;\n+    const RESTResponseFormat rf = ParseDataFormat(param, uri_part);\n+\n+    // request is sent over URI scheme /rest/txfromblock/blockhash-index\n+    std::vector<std::string_view> uriParts{util::Split<std::string_view>(param, '-')};\n+    if (uriParts.size() != 2) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid URI format: %s\", param));\n+    }\n+\n+    std::optional<uint256> block_hash{uint256::FromHex(uriParts[0])};\n+    if (!block_hash) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid hash: %s\", uriParts[0]));\n+    }\n+\n+    const std::optional<size_t> parsed_index{ToIntegral<size_t>(uriParts[1])};\n+    if (!parsed_index.has_value()) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Transaction index is invalid: %s\", uriParts[1]));\n+    }\n+    const size_t index = *parsed_index;\n+\n+    ChainstateManager* maybe_chainman = GetChainman(context, req);\n+    if (!maybe_chainman) return false;\n+    ChainstateManager& chainman = *maybe_chainman;\n+\n+    const LocationsIndex* locations_index = g_locations_index.get();\n+    if (locations_index && !locations_index->BlockUntilSyncedToCurrentChain()) {\n+        RESTERR(req, HTTP_SERVICE_UNAVAILABLE, \"Locations index is still syncing\");\n+    }\n+\n+    FlatFilePos block_pos{};\n+    if (!locations_index) {\n+        LOCK(cs_main);\n+        const CBlockIndex* pindex{chainman.m_blockman.LookupBlockIndex(*block_hash)};",
      "path": "src/rest.cpp",
      "position": 1,
      "original_position": 49,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "in_reply_to_id": 2301692085,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "https://github.com/bitcoin/bitcoin/compare/4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69...5e1c80a22f3d3c6ecf6d4e2777d67656423dd3f3",
      "created_at": "2025-08-30T18:03:36Z",
      "updated_at": "2025-08-30T18:03:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2312042321",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2312042321"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 513,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2312042339",
      "pull_request_review_id": 3171142919,
      "id": 2312042339,
      "node_id": "PRRC_kwDOABII586Jzvdj",
      "diff_hunk": "@@ -472,6 +473,112 @@ static bool rest_block_notxdetails(const std::any& context, HTTPRequest* req, co\n     return rest_block(context, req, uri_part, TxVerbosity::SHOW_TXID);\n }\n \n+\n+static bool rest_tx_from_block(const std::any& context, HTTPRequest* req, const std::string& uri_part)\n+{\n+    if (!CheckWarmup(req)) return false;\n+\n+    std::string param;\n+    const RESTResponseFormat rf = ParseDataFormat(param, uri_part);\n+\n+    // request is sent over URI scheme /rest/txfromblock/blockhash-index\n+    std::vector<std::string_view> uriParts{util::Split<std::string_view>(param, '-')};\n+    if (uriParts.size() != 2) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid URI format: %s\", param));\n+    }\n+\n+    std::optional<uint256> block_hash{uint256::FromHex(uriParts[0])};\n+    if (!block_hash) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid hash: %s\", uriParts[0]));\n+    }\n+\n+    const std::optional<size_t> parsed_index{ToIntegral<size_t>(uriParts[1])};\n+    if (!parsed_index.has_value()) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Transaction index is invalid: %s\", uriParts[1]));\n+    }\n+    const size_t index = *parsed_index;\n+\n+    ChainstateManager* maybe_chainman = GetChainman(context, req);\n+    if (!maybe_chainman) return false;\n+    ChainstateManager& chainman = *maybe_chainman;\n+\n+    const LocationsIndex* locations_index = g_locations_index.get();\n+    if (locations_index && !locations_index->BlockUntilSyncedToCurrentChain()) {\n+        RESTERR(req, HTTP_SERVICE_UNAVAILABLE, \"Locations index is still syncing\");\n+    }\n+\n+    FlatFilePos block_pos{};\n+    if (!locations_index) {\n+        LOCK(cs_main);\n+        const CBlockIndex* pindex{chainman.m_blockman.LookupBlockIndex(*block_hash)};\n+        if (pindex == nullptr) {\n+            return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Block %s not found\", uriParts[0]));\n+        }\n+        if (pindex->nHeight > 0 && !pindex->IsValid(BLOCK_VALID_SCRIPTS)) {\n+            return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Block %s not validated\", uriParts[0]));\n+        }\n+        if (index >= pindex->nTx) {\n+            return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Block %s has only %d transactions\", uriParts[0], pindex->nTx));\n+        }\n+        block_pos = pindex->GetBlockPos();\n+    }\n+\n+    CTransactionRef tx{};\n+    std::vector<std::byte> tx_bytes{};\n+    bool success{false};\n+    if (!locations_index) {\n+        // Read full block and skip irrelevant transactions\n+        success = chainman.m_blockman.ReadTxFromBlock(tx, block_pos, index);\n+    } else {\n+        success = locations_index->ReadRawTransaction(*block_hash, index, tx_bytes);\n+    }\n+\n+    if (!success) {\n+        return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Failed to read transaction #%d from block %s\", index, block_hash->ToString()));\n+    }\n+\n+    DataStream serialized{};\n+    switch (rf) {\n+    case RESTResponseFormat::BINARY: {\n+        req->WriteHeader(\"Content-Type\", \"application/octet-stream\");\n+        std::span<std::byte> result{tx_bytes};\n+        if (tx) {\n+            serialized << TX_WITH_WITNESS(tx);\n+            result = serialized;\n+        }\n+        req->WriteReply(HTTP_OK, result);\n+        return true;\n+    }\n+    case RESTResponseFormat::HEX: {\n+        std::string strHex{};\n+        if (tx) {\n+            serialized << TX_WITH_WITNESS(tx);\n+            strHex = HexStr(serialized);\n+        } else {\n+            strHex = HexStr(tx_bytes);\n+        }\n+        strHex.append(\"\\n\");\n+        req->WriteHeader(\"Content-Type\", \"text/plain\");\n+        req->WriteReply(HTTP_OK, strHex);\n+        return true;\n+    }\n+    case RESTResponseFormat::JSON: {\n+        if (!tx) {\n+            DataStream{tx_bytes} >> TX_WITH_WITNESS(tx);\n+        }\n+        UniValue objTx(UniValue::VOBJ);\n+        TxToUniv(*tx, /*block_hash=*/{}, /*entry=*/objTx);\n+        std::string strJSON = objTx.write() + \"\\n\";",
      "path": "src/rest.cpp",
      "position": 1,
      "original_position": 107,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "in_reply_to_id": 2301676647,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "https://github.com/bitcoin/bitcoin/compare/4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69...5e1c80a22f3d3c6ecf6d4e2777d67656423dd3f3",
      "created_at": "2025-08-30T18:03:42Z",
      "updated_at": "2025-08-30T18:03:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2312042339",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2312042339"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 571,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2312042674",
      "pull_request_review_id": 3171143283,
      "id": 2312042674,
      "node_id": "PRRC_kwDOABII586Jzviy",
      "diff_hunk": "@@ -0,0 +1,141 @@\n+// Copyright (c) 2018-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockencodings.h>\n+#include <clientversion.h>\n+#include <common/args.h>\n+#include <dbwrapper.h>\n+#include <hash.h>\n+#include <index/locationsindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <primitives/block.h>\n+#include <serialize.h>\n+#include <util/fs_helpers.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_BLOCK_HASH{'s'};\n+\n+constexpr uint32_t TXS_PER_ROW{128};\n+\n+namespace {\n+\n+struct DBKey {\n+    uint256 hash;\n+    uint32_t row; // allow splitting one block's transactions into multiple DB rows\n+\n+    explicit DBKey(const uint256& hash_in, uint32_t row_in) : hash(hash_in), row(row_in) {}\n+\n+    SERIALIZE_METHODS(DBKey, obj)\n+    {\n+        uint8_t prefix{DB_BLOCK_HASH};\n+        READWRITE(prefix);\n+        if (prefix != DB_BLOCK_HASH) {\n+            throw std::ios_base::failure(\"Invalid format for location index DB hash key\");\n+        }\n+\n+        READWRITE(obj.hash);\n+        READWRITE(COMPACTSIZE(obj.row));\n+    }\n+};\n+\n+struct DBValue {\n+    FlatFilePos block_pos;\n+    std::vector<uint32_t> offsets{};\n+\n+    SERIALIZE_METHODS(DBValue, obj)\n+    {\n+        READWRITE(obj.block_pos);\n+        READWRITE(Using<VectorFormatter<DifferenceFormatter>>(obj.offsets));\n+    }\n+};\n+\n+}; // namespace\n+\n+std::unique_ptr<LocationsIndex> g_locations_index;\n+\n+LocationsIndex::LocationsIndex(std::unique_ptr<interfaces::Chain> chain,\n+                               size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"locationsindex\")\n+{\n+    fs::path path = gArgs.GetDataDirNet() / \"indexes\" / \"locations\";\n+    fs::create_directories(path);\n+\n+    m_db = std::make_unique<BaseIndex::DB>(path / \"db\", n_cache_size, f_memory, f_wipe);\n+}\n+\n+bool LocationsIndex::CustomAppend(const interfaces::BlockInfo& block)\n+{\n+    static const uint32_t HEADER_SIZE = ::GetSerializeSize(CBlockHeader{});\n+\n+    assert(block.data);\n+    assert(block.file_number >= 0);\n+\n+    const uint32_t nTx = block.data->vtx.size();\n+    uint32_t nTxOffset = HEADER_SIZE + GetSizeOfCompactSize(nTx);\n+\n+    std::vector<uint32_t> block_offsets{};\n+    block_offsets.reserve(nTx + 1);\n+    block_offsets.push_back(nTxOffset); // first transaction offset within the block\n+\n+    for (const auto& tx : block.data->vtx) {\n+        nTxOffset += ::GetSerializeSize(TX_WITH_WITNESS(*tx));\n+        block_offsets.push_back(nTxOffset);\n+    }\n+\n+    CDBBatch batch{GetDB()};\n+    uint32_t copied = 0;\n+    for (uint32_t row = 0; copied < nTx; ++row) {\n+        size_t row_size = std::min(nTx - copied, TXS_PER_ROW);\n+        std::span<uint32_t> row_offsets{&block_offsets[copied], row_size + 1};\n+\n+        DBKey key{block.hash, row};\n+        DBValue value{{block.file_number, block.data_pos}, {row_offsets.begin(), row_offsets.end()}};\n+\n+        copied += row_size;\n+        batch.Write(key, value);\n+    }\n+    return GetDB().WriteBatch(batch);\n+}\n+\n+bool LocationsIndex::ReadRawTransaction(const uint256& block_hash, size_t i, std::vector<std::byte>& out) const\n+{\n+    uint32_t row = i / TXS_PER_ROW;      // used to find the correct DB row\n+    const auto column = i % TXS_PER_ROW; // index within a single DB row\n+\n+    DBValue value{};\n+    if (!m_db->Read(DBKey{block_hash, row}, value)) {\n+        return false;\n+    }\n+\n+    if (value.offsets.size() <= 1) {\n+        LogError(\"%s: LocationsIndex entry for %s:%u must have >1 offsets\\n\", __func__, block_hash.ToString(), row);\n+        return false;\n+    }\n+    size_t tx_count = value.offsets.size() - 1;\n+    if (column >= tx_count) {\n+        LogError(\"%s: LocationsIndex entry for %s:%u has %d transactions\\n\", __func__, block_hash.ToString(), row, tx_count);\n+        return false;\n+    }\n+\n+    FlatFilePos tx_pos{value.block_pos};\n+    tx_pos.nPos += value.offsets[column];\n+    size_t tx_size = value.offsets[column + 1] - value.offsets[column];\n+\n+    AutoFile file{m_chainstate->m_blockman.OpenBlockFile(tx_pos, true)};\n+    if (file.IsNull()) {\n+        LogError(\"%s: OpenBlockFile failed\\n\", __func__);\n+        return false;\n+    }\n+\n+    out.resize(tx_size); // Zeroing of memory is intentional here",
      "path": "src/index/locationsindex.cpp",
      "position": 1,
      "original_position": 132,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "in_reply_to_id": 2300949481,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "https://github.com/bitcoin/bitcoin/compare/4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69...5e1c80a22f3d3c6ecf6d4e2777d67656423dd3f3",
      "created_at": "2025-08-30T18:03:52Z",
      "updated_at": "2025-08-30T18:03:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2312042674",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2312042674"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 132,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2312042728",
      "pull_request_review_id": 3171143354,
      "id": 2312042728,
      "node_id": "PRRC_kwDOABII586Jzvjo",
      "diff_hunk": "@@ -0,0 +1,141 @@\n+// Copyright (c) 2018-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockencodings.h>\n+#include <clientversion.h>\n+#include <common/args.h>\n+#include <dbwrapper.h>\n+#include <hash.h>\n+#include <index/locationsindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <primitives/block.h>\n+#include <serialize.h>\n+#include <util/fs_helpers.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_BLOCK_HASH{'s'};\n+\n+constexpr uint32_t TXS_PER_ROW{128};\n+\n+namespace {\n+\n+struct DBKey {\n+    uint256 hash;\n+    uint32_t row; // allow splitting one block's transactions into multiple DB rows\n+\n+    explicit DBKey(const uint256& hash_in, uint32_t row_in) : hash(hash_in), row(row_in) {}\n+\n+    SERIALIZE_METHODS(DBKey, obj)\n+    {\n+        uint8_t prefix{DB_BLOCK_HASH};\n+        READWRITE(prefix);\n+        if (prefix != DB_BLOCK_HASH) {\n+            throw std::ios_base::failure(\"Invalid format for location index DB hash key\");\n+        }\n+\n+        READWRITE(obj.hash);\n+        READWRITE(COMPACTSIZE(obj.row));\n+    }\n+};\n+\n+struct DBValue {\n+    FlatFilePos block_pos;\n+    std::vector<uint32_t> offsets{};\n+\n+    SERIALIZE_METHODS(DBValue, obj)\n+    {\n+        READWRITE(obj.block_pos);\n+        READWRITE(Using<VectorFormatter<DifferenceFormatter>>(obj.offsets));\n+    }\n+};\n+\n+}; // namespace\n+\n+std::unique_ptr<LocationsIndex> g_locations_index;\n+\n+LocationsIndex::LocationsIndex(std::unique_ptr<interfaces::Chain> chain,\n+                               size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"locationsindex\")\n+{\n+    fs::path path = gArgs.GetDataDirNet() / \"indexes\" / \"locations\";\n+    fs::create_directories(path);\n+\n+    m_db = std::make_unique<BaseIndex::DB>(path / \"db\", n_cache_size, f_memory, f_wipe);\n+}\n+\n+bool LocationsIndex::CustomAppend(const interfaces::BlockInfo& block)\n+{\n+    static const uint32_t HEADER_SIZE = ::GetSerializeSize(CBlockHeader{});\n+\n+    assert(block.data);\n+    assert(block.file_number >= 0);\n+\n+    const uint32_t nTx = block.data->vtx.size();\n+    uint32_t nTxOffset = HEADER_SIZE + GetSizeOfCompactSize(nTx);\n+\n+    std::vector<uint32_t> block_offsets{};\n+    block_offsets.reserve(nTx + 1);\n+    block_offsets.push_back(nTxOffset); // first transaction offset within the block\n+\n+    for (const auto& tx : block.data->vtx) {\n+        nTxOffset += ::GetSerializeSize(TX_WITH_WITNESS(*tx));\n+        block_offsets.push_back(nTxOffset);\n+    }\n+\n+    CDBBatch batch{GetDB()};\n+    uint32_t copied = 0;\n+    for (uint32_t row = 0; copied < nTx; ++row) {\n+        size_t row_size = std::min(nTx - copied, TXS_PER_ROW);\n+        std::span<uint32_t> row_offsets{&block_offsets[copied], row_size + 1};\n+\n+        DBKey key{block.hash, row};\n+        DBValue value{{block.file_number, block.data_pos}, {row_offsets.begin(), row_offsets.end()}};\n+\n+        copied += row_size;\n+        batch.Write(key, value);\n+    }\n+    return GetDB().WriteBatch(batch);\n+}\n+\n+bool LocationsIndex::ReadRawTransaction(const uint256& block_hash, size_t i, std::vector<std::byte>& out) const\n+{\n+    uint32_t row = i / TXS_PER_ROW;      // used to find the correct DB row\n+    const auto column = i % TXS_PER_ROW; // index within a single DB row",
      "path": "src/index/locationsindex.cpp",
      "position": 1,
      "original_position": 105,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "in_reply_to_id": 2300933020,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "https://github.com/bitcoin/bitcoin/compare/4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69...5e1c80a22f3d3c6ecf6d4e2777d67656423dd3f3",
      "created_at": "2025-08-30T18:03:56Z",
      "updated_at": "2025-08-30T18:03:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2312042728",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2312042728"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": 102,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 105,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2312042753",
      "pull_request_review_id": 3171143395,
      "id": 2312042753,
      "node_id": "PRRC_kwDOABII586JzvkB",
      "diff_hunk": "@@ -0,0 +1,141 @@\n+// Copyright (c) 2018-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockencodings.h>\n+#include <clientversion.h>\n+#include <common/args.h>\n+#include <dbwrapper.h>\n+#include <hash.h>\n+#include <index/locationsindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <primitives/block.h>\n+#include <serialize.h>\n+#include <util/fs_helpers.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_BLOCK_HASH{'s'};\n+\n+constexpr uint32_t TXS_PER_ROW{128};\n+\n+namespace {\n+\n+struct DBKey {\n+    uint256 hash;\n+    uint32_t row; // allow splitting one block's transactions into multiple DB rows\n+\n+    explicit DBKey(const uint256& hash_in, uint32_t row_in) : hash(hash_in), row(row_in) {}\n+\n+    SERIALIZE_METHODS(DBKey, obj)\n+    {\n+        uint8_t prefix{DB_BLOCK_HASH};\n+        READWRITE(prefix);\n+        if (prefix != DB_BLOCK_HASH) {\n+            throw std::ios_base::failure(\"Invalid format for location index DB hash key\");\n+        }\n+\n+        READWRITE(obj.hash);\n+        READWRITE(COMPACTSIZE(obj.row));\n+    }\n+};\n+\n+struct DBValue {\n+    FlatFilePos block_pos;\n+    std::vector<uint32_t> offsets{};\n+\n+    SERIALIZE_METHODS(DBValue, obj)\n+    {\n+        READWRITE(obj.block_pos);\n+        READWRITE(Using<VectorFormatter<DifferenceFormatter>>(obj.offsets));\n+    }\n+};\n+\n+}; // namespace\n+\n+std::unique_ptr<LocationsIndex> g_locations_index;\n+\n+LocationsIndex::LocationsIndex(std::unique_ptr<interfaces::Chain> chain,\n+                               size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"locationsindex\")\n+{\n+    fs::path path = gArgs.GetDataDirNet() / \"indexes\" / \"locations\";\n+    fs::create_directories(path);\n+\n+    m_db = std::make_unique<BaseIndex::DB>(path / \"db\", n_cache_size, f_memory, f_wipe);\n+}\n+\n+bool LocationsIndex::CustomAppend(const interfaces::BlockInfo& block)\n+{\n+    static const uint32_t HEADER_SIZE = ::GetSerializeSize(CBlockHeader{});\n+\n+    assert(block.data);\n+    assert(block.file_number >= 0);\n+\n+    const uint32_t nTx = block.data->vtx.size();\n+    uint32_t nTxOffset = HEADER_SIZE + GetSizeOfCompactSize(nTx);",
      "path": "src/index/locationsindex.cpp",
      "position": 1,
      "original_position": 76,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "in_reply_to_id": 2300903099,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "https://github.com/bitcoin/bitcoin/compare/4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69...5e1c80a22f3d3c6ecf6d4e2777d67656423dd3f3",
      "created_at": "2025-08-30T18:03:59Z",
      "updated_at": "2025-08-30T18:03:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2312042753",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2312042753"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": 75,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2312042785",
      "pull_request_review_id": 3171143443,
      "id": 2312042785,
      "node_id": "PRRC_kwDOABII586Jzvkh",
      "diff_hunk": "@@ -0,0 +1,141 @@\n+// Copyright (c) 2018-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockencodings.h>\n+#include <clientversion.h>",
      "path": "src/index/locationsindex.cpp",
      "position": 1,
      "original_position": 6,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "in_reply_to_id": 2300885992,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "https://github.com/bitcoin/bitcoin/compare/4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69...5e1c80a22f3d3c6ecf6d4e2777d67656423dd3f3",
      "created_at": "2025-08-30T18:04:03Z",
      "updated_at": "2025-08-30T18:04:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2312042785",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2312042785"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2312042913",
      "pull_request_review_id": 3171143577,
      "id": 2312042913,
      "node_id": "PRRC_kwDOABII586Jzvmh",
      "diff_hunk": "@@ -0,0 +1,40 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INDEX_LOCATIONSINDEX_H\n+#define BITCOIN_INDEX_LOCATIONSINDEX_H\n+\n+#include <attributes.h>\n+#include <chain.h>\n+#include <index/base.h>\n+\n+static constexpr bool DEFAULT_LOCATIONSINDEX{false};\n+\n+/**\n+ * LocationsIndex is used to store and retrieve transactions' location within a block.",
      "path": "src/index/locationsindex.h",
      "position": 1,
      "original_position": 15,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "in_reply_to_id": 2301710958,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "https://github.com/bitcoin/bitcoin/compare/4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69...5e1c80a22f3d3c6ecf6d4e2777d67656423dd3f3",
      "created_at": "2025-08-30T18:04:29Z",
      "updated_at": "2025-08-30T18:04:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2312042913",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2312042913"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2312043002",
      "pull_request_review_id": 3171143667,
      "id": 2312043002,
      "node_id": "PRRC_kwDOABII586Jzvn6",
      "diff_hunk": "@@ -238,6 +238,7 @@ add_library(bitcoin_node STATIC EXCLUDE_FROM_ALL\n   index/base.cpp\n   index/blockfilterindex.cpp",
      "path": "src/CMakeLists.txt",
      "position": 2,
      "original_position": 2,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "in_reply_to_id": 2301851875,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Sounds good - done.",
      "created_at": "2025-08-30T18:04:55Z",
      "updated_at": "2025-08-30T18:04:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2312043002",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2312043002"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 194,
      "original_line": 194,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2312043135",
      "pull_request_review_id": 3171143760,
      "id": 2312043135,
      "node_id": "PRRC_kwDOABII586Jzvp_",
      "diff_hunk": "@@ -1777,6 +1780,11 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n         node.indexes.emplace_back(g_coin_stats_index.get());\n     }\n \n+    if (args.GetBoolArg(\"-locationsindex\", DEFAULT_LOCATIONSINDEX)) {\n+        g_locations_index = std::make_unique<LocationsIndex>(interfaces::MakeChain(node), /*cache_size=*/0, false, do_reindex);",
      "path": "src/init.cpp",
      "position": 1,
      "original_position": 29,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "in_reply_to_id": 2301880011,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Not yet - will do and report the results here.",
      "created_at": "2025-08-30T18:05:18Z",
      "updated_at": "2025-08-30T18:05:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2312043135",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2312043135"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1784,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2312043215",
      "pull_request_review_id": 3171143814,
      "id": 2312043215,
      "node_id": "PRRC_kwDOABII586JzvrP",
      "diff_hunk": "@@ -1777,6 +1780,11 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n         node.indexes.emplace_back(g_coin_stats_index.get());\n     }\n \n+    if (args.GetBoolArg(\"-locationsindex\", DEFAULT_LOCATIONSINDEX)) {\n+        g_locations_index = std::make_unique<LocationsIndex>(interfaces::MakeChain(node), /*cache_size=*/0, false, do_reindex);",
      "path": "src/init.cpp",
      "position": 1,
      "original_position": 29,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "in_reply_to_id": 2301891461,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "https://github.com/bitcoin/bitcoin/compare/4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69...5e1c80a22f3d3c6ecf6d4e2777d67656423dd3f3",
      "created_at": "2025-08-30T18:05:30Z",
      "updated_at": "2025-08-30T18:05:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2312043215",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2312043215"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1784,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2312254549",
      "pull_request_review_id": 3171388193,
      "id": 2312254549,
      "node_id": "PRRC_kwDOABII586J0jRV",
      "diff_hunk": "@@ -472,6 +473,112 @@ static bool rest_block_notxdetails(const std::any& context, HTTPRequest* req, co\n     return rest_block(context, req, uri_part, TxVerbosity::SHOW_TXID);\n }\n \n+\n+static bool rest_tx_from_block(const std::any& context, HTTPRequest* req, const std::string& uri_part)\n+{\n+    if (!CheckWarmup(req)) return false;\n+\n+    std::string param;\n+    const RESTResponseFormat rf = ParseDataFormat(param, uri_part);\n+\n+    // request is sent over URI scheme /rest/txfromblock/blockhash-index\n+    std::vector<std::string_view> uriParts{util::Split<std::string_view>(param, '-')};\n+    if (uriParts.size() != 2) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid URI format: %s\", param));\n+    }\n+\n+    std::optional<uint256> block_hash{uint256::FromHex(uriParts[0])};\n+    if (!block_hash) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid hash: %s\", uriParts[0]));\n+    }\n+\n+    const std::optional<size_t> parsed_index{ToIntegral<size_t>(uriParts[1])};\n+    if (!parsed_index.has_value()) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Transaction index is invalid: %s\", uriParts[1]));\n+    }\n+    const size_t index = *parsed_index;\n+\n+    ChainstateManager* maybe_chainman = GetChainman(context, req);\n+    if (!maybe_chainman) return false;\n+    ChainstateManager& chainman = *maybe_chainman;\n+\n+    const LocationsIndex* locations_index = g_locations_index.get();\n+    if (locations_index && !locations_index->BlockUntilSyncedToCurrentChain()) {\n+        RESTERR(req, HTTP_SERVICE_UNAVAILABLE, \"Locations index is still syncing\");\n+    }\n+\n+    FlatFilePos block_pos{};\n+    if (!locations_index) {\n+        LOCK(cs_main);\n+        const CBlockIndex* pindex{chainman.m_blockman.LookupBlockIndex(*block_hash)};\n+        if (pindex == nullptr) {\n+            return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Block %s not found\", uriParts[0]));\n+        }\n+        if (pindex->nHeight > 0 && !pindex->IsValid(BLOCK_VALID_SCRIPTS)) {\n+            return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Block %s not validated\", uriParts[0]));\n+        }\n+        if (index >= pindex->nTx) {\n+            return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Block %s has only %d transactions\", uriParts[0], pindex->nTx));\n+        }\n+        block_pos = pindex->GetBlockPos();\n+    }\n+\n+    CTransactionRef tx{};\n+    std::vector<std::byte> tx_bytes{};\n+    bool success{false};\n+    if (!locations_index) {\n+        // Read full block and skip irrelevant transactions\n+        success = chainman.m_blockman.ReadTxFromBlock(tx, block_pos, index);\n+    } else {\n+        success = locations_index->ReadRawTransaction(*block_hash, index, tx_bytes);\n+    }\n+\n+    if (!success) {\n+        return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Failed to read transaction #%d from block %s\", index, block_hash->ToString()));\n+    }\n+\n+    DataStream serialized{};\n+    switch (rf) {\n+    case RESTResponseFormat::BINARY: {\n+        req->WriteHeader(\"Content-Type\", \"application/octet-stream\");\n+        std::span<std::byte> result{tx_bytes};\n+        if (tx) {\n+            serialized << TX_WITH_WITNESS(tx);\n+            result = serialized;\n+        }\n+        req->WriteReply(HTTP_OK, result);\n+        return true;\n+    }\n+    case RESTResponseFormat::HEX: {\n+        std::string strHex{};\n+        if (tx) {\n+            serialized << TX_WITH_WITNESS(tx);\n+            strHex = HexStr(serialized);\n+        } else {\n+            strHex = HexStr(tx_bytes);\n+        }\n+        strHex.append(\"\\n\");",
      "path": "src/rest.cpp",
      "position": 1,
      "original_position": 96,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "in_reply_to_id": 2301676036,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "https://github.com/bitcoin/bitcoin/compare/4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69...5e1c80a22f3d3c6ecf6d4e2777d67656423dd3f3",
      "created_at": "2025-08-31T05:17:36Z",
      "updated_at": "2025-08-31T05:17:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2312254549",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2312254549"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 560,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2312290776",
      "pull_request_review_id": 3171446363,
      "id": 2312290776,
      "node_id": "PRRC_kwDOABII586J0sHY",
      "diff_hunk": "@@ -53,7 +53,7 @@ def filter_output_indices_by_value(vouts, value):\n class RESTTest (BitcoinTestFramework):",
      "path": "test/functional/interface_rest.py",
      "position": 1,
      "original_position": 1,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "in_reply_to_id": 2302066922,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/32541/commits/94389c28e1068ffcc116614d16ac3047eb3068e3 seems to be passing (after a rebase over `master`) :thinking: ",
      "created_at": "2025-08-31T06:50:44Z",
      "updated_at": "2025-08-31T06:50:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2312290776",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2312290776"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 53,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2312297480",
      "pull_request_review_id": 3171455818,
      "id": 2312297480,
      "node_id": "PRRC_kwDOABII586J0twI",
      "diff_hunk": "@@ -238,6 +238,7 @@ add_library(bitcoin_node STATIC EXCLUDE_FROM_ALL\n   index/base.cpp",
      "path": "src/CMakeLists.txt",
      "position": 1,
      "original_position": 1,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "in_reply_to_id": 2301776737,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks - updated the comment.",
      "created_at": "2025-08-31T07:06:23Z",
      "updated_at": "2025-08-31T07:06:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2312297480",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2312297480"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 193,
      "original_line": 193,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2312514122",
      "pull_request_review_id": 3171683608,
      "id": 2312514122,
      "node_id": "PRRC_kwDOABII586J1ipK",
      "diff_hunk": "@@ -53,7 +53,7 @@ def filter_output_indices_by_value(vouts, value):\n class RESTTest (BitcoinTestFramework):",
      "path": "test/functional/interface_rest.py",
      "position": 1,
      "original_position": 1,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "in_reply_to_id": 2302066922,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "@hodlinator would it be OK to squash https://github.com/bitcoin/bitcoin/commit/94389c28e1068ffcc116614d16ac3047eb3068e3 into https://github.com/bitcoin/bitcoin/pull/32541/commits/bdd90ab25f5f3b05c03a8dfb7177399264bed377?",
      "created_at": "2025-08-31T15:27:12Z",
      "updated_at": "2025-08-31T15:27:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2312514122",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2312514122"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 53,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2318047389",
      "pull_request_review_id": 3179176604,
      "id": 2318047389,
      "node_id": "PRRC_kwDOABII586KKpid",
      "diff_hunk": "@@ -53,7 +53,7 @@ def filter_output_indices_by_value(vouts, value):\n class RESTTest (BitcoinTestFramework):",
      "path": "test/functional/interface_rest.py",
      "position": 1,
      "original_position": 1,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "in_reply_to_id": 2302066922,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> 94389c28e1068ffcc116614d16ac3047eb3068e3 seems to be passing (after a rebase over `master`) 🤔\r\n\r\nTried rebasing my suggestions-branch, and 528f79f010d1617163e4154753b85e04539af993 / #32835 (which I also reviewed :grimacing:) fixed the issue by waiting for indexes to sync up before restarting the node.\r\n\r\n> would it be OK to squash 94389c28e1068ffcc116614d16ac3047eb3068e3 into bdd90ab25f5f3b05c03a8dfb7177399264bed377?\r\n\r\nFine by me! Could add me as `Co-authored-by: Hodlinator <172445034+hodlinator@users.noreply.github.com>` if you want.\r\n",
      "created_at": "2025-09-03T07:33:53Z",
      "updated_at": "2025-09-03T09:18:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2318047389",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2318047389"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 53,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2318157602",
      "pull_request_review_id": 3179176604,
      "id": 2318157602,
      "node_id": "PRRC_kwDOABII586KLEci",
      "diff_hunk": "@@ -472,5 +470,24 @@ def run_test(self):\n         resp = self.test_rest_request(f\"/deploymentinfo/{INVALID_PARAM}\", ret_type=RetType.OBJ, status=400)\n         assert_equal(resp.read().decode('utf-8').rstrip(), f\"Invalid hash: {INVALID_PARAM}\")\n \n+        self.log.info(\"Test the /txfromblock URI\")\n+        block_count = self.nodes[0].getblockcount()\n+        expected_index_info = {'synced': True, 'best_block_height': block_count}\n+        self.wait_until(lambda: self.nodes[0].getindexinfo()['locationsindex'] == expected_index_info)\n+        for height in range(0, block_count + 1):\n+            blockhash = self.nodes[0].getblockhash(height)\n+            block = self.nodes[0].getblock(blockhash, 2)\n+            txs = block[\"tx\"]\n+            self.log.debug(\"Checking block: %s (%d txs)\", blockhash, len(txs))\n+            for i, tx in enumerate(txs):\n+                self.log.debug(\"Checking tx #%d: %s\", i, tx[\"txid\"])\n+                tx_bytes = self.test_rest_request(f\"/txfromblock/{blockhash}-{i}\", req_type=ReqType.BIN, ret_type=RetType.BYTES)\n+                assert tx_bytes.hex() == tx[\"hex\"]\n+                tx_hex = self.test_rest_request(f\"/txfromblock/{blockhash}-{i}\", req_type=ReqType.HEX, ret_type=RetType.BYTES).decode().strip()\n+                assert tx_hex == tx[\"hex\"]\n+                tx_json = self.test_rest_request(f\"/txfromblock/{blockhash}-{i}\", req_type=ReqType.JSON, ret_type=RetType.JSON)\n+                assert tx_json[\"txid\"] == tx[\"txid\"]\n+                assert tx_json[\"hex\"] == tx[\"hex\"]",
      "path": "test/functional/interface_rest.py",
      "position": 1,
      "original_position": 43,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "94389c28e1068ffcc116614d16ac3047eb3068e3",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Could cover both paths:\r\n```diff\r\ndiff --git a/test/functional/interface_rest.py b/test/functional/interface_rest.py\r\nindex 541dde3174..333b8c3f79 100755\r\n--- a/test/functional/interface_rest.py\r\n+++ b/test/functional/interface_rest.py\r\n@@ -28,7 +28,7 @@ from test_framework.wallet import (\r\n     MiniWallet,\r\n     getnewdestination,\r\n )\r\n-from typing import Optional\r\n+from typing import Optional, NamedTuple\r\n \r\n \r\n INVALID_PARAM = \"abc\"\r\n@@ -53,7 +53,7 @@ def filter_output_indices_by_value(vouts, value):\r\n class RESTTest (BitcoinTestFramework):\r\n     def set_test_params(self):\r\n         self.num_nodes = 2\r\n-        self.extra_args = [[\"-rest\", \"-blockfilterindex=1\", \"-locationsindex=1\"], []]\r\n+        self.extra_args = [[\"-rest\", \"-blockfilterindex=1\", \"-locationsindex=1\"], [\"-rest\"]]\r\n         # whitelist peers to speed up tx relay / mempool sync\r\n         self.noban_tx_relay = True\r\n         self.supports_cli = False\r\n@@ -67,14 +67,17 @@ class RESTTest (BitcoinTestFramework):\r\n             status: int = 200,\r\n             ret_type: RetType = RetType.JSON,\r\n             query_params: Optional[dict[str, typing.Any]] = None,\r\n+            url: Optional[NamedTuple] = None,\r\n             ) -> typing.Union[http.client.HTTPResponse, bytes, str, None]:\r\n         rest_uri = '/rest' + uri\r\n         if req_type in ReqType:\r\n             rest_uri += f'.{req_type.name.lower()}'\r\n         if query_params:\r\n             rest_uri += f'?{urllib.parse.urlencode(query_params)}'\r\n+        if not url:\r\n+            url = self.url\r\n \r\n-        conn = http.client.HTTPConnection(self.url.hostname, self.url.port)\r\n+        conn = http.client.HTTPConnection(url.hostname, url.port)\r\n         self.log.debug(f'{http_method} {rest_uri} {body}')\r\n         if http_method == 'GET':\r\n             conn.request('GET', rest_uri)\r\n@@ -474,6 +477,7 @@ class RESTTest (BitcoinTestFramework):\r\n         block_count = self.nodes[0].getblockcount()\r\n         expected_index_info = {'synced': True, 'best_block_height': block_count}\r\n         self.wait_until(lambda: self.nodes[0].getindexinfo()['locationsindex'] == expected_index_info)\r\n+        other_url = urllib.parse.urlparse(self.nodes[1].url)\r\n         for height in range(0, block_count + 1):\r\n             blockhash = self.nodes[0].getblockhash(height)\r\n             block = self.nodes[0].getblock(blockhash, 2)\r\n@@ -489,5 +493,14 @@ class RESTTest (BitcoinTestFramework):\r\n                 assert tx_json[\"txid\"] == tx[\"txid\"]\r\n                 assert tx_json[\"hex\"] == tx[\"hex\"]\r\n \r\n+                tx_bytes_noindex = self.test_rest_request(f\"/txfromblock/{blockhash}-{i}\", req_type=ReqType.BIN, ret_type=RetType.BYTES, url=other_url)\r\n+                assert tx_bytes.hex() == tx[\"hex\"]\r\n+                tx_hex_noindex = self.test_rest_request(f\"/txfromblock/{blockhash}-{i}\", req_type=ReqType.HEX, ret_type=RetType.BYTES, url=other_url).decode().strip()\r\n+                assert tx_hex == tx[\"hex\"]\r\n+                tx_json_noindex = self.test_rest_request(f\"/txfromblock/{blockhash}-{i}\", req_type=ReqType.JSON, ret_type=RetType.JSON, url=other_url)\r\n+                assert tx_bytes_noindex == tx_bytes\r\n+                assert tx_hex_noindex   == tx_hex\r\n+                assert tx_json_noindex  == tx_json\r\n+\r\n if __name__ == '__main__':\r\n     RESTTest(__file__).main()\r\n```",
      "created_at": "2025-09-03T08:14:33Z",
      "updated_at": "2025-09-03T09:18:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2318157602",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2318157602"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 494,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2319877158",
      "pull_request_review_id": 3181985904,
      "id": 2319877158,
      "node_id": "PRRC_kwDOABII586KRoQm",
      "diff_hunk": "@@ -472,6 +473,112 @@ static bool rest_block_notxdetails(const std::any& context, HTTPRequest* req, co\n     return rest_block(context, req, uri_part, TxVerbosity::SHOW_TXID);\n }\n \n+\n+static bool rest_tx_from_block(const std::any& context, HTTPRequest* req, const std::string& uri_part)\n+{\n+    if (!CheckWarmup(req)) return false;\n+\n+    std::string param;\n+    const RESTResponseFormat rf = ParseDataFormat(param, uri_part);\n+\n+    // request is sent over URI scheme /rest/txfromblock/blockhash-index",
      "path": "src/rest.cpp",
      "position": 20,
      "original_position": 20,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "in_reply_to_id": 2303063088,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes - but if it's OK, I would prefer to do it in a separate PR.",
      "created_at": "2025-09-03T18:44:52Z",
      "updated_at": "2025-09-03T18:44:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2319877158",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2319877158"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 484,
      "original_line": 484,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2319896447",
      "pull_request_review_id": 3182013806,
      "id": 2319896447,
      "node_id": "PRRC_kwDOABII586KRs9_",
      "diff_hunk": "@@ -472,5 +470,24 @@ def run_test(self):\n         resp = self.test_rest_request(f\"/deploymentinfo/{INVALID_PARAM}\", ret_type=RetType.OBJ, status=400)\n         assert_equal(resp.read().decode('utf-8').rstrip(), f\"Invalid hash: {INVALID_PARAM}\")\n \n+        self.log.info(\"Test the /txfromblock URI\")\n+        block_count = self.nodes[0].getblockcount()\n+        expected_index_info = {'synced': True, 'best_block_height': block_count}\n+        self.wait_until(lambda: self.nodes[0].getindexinfo()['locationsindex'] == expected_index_info)\n+        for height in range(0, block_count + 1):\n+            blockhash = self.nodes[0].getblockhash(height)\n+            block = self.nodes[0].getblock(blockhash, 2)\n+            txs = block[\"tx\"]\n+            self.log.debug(\"Checking block: %s (%d txs)\", blockhash, len(txs))\n+            for i, tx in enumerate(txs):\n+                self.log.debug(\"Checking tx #%d: %s\", i, tx[\"txid\"])\n+                tx_bytes = self.test_rest_request(f\"/txfromblock/{blockhash}-{i}\", req_type=ReqType.BIN, ret_type=RetType.BYTES)\n+                assert tx_bytes.hex() == tx[\"hex\"]\n+                tx_hex = self.test_rest_request(f\"/txfromblock/{blockhash}-{i}\", req_type=ReqType.HEX, ret_type=RetType.BYTES).decode().strip()\n+                assert tx_hex == tx[\"hex\"]\n+                tx_json = self.test_rest_request(f\"/txfromblock/{blockhash}-{i}\", req_type=ReqType.JSON, ret_type=RetType.JSON)\n+                assert tx_json[\"txid\"] == tx[\"txid\"]\n+                assert tx_json[\"hex\"] == tx[\"hex\"]",
      "path": "test/functional/interface_rest.py",
      "position": 1,
      "original_position": 43,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "94389c28e1068ffcc116614d16ac3047eb3068e3",
      "in_reply_to_id": 2318157602,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "[Force-pushed `94389c28e1...91408755df`](https://github.com/bitcoin/bitcoin/compare/94389c28e1068ffcc116614d16ac3047eb3068e3..91408755df7bc04be4b6806dfd107827d4d2a4e467362), with a similar change to check both enabled and disabled index.",
      "created_at": "2025-09-03T18:53:59Z",
      "updated_at": "2025-09-04T06:21:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2319896447",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2319896447"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 494,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2319897284",
      "pull_request_review_id": 3182015370,
      "id": 2319897284,
      "node_id": "PRRC_kwDOABII586KRtLE",
      "diff_hunk": "@@ -53,7 +53,7 @@ def filter_output_indices_by_value(vouts, value):\n class RESTTest (BitcoinTestFramework):",
      "path": "test/functional/interface_rest.py",
      "position": 1,
      "original_position": 1,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "in_reply_to_id": 2302066922,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "[Force-pushed `94389c28e1...91408755df`](https://github.com/bitcoin/bitcoin/compare/94389c28e1068ffcc116614d16ac3047eb3068e3..91408755df7bc04be4b6806dfd107827d4d2a4e467362).",
      "created_at": "2025-09-03T18:54:18Z",
      "updated_at": "2025-09-04T06:16:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2319897284",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2319897284"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 53,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2320865276",
      "pull_request_review_id": 3183472224,
      "id": 2320865276,
      "node_id": "PRRC_kwDOABII586KVZf8",
      "diff_hunk": "@@ -1777,6 +1780,11 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n         node.indexes.emplace_back(g_coin_stats_index.get());\n     }\n \n+    if (args.GetBoolArg(\"-locationsindex\", DEFAULT_LOCATIONSINDEX)) {\n+        g_locations_index = std::make_unique<LocationsIndex>(interfaces::MakeChain(node), /*cache_size=*/0, false, do_reindex);",
      "path": "src/init.cpp",
      "position": 1,
      "original_position": 29,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "in_reply_to_id": 2301880011,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It seems that OS block cache is quite effective (even with `/*cache_size=*/0`), so I am getting similar performance when using 3GiB DB cache compared to https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-3250323045.\r\n\r\nTested with the patch below:\r\n```\r\n$ ab -k -c 1 -n 100000 http://localhost:8332/rest/txfromblock/$BLOCKHASH-5000.bin\r\n...\r\nDocument Path:          /rest/txfromblock/000000000000000000017bfd05b5fa367a424c4a565a4baf7950d9e8605df8ec-5000.bin\r\nDocument Length:        234 bytes\r\n\r\nConcurrency Level:      1\r\nTime taken for tests:   13.497 seconds\r\nComplete requests:      100000\r\nFailed requests:        0\r\nKeep-Alive requests:    100000\r\nTotal transferred:      33800000 bytes\r\nHTML transferred:       23400000 bytes\r\nRequests per second:    7409.06 [#/sec] (mean)\r\nTime per request:       0.135 [ms] (mean)\r\nTime per request:       0.135 [ms] (mean, across all concurrent requests)\r\nTransfer rate:          2445.57 [Kbytes/sec] received\r\n```\r\n\r\n```diff\r\ndiff --git a/src/init.cpp b/src/init.cpp\r\nindex 97ca0d1b18..3bab318790 100644\r\n--- a/src/init.cpp\r\n+++ b/src/init.cpp\r\n@@ -1822,7 +1822,7 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\r\n     }\r\n \r\n     if (args.GetBoolArg(\"-locationsindex\", DEFAULT_LOCATIONSINDEX)) {\r\n-        g_locations_index = std::make_unique<LocationsIndex>(interfaces::MakeChain(node), /*cache_size=*/0, /*memory_only=*/false, do_reindex);\r\n+        g_locations_index = std::make_unique<LocationsIndex>(interfaces::MakeChain(node), /*cache_size=*/3000_MiB, /*memory_only=*/false, do_reindex);\r\n         node.indexes.emplace_back(g_locations_index.get());\r\n     }\r\n```\r\n",
      "created_at": "2025-09-04T05:22:50Z",
      "updated_at": "2025-09-04T05:22:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2320865276",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2320865276"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1784,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2321395923",
      "pull_request_review_id": 3184231205,
      "id": 2321395923,
      "node_id": "PRRC_kwDOABII586KXbDT",
      "diff_hunk": "@@ -472,6 +473,109 @@ static bool rest_block_notxdetails(const std::any& context, HTTPRequest* req, co\n     return rest_block(context, req, uri_part, TxVerbosity::SHOW_TXID);\n }\n \n+\n+static bool rest_tx_from_block(const std::any& context, HTTPRequest* req, const std::string& uri_part)\n+{\n+    if (!CheckWarmup(req)) return false;\n+\n+    std::string param;\n+    const RESTResponseFormat rf = ParseDataFormat(param, uri_part);\n+\n+    // request is sent over URI scheme /rest/txfromblock/blockhash-index\n+    std::vector<std::string_view> uri_parts{util::Split<std::string_view>(param, '-')};\n+    if (uri_parts.size() != 2) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid URI format: %s\", param));\n+    }\n+\n+    std::optional<uint256> block_hash{uint256::FromHex(uri_parts[0])};\n+    if (!block_hash) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid hash: %s\", uri_parts[0]));\n+    }\n+\n+    const std::optional<uint32_t> parsed_index{ToIntegral<uint32_t>(uri_parts[1])};\n+    if (!parsed_index.has_value()) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Transaction index is invalid: %s\", uri_parts[1]));\n+    }\n+    const uint32_t index{*parsed_index};\n+\n+    CTransactionRef tx{};\n+    std::vector<std::byte> tx_bytes{};\n+    if (const LocationsIndex* locations_index = g_locations_index.get()) {\n+        if (!locations_index->BlockUntilSyncedToCurrentChain()) {\n+            RESTERR(req, HTTP_SERVICE_UNAVAILABLE, \"Locations index is still syncing\");",
      "path": "src/rest.cpp",
      "position": 1,
      "original_position": 41,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "91408755df7bc04be4b6806dfd107827d4d2a4e4",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Missing `return ` here.\r\n\r\nThis will lead to `ReadRawTransaction()` being called anyway and in my testing it returns an empty vector, which we then discover on line 533 and on the next line we try to use `req` again but internal pointers have been reset to null by the line of this comment, leading to a crash.",
      "created_at": "2025-09-04T09:19:40Z",
      "updated_at": "2025-09-04T09:19:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2321395923",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2321395923"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 505,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2321612373",
      "pull_request_review_id": 3184546504,
      "id": 2321612373,
      "node_id": "PRRC_kwDOABII586KYP5V",
      "diff_hunk": "@@ -472,6 +473,109 @@ static bool rest_block_notxdetails(const std::any& context, HTTPRequest* req, co\n     return rest_block(context, req, uri_part, TxVerbosity::SHOW_TXID);\n }\n \n+\n+static bool rest_tx_from_block(const std::any& context, HTTPRequest* req, const std::string& uri_part)\n+{\n+    if (!CheckWarmup(req)) return false;\n+\n+    std::string param;\n+    const RESTResponseFormat rf = ParseDataFormat(param, uri_part);\n+\n+    // request is sent over URI scheme /rest/txfromblock/blockhash-index\n+    std::vector<std::string_view> uri_parts{util::Split<std::string_view>(param, '-')};\n+    if (uri_parts.size() != 2) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid URI format: %s\", param));\n+    }\n+\n+    std::optional<uint256> block_hash{uint256::FromHex(uri_parts[0])};\n+    if (!block_hash) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid hash: %s\", uri_parts[0]));\n+    }\n+\n+    const std::optional<uint32_t> parsed_index{ToIntegral<uint32_t>(uri_parts[1])};\n+    if (!parsed_index.has_value()) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Transaction index is invalid: %s\", uri_parts[1]));\n+    }\n+    const uint32_t index{*parsed_index};\n+\n+    CTransactionRef tx{};\n+    std::vector<std::byte> tx_bytes{};\n+    if (const LocationsIndex* locations_index = g_locations_index.get()) {\n+        if (!locations_index->BlockUntilSyncedToCurrentChain()) {\n+            RESTERR(req, HTTP_SERVICE_UNAVAILABLE, \"Locations index is still syncing\");",
      "path": "src/rest.cpp",
      "position": 1,
      "original_position": 41,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "91408755df7bc04be4b6806dfd107827d4d2a4e4",
      "in_reply_to_id": 2321395923,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks! Fixed in [91408755df...961f94b293](https://github.com/bitcoin/bitcoin/compare/91408755df7bc04be4b6806dfd107827d4d2a4e4..961f94b293ba513ffaca09fa797b79d813134618).",
      "created_at": "2025-09-04T10:47:57Z",
      "updated_at": "2025-09-05T05:35:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2321612373",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2321612373"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 505,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2324775699",
      "pull_request_review_id": 3188907401,
      "id": 2324775699,
      "node_id": "PRRC_kwDOABII586KkUMT",
      "diff_hunk": "@@ -1777,6 +1780,11 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n         node.indexes.emplace_back(g_coin_stats_index.get());\n     }\n \n+    if (args.GetBoolArg(\"-locationsindex\", DEFAULT_LOCATIONSINDEX)) {\n+        g_locations_index = std::make_unique<LocationsIndex>(interfaces::MakeChain(node), /*cache_size=*/0, false, do_reindex);",
      "path": "src/init.cpp",
      "position": 1,
      "original_position": 29,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "4441827ef4e9b5fe306c5f0a81a52b5d2b5e0b69",
      "in_reply_to_id": 2301880011,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Wasn't getting consistent results until I ran `doas pyperf system tune` and got the variance down from ±1.0ms to ±0.1ms.\r\n\r\nUsed curl + hyperfine for clearer numbers on variance:\r\n\r\n```\r\n₿ hyperfine \"curl -v http://localhost:8332/rest/txfromblock/000000000000000000017bfd05b5fa367a424c4a565a4baf7950d9e8605df8ec-5000.bin --output /dev/null\" --warmup=1000 --min-runs=5000 --shell=none\r\n```\r\n\r\n#### With 0 cache:\r\n\r\n```\r\nBenchmark 1: curl -v http://localhost:8332/rest/txfromblock/000000000000000000017bfd05b5fa367a424c4a565a4baf7950d9e8605df8ec-5000.bin --output /dev/null\r\n  Time (mean ± σ):       4.5 ms ±   0.1 ms    [User: 1.9 ms, System: 2.0 ms]\r\n  Range (min … max):     4.1 ms …   5.5 ms    5000 runs\r\n```\r\n\r\n#### With 3'000_MIB cache:\r\n\r\n```\r\nBenchmark 1: curl -v http://localhost:8332/rest/txfromblock/000000000000000000017bfd05b5fa367a424c4a565a4baf7950d9e8605df8ec-5000.bin --output /dev/null\r\n  Time (mean ± σ):       4.5 ms ±   0.2 ms    [User: 1.9 ms, System: 2.1 ms]\r\n  Range (min … max):     4.1 ms …   5.9 ms    10000 runs\r\n \r\n  Warning: Statistical outliers were detected. Consider re-running this benchmark on a quiet system without any interferences from other programs. It might help to use the '--warmup' or '--prepare' options.\r\n```\r\n\r\nConfirms that cache doesn't make any material difference (Edit: at least not on NVMe).",
      "created_at": "2025-09-05T10:59:28Z",
      "updated_at": "2025-09-05T11:00:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2324775699",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2324775699"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1784,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2324878782",
      "pull_request_review_id": 3189055673,
      "id": 2324878782,
      "node_id": "PRRC_kwDOABII586KktW-",
      "diff_hunk": "@@ -472,5 +470,33 @@ def run_test(self):\n         resp = self.test_rest_request(f\"/deploymentinfo/{INVALID_PARAM}\", ret_type=RetType.OBJ, status=400)\n         assert_equal(resp.read().decode('utf-8').rstrip(), f\"Invalid hash: {INVALID_PARAM}\")\n \n+        self.log.info(\"Test the /txfromblock URI\")\n+        block_count = self.nodes[0].getblockcount()\n+        expected_index_info = {'synced': True, 'best_block_height': block_count}\n+        self.wait_until(lambda: self.nodes[0].getindexinfo()['locationsindex'] == expected_index_info)\n+        assert self.nodes[1].getindexinfo() == {}  # locationsindex is disabled\n+\n+        for height in range(0, block_count + 1):\n+            blockhash = self.nodes[0].getblockhash(height)\n+            block = self.nodes[0].getblock(blockhash, 2)\n+            txs = block[\"tx\"]\n+            self.log.debug(\"Checking block: %s (%d txs)\", blockhash, len(txs))\n+            for i, tx in enumerate(txs):\n+                results = []\n+                for node in self.nodes:\n+                    self.log.debug(\"Checking tx #%d: %s on %s\", i, tx[\"txid\"], node.url)\n+                    self.url = urllib.parse.urlparse(node.url)",
      "path": "test/functional/interface_rest.py",
      "position": 41,
      "original_position": 41,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "info: Re-parsing for every transaction in every block seems wasteful, but I couldn't measure any improvement from doing:\r\n```diff\r\ndiff --git a/test/functional/interface_rest.py b/test/functional/interface_rest.py\r\nindex 34ae549cf4..89969e50f9 100755\r\n--- a/test/functional/interface_rest.py\r\n+++ b/test/functional/interface_rest.py\r\n@@ -476,6 +476,7 @@ class RESTTest (BitcoinTestFramework):\r\n         self.wait_until(lambda: self.nodes[0].getindexinfo()['locationsindex'] == expected_index_info)\r\n         assert self.nodes[1].getindexinfo() == {}  # locationsindex is disabled\r\n \r\n+        urls = (self.url, urllib.parse.urlparse(self.nodes[1].url))\r\n         for height in range(0, block_count + 1):\r\n             blockhash = self.nodes[0].getblockhash(height)\r\n             block = self.nodes[0].getblock(blockhash, 2)\r\n@@ -483,9 +484,9 @@ class RESTTest (BitcoinTestFramework):\r\n             self.log.debug(\"Checking block: %s (%d txs)\", blockhash, len(txs))\r\n             for i, tx in enumerate(txs):\r\n                 results = []\r\n-                for node in self.nodes:\r\n+                for j, node in enumerate(self.nodes):\r\n                     self.log.debug(\"Checking tx #%d: %s on %s\", i, tx[\"txid\"], node.url)\r\n-                    self.url = urllib.parse.urlparse(node.url)\r\n+                    self.url = urls[j]\r\n                     tx_bytes = self.test_rest_request(f\"/txfromblock/{blockhash}-{i}\", req_type=ReqType.BIN, ret_type=RetType.BYTES)\r\n                     assert tx_bytes.hex() == tx[\"hex\"]\r\n                     tx_hex = self.test_rest_request(f\"/txfromblock/{blockhash}-{i}\", req_type=ReqType.HEX, ret_type=RetType.BYTES).decode().strip()\r\n```",
      "created_at": "2025-09-05T11:46:10Z",
      "updated_at": "2025-09-08T12:34:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2324878782",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2324878782"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 488,
      "original_line": 488,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2329705352",
      "pull_request_review_id": 3189055673,
      "id": 2329705352,
      "node_id": "PRRC_kwDOABII586K3HuI",
      "diff_hunk": "@@ -0,0 +1,136 @@\n+// Copyright (c) 2018-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockencodings.h>\n+#include <common/args.h>\n+#include <dbwrapper.h>\n+#include <hash.h>\n+#include <index/locationsindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <primitives/block.h>\n+#include <serialize.h>\n+#include <util/fs_helpers.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_BLOCK_HASH{'s'};\n+\n+constexpr uint32_t TXS_PER_ROW{128};\n+\n+namespace {\n+\n+struct DBKey {\n+    uint256 hash;\n+    uint32_t row; // allow splitting one block's transactions into multiple DB rows\n+\n+    explicit DBKey(const uint256& hash_in, uint32_t row_in) : hash(hash_in), row(row_in) {}\n+\n+    SERIALIZE_METHODS(DBKey, obj)\n+    {\n+        uint8_t prefix{DB_BLOCK_HASH};\n+        READWRITE(prefix);\n+        if (prefix != DB_BLOCK_HASH) {\n+            throw std::ios_base::failure(\"Invalid format for location index DB hash key\");\n+        }\n+\n+        READWRITE(obj.hash);",
      "path": "src/index/locationsindex.cpp",
      "position": 37,
      "original_position": 37,
      "commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "original_commit_id": "961f94b293ba513ffaca09fa797b79d813134618",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: If you re-touch, could be more explicit with `block_hash` + curly initialization by default to avoid unintentional narrowing:\r\n```suggestion\r\n    uint256 block_hash;\r\n    uint32_t row; // allow splitting one block's transactions into multiple DB rows\r\n\r\n    explicit DBKey(const uint256& block_hash_in, uint32_t row_in) : block_hash{block_hash_in}, row{row_in} {}\r\n\r\n    SERIALIZE_METHODS(DBKey, obj)\r\n    {\r\n        uint8_t prefix{DB_BLOCK_HASH};\r\n        READWRITE(prefix);\r\n        if (prefix != DB_BLOCK_HASH) {\r\n            throw std::ios_base::failure(\"Invalid format for location index DB hash key\");\r\n        }\r\n\r\n        READWRITE(obj.block_hash);\r\n```",
      "created_at": "2025-09-08T09:39:15Z",
      "updated_at": "2025-09-08T12:34:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2329705352",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2329705352"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": 24,
      "original_start_line": 24,
      "start_side": "RIGHT",
      "line": 37,
      "original_line": 37,
      "side": "RIGHT"
    }
  ]
}