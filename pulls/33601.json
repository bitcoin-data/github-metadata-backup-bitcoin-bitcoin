{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33601",
    "id": 2906968927,
    "node_id": "PR_kwDOABII586tRNNf",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/33601",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/33601.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/33601.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33601",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33601/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33601/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33601/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/8d6e49158e3a1b3215484b5d139c5d8a3fffc4c9",
    "number": 33601,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "doc: archive release notes for v30.0",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "Archive v30.0 release notes.",
    "labels": [
      {
        "id": 148216,
        "node_id": "MDU6TGFiZWwxNDgyMTY=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Docs",
        "name": "Docs",
        "color": "02d7e1",
        "default": false
      }
    ],
    "created_at": "2025-10-11T19:47:55Z",
    "updated_at": "2025-10-13T12:49:16Z",
    "closed_at": "2025-10-13T12:45:37Z",
    "mergeable_state": "unknown",
    "merged": true,
    "merged_at": "2025-10-13T12:45:37Z",
    "merged_by": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "merge_commit_sha": "93b56e95c0287f5b2bb10321561fabc280965036",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "fanquake:archive_30_relnotes",
      "ref": "archive_30_relnotes",
      "sha": "8d6e49158e3a1b3215484b5d139c5d8a3fffc4c9",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 5910539,
        "node_id": "MDEwOlJlcG9zaXRvcnk1OTEwNTM5",
        "name": "bitcoin",
        "full_name": "fanquake/bitcoin",
        "owner": {
          "login": "fanquake",
          "id": 863730,
          "node_id": "MDQ6VXNlcjg2MzczMA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/fanquake",
          "html_url": "https://github.com/fanquake",
          "followers_url": "https://api.github.com/users/fanquake/followers",
          "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
          "organizations_url": "https://api.github.com/users/fanquake/orgs",
          "repos_url": "https://api.github.com/users/fanquake/repos",
          "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/fanquake/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/fanquake/bitcoin",
        "description": "Bitcoin integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/fanquake/bitcoin",
        "archive_url": "https://api.github.com/repos/fanquake/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/fanquake/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/fanquake/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/fanquake/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/fanquake/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/fanquake/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/fanquake/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/fanquake/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/fanquake/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/fanquake/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/fanquake/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/fanquake/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/fanquake/bitcoin/events",
        "forks_url": "https://api.github.com/repos/fanquake/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/fanquake/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/fanquake/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/fanquake/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/fanquake/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/fanquake/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/fanquake/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/fanquake/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/fanquake/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/fanquake/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/fanquake/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/fanquake/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/fanquake/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/fanquake/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/fanquake/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/fanquake/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:fanquake/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/fanquake/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/fanquake/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/fanquake/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/fanquake/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/fanquake/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/fanquake/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/fanquake/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/fanquake/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/fanquake/bitcoin/hooks",
        "svn_url": "https://github.com/fanquake/bitcoin",
        "homepage": "http://www.bitcoincore.org",
        "language": "C++",
        "forks_count": 5,
        "stargazers_count": 15,
        "watchers_count": 15,
        "size": 265729,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": false,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-10-13T12:57:29Z",
        "created_at": "2012-09-22T05:28:42Z",
        "updated_at": "2025-10-13T12:57:37Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "d2987102dd13f965c7a0bf1d5b8ee15bcf025398",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 38020,
        "stargazers_count": 86122,
        "watchers_count": 86122,
        "size": 294775,
        "default_branch": "master",
        "open_issues_count": 823,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-10-13T12:50:45Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-10-13T12:57:06Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33601"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 438,
    "deletions": 0,
    "changed_files": 1,
    "commits": 1,
    "review_comments": 4,
    "comments": 1
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDhkNmU0OTE1OGUzYTFiMzIxNTQ4NGI1ZDEzOWM1ZDhhM2ZmZmM0Yzk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8d6e49158e3a1b3215484b5d139c5d8a3fffc4c9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8d6e49158e3a1b3215484b5d139c5d8a3fffc4c9",
      "tree": {
        "sha": "1ee2d065c2f3500d33fb31ce3a7fe54695cb3cc4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1ee2d065c2f3500d33fb31ce3a7fe54695cb3cc4"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 1ee2d065c2f3500d33fb31ce3a7fe54695cb3cc4\nparent d2987102dd13f965c7a0bf1d5b8ee15bcf025398\nauthor fanquake <fanquake@gmail.com> 1760211928 +0100\ncommitter fanquake <fanquake@gmail.com> 1760211928 +0100\n\ndoc: archive release notes for v30.0\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmjqs9gACgkQLuufXMCV\nJsGhSBAApkYOpgpCnSbH4qPNRxofktkgdLK8F7WXy68F5+lHRJeU2Oh2vDwZuXVK\nx2VHOlAOE9d4xXcbFll5oVc4VvfIev4bOXLa9dZe+0SW0429hOhDneLoOhp6AESM\nh5K0dVNsB7md7pjJF6Xx28bxp56CyNLlEIyIjGwg5hxn2lOS97rjBO19AMRgB/d/\nahHb94BUccgbeWCv3ltR5tmqMi1+oeJ2cx9/49C2crrgqdcjmrgA60nqVl/+RuWU\nUsgZfyYDd53UG93RvUun669CisrF35sSbDMbTXj4KdVXSus8Jv7vSuKgAFqlmmUu\nMJ7VwsTVNYzewCJXdYcS81ZAVx1AjpYh1Xuj3P1hy9gbW1gcFraG0LTpR9ZG1wcv\n6YHhr26y4UPJaNfjeYr2mvGnM+FmKwB2fW9CrRp9pGyKc3N+9M1BqrtAfxz0QM6b\n3s7+e/r0r1uAR5iYM4B3pFaW/XkvbD0ShHfZGCtdxlnj+te+xyq1g4XqPmDRCrjV\neQ/35sq2SwjgNdq6sf0/yyIu9KnC5sioNWsZT4T+qEQ9MgBM/bYbTLRFx4FIuoPl\nGrp2xnVKRpmbMK+COgyB6zs6eXjWl8gPkHWR9rY9i32tlGcY+jr/gWRq8APRZzOJ\ni4rTVTLA2PJ8GttbEhXC3iVwst+GmvF7WCfAa7VShJ2weB5YPFQ=\n=jkF5\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d2987102dd13f965c7a0bf1d5b8ee15bcf025398",
          "sha": "d2987102dd13f965c7a0bf1d5b8ee15bcf025398",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d2987102dd13f965c7a0bf1d5b8ee15bcf025398"
        }
      ],
      "message": "doc: archive release notes for v30.0",
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2025-10-11T19:45:28Z"
      },
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2025-10-11T19:45:28Z"
      },
      "sha": "8d6e49158e3a1b3215484b5d139c5d8a3fffc4c9"
    },
    {
      "event": "labeled",
      "id": 20226908170,
      "node_id": "LE_lADOABII587Q_bfRzwAAAAS1niAK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20226908170",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-11T19:48:01Z",
      "label": {
        "name": "Docs",
        "color": "02d7e1"
      }
    },
    {
      "event": "commented",
      "id": 3393620321,
      "node_id": "IC_kwDOABII587KRolh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3393620321",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-11T19:48:04Z",
      "updated_at": "2025-10-13T12:34:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/33601.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [janb84](https://github.com/bitcoin/bitcoin/pull/33601#pullrequestreview-3330287799), [willcl-ark](https://github.com/bitcoin/bitcoin/pull/33601#pullrequestreview-3331448273) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33601#issuecomment-3393620321",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33601"
    },
    {
      "event": "reviewed",
      "id": 3329247141,
      "node_id": "PRR_kwDOABII587GcEel",
      "url": null,
      "actor": null,
      "commit_id": "8d6e49158e3a1b3215484b5d139c5d8a3fffc4c9",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-10-12T17:41:24Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33601#pullrequestreview-3329247141",
      "submitted_at": "2025-10-12T17:41:24Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33601"
    },
    {
      "event": "reviewed",
      "id": 3330287799,
      "node_id": "PRR_kwDOABII587GgCi3",
      "url": null,
      "actor": null,
      "commit_id": "8d6e49158e3a1b3215484b5d139c5d8a3fffc4c9",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-10-13T07:31:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK 8d6e49158e3a1b3215484b5d139c5d8a3fffc4c9\r\n\r\nNormal post-release cleanup pr, move the release-notes to the release-notes archive",
      "user": {
        "login": "janb84",
        "id": 608446,
        "node_id": "MDQ6VXNlcjYwODQ0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/608446?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janb84",
        "html_url": "https://github.com/janb84",
        "followers_url": "https://api.github.com/users/janb84/followers",
        "following_url": "https://api.github.com/users/janb84/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janb84/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janb84/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janb84/subscriptions",
        "organizations_url": "https://api.github.com/users/janb84/orgs",
        "repos_url": "https://api.github.com/users/janb84/repos",
        "events_url": "https://api.github.com/users/janb84/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janb84/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33601#pullrequestreview-3330287799",
      "submitted_at": "2025-10-13T07:31:12Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33601"
    },
    {
      "event": "reviewed",
      "id": 3331448273,
      "node_id": "PRR_kwDOABII587Gkd3R",
      "url": null,
      "actor": null,
      "commit_id": "8d6e49158e3a1b3215484b5d139c5d8a3fffc4c9",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-10-13T12:34:11Z",
      "author_association": "MEMBER",
      "body": "ACK 8d6e49158e3a1b3215484b5d139c5d8a3fffc4c9\r\n\r\nThis archive is OK.\r\n\r\nI do notice that we seem to have zero `Build System` notes though, which is slightly sad. New binaries (which could have been in this section) have their own section, but perhaps we miss detailing capnproto dependency.",
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33601#pullrequestreview-3331448273",
      "submitted_at": "2025-10-13T12:34:11Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33601"
    },
    {
      "event": "merged",
      "id": 20246694117,
      "node_id": "ME_lADOABII587Q_bfRzwAAAAS2zAjl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20246694117",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "93b56e95c0287f5b2bb10321561fabc280965036",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93b56e95c0287f5b2bb10321561fabc280965036",
      "created_at": "2025-10-13T12:45:37Z"
    },
    {
      "event": "closed",
      "id": 20246694160,
      "node_id": "CE_lADOABII587Q_bfRzwAAAAS2zAkQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20246694160",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-13T12:45:37Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 20246781790,
      "node_id": "HRDE_lADOABII587Q_bfRzwAAAAS2zV9e",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20246781790",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-13T12:49:16Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2424672309",
      "pull_request_review_id": 3329247141,
      "id": 2424672309,
      "node_id": "PRRC_kwDOABII586QhZA1",
      "diff_hunk": "@@ -0,0 +1,438 @@\n+v30.0 Release Notes\n+===================\n+\n+Bitcoin Core version v30.0 is now available from:\n+\n+  <https://bitcoincore.org/bin/bitcoin-core-30.0/>\n+\n+This release includes new features, various bug fixes and performance\n+improvements, as well as updated translations.\n+\n+Please report bugs using the issue tracker at GitHub:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+To receive security and update notifications, please subscribe to:\n+\n+  <https://bitcoincore.org/en/list/announcements/join/>\n+\n+How to Upgrade\n+==============\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes in some cases), then run the\n+installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on macOS)\n+or `bitcoind`/`bitcoin-qt` (on Linux).\n+\n+Upgrading directly from a version of Bitcoin Core that has reached its EOL is\n+possible, but it might take some time if the data directory needs to be migrated. Old\n+wallet versions of Bitcoin Core are generally supported.\n+\n+Compatibility\n+==============\n+\n+Bitcoin Core is supported and tested on operating systems using the\n+Linux Kernel 3.17+, macOS 13+, and Windows 10+. Bitcoin\n+Core should also work on most other Unix-like systems but is not as\n+frequently tested on them. It is not recommended to use Bitcoin Core on\n+unsupported systems.\n+\n+Notable changes\n+===============\n+\n+Policy\n+------\n+\n+- The maximum number of potentially executed legacy signature operations in a\n+  single standard transaction is now limited to 2500. Signature operations in all\n+  previous output scripts, in all input scripts, as well as all P2SH redeem\n+  scripts (if there are any) are counted toward the limit. The new limit is\n+  assumed to not affect any known typically formed standard transactions. The\n+  change was done to prepare for a possible BIP54 deployment in the future. (#32521)\n+\n+- `-datacarriersize` is increased to 100,000 by default, which effectively uncaps\n+  the limit (as the maximum transaction size limit will be hit first). It can be\n+  overridden with `-datacarriersize=83` to revert to the limit enforced in previous\n+  versions. (#32406)\n+\n+- Multiple data carrier (OP_RETURN) outputs in a transaction are now permitted for\n+  relay and mining. The `-datacarriersize` limit applies to the aggregate size of\n+  the scriptPubKeys across all such outputs in a transaction, not including the\n+  scriptPubKey size itself. (#32406)\n+\n+- The minimum block feerate (`-blockmintxfee`) has been changed to 0.001 satoshi per\n+  vB. It can still be changed using the configuration option. This option can be used\n+  by miners to set a minimum feerate on packages added to block templates. (#33106)\n+\n+- The default minimum relay feerate (`-minrelaytxfee`) and incremental relay feerate\n+  (`-incrementalrelayfee`) have been changed to 0.1 satoshis per vB. They can still\n+  be changed using their respective configuration options, but it is recommended to\n+  change both together if you decide to do so. (#33106)\n+\n+  Other minimum feerates (e.g. the dust feerate, the minimum returned by the fee\n+  estimator, and all feerates used by the wallet) remain unchanged. The mempool minimum\n+  feerate still changes in response to high volume.\n+\n+  Note that unless these lower defaults are widely adopted across the network, transactions\n+  created with lower fee rates are not guaranteed to propagate or confirm. The wallet\n+  feerates remain unchanged; `-mintxfee` must be changed before attempting to create\n+  transactions with lower feerates using the wallet. (#33106)\n+\n+P2P and network changes\n+-----------------------\n+\n+- Opportunistic 1-parent-1-child package relay has been improved to handle\n+  situations when the child already has unconfirmed parent(s) in the mempool.\n+  This means that 1p1c packages can be accepted and propagate, even if they are\n+  connected to broader topologies: multi-parent-1-child (where only 1 parent\n+  requires fee-bumping), grandparent-parent-child (where only parent requires\n+  fee-bumping) etc. (#31385)\n+\n+- The transaction orphanage, which holds transactions with missing inputs temporarily\n+  while the node attempts to fetch its parents, now has improved Denial of Service protections.\n+  Previously, it enforced a maximum number of unique transactions (default 100,\n+  configurable using `-maxorphantx`). Now, its limits are as follows: the number of\n+  entries (unique by wtxid and peer), plus each unique transaction's input count divided\n+  by 10, must not exceed 3,000. The total weight of unique transactions must not exceed\n+  `404,000` Wu multiplied by the number of peers. (#31829)\n+\n+- The `-maxorphantx` option no longer has any effect, since the orphanage no longer\n+  limits the number of unique transactions. Users should remove this configuration\n+  option if they were using it, as the setting will cause an error in future versions\n+  when it is no longer recognized. (#31829)\n+\n+New `bitcoin` command\n+---------------------\n+\n+- A new `bitcoin` command line tool has been added to make features more discoverable\n+  and convenient to use. The `bitcoin` tool just calls other executables and does not\n+  implement any functionality on its own. Specifically `bitcoin node` is a synonym for\n+  `bitcoind`, `bitcoin gui` is a synonym for `bitcoin-qt`, and `bitcoin rpc` is a synonym\n+  for `bitcoin-cli -named`. Other commands and options can be listed with `bitcoin help`.\n+  The new `bitcoin` command is an alternative to calling other commands directly, but it\n+  doesn't replace them, and there are no plans to deprecate existing commands. (#31375)\n+\n+External Signing\n+----------------\n+\n+- Support for external signing on Windows has been re-enabled. (#29868)\n+\n+IPC Mining Interface\n+--------------------\n+\n+- The new `bitcoin` command does support one new feature: an (experimental) IPC Mining\n+  Interface that allows the node to work with Stratum v2 or other mining client software,\n+  see (#31098). When the node is started with `bitcoin -m node -ipcbind=unix` it will\n+  listen on a unix socket for IPC client connections, allowing clients to request block\n+  templates and submit mined blocks. The `-m` option launches a new internal binary\n+  (`bitcoin-node` instead of `bitcoind`) and is currently required but will become optional\n+  in the future (with [#33229](https://github.com/bitcoin/bitcoin/pull/33229)).\n+\n+- IPC connectivity introduces new dependencies (see [multiprocess.md](https://github.com/bitcoin/bitcoin/blob/master/doc/multiprocess.md)),\n+  which can be turned off with the `-DENABLE_IPC=OFF` build option if you do not intend\n+  to use IPC. (#31802)\n+\n+Install changes\n+---------------\n+\n+- The `test_bitcoin` executable is now installed in `libexec/` instead of `bin/`.\n+  It can still be executed directly, or accessed through the new `bitcoin` command\n+  as `bitcoin test`. The `libexec/` directory also contains new `bitcoin-node` and\n+  `bitcoin-gui` binaries which support IPC features and are called through the\n+  `bitcoin` tool. In source builds only, `test_bitcoin-qt`, `bench_bitcoin`, and\n+  `bitcoin-chainstate` are also now installed to `libexec/` instead of `bin/` and\n+  can be accessed through the new `bitcoin` command. See `bitcoin help` output for\n+  details. (#31679)\n+\n+- On Windows, the installer no longer adds a “(64-bit)” suffix to entries in the\n+  Start Menu (#32132), and it now automatically removes obsolete artifacts during\n+  upgrades (#33422).\n+\n+Indexes\n+-------\n+\n+- The implementation of coinstatsindex was changed to prevent an overflow bug that\n+  could already be observed on the default Signet. The new version of the index will\n+  need to be synced from scratch when starting the upgraded node for the first time.\n+\n+  The new version is stored in `/indexes/coinstatsindex/` in contrast to the old version\n+  which was stored at `/indexes/coinstats/`. The old version of the index is not deleted\n+  by the upgraded node in case the user chooses to downgrade their node in the future.\n+  If the user does not plan to downgrade it is safe for them to remove `/indexes/coinstats/`\n+  from their datadir. A future release of Bitcoin Core may remove the old version of the\n+  index automatically. (#30469)\n+\n+Logging\n+-------\n+- Unconditional logging to disk is now rate limited by giving each source location\n+  a quota of 1MiB per hour. Unconditional logging is any logging with a log level\n+  higher than debug, that is `info`, `warning`, and `error`. All logs will be\n+  prefixed with `[*]` if there is at least one source location that is currently\n+  being suppressed. (#32604)\n+\n+- When `-logsourcelocations` is enabled, the log output now contains the entire\n+  function signature instead of just the function name. (#32604)\n+\n+Updated RPCs\n+------------\n+\n+- The `-paytxfee` startup option and the `settxfee` RPC are now deprecated and\n+  will be removed in Bitcoin Core 31.0. They allowed the user to set a static fee\n+  rate for wallet transactions, which could potentially lead to overpaying or underpaying.\n+  Users should instead rely on fee estimation or specify a fee rate per transaction\n+  using the `fee_rate` argument in RPCs such as `fundrawtransaction`, `sendtoaddress`,\n+  `send`, `sendall`, and `sendmany`. (#31278)\n+\n+- Any RPC in which one of the parameters is a descriptor will throw an error\n+  if the provided descriptor contains a whitespace at the beginning or the end\n+  of the public key within a fragment - e.g. `pk( KEY)` or `pk(KEY )`. (#31603)\n+\n+- The `submitpackage` RPC, which allows submissions of child-with-parents\n+  packages, no longer requires that all unconfirmed parents be present. The\n+  package may contain other in-mempool ancestors as well. (#31385)\n+\n+- The `waitfornewblock` RPC now takes an optional `current_tip` argument. It\n+  is also no longer hidden. (#30635)\n+\n+- The `waitforblock` and `waitforblockheight` RPCs are no longer hidden.  (#30635)\n+\n+- The `psbtbumpfee` and `bumpfee` RPCs allow a replacement under fullrbf and no\n+  longer require BIP-125 signalling. (#31953)\n+\n+- Transaction Script validation errors used to return the reason for the error\n+  prefixed by either `mandatory-script-verify-flag-failed` if it was a consensus\n+  error, or `non-mandatory-script-verify-flag` (without \"-failed\") if it was a\n+  standardness error. This has been changed to `block-script-verify-flag-failed`\n+  and `mempool-script-verify-flag-failed` for all block and mempool errors\n+  respectively. (#33183)\n+\n+- The `getmininginfo` RPC now returns \"blockmintxfee\" result specifying the value of\n+  `-blockmintxfee` configuration. (#33189)\n+\n+- The `getmempoolinfo` RPC now returns an additional \"permitbaremultisig\" and\n+  \"maxdatacarriersize\" field, reflecting the `-permitbaremultisig` and `-datacarriersize`\n+  config values. (#29954)\n+\n+Changes to wallet-related RPCs can be found in the Wallet section below.\n+\n+New RPCs\n+--------\n+\n+- A new REST API endpoint (`/rest/spenttxouts/BLOCKHASH`) has been introduced for\n+  efficiently fetching spent transaction outputs using the block's undo data (#32540).\n+\n+Build System\n+------------\n+\n+Updated settings\n+----------------\n+\n+- The `-maxmempool` and `-dbcache` startup parameters are now capped on 32-bit systems\n+  to 500MB and 1GiB respectively. (#32530)\n+\n+- The `-natpmp` option is now set to `1` by default. This means nodes with `-listen`\n+  enabled (the default) but running behind a firewall, such as a local network router,\n+  will be reachable if the firewall/router supports any of the `PCP` or `NAT-PMP`\n+  protocols. (#33004)\n+\n+- The `-upnp` setting has now been fully removed. Use `-natpmp` instead. (#32500)\n+\n+- Previously, `-proxy` specified the proxy for all networks (except I2P which\n+  uses `-i2psam`) and only the Tor proxy could have been specified separately\n+  via `-onion`. Now, the syntax of `-proxy` has been extended and it is possible\n+  to specify separately the proxy for IPv4, IPv6, Tor and CJDNS by appending `=`\n+  followed by the network name, for example `-proxy=127.0.0.1:5555=ipv6`\n+  configures a proxy only for IPv6. The `-proxy` option can be used multiple\n+  times to define different proxies for different networks, such as\n+  `-proxy=127.0.0.1:4444=ipv4 -proxy=10.0.0.1:6666=ipv6`. Later settings\n+  override earlier ones for the same network; this can be used to remove an\n+  earlier all-networks proxy and use direct connections only for a given\n+  network, for example `-proxy=127.0.0.1:5555 -proxy=0=cjdns`. (#32425)\n+\n+- The `-blockmaxweight` startup option has been updated to be debug-only.\n+  It is still available to users, but now hidden from the default `-help` text\n+  and shown only in `-help-debug` (#32654).\n+\n+Changes to GUI or wallet related settings can be found in the GUI or Wallet section below.\n+\n+Wallet\n+------\n+\n+- BDB legacy wallets can no longer be created or loaded. They can be migrated\n+  to the new descriptor wallet format. Refer to the `migratewallet` RPC for more\n+  details.\n+\n+- The legacy wallet removal drops redundant options in the bitcoin-wallet tool,\n+  such as `-withinternalbdb`, `-legacy`, and `-descriptors`. Moreover, the\n+  legacy-only RPCs `addmultisigaddress`, `dumpprivkey`, `dumpwallet`,\n+  `importaddress`, `importmulti`, `importprivkey`, `importpubkey`,\n+  `importwallet`, `newkeypool`, `sethdseed`, and `upgradewallet`, are removed.\n+  (#32944, #28710, #32438, #31250)\n+\n+- Support has been added for spending TRUC transactions received by the\n+  wallet, as well as creating TRUC transactions. The wallet ensures that\n+  TRUC policy rules are being met. The wallet will throw an error if the\n+  user is trying to spend TRUC utxos with utxos of other versions.\n+  Additionally, the wallet will treat unconfirmed TRUC sibling\n+  transactions as mempool conflicts. The wallet will also ensure that\n+  transactions spending TRUC utxos meet the required size restrictions. (#32896)\n+\n+- Since descriptor wallets do not allow mixing watchonly and non-watchonly descriptors,\n+  the `include_watchonly` option (and its variants in naming) are removed from all RPCs\n+  that had it. (#32618)\n+\n+- The `iswatchonly` field is removed from any RPCs that returned it. (#32618)\n+\n+- `unloadwallet` - Return RPC_INVALID_PARAMETER when both the RPC wallet endpoint\n+  and wallet_name parameters are unspecified. Previously the RPC failed with a JSON\n+  parsing error. (#32845)\n+\n+- `getdescriptoractivity` - Mark blockhashes and scanobjects arguments as required,\n+  so the user receives a clear help message when either is missing. As in `unloadwallet`,\n+  previously the RPC failed with a JSON parsing error. (#32845)\n+\n+- `getwalletinfo` - Removes the fields `balance`, `immature_balance` and\n+  `unconfirmed_balance`. (#32721)\n+\n+- `getunconfirmedbalance` - Removes this RPC command. You can query the `getbalances`\n+  RPC and inspect the `[\"mine\"][\"untrusted_pending\"]` entry within the JSON\n+  response. (#32721)\n+\n+- The following RPCs now contain a `version` parameter that allows\n+  the user to create transactions of any standard version number (1-3):\n+  - `createrawtransaction`\n+  - `createpsbt`\n+  - `send`\n+  - `sendall`\n+  - `walletcreatefundedpsbt`\n+  (#32896)\n+\n+GUI changes\n+-----------\n+\n+- The GUI has been migrated from Qt 5 to Qt 6. On Windows, dark mode is now supported.\n+  On macOS, the Metal backend is now used. (#30997)\n+\n+- A transaction's fee bump is allowed under fullrbf and no longer requires\n+  BIP-125 signalling. (#31953)\n+\n+- Custom column widths in the Transactions tab are reset as a side-effect of legacy\n+  wallet removal. (#32459)\n+\n+Low-level changes\n+=================\n+\n+- Logs now include which peer sent us a header. Additionally there are fewer\n+  redundant header log messages. A side-effect of this change is that for\n+  some untypical cases new headers aren't logged anymore, e.g. a direct\n+  `BLOCK` message with a previously unknown header and `submitheader` RPC. (#27826)\n+\n+Credits\n+=======\n+\n+Thanks to everyone who directly contributed to this release:\n+\n+- 0xb10c\n+- amisha\n+- Andrew Toth\n+- Anthony Towns\n+- Antoine Poinsot\n+- Ava Chow\n+- benthecarman\n+- Brandon Odiwuor\n+- brunoerg\n+- Bue-von-hon\n+- Bufo\n+- Chandra Pratap\n+- Chris Stewart\n+- Cory Fields\n+- Daniel Pfeifer\n+- Daniela Brozzoni\n+- David Gumberg\n+- deadmanoz\n+- dennsikl\n+- dergoegge\n+- enoch\n+- Ethan Heilman\n+- Eugene Siegel\n+- Eunovo\n+- Eval EXEC\n+- Fabian Jahr\n+- fanquake\n+- Florian Schmaus\n+- fuder.eth\n+- furszy\n+- glozow\n+- Greg Sanders\n+- Hao Xu\n+- Haoran Peng\n+- Haowen Liu\n+- Hennadii Stepanov\n+- Hodlinator\n+- hoffman\n+- ishaanam\n+- ismaelsadeeq\n+- Jameson Lopp\n+- janb84\n+- Jiri Jakes\n+- John Bampton\n+- Jon Atack\n+- josibake\n+- jurraca\n+- kevkevin\n+- kevkevinpal",
      "path": "doc/release-notes/release-notes-30.0.md",
      "position": 383,
      "original_position": 383,
      "commit_id": "8d6e49158e3a1b3215484b5d139c5d8a3fffc4c9",
      "original_commit_id": "8d6e49158e3a1b3215484b5d139c5d8a3fffc4c9",
      "in_reply_to_id": null,
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "you can drop `kevkevin` I think thats a duplicate for me",
      "created_at": "2025-10-12T17:41:24Z",
      "updated_at": "2025-10-12T17:41:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33601#discussion_r2424672309",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2424672309"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33601"
        }
      },
      "start_line": 382,
      "original_start_line": 382,
      "start_side": "RIGHT",
      "line": 383,
      "original_line": 383,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2424684332",
      "pull_request_review_id": 3329259392,
      "id": 2424684332,
      "node_id": "PRRC_kwDOABII586Qhb8s",
      "diff_hunk": "@@ -0,0 +1,438 @@\n+v30.0 Release Notes\n+===================\n+\n+Bitcoin Core version v30.0 is now available from:\n+\n+  <https://bitcoincore.org/bin/bitcoin-core-30.0/>\n+\n+This release includes new features, various bug fixes and performance\n+improvements, as well as updated translations.\n+\n+Please report bugs using the issue tracker at GitHub:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+To receive security and update notifications, please subscribe to:\n+\n+  <https://bitcoincore.org/en/list/announcements/join/>\n+\n+How to Upgrade\n+==============\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes in some cases), then run the\n+installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on macOS)\n+or `bitcoind`/`bitcoin-qt` (on Linux).\n+\n+Upgrading directly from a version of Bitcoin Core that has reached its EOL is\n+possible, but it might take some time if the data directory needs to be migrated. Old\n+wallet versions of Bitcoin Core are generally supported.\n+\n+Compatibility\n+==============\n+\n+Bitcoin Core is supported and tested on operating systems using the\n+Linux Kernel 3.17+, macOS 13+, and Windows 10+. Bitcoin\n+Core should also work on most other Unix-like systems but is not as\n+frequently tested on them. It is not recommended to use Bitcoin Core on\n+unsupported systems.\n+\n+Notable changes\n+===============\n+\n+Policy\n+------\n+\n+- The maximum number of potentially executed legacy signature operations in a\n+  single standard transaction is now limited to 2500. Signature operations in all\n+  previous output scripts, in all input scripts, as well as all P2SH redeem\n+  scripts (if there are any) are counted toward the limit. The new limit is\n+  assumed to not affect any known typically formed standard transactions. The\n+  change was done to prepare for a possible BIP54 deployment in the future. (#32521)\n+\n+- `-datacarriersize` is increased to 100,000 by default, which effectively uncaps\n+  the limit (as the maximum transaction size limit will be hit first). It can be\n+  overridden with `-datacarriersize=83` to revert to the limit enforced in previous\n+  versions. (#32406)\n+\n+- Multiple data carrier (OP_RETURN) outputs in a transaction are now permitted for\n+  relay and mining. The `-datacarriersize` limit applies to the aggregate size of\n+  the scriptPubKeys across all such outputs in a transaction, not including the\n+  scriptPubKey size itself. (#32406)\n+\n+- The minimum block feerate (`-blockmintxfee`) has been changed to 0.001 satoshi per\n+  vB. It can still be changed using the configuration option. This option can be used\n+  by miners to set a minimum feerate on packages added to block templates. (#33106)\n+\n+- The default minimum relay feerate (`-minrelaytxfee`) and incremental relay feerate\n+  (`-incrementalrelayfee`) have been changed to 0.1 satoshis per vB. They can still\n+  be changed using their respective configuration options, but it is recommended to\n+  change both together if you decide to do so. (#33106)\n+\n+  Other minimum feerates (e.g. the dust feerate, the minimum returned by the fee\n+  estimator, and all feerates used by the wallet) remain unchanged. The mempool minimum\n+  feerate still changes in response to high volume.\n+\n+  Note that unless these lower defaults are widely adopted across the network, transactions\n+  created with lower fee rates are not guaranteed to propagate or confirm. The wallet\n+  feerates remain unchanged; `-mintxfee` must be changed before attempting to create\n+  transactions with lower feerates using the wallet. (#33106)\n+\n+P2P and network changes\n+-----------------------\n+\n+- Opportunistic 1-parent-1-child package relay has been improved to handle\n+  situations when the child already has unconfirmed parent(s) in the mempool.\n+  This means that 1p1c packages can be accepted and propagate, even if they are\n+  connected to broader topologies: multi-parent-1-child (where only 1 parent\n+  requires fee-bumping), grandparent-parent-child (where only parent requires\n+  fee-bumping) etc. (#31385)\n+\n+- The transaction orphanage, which holds transactions with missing inputs temporarily\n+  while the node attempts to fetch its parents, now has improved Denial of Service protections.\n+  Previously, it enforced a maximum number of unique transactions (default 100,\n+  configurable using `-maxorphantx`). Now, its limits are as follows: the number of\n+  entries (unique by wtxid and peer), plus each unique transaction's input count divided\n+  by 10, must not exceed 3,000. The total weight of unique transactions must not exceed\n+  `404,000` Wu multiplied by the number of peers. (#31829)\n+\n+- The `-maxorphantx` option no longer has any effect, since the orphanage no longer\n+  limits the number of unique transactions. Users should remove this configuration\n+  option if they were using it, as the setting will cause an error in future versions\n+  when it is no longer recognized. (#31829)\n+\n+New `bitcoin` command\n+---------------------\n+\n+- A new `bitcoin` command line tool has been added to make features more discoverable\n+  and convenient to use. The `bitcoin` tool just calls other executables and does not\n+  implement any functionality on its own. Specifically `bitcoin node` is a synonym for\n+  `bitcoind`, `bitcoin gui` is a synonym for `bitcoin-qt`, and `bitcoin rpc` is a synonym\n+  for `bitcoin-cli -named`. Other commands and options can be listed with `bitcoin help`.\n+  The new `bitcoin` command is an alternative to calling other commands directly, but it\n+  doesn't replace them, and there are no plans to deprecate existing commands. (#31375)\n+\n+External Signing\n+----------------\n+\n+- Support for external signing on Windows has been re-enabled. (#29868)\n+\n+IPC Mining Interface\n+--------------------\n+\n+- The new `bitcoin` command does support one new feature: an (experimental) IPC Mining\n+  Interface that allows the node to work with Stratum v2 or other mining client software,\n+  see (#31098). When the node is started with `bitcoin -m node -ipcbind=unix` it will\n+  listen on a unix socket for IPC client connections, allowing clients to request block\n+  templates and submit mined blocks. The `-m` option launches a new internal binary\n+  (`bitcoin-node` instead of `bitcoind`) and is currently required but will become optional\n+  in the future (with [#33229](https://github.com/bitcoin/bitcoin/pull/33229)).\n+\n+- IPC connectivity introduces new dependencies (see [multiprocess.md](https://github.com/bitcoin/bitcoin/blob/master/doc/multiprocess.md)),\n+  which can be turned off with the `-DENABLE_IPC=OFF` build option if you do not intend\n+  to use IPC. (#31802)\n+\n+Install changes\n+---------------\n+\n+- The `test_bitcoin` executable is now installed in `libexec/` instead of `bin/`.\n+  It can still be executed directly, or accessed through the new `bitcoin` command\n+  as `bitcoin test`. The `libexec/` directory also contains new `bitcoin-node` and\n+  `bitcoin-gui` binaries which support IPC features and are called through the\n+  `bitcoin` tool. In source builds only, `test_bitcoin-qt`, `bench_bitcoin`, and\n+  `bitcoin-chainstate` are also now installed to `libexec/` instead of `bin/` and\n+  can be accessed through the new `bitcoin` command. See `bitcoin help` output for\n+  details. (#31679)\n+\n+- On Windows, the installer no longer adds a “(64-bit)” suffix to entries in the\n+  Start Menu (#32132), and it now automatically removes obsolete artifacts during\n+  upgrades (#33422).\n+\n+Indexes\n+-------\n+\n+- The implementation of coinstatsindex was changed to prevent an overflow bug that\n+  could already be observed on the default Signet. The new version of the index will\n+  need to be synced from scratch when starting the upgraded node for the first time.\n+\n+  The new version is stored in `/indexes/coinstatsindex/` in contrast to the old version\n+  which was stored at `/indexes/coinstats/`. The old version of the index is not deleted\n+  by the upgraded node in case the user chooses to downgrade their node in the future.\n+  If the user does not plan to downgrade it is safe for them to remove `/indexes/coinstats/`\n+  from their datadir. A future release of Bitcoin Core may remove the old version of the\n+  index automatically. (#30469)\n+\n+Logging\n+-------\n+- Unconditional logging to disk is now rate limited by giving each source location\n+  a quota of 1MiB per hour. Unconditional logging is any logging with a log level\n+  higher than debug, that is `info`, `warning`, and `error`. All logs will be\n+  prefixed with `[*]` if there is at least one source location that is currently\n+  being suppressed. (#32604)\n+\n+- When `-logsourcelocations` is enabled, the log output now contains the entire\n+  function signature instead of just the function name. (#32604)\n+\n+Updated RPCs\n+------------\n+\n+- The `-paytxfee` startup option and the `settxfee` RPC are now deprecated and\n+  will be removed in Bitcoin Core 31.0. They allowed the user to set a static fee\n+  rate for wallet transactions, which could potentially lead to overpaying or underpaying.\n+  Users should instead rely on fee estimation or specify a fee rate per transaction\n+  using the `fee_rate` argument in RPCs such as `fundrawtransaction`, `sendtoaddress`,\n+  `send`, `sendall`, and `sendmany`. (#31278)\n+\n+- Any RPC in which one of the parameters is a descriptor will throw an error\n+  if the provided descriptor contains a whitespace at the beginning or the end\n+  of the public key within a fragment - e.g. `pk( KEY)` or `pk(KEY )`. (#31603)\n+\n+- The `submitpackage` RPC, which allows submissions of child-with-parents\n+  packages, no longer requires that all unconfirmed parents be present. The\n+  package may contain other in-mempool ancestors as well. (#31385)\n+\n+- The `waitfornewblock` RPC now takes an optional `current_tip` argument. It\n+  is also no longer hidden. (#30635)\n+\n+- The `waitforblock` and `waitforblockheight` RPCs are no longer hidden.  (#30635)\n+\n+- The `psbtbumpfee` and `bumpfee` RPCs allow a replacement under fullrbf and no\n+  longer require BIP-125 signalling. (#31953)\n+\n+- Transaction Script validation errors used to return the reason for the error\n+  prefixed by either `mandatory-script-verify-flag-failed` if it was a consensus\n+  error, or `non-mandatory-script-verify-flag` (without \"-failed\") if it was a\n+  standardness error. This has been changed to `block-script-verify-flag-failed`\n+  and `mempool-script-verify-flag-failed` for all block and mempool errors\n+  respectively. (#33183)\n+\n+- The `getmininginfo` RPC now returns \"blockmintxfee\" result specifying the value of\n+  `-blockmintxfee` configuration. (#33189)\n+\n+- The `getmempoolinfo` RPC now returns an additional \"permitbaremultisig\" and\n+  \"maxdatacarriersize\" field, reflecting the `-permitbaremultisig` and `-datacarriersize`\n+  config values. (#29954)\n+\n+Changes to wallet-related RPCs can be found in the Wallet section below.\n+\n+New RPCs\n+--------\n+\n+- A new REST API endpoint (`/rest/spenttxouts/BLOCKHASH`) has been introduced for\n+  efficiently fetching spent transaction outputs using the block's undo data (#32540).\n+\n+Build System\n+------------\n+\n+Updated settings\n+----------------\n+\n+- The `-maxmempool` and `-dbcache` startup parameters are now capped on 32-bit systems\n+  to 500MB and 1GiB respectively. (#32530)\n+\n+- The `-natpmp` option is now set to `1` by default. This means nodes with `-listen`\n+  enabled (the default) but running behind a firewall, such as a local network router,\n+  will be reachable if the firewall/router supports any of the `PCP` or `NAT-PMP`\n+  protocols. (#33004)\n+\n+- The `-upnp` setting has now been fully removed. Use `-natpmp` instead. (#32500)\n+\n+- Previously, `-proxy` specified the proxy for all networks (except I2P which\n+  uses `-i2psam`) and only the Tor proxy could have been specified separately\n+  via `-onion`. Now, the syntax of `-proxy` has been extended and it is possible\n+  to specify separately the proxy for IPv4, IPv6, Tor and CJDNS by appending `=`\n+  followed by the network name, for example `-proxy=127.0.0.1:5555=ipv6`\n+  configures a proxy only for IPv6. The `-proxy` option can be used multiple\n+  times to define different proxies for different networks, such as\n+  `-proxy=127.0.0.1:4444=ipv4 -proxy=10.0.0.1:6666=ipv6`. Later settings\n+  override earlier ones for the same network; this can be used to remove an\n+  earlier all-networks proxy and use direct connections only for a given\n+  network, for example `-proxy=127.0.0.1:5555 -proxy=0=cjdns`. (#32425)\n+\n+- The `-blockmaxweight` startup option has been updated to be debug-only.\n+  It is still available to users, but now hidden from the default `-help` text\n+  and shown only in `-help-debug` (#32654).\n+\n+Changes to GUI or wallet related settings can be found in the GUI or Wallet section below.\n+\n+Wallet\n+------\n+\n+- BDB legacy wallets can no longer be created or loaded. They can be migrated\n+  to the new descriptor wallet format. Refer to the `migratewallet` RPC for more\n+  details.\n+\n+- The legacy wallet removal drops redundant options in the bitcoin-wallet tool,\n+  such as `-withinternalbdb`, `-legacy`, and `-descriptors`. Moreover, the\n+  legacy-only RPCs `addmultisigaddress`, `dumpprivkey`, `dumpwallet`,\n+  `importaddress`, `importmulti`, `importprivkey`, `importpubkey`,\n+  `importwallet`, `newkeypool`, `sethdseed`, and `upgradewallet`, are removed.\n+  (#32944, #28710, #32438, #31250)\n+\n+- Support has been added for spending TRUC transactions received by the\n+  wallet, as well as creating TRUC transactions. The wallet ensures that\n+  TRUC policy rules are being met. The wallet will throw an error if the\n+  user is trying to spend TRUC utxos with utxos of other versions.\n+  Additionally, the wallet will treat unconfirmed TRUC sibling\n+  transactions as mempool conflicts. The wallet will also ensure that\n+  transactions spending TRUC utxos meet the required size restrictions. (#32896)\n+\n+- Since descriptor wallets do not allow mixing watchonly and non-watchonly descriptors,\n+  the `include_watchonly` option (and its variants in naming) are removed from all RPCs\n+  that had it. (#32618)\n+\n+- The `iswatchonly` field is removed from any RPCs that returned it. (#32618)\n+\n+- `unloadwallet` - Return RPC_INVALID_PARAMETER when both the RPC wallet endpoint\n+  and wallet_name parameters are unspecified. Previously the RPC failed with a JSON\n+  parsing error. (#32845)\n+\n+- `getdescriptoractivity` - Mark blockhashes and scanobjects arguments as required,\n+  so the user receives a clear help message when either is missing. As in `unloadwallet`,\n+  previously the RPC failed with a JSON parsing error. (#32845)\n+\n+- `getwalletinfo` - Removes the fields `balance`, `immature_balance` and\n+  `unconfirmed_balance`. (#32721)\n+\n+- `getunconfirmedbalance` - Removes this RPC command. You can query the `getbalances`\n+  RPC and inspect the `[\"mine\"][\"untrusted_pending\"]` entry within the JSON\n+  response. (#32721)\n+\n+- The following RPCs now contain a `version` parameter that allows\n+  the user to create transactions of any standard version number (1-3):\n+  - `createrawtransaction`\n+  - `createpsbt`\n+  - `send`\n+  - `sendall`\n+  - `walletcreatefundedpsbt`\n+  (#32896)\n+\n+GUI changes\n+-----------\n+\n+- The GUI has been migrated from Qt 5 to Qt 6. On Windows, dark mode is now supported.\n+  On macOS, the Metal backend is now used. (#30997)\n+\n+- A transaction's fee bump is allowed under fullrbf and no longer requires\n+  BIP-125 signalling. (#31953)\n+\n+- Custom column widths in the Transactions tab are reset as a side-effect of legacy\n+  wallet removal. (#32459)\n+\n+Low-level changes\n+=================\n+\n+- Logs now include which peer sent us a header. Additionally there are fewer\n+  redundant header log messages. A side-effect of this change is that for\n+  some untypical cases new headers aren't logged anymore, e.g. a direct\n+  `BLOCK` message with a previously unknown header and `submitheader` RPC. (#27826)\n+\n+Credits\n+=======\n+\n+Thanks to everyone who directly contributed to this release:\n+\n+- 0xb10c\n+- amisha\n+- Andrew Toth\n+- Anthony Towns\n+- Antoine Poinsot\n+- Ava Chow\n+- benthecarman\n+- Brandon Odiwuor\n+- brunoerg\n+- Bue-von-hon\n+- Bufo\n+- Chandra Pratap\n+- Chris Stewart\n+- Cory Fields\n+- Daniel Pfeifer\n+- Daniela Brozzoni\n+- David Gumberg\n+- deadmanoz\n+- dennsikl\n+- dergoegge\n+- enoch\n+- Ethan Heilman\n+- Eugene Siegel\n+- Eunovo\n+- Eval EXEC\n+- Fabian Jahr\n+- fanquake\n+- Florian Schmaus\n+- fuder.eth\n+- furszy\n+- glozow\n+- Greg Sanders\n+- Hao Xu\n+- Haoran Peng\n+- Haowen Liu\n+- Hennadii Stepanov\n+- Hodlinator\n+- hoffman\n+- ishaanam\n+- ismaelsadeeq\n+- Jameson Lopp\n+- janb84\n+- Jiri Jakes\n+- John Bampton\n+- Jon Atack\n+- josibake\n+- jurraca\n+- kevkevin\n+- kevkevinpal",
      "path": "doc/release-notes/release-notes-30.0.md",
      "position": 383,
      "original_position": 383,
      "commit_id": "8d6e49158e3a1b3215484b5d139c5d8a3fffc4c9",
      "original_commit_id": "8d6e49158e3a1b3215484b5d139c5d8a3fffc4c9",
      "in_reply_to_id": 2424672309,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Like this? :p\r\n```suggestion\r\n- kevin\r\n```",
      "created_at": "2025-10-12T17:46:44Z",
      "updated_at": "2025-10-12T17:46:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33601#discussion_r2424684332",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2424684332"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33601"
        }
      },
      "start_line": 382,
      "original_start_line": 382,
      "start_side": "RIGHT",
      "line": 383,
      "original_line": 383,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2424692750",
      "pull_request_review_id": 3329268609,
      "id": 2424692750,
      "node_id": "PRRC_kwDOABII586QheAO",
      "diff_hunk": "@@ -0,0 +1,438 @@\n+v30.0 Release Notes\n+===================\n+\n+Bitcoin Core version v30.0 is now available from:\n+\n+  <https://bitcoincore.org/bin/bitcoin-core-30.0/>\n+\n+This release includes new features, various bug fixes and performance\n+improvements, as well as updated translations.\n+\n+Please report bugs using the issue tracker at GitHub:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+To receive security and update notifications, please subscribe to:\n+\n+  <https://bitcoincore.org/en/list/announcements/join/>\n+\n+How to Upgrade\n+==============\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes in some cases), then run the\n+installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on macOS)\n+or `bitcoind`/`bitcoin-qt` (on Linux).\n+\n+Upgrading directly from a version of Bitcoin Core that has reached its EOL is\n+possible, but it might take some time if the data directory needs to be migrated. Old\n+wallet versions of Bitcoin Core are generally supported.\n+\n+Compatibility\n+==============\n+\n+Bitcoin Core is supported and tested on operating systems using the\n+Linux Kernel 3.17+, macOS 13+, and Windows 10+. Bitcoin\n+Core should also work on most other Unix-like systems but is not as\n+frequently tested on them. It is not recommended to use Bitcoin Core on\n+unsupported systems.\n+\n+Notable changes\n+===============\n+\n+Policy\n+------\n+\n+- The maximum number of potentially executed legacy signature operations in a\n+  single standard transaction is now limited to 2500. Signature operations in all\n+  previous output scripts, in all input scripts, as well as all P2SH redeem\n+  scripts (if there are any) are counted toward the limit. The new limit is\n+  assumed to not affect any known typically formed standard transactions. The\n+  change was done to prepare for a possible BIP54 deployment in the future. (#32521)\n+\n+- `-datacarriersize` is increased to 100,000 by default, which effectively uncaps\n+  the limit (as the maximum transaction size limit will be hit first). It can be\n+  overridden with `-datacarriersize=83` to revert to the limit enforced in previous\n+  versions. (#32406)\n+\n+- Multiple data carrier (OP_RETURN) outputs in a transaction are now permitted for\n+  relay and mining. The `-datacarriersize` limit applies to the aggregate size of\n+  the scriptPubKeys across all such outputs in a transaction, not including the\n+  scriptPubKey size itself. (#32406)\n+\n+- The minimum block feerate (`-blockmintxfee`) has been changed to 0.001 satoshi per\n+  vB. It can still be changed using the configuration option. This option can be used\n+  by miners to set a minimum feerate on packages added to block templates. (#33106)\n+\n+- The default minimum relay feerate (`-minrelaytxfee`) and incremental relay feerate\n+  (`-incrementalrelayfee`) have been changed to 0.1 satoshis per vB. They can still\n+  be changed using their respective configuration options, but it is recommended to\n+  change both together if you decide to do so. (#33106)\n+\n+  Other minimum feerates (e.g. the dust feerate, the minimum returned by the fee\n+  estimator, and all feerates used by the wallet) remain unchanged. The mempool minimum\n+  feerate still changes in response to high volume.\n+\n+  Note that unless these lower defaults are widely adopted across the network, transactions\n+  created with lower fee rates are not guaranteed to propagate or confirm. The wallet\n+  feerates remain unchanged; `-mintxfee` must be changed before attempting to create\n+  transactions with lower feerates using the wallet. (#33106)\n+\n+P2P and network changes\n+-----------------------\n+\n+- Opportunistic 1-parent-1-child package relay has been improved to handle\n+  situations when the child already has unconfirmed parent(s) in the mempool.\n+  This means that 1p1c packages can be accepted and propagate, even if they are\n+  connected to broader topologies: multi-parent-1-child (where only 1 parent\n+  requires fee-bumping), grandparent-parent-child (where only parent requires\n+  fee-bumping) etc. (#31385)\n+\n+- The transaction orphanage, which holds transactions with missing inputs temporarily\n+  while the node attempts to fetch its parents, now has improved Denial of Service protections.\n+  Previously, it enforced a maximum number of unique transactions (default 100,\n+  configurable using `-maxorphantx`). Now, its limits are as follows: the number of\n+  entries (unique by wtxid and peer), plus each unique transaction's input count divided\n+  by 10, must not exceed 3,000. The total weight of unique transactions must not exceed\n+  `404,000` Wu multiplied by the number of peers. (#31829)\n+\n+- The `-maxorphantx` option no longer has any effect, since the orphanage no longer\n+  limits the number of unique transactions. Users should remove this configuration\n+  option if they were using it, as the setting will cause an error in future versions\n+  when it is no longer recognized. (#31829)\n+\n+New `bitcoin` command\n+---------------------\n+\n+- A new `bitcoin` command line tool has been added to make features more discoverable\n+  and convenient to use. The `bitcoin` tool just calls other executables and does not\n+  implement any functionality on its own. Specifically `bitcoin node` is a synonym for\n+  `bitcoind`, `bitcoin gui` is a synonym for `bitcoin-qt`, and `bitcoin rpc` is a synonym\n+  for `bitcoin-cli -named`. Other commands and options can be listed with `bitcoin help`.\n+  The new `bitcoin` command is an alternative to calling other commands directly, but it\n+  doesn't replace them, and there are no plans to deprecate existing commands. (#31375)\n+\n+External Signing\n+----------------\n+\n+- Support for external signing on Windows has been re-enabled. (#29868)\n+\n+IPC Mining Interface\n+--------------------\n+\n+- The new `bitcoin` command does support one new feature: an (experimental) IPC Mining\n+  Interface that allows the node to work with Stratum v2 or other mining client software,\n+  see (#31098). When the node is started with `bitcoin -m node -ipcbind=unix` it will\n+  listen on a unix socket for IPC client connections, allowing clients to request block\n+  templates and submit mined blocks. The `-m` option launches a new internal binary\n+  (`bitcoin-node` instead of `bitcoind`) and is currently required but will become optional\n+  in the future (with [#33229](https://github.com/bitcoin/bitcoin/pull/33229)).\n+\n+- IPC connectivity introduces new dependencies (see [multiprocess.md](https://github.com/bitcoin/bitcoin/blob/master/doc/multiprocess.md)),\n+  which can be turned off with the `-DENABLE_IPC=OFF` build option if you do not intend\n+  to use IPC. (#31802)\n+\n+Install changes\n+---------------\n+\n+- The `test_bitcoin` executable is now installed in `libexec/` instead of `bin/`.\n+  It can still be executed directly, or accessed through the new `bitcoin` command\n+  as `bitcoin test`. The `libexec/` directory also contains new `bitcoin-node` and\n+  `bitcoin-gui` binaries which support IPC features and are called through the\n+  `bitcoin` tool. In source builds only, `test_bitcoin-qt`, `bench_bitcoin`, and\n+  `bitcoin-chainstate` are also now installed to `libexec/` instead of `bin/` and\n+  can be accessed through the new `bitcoin` command. See `bitcoin help` output for\n+  details. (#31679)\n+\n+- On Windows, the installer no longer adds a “(64-bit)” suffix to entries in the\n+  Start Menu (#32132), and it now automatically removes obsolete artifacts during\n+  upgrades (#33422).\n+\n+Indexes\n+-------\n+\n+- The implementation of coinstatsindex was changed to prevent an overflow bug that\n+  could already be observed on the default Signet. The new version of the index will\n+  need to be synced from scratch when starting the upgraded node for the first time.\n+\n+  The new version is stored in `/indexes/coinstatsindex/` in contrast to the old version\n+  which was stored at `/indexes/coinstats/`. The old version of the index is not deleted\n+  by the upgraded node in case the user chooses to downgrade their node in the future.\n+  If the user does not plan to downgrade it is safe for them to remove `/indexes/coinstats/`\n+  from their datadir. A future release of Bitcoin Core may remove the old version of the\n+  index automatically. (#30469)\n+\n+Logging\n+-------\n+- Unconditional logging to disk is now rate limited by giving each source location\n+  a quota of 1MiB per hour. Unconditional logging is any logging with a log level\n+  higher than debug, that is `info`, `warning`, and `error`. All logs will be\n+  prefixed with `[*]` if there is at least one source location that is currently\n+  being suppressed. (#32604)\n+\n+- When `-logsourcelocations` is enabled, the log output now contains the entire\n+  function signature instead of just the function name. (#32604)\n+\n+Updated RPCs\n+------------\n+\n+- The `-paytxfee` startup option and the `settxfee` RPC are now deprecated and\n+  will be removed in Bitcoin Core 31.0. They allowed the user to set a static fee\n+  rate for wallet transactions, which could potentially lead to overpaying or underpaying.\n+  Users should instead rely on fee estimation or specify a fee rate per transaction\n+  using the `fee_rate` argument in RPCs such as `fundrawtransaction`, `sendtoaddress`,\n+  `send`, `sendall`, and `sendmany`. (#31278)\n+\n+- Any RPC in which one of the parameters is a descriptor will throw an error\n+  if the provided descriptor contains a whitespace at the beginning or the end\n+  of the public key within a fragment - e.g. `pk( KEY)` or `pk(KEY )`. (#31603)\n+\n+- The `submitpackage` RPC, which allows submissions of child-with-parents\n+  packages, no longer requires that all unconfirmed parents be present. The\n+  package may contain other in-mempool ancestors as well. (#31385)\n+\n+- The `waitfornewblock` RPC now takes an optional `current_tip` argument. It\n+  is also no longer hidden. (#30635)\n+\n+- The `waitforblock` and `waitforblockheight` RPCs are no longer hidden.  (#30635)\n+\n+- The `psbtbumpfee` and `bumpfee` RPCs allow a replacement under fullrbf and no\n+  longer require BIP-125 signalling. (#31953)\n+\n+- Transaction Script validation errors used to return the reason for the error\n+  prefixed by either `mandatory-script-verify-flag-failed` if it was a consensus\n+  error, or `non-mandatory-script-verify-flag` (without \"-failed\") if it was a\n+  standardness error. This has been changed to `block-script-verify-flag-failed`\n+  and `mempool-script-verify-flag-failed` for all block and mempool errors\n+  respectively. (#33183)\n+\n+- The `getmininginfo` RPC now returns \"blockmintxfee\" result specifying the value of\n+  `-blockmintxfee` configuration. (#33189)\n+\n+- The `getmempoolinfo` RPC now returns an additional \"permitbaremultisig\" and\n+  \"maxdatacarriersize\" field, reflecting the `-permitbaremultisig` and `-datacarriersize`\n+  config values. (#29954)\n+\n+Changes to wallet-related RPCs can be found in the Wallet section below.\n+\n+New RPCs\n+--------\n+\n+- A new REST API endpoint (`/rest/spenttxouts/BLOCKHASH`) has been introduced for\n+  efficiently fetching spent transaction outputs using the block's undo data (#32540).\n+\n+Build System\n+------------\n+\n+Updated settings\n+----------------\n+\n+- The `-maxmempool` and `-dbcache` startup parameters are now capped on 32-bit systems\n+  to 500MB and 1GiB respectively. (#32530)\n+\n+- The `-natpmp` option is now set to `1` by default. This means nodes with `-listen`\n+  enabled (the default) but running behind a firewall, such as a local network router,\n+  will be reachable if the firewall/router supports any of the `PCP` or `NAT-PMP`\n+  protocols. (#33004)\n+\n+- The `-upnp` setting has now been fully removed. Use `-natpmp` instead. (#32500)\n+\n+- Previously, `-proxy` specified the proxy for all networks (except I2P which\n+  uses `-i2psam`) and only the Tor proxy could have been specified separately\n+  via `-onion`. Now, the syntax of `-proxy` has been extended and it is possible\n+  to specify separately the proxy for IPv4, IPv6, Tor and CJDNS by appending `=`\n+  followed by the network name, for example `-proxy=127.0.0.1:5555=ipv6`\n+  configures a proxy only for IPv6. The `-proxy` option can be used multiple\n+  times to define different proxies for different networks, such as\n+  `-proxy=127.0.0.1:4444=ipv4 -proxy=10.0.0.1:6666=ipv6`. Later settings\n+  override earlier ones for the same network; this can be used to remove an\n+  earlier all-networks proxy and use direct connections only for a given\n+  network, for example `-proxy=127.0.0.1:5555 -proxy=0=cjdns`. (#32425)\n+\n+- The `-blockmaxweight` startup option has been updated to be debug-only.\n+  It is still available to users, but now hidden from the default `-help` text\n+  and shown only in `-help-debug` (#32654).\n+\n+Changes to GUI or wallet related settings can be found in the GUI or Wallet section below.\n+\n+Wallet\n+------\n+\n+- BDB legacy wallets can no longer be created or loaded. They can be migrated\n+  to the new descriptor wallet format. Refer to the `migratewallet` RPC for more\n+  details.\n+\n+- The legacy wallet removal drops redundant options in the bitcoin-wallet tool,\n+  such as `-withinternalbdb`, `-legacy`, and `-descriptors`. Moreover, the\n+  legacy-only RPCs `addmultisigaddress`, `dumpprivkey`, `dumpwallet`,\n+  `importaddress`, `importmulti`, `importprivkey`, `importpubkey`,\n+  `importwallet`, `newkeypool`, `sethdseed`, and `upgradewallet`, are removed.\n+  (#32944, #28710, #32438, #31250)\n+\n+- Support has been added for spending TRUC transactions received by the\n+  wallet, as well as creating TRUC transactions. The wallet ensures that\n+  TRUC policy rules are being met. The wallet will throw an error if the\n+  user is trying to spend TRUC utxos with utxos of other versions.\n+  Additionally, the wallet will treat unconfirmed TRUC sibling\n+  transactions as mempool conflicts. The wallet will also ensure that\n+  transactions spending TRUC utxos meet the required size restrictions. (#32896)\n+\n+- Since descriptor wallets do not allow mixing watchonly and non-watchonly descriptors,\n+  the `include_watchonly` option (and its variants in naming) are removed from all RPCs\n+  that had it. (#32618)\n+\n+- The `iswatchonly` field is removed from any RPCs that returned it. (#32618)\n+\n+- `unloadwallet` - Return RPC_INVALID_PARAMETER when both the RPC wallet endpoint\n+  and wallet_name parameters are unspecified. Previously the RPC failed with a JSON\n+  parsing error. (#32845)\n+\n+- `getdescriptoractivity` - Mark blockhashes and scanobjects arguments as required,\n+  so the user receives a clear help message when either is missing. As in `unloadwallet`,\n+  previously the RPC failed with a JSON parsing error. (#32845)\n+\n+- `getwalletinfo` - Removes the fields `balance`, `immature_balance` and\n+  `unconfirmed_balance`. (#32721)\n+\n+- `getunconfirmedbalance` - Removes this RPC command. You can query the `getbalances`\n+  RPC and inspect the `[\"mine\"][\"untrusted_pending\"]` entry within the JSON\n+  response. (#32721)\n+\n+- The following RPCs now contain a `version` parameter that allows\n+  the user to create transactions of any standard version number (1-3):\n+  - `createrawtransaction`\n+  - `createpsbt`\n+  - `send`\n+  - `sendall`\n+  - `walletcreatefundedpsbt`\n+  (#32896)\n+\n+GUI changes\n+-----------\n+\n+- The GUI has been migrated from Qt 5 to Qt 6. On Windows, dark mode is now supported.\n+  On macOS, the Metal backend is now used. (#30997)\n+\n+- A transaction's fee bump is allowed under fullrbf and no longer requires\n+  BIP-125 signalling. (#31953)\n+\n+- Custom column widths in the Transactions tab are reset as a side-effect of legacy\n+  wallet removal. (#32459)\n+\n+Low-level changes\n+=================\n+\n+- Logs now include which peer sent us a header. Additionally there are fewer\n+  redundant header log messages. A side-effect of this change is that for\n+  some untypical cases new headers aren't logged anymore, e.g. a direct\n+  `BLOCK` message with a previously unknown header and `submitheader` RPC. (#27826)\n+\n+Credits\n+=======\n+\n+Thanks to everyone who directly contributed to this release:\n+\n+- 0xb10c\n+- amisha\n+- Andrew Toth\n+- Anthony Towns\n+- Antoine Poinsot\n+- Ava Chow\n+- benthecarman\n+- Brandon Odiwuor\n+- brunoerg\n+- Bue-von-hon\n+- Bufo\n+- Chandra Pratap\n+- Chris Stewart\n+- Cory Fields\n+- Daniel Pfeifer\n+- Daniela Brozzoni\n+- David Gumberg\n+- deadmanoz\n+- dennsikl\n+- dergoegge\n+- enoch\n+- Ethan Heilman\n+- Eugene Siegel\n+- Eunovo\n+- Eval EXEC\n+- Fabian Jahr\n+- fanquake\n+- Florian Schmaus\n+- fuder.eth\n+- furszy\n+- glozow\n+- Greg Sanders\n+- Hao Xu\n+- Haoran Peng\n+- Haowen Liu\n+- Hennadii Stepanov\n+- Hodlinator\n+- hoffman\n+- ishaanam\n+- ismaelsadeeq\n+- Jameson Lopp\n+- janb84\n+- Jiri Jakes\n+- John Bampton\n+- Jon Atack\n+- josibake\n+- jurraca\n+- kevkevin\n+- kevkevinpal",
      "path": "doc/release-notes/release-notes-30.0.md",
      "position": 383,
      "original_position": 383,
      "commit_id": "8d6e49158e3a1b3215484b5d139c5d8a3fffc4c9",
      "original_commit_id": "8d6e49158e3a1b3215484b5d139c5d8a3fffc4c9",
      "in_reply_to_id": 2424672309,
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Haha just `kevkevinpal` works",
      "created_at": "2025-10-12T17:50:59Z",
      "updated_at": "2025-10-12T17:50:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33601#discussion_r2424692750",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2424692750"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33601"
        }
      },
      "start_line": 382,
      "original_start_line": 382,
      "start_side": "RIGHT",
      "line": 383,
      "original_line": 383,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2425804500",
      "pull_request_review_id": 3330810842,
      "id": 2425804500,
      "node_id": "PRRC_kwDOABII586QltbU",
      "diff_hunk": "@@ -0,0 +1,438 @@\n+v30.0 Release Notes\n+===================\n+\n+Bitcoin Core version v30.0 is now available from:\n+\n+  <https://bitcoincore.org/bin/bitcoin-core-30.0/>\n+\n+This release includes new features, various bug fixes and performance\n+improvements, as well as updated translations.\n+\n+Please report bugs using the issue tracker at GitHub:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+To receive security and update notifications, please subscribe to:\n+\n+  <https://bitcoincore.org/en/list/announcements/join/>\n+\n+How to Upgrade\n+==============\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes in some cases), then run the\n+installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on macOS)\n+or `bitcoind`/`bitcoin-qt` (on Linux).\n+\n+Upgrading directly from a version of Bitcoin Core that has reached its EOL is\n+possible, but it might take some time if the data directory needs to be migrated. Old\n+wallet versions of Bitcoin Core are generally supported.\n+\n+Compatibility\n+==============\n+\n+Bitcoin Core is supported and tested on operating systems using the\n+Linux Kernel 3.17+, macOS 13+, and Windows 10+. Bitcoin\n+Core should also work on most other Unix-like systems but is not as\n+frequently tested on them. It is not recommended to use Bitcoin Core on\n+unsupported systems.\n+\n+Notable changes\n+===============\n+\n+Policy\n+------\n+\n+- The maximum number of potentially executed legacy signature operations in a\n+  single standard transaction is now limited to 2500. Signature operations in all\n+  previous output scripts, in all input scripts, as well as all P2SH redeem\n+  scripts (if there are any) are counted toward the limit. The new limit is\n+  assumed to not affect any known typically formed standard transactions. The\n+  change was done to prepare for a possible BIP54 deployment in the future. (#32521)\n+\n+- `-datacarriersize` is increased to 100,000 by default, which effectively uncaps\n+  the limit (as the maximum transaction size limit will be hit first). It can be\n+  overridden with `-datacarriersize=83` to revert to the limit enforced in previous\n+  versions. (#32406)\n+\n+- Multiple data carrier (OP_RETURN) outputs in a transaction are now permitted for\n+  relay and mining. The `-datacarriersize` limit applies to the aggregate size of\n+  the scriptPubKeys across all such outputs in a transaction, not including the\n+  scriptPubKey size itself. (#32406)\n+\n+- The minimum block feerate (`-blockmintxfee`) has been changed to 0.001 satoshi per\n+  vB. It can still be changed using the configuration option. This option can be used\n+  by miners to set a minimum feerate on packages added to block templates. (#33106)\n+\n+- The default minimum relay feerate (`-minrelaytxfee`) and incremental relay feerate\n+  (`-incrementalrelayfee`) have been changed to 0.1 satoshis per vB. They can still\n+  be changed using their respective configuration options, but it is recommended to\n+  change both together if you decide to do so. (#33106)\n+\n+  Other minimum feerates (e.g. the dust feerate, the minimum returned by the fee\n+  estimator, and all feerates used by the wallet) remain unchanged. The mempool minimum\n+  feerate still changes in response to high volume.\n+\n+  Note that unless these lower defaults are widely adopted across the network, transactions\n+  created with lower fee rates are not guaranteed to propagate or confirm. The wallet\n+  feerates remain unchanged; `-mintxfee` must be changed before attempting to create\n+  transactions with lower feerates using the wallet. (#33106)\n+\n+P2P and network changes\n+-----------------------\n+\n+- Opportunistic 1-parent-1-child package relay has been improved to handle\n+  situations when the child already has unconfirmed parent(s) in the mempool.\n+  This means that 1p1c packages can be accepted and propagate, even if they are\n+  connected to broader topologies: multi-parent-1-child (where only 1 parent\n+  requires fee-bumping), grandparent-parent-child (where only parent requires\n+  fee-bumping) etc. (#31385)\n+\n+- The transaction orphanage, which holds transactions with missing inputs temporarily\n+  while the node attempts to fetch its parents, now has improved Denial of Service protections.\n+  Previously, it enforced a maximum number of unique transactions (default 100,\n+  configurable using `-maxorphantx`). Now, its limits are as follows: the number of\n+  entries (unique by wtxid and peer), plus each unique transaction's input count divided\n+  by 10, must not exceed 3,000. The total weight of unique transactions must not exceed\n+  `404,000` Wu multiplied by the number of peers. (#31829)\n+\n+- The `-maxorphantx` option no longer has any effect, since the orphanage no longer\n+  limits the number of unique transactions. Users should remove this configuration\n+  option if they were using it, as the setting will cause an error in future versions\n+  when it is no longer recognized. (#31829)\n+\n+New `bitcoin` command\n+---------------------\n+\n+- A new `bitcoin` command line tool has been added to make features more discoverable\n+  and convenient to use. The `bitcoin` tool just calls other executables and does not\n+  implement any functionality on its own. Specifically `bitcoin node` is a synonym for\n+  `bitcoind`, `bitcoin gui` is a synonym for `bitcoin-qt`, and `bitcoin rpc` is a synonym\n+  for `bitcoin-cli -named`. Other commands and options can be listed with `bitcoin help`.\n+  The new `bitcoin` command is an alternative to calling other commands directly, but it\n+  doesn't replace them, and there are no plans to deprecate existing commands. (#31375)\n+\n+External Signing\n+----------------\n+\n+- Support for external signing on Windows has been re-enabled. (#29868)\n+\n+IPC Mining Interface\n+--------------------\n+\n+- The new `bitcoin` command does support one new feature: an (experimental) IPC Mining\n+  Interface that allows the node to work with Stratum v2 or other mining client software,\n+  see (#31098). When the node is started with `bitcoin -m node -ipcbind=unix` it will\n+  listen on a unix socket for IPC client connections, allowing clients to request block\n+  templates and submit mined blocks. The `-m` option launches a new internal binary\n+  (`bitcoin-node` instead of `bitcoind`) and is currently required but will become optional\n+  in the future (with [#33229](https://github.com/bitcoin/bitcoin/pull/33229)).\n+\n+- IPC connectivity introduces new dependencies (see [multiprocess.md](https://github.com/bitcoin/bitcoin/blob/master/doc/multiprocess.md)),\n+  which can be turned off with the `-DENABLE_IPC=OFF` build option if you do not intend\n+  to use IPC. (#31802)\n+\n+Install changes\n+---------------\n+\n+- The `test_bitcoin` executable is now installed in `libexec/` instead of `bin/`.\n+  It can still be executed directly, or accessed through the new `bitcoin` command\n+  as `bitcoin test`. The `libexec/` directory also contains new `bitcoin-node` and\n+  `bitcoin-gui` binaries which support IPC features and are called through the\n+  `bitcoin` tool. In source builds only, `test_bitcoin-qt`, `bench_bitcoin`, and\n+  `bitcoin-chainstate` are also now installed to `libexec/` instead of `bin/` and\n+  can be accessed through the new `bitcoin` command. See `bitcoin help` output for\n+  details. (#31679)\n+\n+- On Windows, the installer no longer adds a “(64-bit)” suffix to entries in the\n+  Start Menu (#32132), and it now automatically removes obsolete artifacts during\n+  upgrades (#33422).\n+\n+Indexes\n+-------\n+\n+- The implementation of coinstatsindex was changed to prevent an overflow bug that\n+  could already be observed on the default Signet. The new version of the index will\n+  need to be synced from scratch when starting the upgraded node for the first time.\n+\n+  The new version is stored in `/indexes/coinstatsindex/` in contrast to the old version\n+  which was stored at `/indexes/coinstats/`. The old version of the index is not deleted\n+  by the upgraded node in case the user chooses to downgrade their node in the future.\n+  If the user does not plan to downgrade it is safe for them to remove `/indexes/coinstats/`\n+  from their datadir. A future release of Bitcoin Core may remove the old version of the\n+  index automatically. (#30469)\n+\n+Logging\n+-------\n+- Unconditional logging to disk is now rate limited by giving each source location\n+  a quota of 1MiB per hour. Unconditional logging is any logging with a log level\n+  higher than debug, that is `info`, `warning`, and `error`. All logs will be\n+  prefixed with `[*]` if there is at least one source location that is currently\n+  being suppressed. (#32604)\n+\n+- When `-logsourcelocations` is enabled, the log output now contains the entire\n+  function signature instead of just the function name. (#32604)\n+\n+Updated RPCs\n+------------\n+\n+- The `-paytxfee` startup option and the `settxfee` RPC are now deprecated and\n+  will be removed in Bitcoin Core 31.0. They allowed the user to set a static fee\n+  rate for wallet transactions, which could potentially lead to overpaying or underpaying.\n+  Users should instead rely on fee estimation or specify a fee rate per transaction\n+  using the `fee_rate` argument in RPCs such as `fundrawtransaction`, `sendtoaddress`,\n+  `send`, `sendall`, and `sendmany`. (#31278)\n+\n+- Any RPC in which one of the parameters is a descriptor will throw an error\n+  if the provided descriptor contains a whitespace at the beginning or the end\n+  of the public key within a fragment - e.g. `pk( KEY)` or `pk(KEY )`. (#31603)\n+\n+- The `submitpackage` RPC, which allows submissions of child-with-parents\n+  packages, no longer requires that all unconfirmed parents be present. The\n+  package may contain other in-mempool ancestors as well. (#31385)\n+\n+- The `waitfornewblock` RPC now takes an optional `current_tip` argument. It\n+  is also no longer hidden. (#30635)\n+\n+- The `waitforblock` and `waitforblockheight` RPCs are no longer hidden.  (#30635)\n+\n+- The `psbtbumpfee` and `bumpfee` RPCs allow a replacement under fullrbf and no\n+  longer require BIP-125 signalling. (#31953)\n+\n+- Transaction Script validation errors used to return the reason for the error\n+  prefixed by either `mandatory-script-verify-flag-failed` if it was a consensus\n+  error, or `non-mandatory-script-verify-flag` (without \"-failed\") if it was a\n+  standardness error. This has been changed to `block-script-verify-flag-failed`\n+  and `mempool-script-verify-flag-failed` for all block and mempool errors\n+  respectively. (#33183)\n+\n+- The `getmininginfo` RPC now returns \"blockmintxfee\" result specifying the value of\n+  `-blockmintxfee` configuration. (#33189)\n+\n+- The `getmempoolinfo` RPC now returns an additional \"permitbaremultisig\" and\n+  \"maxdatacarriersize\" field, reflecting the `-permitbaremultisig` and `-datacarriersize`\n+  config values. (#29954)\n+\n+Changes to wallet-related RPCs can be found in the Wallet section below.\n+\n+New RPCs\n+--------\n+\n+- A new REST API endpoint (`/rest/spenttxouts/BLOCKHASH`) has been introduced for\n+  efficiently fetching spent transaction outputs using the block's undo data (#32540).\n+\n+Build System\n+------------\n+\n+Updated settings\n+----------------\n+\n+- The `-maxmempool` and `-dbcache` startup parameters are now capped on 32-bit systems\n+  to 500MB and 1GiB respectively. (#32530)\n+\n+- The `-natpmp` option is now set to `1` by default. This means nodes with `-listen`\n+  enabled (the default) but running behind a firewall, such as a local network router,\n+  will be reachable if the firewall/router supports any of the `PCP` or `NAT-PMP`\n+  protocols. (#33004)\n+\n+- The `-upnp` setting has now been fully removed. Use `-natpmp` instead. (#32500)\n+\n+- Previously, `-proxy` specified the proxy for all networks (except I2P which\n+  uses `-i2psam`) and only the Tor proxy could have been specified separately\n+  via `-onion`. Now, the syntax of `-proxy` has been extended and it is possible\n+  to specify separately the proxy for IPv4, IPv6, Tor and CJDNS by appending `=`\n+  followed by the network name, for example `-proxy=127.0.0.1:5555=ipv6`\n+  configures a proxy only for IPv6. The `-proxy` option can be used multiple\n+  times to define different proxies for different networks, such as\n+  `-proxy=127.0.0.1:4444=ipv4 -proxy=10.0.0.1:6666=ipv6`. Later settings\n+  override earlier ones for the same network; this can be used to remove an\n+  earlier all-networks proxy and use direct connections only for a given\n+  network, for example `-proxy=127.0.0.1:5555 -proxy=0=cjdns`. (#32425)\n+\n+- The `-blockmaxweight` startup option has been updated to be debug-only.\n+  It is still available to users, but now hidden from the default `-help` text\n+  and shown only in `-help-debug` (#32654).\n+\n+Changes to GUI or wallet related settings can be found in the GUI or Wallet section below.\n+\n+Wallet\n+------\n+\n+- BDB legacy wallets can no longer be created or loaded. They can be migrated\n+  to the new descriptor wallet format. Refer to the `migratewallet` RPC for more\n+  details.\n+\n+- The legacy wallet removal drops redundant options in the bitcoin-wallet tool,\n+  such as `-withinternalbdb`, `-legacy`, and `-descriptors`. Moreover, the\n+  legacy-only RPCs `addmultisigaddress`, `dumpprivkey`, `dumpwallet`,\n+  `importaddress`, `importmulti`, `importprivkey`, `importpubkey`,\n+  `importwallet`, `newkeypool`, `sethdseed`, and `upgradewallet`, are removed.\n+  (#32944, #28710, #32438, #31250)\n+\n+- Support has been added for spending TRUC transactions received by the\n+  wallet, as well as creating TRUC transactions. The wallet ensures that\n+  TRUC policy rules are being met. The wallet will throw an error if the\n+  user is trying to spend TRUC utxos with utxos of other versions.\n+  Additionally, the wallet will treat unconfirmed TRUC sibling\n+  transactions as mempool conflicts. The wallet will also ensure that\n+  transactions spending TRUC utxos meet the required size restrictions. (#32896)\n+\n+- Since descriptor wallets do not allow mixing watchonly and non-watchonly descriptors,\n+  the `include_watchonly` option (and its variants in naming) are removed from all RPCs\n+  that had it. (#32618)\n+\n+- The `iswatchonly` field is removed from any RPCs that returned it. (#32618)\n+\n+- `unloadwallet` - Return RPC_INVALID_PARAMETER when both the RPC wallet endpoint\n+  and wallet_name parameters are unspecified. Previously the RPC failed with a JSON\n+  parsing error. (#32845)\n+\n+- `getdescriptoractivity` - Mark blockhashes and scanobjects arguments as required,\n+  so the user receives a clear help message when either is missing. As in `unloadwallet`,\n+  previously the RPC failed with a JSON parsing error. (#32845)\n+\n+- `getwalletinfo` - Removes the fields `balance`, `immature_balance` and\n+  `unconfirmed_balance`. (#32721)\n+\n+- `getunconfirmedbalance` - Removes this RPC command. You can query the `getbalances`\n+  RPC and inspect the `[\"mine\"][\"untrusted_pending\"]` entry within the JSON\n+  response. (#32721)\n+\n+- The following RPCs now contain a `version` parameter that allows\n+  the user to create transactions of any standard version number (1-3):\n+  - `createrawtransaction`\n+  - `createpsbt`\n+  - `send`\n+  - `sendall`\n+  - `walletcreatefundedpsbt`\n+  (#32896)\n+\n+GUI changes\n+-----------\n+\n+- The GUI has been migrated from Qt 5 to Qt 6. On Windows, dark mode is now supported.\n+  On macOS, the Metal backend is now used. (#30997)\n+\n+- A transaction's fee bump is allowed under fullrbf and no longer requires\n+  BIP-125 signalling. (#31953)\n+\n+- Custom column widths in the Transactions tab are reset as a side-effect of legacy\n+  wallet removal. (#32459)\n+\n+Low-level changes\n+=================\n+\n+- Logs now include which peer sent us a header. Additionally there are fewer\n+  redundant header log messages. A side-effect of this change is that for\n+  some untypical cases new headers aren't logged anymore, e.g. a direct\n+  `BLOCK` message with a previously unknown header and `submitheader` RPC. (#27826)\n+\n+Credits\n+=======\n+\n+Thanks to everyone who directly contributed to this release:\n+\n+- 0xb10c\n+- amisha\n+- Andrew Toth\n+- Anthony Towns\n+- Antoine Poinsot\n+- Ava Chow\n+- benthecarman\n+- Brandon Odiwuor\n+- brunoerg\n+- Bue-von-hon\n+- Bufo\n+- Chandra Pratap\n+- Chris Stewart\n+- Cory Fields\n+- Daniel Pfeifer\n+- Daniela Brozzoni\n+- David Gumberg\n+- deadmanoz\n+- dennsikl\n+- dergoegge\n+- enoch\n+- Ethan Heilman\n+- Eugene Siegel\n+- Eunovo\n+- Eval EXEC\n+- Fabian Jahr\n+- fanquake\n+- Florian Schmaus\n+- fuder.eth\n+- furszy\n+- glozow\n+- Greg Sanders\n+- Hao Xu\n+- Haoran Peng\n+- Haowen Liu\n+- Hennadii Stepanov\n+- Hodlinator\n+- hoffman\n+- ishaanam\n+- ismaelsadeeq\n+- Jameson Lopp\n+- janb84\n+- Jiri Jakes\n+- John Bampton\n+- Jon Atack\n+- josibake\n+- jurraca\n+- kevkevin\n+- kevkevinpal",
      "path": "doc/release-notes/release-notes-30.0.md",
      "position": 383,
      "original_position": 383,
      "commit_id": "8d6e49158e3a1b3215484b5d139c5d8a3fffc4c9",
      "original_commit_id": "8d6e49158e3a1b3215484b5d139c5d8a3fffc4c9",
      "in_reply_to_id": 2424672309,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks, however I wont be modifying the release notes further here.",
      "created_at": "2025-10-13T10:09:52Z",
      "updated_at": "2025-10-13T10:09:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33601#discussion_r2425804500",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2425804500"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33601"
        }
      },
      "start_line": 382,
      "original_start_line": 382,
      "start_side": "RIGHT",
      "line": 383,
      "original_line": 383,
      "side": "RIGHT"
    }
  ]
}