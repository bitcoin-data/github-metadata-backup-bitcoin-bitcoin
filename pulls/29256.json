{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29256",
    "id": 1681972231,
    "node_id": "PR_kwDOABII585kQNwH",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/29256",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/29256.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/29256.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29256",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29256/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29256/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29256/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/d032022ff59204b85b2057ab9a88f4d2842dbde9",
    "number": 29256,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "log, refactor: Allow log macros to accept context arguments",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "Allow `LogDebug()`, `LogTrace()`, `LogInfo()`, `LogWarning()`, and `LogError()` macros to accept context arguments to provide more information in log messages and more control over logging to callers.\r\n\r\nThis functionality is used in followup PRs:\r\n\r\n- [#30342](https://github.com/bitcoin/bitcoin/pull/30342) - To let libbitcoinkernel send output to specfic `BCLog::Logger` instances instead of a global instance, so output can be disambiguated and applications can have more control over logging.\r\n\r\n- [#30343](https://github.com/bitcoin/bitcoin/pull/30343) - To replace custom `WalletLogPrintf` calls with standard logging calls that automatically include wallet names and don't log everything at info level.\r\n\r\nThis PR does not change behavior of current log prints or require them to be updated. It includes tests and documentation covering the new functionality.\r\n\r\n---\r\n\r\nNote: Originally this PR also removed some restrictions around passing category constants to log macros to try to make them more consistent, but these changes were too controversial and have been dropped.",
    "labels": [
      {
        "id": 241832923,
        "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
        "name": "Utils/log/libs",
        "description": "",
        "color": "5319e7",
        "default": false
      }
    ],
    "created_at": "2024-01-16T22:09:35Z",
    "updated_at": "2025-10-15T00:57:27Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "e79bd8a10f401af27fda707976639795e05cc4d8",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "ryanofsky:pr/bclog",
      "ref": "pr/bclog",
      "sha": "d032022ff59204b85b2057ab9a88f4d2842dbde9",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 69901633,
        "node_id": "MDEwOlJlcG9zaXRvcnk2OTkwMTYzMw==",
        "name": "bitcoin",
        "full_name": "ryanofsky/bitcoin",
        "owner": {
          "login": "ryanofsky",
          "id": 7133040,
          "node_id": "MDQ6VXNlcjcxMzMwNDA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ryanofsky",
          "html_url": "https://github.com/ryanofsky",
          "followers_url": "https://api.github.com/users/ryanofsky/followers",
          "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
          "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
          "repos_url": "https://api.github.com/users/ryanofsky/repos",
          "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/ryanofsky/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/ryanofsky/bitcoin",
        "archive_url": "https://api.github.com/repos/ryanofsky/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/ryanofsky/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/ryanofsky/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/ryanofsky/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/ryanofsky/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/ryanofsky/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/ryanofsky/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/ryanofsky/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/ryanofsky/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/ryanofsky/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/ryanofsky/bitcoin/events",
        "forks_url": "https://api.github.com/repos/ryanofsky/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/ryanofsky/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/ryanofsky/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/ryanofsky/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/ryanofsky/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/ryanofsky/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/ryanofsky/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/ryanofsky/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/ryanofsky/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/ryanofsky/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:ryanofsky/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/ryanofsky/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/ryanofsky/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/ryanofsky/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/ryanofsky/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/ryanofsky/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/ryanofsky/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/ryanofsky/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/ryanofsky/bitcoin/hooks",
        "svn_url": "https://github.com/ryanofsky/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 11,
        "stargazers_count": 18,
        "watchers_count": 18,
        "size": 295085,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-10-15T00:42:21Z",
        "created_at": "2016-10-03T19:05:43Z",
        "updated_at": "2025-09-23T12:12:29Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "48aa0e98d0b70244658b41d7378c295f3e1dadcd",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 38028,
        "stargazers_count": 86169,
        "watchers_count": 86169,
        "size": 294924,
        "default_branch": "master",
        "open_issues_count": 833,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-10-14T20:26:22Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-10-15T00:59:17Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29256"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 304,
    "deletions": 46,
    "changed_files": 2,
    "commits": 5,
    "review_comments": 24,
    "comments": 29
  },
  "events": [
    {
      "event": "commented",
      "id": 1894600378,
      "node_id": "IC_kwDOABII585w7U66",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1894600378",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-16T22:09:38Z",
      "updated_at": "2025-10-15T00:51:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/29256.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept NACK | [ajtowns](https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-1894630511), [hodlinator](https://github.com/bitcoin/bitcoin/pull/29256#pullrequestreview-2142978382) |\n| Concept ACK | [TheCharlatan](https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-2189810744), [jonatack](https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-2197318437) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#32604](https://github.com/bitcoin/bitcoin/pull/32604) (log: Mitigate disk filling attacks by rate limiting LogPrintf, LogInfo, LogWarning, LogError by Crypt-iQ)\n* [#29641](https://github.com/bitcoin/bitcoin/pull/29641) (scripted-diff: Use LogInfo over LogPrintf [WIP, NOMERGE, DRAFT] by maflcko)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->\n### LLM Linter (✨ experimental)\n\nPossible typos and grammar issues:\n\n- \"not wanting to allow users filter by category\" -> \"not wanting to allow users to filter by category\" [missing \"to\" makes the phrase grammatically incorrect]\n- \"If severity level is Info or higher, uses basic rate limiting to mitigate disk filling attacks.\" -> \"If the severity level is Info or higher, it uses basic rate limiting to mitigate disk filling attacks.\" [missing subject (\"it\") makes the sentence ungrammatical and harder to parse]\n\nIf you'd like, I can produce a patch with these two fixes.\n\n<sup>drahtbot_id_5_m</sup>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-1894600378",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29256"
    },
    {
      "event": "commented",
      "id": 1894630511,
      "node_id": "IC_kwDOABII585w7cRv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1894630511",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-16T22:34:50Z",
      "updated_at": "2024-01-16T22:34:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept NACK from me, this seems much uglier and trickier to work with. I've already written [in depth](https://github.com/bitcoin/bitcoin/pull/28318#issuecomment-1702318968) about why the current approach makes sense, so I'll be brief here.\r\n\r\n> Make them always accept log categories to make it possible to only log messages from a particular component.\r\n\r\nBeing able to avoid logging critical messages is adding a bug, not a feature.\r\n\r\n> Make them less verbose by not requiring BCLog category constants to be specified in individual log prints\r\n\r\n\"+841 -626\" and adding a dummy parameter to most calls does not make things less verbose, and it's also much harder to search for net related logging when the individual log statements just say `m_log` rather than `BCLog::NET`.\r\n\r\n> Make them compatible with wallet logging, which includes the wallet name in log messages\r\n\r\nThe only thing needed here is renaming from `Printf` to `Info`...",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-1894630511",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29256"
    },
    {
      "event": "labeled",
      "id": 11504992502,
      "node_id": "LE_lADOABII5858R1mSzwAAAAKtwED2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11504992502",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-16T23:59:53Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1894928988,
      "node_id": "IC_kwDOABII585w8lJc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1894928988",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-17T04:41:32Z",
      "updated_at": "2024-01-17T04:42:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "Hi AJ, this is a draft, and there will be some more changes which may address your concerns.\r\n\r\n> > Make them always accept log categories to make it possible to only log messages from a particular component.\r\n>\r\n> Being able to avoid logging critical messages is adding a bug, not a feature.\r\n\r\nAgree, but the idea here is not to discard log messages, the idea just is to attach meaningful metadata to log messages so they can be filtered by component.\r\n\r\n> > Make them less verbose by not requiring BCLog category constants to be specified in individual log prints\r\n>\r\n> \"+841 -626\" and adding a dummy parameter to most calls does not make things less verbose, and it's also much harder to search for net related logging when the individual log statements just say `m_log` rather than `BCLog::NET`.\r\n\r\nI can probably make the description clearer, but the idea here is that this will make the code less noisy:\r\n\r\n```diff\r\n-LogPrintLevel(BCLog::NET, BCLog::Level::Warning, \"getsockname failed\\n\");\r\n+LogWarning(log, \"getsockname failed\\n\");\r\n```\r\n\r\nIt is true this sacrifices ability to grep by category constants in the source code, and maybe in your judgement that is an unacceptable cost? But in my opinion, if we ever using same category constants in disparate parts of source code, or different category constants in the same part of the source code, it means source code is badly organized and we should fix that instead of resorting to a coping mechanism of searching for constants instead of searching by source path. In my experience, I've haven't used logging frameworks that have encouraged category constants to be scattered and mixed like this, and I don't think it is a good idea.\r\n\r\nThe \"+841 -626\" refactoring is definitely :hankey:-y and I plan to drop it from this PR. The change to the log macros is meant to facilitate that refactoring, not the other way around. I do think we should stop relying on the global logging instance for libbitcoinkernel code, but probably can keep using it elsewhere.\r\n\r\n> > Make them compatible with wallet logging, which includes the wallet name in log messages\r\n>\r\n> The only thing needed here is renaming from `Printf` to `Info`...\r\n\r\nProbably something is lost in communication here, but the idea is to let wallet code use same LogDebug(), LogTrace(), LogInfo(), LogWarning(), LogError() macros other code uses. It just adds a little formatting hook so the wallet name is automatically included when the log source is the wallet. This way full functionality of #29256 is available to the wallet and we can drop WalletLogPrintf and not have dedicated wallet logging functions.\r\n\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-1894928988",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29256"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11515132735,
      "node_id": "HRFPE_lADOABII5858R1mSzwAAAAKuWvs_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11515132735",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d402c90a5c87922272be05a83e599cc3ffd7e1de",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/d402c90a5c87922272be05a83e599cc3ffd7e1de",
      "created_at": "2024-01-17T18:42:21Z"
    },
    {
      "event": "unlabeled",
      "id": 11515243583,
      "node_id": "UNLE_lADOABII5858R1mSzwAAAAKuXKw_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11515243583",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-17T18:53:31Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11515441787,
      "node_id": "HRFPE_lADOABII5858R1mSzwAAAAKuX7J7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11515441787",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "705f795aee4ebfdd0c785c7e39015cb43da2f0cf",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/705f795aee4ebfdd0c785c7e39015cb43da2f0cf",
      "created_at": "2024-01-17T19:15:15Z"
    },
    {
      "event": "labeled",
      "id": 11515442403,
      "node_id": "LE_lADOABII5858R1mSzwAAAAKuX7Tj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11515442403",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-17T19:15:20Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1896474430,
      "node_id": "IC_kwDOABII585xCec-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1896474430",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-17T19:15:21Z",
      "updated_at": "2024-01-17T19:15:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/20586125687</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-1896474430",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29256"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11515924891,
      "node_id": "HRFPE_lADOABII5858R1mSzwAAAAKuZxGb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11515924891",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "632bbb887a40550477e753fbd24fa44fe030cb10",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/632bbb887a40550477e753fbd24fa44fe030cb10",
      "created_at": "2024-01-17T20:04:55Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11516075062,
      "node_id": "HRFPE_lADOABII5858R1mSzwAAAAKuaVw2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11516075062",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f929469779d17a9010f42b4db600fef7d6564934",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/f929469779d17a9010f42b4db600fef7d6564934",
      "created_at": "2024-01-17T20:22:48Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11516353827,
      "node_id": "HRFPE_lADOABII5858R1mSzwAAAAKubZ0j",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11516353827",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "15c08bcf359abba8e5c726df0f8c38acbe7aea81",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/15c08bcf359abba8e5c726df0f8c38acbe7aea81",
      "created_at": "2024-01-17T20:54:27Z"
    },
    {
      "event": "unlabeled",
      "id": 11517230682,
      "node_id": "UNLE_lADOABII5858R1mSzwAAAAKuev5a",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11517230682",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-17T22:26:37Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "ready_for_review",
      "id": 11517770546,
      "node_id": "RFRE_lADOABII5858R1mSzwAAAAKugzsy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11517770546",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-17T23:41:18Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11518709561,
      "node_id": "HRFPE_lADOABII5858R1mSzwAAAAKukY85",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11518709561",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "99feed7350b5fc3ae3157dd395ae6260c5bfc092",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/99feed7350b5fc3ae3157dd395ae6260c5bfc092",
      "created_at": "2024-01-18T01:25:10Z"
    },
    {
      "event": "commented",
      "id": 1899825975,
      "node_id": "IC_kwDOABII585xPQs3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1899825975",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-19T06:12:29Z",
      "updated_at": "2024-01-19T06:12:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Agree, but the idea here is not to discard log messages, the idea just is to attach meaningful metadata to log messages so they can be filtered by component.\r\n\r\nFiltering is discarding.\r\n\r\nIf you just want to *find* log messages, that what's grep is for, and if you want to make it more fine-grained than \"hey this is an important log message/warning/error\", that's what `-logsourcelocations` is for.\r\n\r\nIf it's any help, I think it's better to think of the sections as not related to which section of the code they appear in so much (again, that's what `-logsourcelocations` is for), but as a subset of the \"debug\" part, in that they let you filter/discard various parts of the full debug log that you would get with `-debug=1`.\r\n \r\n> ```diff\r\n> -LogPrintLevel(BCLog::NET, BCLog::Level::Warning, \"getsockname failed\\n\");\r\n> +LogWarning(log, \"getsockname failed\\n\");\r\n> ```\r\n\r\nThe current code there is noisy because it uses `LogPrintLevel`. The change you're actually making is:\r\n\r\n```diff\r\n-LogWarning(\"getsockname failed\\n\");\r\n+LogWarning(log, \"getsockname failed\\n\");\r\n```\r\n\r\nwhich is adding characters, without adding any information to the reader.\r\n \r\n> It is true this sacrifices ability to grep by category constants in the source code, and maybe in your judgement that is an unacceptable cost?\r\n\r\nI think `LogDebug(BCLog::NET, \"oh no, it all went wrong\\n\")` is better than `LogDebug(m_log, \"oh no, it all went wrong)`. All the characters in the former are doing something useful; `m_log` in the latter isn't (if it weren't for macro magic, we'd write `m_log.Debug(\"...\")` instead, which would be okay at least). I don't think moving the category away from the line of code it's affecting is very useful; and if you want to group all the logs from an individual file together (the way putting `m_log{BCLog::NET}` at the top of the file/class does), then, again, that's what logsourcelocations is for...\r\n\r\n> But in my opinion, if we ever using same category constants in disparate parts of source code, or different category constants in the same part of the source code, it means source code is badly organized and we should fix that instead of resorting to a coping mechanism of searching for constants instead of searching by source path.\r\n\r\nThat's something that already happens: `BCLog::NET` is in timedata and headersync and banman and net and net_processing; `BCLog::VALIDATION` is in validation and validationinterface and flatfile (thought there was a pr to fix that one) and signet; `BCLog::MEMPOOL` is in txmempool, validation and net_processing. It doesn't mean the source code is badly organised, it means different parts of the source are generating related log messages.\r\n\r\n> In my experience, I've haven't used logging frameworks that have encouraged category constants to be scattered and mixed like this, and I don't think it is a good idea.\r\n\r\nI don't think there is anything here \"encouraging\" these categories to be scattered or mixed; most of them are specific to a small set of related files: TOR:torcontrol, HTTP:httpserver, ZMQ:zmq/*, WALLETDB:wallet/*, ESTIMATEFEE:policy/fees.cpp, SELECTCOINS:wallet/coinselection, REINDEX:validation, CMPCTBLOCK:blockencodings, RAND:random.cpp, etc.\r\n\r\nAnd you obviously have worked with code designed this way: that's how `LogPrint` has worked in this codebase since it was implemented in #3009.\r\n\r\n> Probably something is lost in communication here, but the idea is to let wallet code use same LogDebug(), LogTrace(), LogInfo(), LogWarning(), LogError() macros other code uses.\r\n\r\nUpdating `TraceSqlCallback` to call `LogTrace` rather than `LogPrintf` would be an improvement as those messages would get categorised properly; but otherwise this seems like massive overkill just to avoid writing `\"[%s] ...\", walletname, ...`.\r\n\r\n> It just adds a little formatting hook so the wallet name is automatically included when the log source is the wallet. This way full functionality of #29256 is available to the wallet and we can drop WalletLogPrintf and not have dedicated wallet logging functions.\r\n\r\nA +190 -109 diff because you don't like a one-line wrapper function seems crazy to me.\r\n\r\nDo you have some reason to think there's large amounts of additional wallet debug logs that would be introduced if it didn't involve writing `[%s], walletname` or are there a bunch of the current unconditional `WalletLogPrintf` calls that should be silenced and only available when debugging is enabled?",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-1899825975",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29256"
    },
    {
      "event": "labeled",
      "id": 11535436855,
      "node_id": "LE_lADOABII5858R1mSzwAAAAKvkMw3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11535436855",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-19T10:04:35Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 11537867929,
      "node_id": "UNLE_lADOABII5858R1mSzwAAAAKvteSZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11537867929",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-19T13:50:48Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 11589297568,
      "node_id": "LE_lADOABII5858R1mSzwAAAAKyxqWg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11589297568",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-24T20:36:44Z",
      "label": {
        "name": "Utils/log/libs",
        "color": "5319e7"
      }
    },
    {
      "event": "commented",
      "id": 1910905907,
      "node_id": "IC_kwDOABII585x5hwz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1910905907",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-25T20:03:28Z",
      "updated_at": "2024-01-25T20:04:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "@ajtowns, to try to steer this discussion in a more constructive direction, would it be possible for you to make a list of the biggest harms you believe this PR would cause if it were merged? And if you have ideas on how the harms you see could be avoided, while the problems I am trying to solve (see \"Problems this PR attempts to solve\" in the PR description) could be addressed, it would be really helpful to know about. Maybe the harms you see this PR causing and the problems this PR is trying to solve are in direct contradiction, but it's not obvious to me that this is the case, so maybe there is a way out of our disagreement here. In the meantime, I responded to your last message below.\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-1899825975\r\n\r\n> Filtering is discarding.\r\n\r\nIt's really not. You can view logs into a text editor or log viewer and highlight categories of messages you are interested in while not discarding other messages.\r\n\r\nI am just trying to add some basic flexibility here. If you don't want to attach categories to log messages, you don't have to, you can write `LogWarning({}, \"uncategorizable warning\")`. The PR just makes the log macros consistently accept a source parameter, so code has flexibility to set a category, set a log destination, add metadata to log messages, control log formatting, do a combination of these things, or do none of these things.\r\n\r\n> ```diff\r\n> -LogWarning(\"getsockname failed\\n\");\r\n> +LogWarning(log, \"getsockname failed\\n\");\r\n> ```\r\n> which is adding characters, without adding any information to the reader.\r\n\r\nThis adds 5 characters, but also adds category information that was previously absent to the output. You can find examples of where the API changes in this PR increase verbosity, and examples where they decrease it, and I think there should be less verbosity on net. I also think some of this discussion around verbosity misses the bigger picture, and is a distraction from the actual goal of the PR, which is to add context to log messages, and give code that needs it control over logging behavior. But if making the log parameter optional is a requirement for you, it should be possible to implement that here and never increase verbosity in any case.\r\n\r\n> All the characters in the former are doing something useful; `m_log` in the latter isn't (if it weren't for macro magic, we'd write `m_log.Debug(\"...\")` instead, which would be okay at least).\r\n\r\nI agree `m_log.Debug(\"...\")` would be better than `LogDebug(m_log, \"...\")` but I don't understand why the former would be ok, but the latter is unacceptable. You definitely have much stronger opinions about verbosity than me, so maybe we can try to engage more constructively on this. I think on net, this PR should reduce verbosity, but maybe more improvements are possible that could alleviate your concerns.\r\n\r\n> I don't think moving the category away from the line of code it's affecting is very useful\r\n\r\nThat's ok, since allowing this was a side effect, not a major goal of this PR. But `LogDebug(m_log, \"debug message\")` can be easier to write and read than `LogDebug(BCLog::TXRECONCILIATION, \"debug message\")`, especially if the code has a lot of log prints and the category is repeated a lot. In any case, you aren't forced to choose one approach or the other. The PR allows both.\r\n\r\n> It doesn't mean the source code is badly organised, it means different parts of the source are generating related log messages.\r\n\r\nOk, we definitely disagree on how well the code is organized. IMO, `validation.cpp` doing `BCLog::MEMPOOL` prints is messed up. But this is a tangent. I think log sources should encourage better organization, but this PR does not force anything or break anything that works now.\r\n\r\n> I don't think there is anything here \"encouraging\" these categories to be scattered or mixed\r\n\r\nI don't want to make a big deal out of this, but just to clarify, I think the status quo where trace and debug macros require `BCLog::LogFlags` arguments and can't take source arguments makes it easier to mix up categories, intentionally and unintentionally. The alternative where source objects can be used for error/warning/info prints, not just debug/trace prints, and can tag everything with the same category should make it easier to be consistent if you want to be consistent (and not get in the way if you don't want to).\r\n\r\n> Updating `TraceSqlCallback` to call `LogTrace` rather than `LogPrintf` would be an improvement as those messages would get categorised properly; but otherwise this seems like massive overkill just to avoid writing `\"[%s] ...\", walletname, ...`.\r\n\r\nI don't see the massive overkill. This is a reasonable PR that adds documentation, tests, and doesn't change very much code. We don't want to require every individual wallet log print to include `\"[%s] ...\", walletname, ...` boilerplate for obvious reasons, I think. The problems with the `WalletLogPrintf` function are:\r\n\r\n1. It is only capable of logging at info level, does not provide a way to log at higher or lower levels.\r\n2. It evaluates its arguments unconditionally, so if it were extended to log at lower levels, it would either be inefficient or need to duplicate preprocessor code from logging.h to be as efficient.\r\n3. It is inconsistent with the rest of the codebase. It is nice if the same logging macros can be used everywhere, and the same features can be used everywhere. It also ensures logging is consistent within the wallet and only one logging API is used there.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-1910905907",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29256"
    },
    {
      "event": "mentioned",
      "id": 11601827729,
      "node_id": "MEE_lADOABII5858R1mSzwAAAAKzhdeR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11601827729",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-25T20:03:28Z"
    },
    {
      "event": "subscribed",
      "id": 11601827744,
      "node_id": "SE_lADOABII5858R1mSzwAAAAKzhdeg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11601827744",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-25T20:03:28Z"
    },
    {
      "event": "labeled",
      "id": 11602353847,
      "node_id": "LE_lADOABII5858R1mSzwAAAAKzjd63",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11602353847",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-25T21:06:45Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1913911460,
      "node_id": "IC_kwDOABII585yE_ik",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1913911460",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-29T03:45:15Z",
      "updated_at": "2024-01-29T03:45:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-1910905907\r\n\r\n> But if making the log parameter optional is a requirement for you, it should be possible to implement that here and never increase verbosity in any case.\r\n\r\nIt turns out making the category argument completely optional is not too hard to implement: 69e69b2a82c95f8040be093a29e5f84c37641f3a. So you could write:\r\n\r\n ```c++\r\nLogWarning(\"uncategorizable warning\")\r\n```\r\n\r\ninstead of\r\n\r\n ```\r\nLogWarning({}, \"uncategorizable warning\")\r\n```\r\n\r\nif that is the blocker here.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-1913911460",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29256"
    },
    {
      "event": "commented",
      "id": 1913991867,
      "node_id": "IC_kwDOABII585yFTK7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1913991867",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-29T05:32:13Z",
      "updated_at": "2024-01-29T05:32:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "> And if you have ideas on how the harms you see could be avoided, while the problems I am trying to solve (see \"Problems this PR attempts to solve\" in the PR description) could be addressed, \r\n\r\nI think the problem you are actually attempting to solve is [\"I, ryanofsky, find this weird and I don't like it\"](https://github.com/bitcoin/bitcoin/pull/28318#discussion_r1450411706), and I don't think code changes are the way of solving that, any more than code changes are the right way to solve the problem \"Bitcoin is weird and I don't like it\". I think you're wrong, but you seem unwilling to consider changing your opinion, so I'm pretty doubtful this is going to be productive. However, in case I'm wrong:\r\n\r\n> These macros cannot be used directly in wallet code because wallet log prints are supposed to automatically attach wallet names to log messages.\r\n\r\nThe only cases where wallet names are automatically attached to log messages are in info level calls, which can be trivially dealt with by changing the existing wrapper to call `LogInfo`, and with an optional scripted diff renaming the wrapper as well.\r\n\r\n> These macros cannot be used at all in libbitcoinkernel code because they do not allow specifying a logger instance. \r\n\r\nThis, also, is not true: the assumption of these macros is that there is a global `BCLog::Logger` instance, which is already provided by `LogInstance()`. If we want to allow apps to configure libbitcoinkernel's logging in future, we could allow them to setup that global instance, or provide their own callbacks for it to use, in much the same way libevent allows you to setup callbacks. That's not something that needs changing.\r\n\r\n> > Filtering is discarding.\r\n> \r\n> It's really not. You can view logs into a text editor or log viewer and highlight categories of messages you are interested in while not discarding other messages.\r\n\r\nThat's not filtering, that's 'grepping'. If you don't want to filter, but just want to highlight, then, as I've said repeatedly, logsourcelocations is what you want; the only benefit categories have compared to that is that categories can be (and by default are) filtered/discarded. logsourcelocations gives you much more exact information, is precisely separated by source file as you want, works with every level of log message, and requires no code changes or ongoing development effort to support.\r\n\r\n> I am just trying to add some basic flexibility here. If you don't want to attach categories to log messages, you don't have to, you can write `LogWarning({}, \"uncategorizable warning\")`.\r\n\r\nIn that case you will not be able to use your log viewer to highlight that message when you're looking for it, which defeats your claimed goal. (Except, of course, you can select it for highlight, by looking for `[warning]` markers)\r\n\r\n> The PR just makes the log macros consistently accept a source parameter,\r\n\r\nCan you please try using the logsourcelocations option before replying again? I really don't see how it doesn't already do everything you want, but you've ignored it every time I've mentioned it.\r\n\r\n> > ```diff\r\n> > -LogWarning(\"getsockname failed\\n\");\r\n> > +LogWarning(log, \"getsockname failed\\n\");\r\n> > ```\r\n> > which is adding characters, without adding any information to the reader.\r\n\r\nThe reader of the source code, is who I'm referring to here.\r\n \r\n> > All the characters in the former are doing something useful; `m_log` in the latter isn't (if it weren't for macro magic, we'd write `m_log.Debug(\"...\")` instead, which would be okay at least).\r\n> \r\n> I agree `m_log.Debug(\"...\")` would be better than `LogDebug(m_log, \"...\")`\r\n\r\nI don't think `m_log.Debug()` would be better than `LogDebug` -- in my opinion having a global log instance is the right thing here, and both having multiple references to a global log instance or having multiple log instances that all then coordinate writing to a single log would be worse.\r\n\r\nAs I've already said, I think `m_log.SetCategory(NET); m_log.Debug(\"connected to foo\")` is much worse than `LogDebug(NET, \"connected to foo\")`. Having to keep more context/state in your head when you're looking at code makes things harder, and it tends to make tool use go from \"usually works\" to \"never works\" (eg, `grep -RIl 'Log.*NET'`).\r\n \r\n> > It doesn't mean the source code is badly organised, it means different parts of the source are generating related log messages.\r\n> \r\n> Ok, we definitely disagree on how well the code is organized. IMO, `validation.cpp` doing `BCLog::MEMPOOL` prints is messed up. But this is a tangent. I think log sources should encourage better organization, but this PR does not force anything or break anything that works now.\r\n\r\nvalidation.cpp is where we have the code for \"is this valid for the mempool\", because we thought the word \"valid\" was more important than the word \"mempool\" in that sentence. `BCLog::VALIDATION` on the other hand is limited to blocks and headers, allowing it to be much less noisy than anything that triggers for every transaction, like `BCLog::MEMPOOL`. None of that is any indication of whether the code is well or badly organised.\r\n\r\n> > I don't think there is anything here \"encouraging\" these categories to be scattered or mixed\r\n> \r\n> I don't want to make a big deal out of this, but just to clarify, I think the status quo where trace and debug macros require `BCLog::LogFlags` arguments and can't take source arguments makes it easier to mix up categories, intentionally and unintentionally.\r\n\r\nI think by \"source arguments\" you mean \"a context argument\", and there's no reason they couldn't -- you can write `LogDebug(m_log_category, \"stuff\");` right now just as easily as you could `LogDebug(m_log, \"stuff\");` after this PR. That would still be a bad idea, though, as having the name of the log category obvious in the code is helpful.\r\n \r\n> > Updating `TraceSqlCallback` to call `LogTrace` rather than `LogPrintf` would be an improvement as those messages would get categorised properly; but otherwise this seems like massive overkill just to avoid writing `\"[%s] ...\", walletname, ...`.\r\n> \r\n> I don't see the massive overkill.\r\n\r\nIf there's a way of getting 99% of the benefits with a +1-1 change, then a +300-200 change is overkill in general.\r\n\r\n> This is a reasonable PR that adds documentation, tests, and doesn't change very much code. We don't want to require every individual wallet log print to include `\"[%s] ...\", walletname, ...` boilerplate for obvious reasons, I think. The problems with the `WalletLogPrintf` function are:\r\n> \r\n>     1. It is only capable of logging at info level, does not provide a way to log at higher or lower levels.\r\n\r\nWhy do you think that is a problem? None of the other existing cases need to add walletname boilerplate. What wallet-specific event (if it's not wallet specific, it doesn't need to be tagged with a wallet name) shouldn't be unconditionally logged (if an event is affecting the thing that holds all your funds, isn't that one of the most important things to log)?\r\n\r\n>     2. It evaluates its arguments unconditionally, so if it were extended to log at lower levels, it would either be inefficient or need to duplicate preprocessor code from logging.h to be as efficient.\r\n\r\nThat it only logs at info level means it is unconditionally logged, so all the arguments are naturally unconditionally evaluated.\r\n\r\n>     3. It is inconsistent with the rest of the codebase.\r\n\r\nIt's inconsistent with your idea of how the codebase should be, but it's completely consistent with how the codebase actually is. Which is fine: changing the codebase to match better ideas is how you improve it. But things aren't going to improve if we can't recognise how things actually are in the first place.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-1913991867",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29256"
    },
    {
      "event": "unlabeled",
      "id": 11648884155,
      "node_id": "UNLE_lADOABII5858R1mSzwAAAAK2U927",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11648884155",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-30T23:33:54Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1936993273,
      "node_id": "IC_kwDOABII585zdCv5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1936993273",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-10T12:18:15Z",
      "updated_at": "2024-02-10T12:18:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/20597453668</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-1936993273",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29256"
    },
    {
      "event": "labeled",
      "id": 11764736681,
      "node_id": "LE_lADOABII5858R1mSzwAAAAK9O6Kp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11764736681",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-10T12:18:15Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1884614153,
      "node_id": "PRR_kwDOABII585wVO4J",
      "url": null,
      "actor": null,
      "commit_id": "99feed7350b5fc3ae3157dd395ae6260c5bfc092",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-02-16T09:00:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Make them all accept log categories, to make it possible to filter or highlight log messages from a particular component.\r\n\r\nThis seems like a step in the right direction. Currently we log messages unconditionally that don't have a category. But this is mixing two separate things - facility and severity. I have always found this confusing.\r\n\r\nThey got it right decades ago with [syslog(3)](https://www.man7.org/linux/man-pages/man3/syslog.3.html). Every log message has a facility and a severity. Because we don't want users to configure their systems in such a way as to dangerously omit important messages, then we don't provide a way to omit messages with higher severity than e.g. \"info\" or \"notice\". This is unrelated to the facility.\r\n\r\nIf some parts of this PR cause controversy, could it be reduced to the non-controversial things?",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#pullrequestreview-1884614153",
      "submitted_at": "2024-02-16T09:00:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29256"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11944060011,
      "node_id": "HRFPE_lADOABII5858R1mSzwAAAALH6-Rr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11944060011",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0cd1616d47e61e125eb3e573573c0c56fba6b775",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/0cd1616d47e61e125eb3e573573c0c56fba6b775",
      "created_at": "2024-02-27T22:53:59Z"
    },
    {
      "event": "commented",
      "id": 1967871169,
      "node_id": "IC_kwDOABII5851S1TB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1967871169",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-27T23:05:42Z",
      "updated_at": "2024-02-28T01:50:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "Updated 99feed7350b5fc3ae3157dd395ae6260c5bfc092 -> 0cd1616d47e61e125eb3e573573c0c56fba6b775 ([`pr/bclog.12`](https://github.com/ryanofsky/bitcoin/commits/pr/bclog.12) -> [`pr/bclog.13`](https://github.com/ryanofsky/bitcoin/commits/pr/bclog.13), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bclog.12..pr/bclog.13)) making the log macros backwards compatible to avoid any controversial changes.\r\nRebased 0cd1616d47e61e125eb3e573573c0c56fba6b775 -> 93d37f7d655409e6830475a10f4c9f16e35c76cd ([`pr/bclog.13`](https://github.com/ryanofsky/bitcoin/commits/pr/bclog.13) -> [`pr/bclog.14`](https://github.com/ryanofsky/bitcoin/commits/pr/bclog.14), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bclog.13-rebase..pr/bclog.14)) due to silent conflicts with #26836.\r\nUpdated 93d37f7d655409e6830475a10f4c9f16e35c76cd -> a91fbbd61551702f26f734f3cdd1c080f9d51628 ([`pr/bclog.14`](https://github.com/ryanofsky/bitcoin/commits/pr/bclog.14) -> [`pr/bclog.15`](https://github.com/ryanofsky/bitcoin/commits/pr/bclog.15), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bclog.14..pr/bclog.15)) to fix tidy failure https://cirrus-ci.com/task/6362757050662912, and try to work around MSVC compiler bug  https://github.com/bitcoin/bitcoin/actions/runs/8072891468/job/22055528830?pr=29256, and clean up some documentation.\r\n\r\n\r\n> If some parts of this PR cause controversy, could it be reduced to the non-controversial things?\r\n\r\nI made a try at this in the latest push. I think most of the criticism of this PR from AJ is saying that the changes here are unnecessary, not really that they are harmful, so I made the logging macros completely backwards compatible using the approach I mentioned https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-1913911460, and only kept the changes I think are essential. I think this should help.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-1967871169",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29256"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11944406186,
      "node_id": "HRFPE_lADOABII5858R1mSzwAAAALH8Syq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11944406186",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "93d37f7d655409e6830475a10f4c9f16e35c76cd",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/93d37f7d655409e6830475a10f4c9f16e35c76cd",
      "created_at": "2024-02-27T23:45:00Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11945162993,
      "node_id": "HRFPE_lADOABII5858R1mSzwAAAALH_Ljx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11945162993",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a91fbbd61551702f26f734f3cdd1c080f9d51628",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/a91fbbd61551702f26f734f3cdd1c080f9d51628",
      "created_at": "2024-02-28T01:49:38Z"
    },
    {
      "event": "unlabeled",
      "id": 11946030034,
      "node_id": "UNLE_lADOABII5858R1mSzwAAAALICfPS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11946030034",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-28T04:11:32Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 12094601715,
      "node_id": "LE_lADOABII5858R1mSzwAAAALQ5Pnz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12094601715",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-12T20:26:56Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12284683551,
      "node_id": "HRFPE_lADOABII5858R1mSzwAAAALcOWUf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12284683551",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ce0004e42d37786f98cdf9d55b976b935dcf1ba1",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/ce0004e42d37786f98cdf9d55b976b935dcf1ba1",
      "created_at": "2024-03-28T16:55:50Z"
    },
    {
      "event": "unlabeled",
      "id": 12285796427,
      "node_id": "UNLE_lADOABII5858R1mSzwAAAALcSmBL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12285796427",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-28T18:25:42Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 12547499821,
      "node_id": "LE_lADOABII5858R1mSzwAAAALr46ct",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12547499821",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-20T10:31:02Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 12570845337,
      "node_id": "UNLE_lADOABII5858R1mSzwAAAALtR-CZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12570845337",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-23T07:37:46Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2085153558,
      "node_id": "IC_kwDOABII5858SOsW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2085153558",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-30T12:05:25Z",
      "updated_at": "2024-04-30T12:05:25Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I think most of the criticism of this PR from AJ is saying that the changes here are unnecessary, not really that they are harmful,\r\n\r\nI said \"As I've already said, I think `m_log.SetCategory(NET); m_log.Debug(\"connected to foo\")` is much worse than `LogDebug(NET, \"connected to foo\")`.\" Does that really not come across as me saying they're harmful? I really don't think I'm being **that** unclear. Anyway, I'll bow out, I'm already sorry for touching this.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-2085153558",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29256"
    },
    {
      "event": "commented",
      "id": 2085290323,
      "node_id": "IC_kwDOABII5858SwFT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2085290323",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-30T13:06:39Z",
      "updated_at": "2024-04-30T13:06:39Z",
      "author_association": "CONTRIBUTOR",
      "body": "> > I think most of the criticism of this PR from AJ is saying that the changes here are unnecessary, not really that they are harmful,\r\n> \r\n> I said \"As I've already said, I think `m_log.SetCategory(NET); m_log.Debug(\"connected to foo\")` is much worse than `LogDebug(NET, \"connected to foo\")`.\" Does that really not come across as me saying they're harmful? I really don't think I'm being **that** unclear. Anyway, I'll bow out, I'm already sorry for touching this.\r\n\r\nI think it's possible you might be referring to some changes in an earlier version of this PR. The PR allows the syntax you like and support it as a first-class usage! It does change wallet code, however to look like `LogDebug(m_log, \"debug message\")` to include wallet filenames in log messages. So if that is the harm which this PR causes, I want to acknowledge it, and I will update the PR description.\r\n\r\n@ajtowns we've definitely had difficulty communicating here and in some other issues, and I'm sorry for the dismissive comments I initially left on #28318, which on the whole I think is actually a good PR. I especially regret it you are \"sorry for touching this\", because #28318 is a real improvement, and your comments on this PR have made it better too, and motivated all the work and simplifications I've made to it since it was opened.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-2085290323",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29256"
    },
    {
      "event": "mentioned",
      "id": 12657779376,
      "node_id": "MEE_lADOABII5858R1mSzwAAAALydmKw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12657779376",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-30T13:06:40Z"
    },
    {
      "event": "subscribed",
      "id": 12657779391,
      "node_id": "SE_lADOABII5858R1mSzwAAAALydmK_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12657779391",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-30T13:06:40Z"
    },
    {
      "event": "commented",
      "id": 2085586513,
      "node_id": "IC_kwDOABII5858T4ZR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2085586513",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-30T15:05:38Z",
      "updated_at": "2024-04-30T15:05:38Z",
      "author_association": "CONTRIBUTOR",
      "body": "> > > I think most of the criticism of this PR from AJ is saying that the changes here are unnecessary, not really that they are harmful,\r\n\r\n> > I said \"As I've already said, I think `m_log.SetCategory(NET); m_log.Debug(\"connected to foo\")` is much worse than `LogDebug(NET, \"connected to foo\")`.\" Does that really not come across as me saying they're harmful? I really don't think I'm being **that** unclear. Anyway, I'll bow out, I'm already sorry for touching this.\r\n\r\n> I think it's possible you might be referring to some changes in an earlier version of this PR.\r\n\r\nThat was the clearest example of saying that something was harmful, as evidence that I don't think you summarised my criticism accurately. English is my first language, so it's not like I can switch to another one to try to get my point across better... My main criticism of what remains is:\r\n\r\n> > > > Can you please try using the `logsourcelocations` option before replying again? I really don't see how it doesn't already do everything you want, but you've ignored it every time I've mentioned it.\r\n\r\nI'll rephrase how I see things again for whatever that's worth:\r\n\r\n * being able to match a log entry with where it came from in the source is super valuable\r\n * `-logsourcelocations` does that automatically for us, which is far less effort than manually specifying a category, and by giving a specific filename and line number, does a far better job of it as well\r\n * the only reason to keep the manual categories around at all is for selectively enabling/disabling noisy logs\r\n * the only noisy logs we have are those in the debug and trace levels (anything else would be a bug)\r\n * having those be manually specified rather than automatic is a win, as it allows us to rearrange our source code without accidentally breaking the configs of users who've enabled some noisy logs\r\n * adding those categories for non-noisy log messages is just busy work: it doesn't make it easier to find the source location of the debug message than `-logsourcelocations` does, and it doesn't help reduce log noise because those log messages aren't noisy in the first place\r\n\r\nThe macros in #28318 pretty much fall out from that. I suppose an alternative would be to have `Log(INFO, \"foo\")` and `LogNoisy(DEBUG, NET, \"bar\")` or so.\r\n\r\nThere are probably things `logsourcelocations` is bad at; if so, why not improve it so the benefits hit everywhere automatically?\r\n\r\n> The PR allows the syntax you like and support it as a first-class usage!\r\n\r\nI think specifying a category sometimes and not others depending on who happened to author that section of the code is a terrible idea. But I mean, it's not any more terrible than having \"LogPrint\" and \"LogPrintf\" having significantly different behaviour, so it's not like it's a disaster. Anyway, it's certainly not worth [15+ months of time/energy](https://github.com/bitcoin/bitcoin/pull/25203#issuecomment-1401126785).",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-2085586513",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29256"
    },
    {
      "event": "commented",
      "id": 2085898761,
      "node_id": "IC_kwDOABII5858VEoJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2085898761",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-30T16:33:33Z",
      "updated_at": "2024-04-30T16:33:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks, I added a link directly to this comment in the summary so those who are interested can follow the chain of reasoning.\r\n\r\nTo reiterate my own point of view, `-logsourcelocation` does not solve the same problem this PR solves because it does not (1) let libitcoinkernel applications call validation functions and control which `Logger` object they write to, and (2) allow code like wallet code and index code to easily include additional metadata in log messages (wallet names and index names) while using convenient LogDebug(), LogTrace(), LogInfo(), LogWarning(), and LogError() macros.\r\n\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-2085898761",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29256"
    },
    {
      "event": "commented",
      "id": 2090083022,
      "node_id": "IC_kwDOABII5858lCLO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2090083022",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-02T10:06:51Z",
      "updated_at": "2024-05-02T10:06:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "> To reiterate my own point of view, `-logsourcelocation` does not solve the same problem this PR solves because it does not\r\n\r\nThat ignores bullets (1), (2) and (5) from your OP (as it stands today).\r\n\r\nIt also ignores comments like [vasild's](https://github.com/bitcoin/bitcoin/pull/29256#pullrequestreview-1884614153), [jamesob's](https://github.com/bitcoin/bitcoin/pull/28318#discussion_r1445429093), [luke-jr's](https://github.com/bitcoin/bitcoin/pull/24464#pullrequestreview-902452600), [jonatack's](https://github.com/bitcoin/bitcoin/pull/28318#issuecomment-1879829758), [laanwj's](https://github.com/bitcoin/bitcoin/pull/28318#issuecomment-2085021744) or [your own](https://github.com/bitcoin/bitcoin/pull/28318#discussion_r1450411706). There's a valid disagreement there, isn't there? Can't we discuss it like engineers and work out what actual tradeoffs are lurking behind the intuition/gut feels? I've tried to spell out my reasoning both [before](https://github.com/bitcoin/bitcoin/pull/28318#issuecomment-1702318968) and after the PR got merged as well as having brought it up at the [irc meeting](https://www.erisian.com.au/bitcoin-core-dev/log-2023-08-31.html#l-384) to try to trigger discussion, but the response has just to reiterate the disagreement without any analysis or engagement with the reasoning that I've offered for doing it this way? Why? That makes no sense to me. I'm willing to be convinced I've made a mistake; but someone has to show me where I made the mistake, or at least do a show of hands that the majority prefers something else.\r\n\r\nI mean, am I incorrect in reading the previous two comments as \"here are the reasons I think this solution make sense: A, B, C, D, E, F\" and \"okay, that's nice, I'm going to completely ignore them, besides, X and Y are still important\"? Other than \"uh, okay, I guess I know when I'm not wanted\", how else am I meant to take it? What's the chance a response addressing X and Y will just also get equally ignored?\r\n\r\n(FWIW, I'd strongly contend that just declaring things should be such-and-such a way without being willing either talk through the tradeoffs and maybe find some mutually preferable solution, or to happily say \"oh well, not what I'd consider perfect, but not so bad, let's press on!\" is a pretty major contributor to things not progressing very fast. I can understand that habit in bitcoin broadly -- you explain why BTC is great and people shrug or call it a ponzi, and the only thing you can do is wait to be proven right, so you start just skipping straight to the final step -- but I don't understand it in the context of code changes at all...)\r\n\r\nAnyway, on to X and Y:\r\n\r\n>  (1) let libitcoinkernel applications call validation functions and control which `Logger` object they write to, \r\n\r\nDoing that meaningfully means changing all the logging in all the bitcoin-kernel related modules (eg validation, mempool, blockstorage, scheduler, ...) to explicitly specify a logger rather than using the global functions, which seems like a lot of pointless busy work? I can't imagine why we'd want to support having multiple bitcoin-kernel instances in a single executable logging to different loggers; if someone wants to do that, it seems easy enough to just launch two separate processes.\r\n\r\nThe alternative would be to just have applications manipulate the global logger directly, which is how things already work, perhaps turning it into an atomic unique_ptr or similar and making many of its function virtual to allow overriding?. I'm just not really sure what the problem here is that's worth fixing; we already buffer log messages until `StartLogging` is called, and libbitcoin-kernel continuing to have a global logger instance seems simple and efficient for both us and any potential users of the library.\r\n\r\n(If we did want to do that anyway for some reason, then waiting until `std::source_location` is available would let us use `log.Debug(...)` syntax via template functions rather than having to use a macro and writing `LogDebug(log, ...)`. So rushing this change now seems bad even if the goal makes sense in some way I don't see)\r\n\r\n(The phrasing in the OP is currently \"The new macros cannot be used in libbitcoinkernel code because they do not allow specifying a logger instance.\" but that seems just false -- there's a bunch of LogInfo() calls in kernel/*.cpp already, and all the LogPrintf and LogPrint calls in validation are just aliases of LogInfo and LogDebug)\r\n\r\n> and (2) allow code like wallet code and index code to easily include additional metadata in log messages (wallet names and index names) while using convenient LogDebug(), LogTrace(), LogInfo(), LogWarning(), and LogError() macros.\r\n\r\nWe could do that simply by renaming `WalletLogPrintf` to `WalletLogInfo`, with behaviour no worse than today. There just isn't currently a need for non-info-level logs that report the wallet's name (which makes sense: in general ops on a wallet are important enough to be an \"INFO\" event).\r\n\r\nHaving `WalletLogPrintf` (or whatever) wrap around `LogInfo` sucks a bit, because it means `-logsourcelocations` reports the wrapper location rather than the caller. But a fix for that will be easy \"real-soon-now\" (#29077) when we can use `std::source_location`.\r\n\r\nChanging `wallet/sqlite`'s `TraceSqlCallback` to use `LogTrace` instead of `LogPrintf` is something we could do today that would improve things by making the output correctly indicate that it's trace-level rather than info-level, and be correctly annotated with the debug category that enables it to be logged. Again, that only needs a few characters changed, not a fundamental revamp.\r\n\r\nHere's a [patchset](https://github.com/ajtowns/bitcoin/commits/202405-walletlog/) that does those wallet changes:  it's a one line change for the trace logging, and two scripted diffs. Easy to do, easy to review, and \"allows the wallet code to easily include its metadata in log messages while using convenient LogInfo macros/functions\". If we want to improve things further (like using `std::source_location` when it's available or introducing some wallet-specific warnings or debug messages) we could still easily do that in the future.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-2090083022",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29256"
    },
    {
      "event": "commented",
      "id": 2189810744,
      "node_id": "IC_kwDOABII586Chdw4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2189810744",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-25T19:26:27Z",
      "updated_at": "2024-06-25T19:35:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK\r\n\r\nRe https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-2090083022\r\n\r\n> Doing that meaningfully means changing all the logging in all the bitcoin-kernel related modules (eg validation, mempool, blockstorage, scheduler, ...) to explicitly specify a logger rather than using the global functions, which seems like a lot of pointless busy work? I can't imagine why we'd want to support having multiple bitcoin-kernel instances in a single executable logging to different loggers; if someone wants to do that, it seems easy enough to just launch two separate processes.\r\n\r\nThere are use cases for having e.g. two chainstate managers running in parallel. Take a block file linearizer replacing the scripts in `contrib/linearize` as an example; you have one that reads blocks in their indexed order and another that writes blocks and their index back to another location on disk. Having something to distinguishing logs issued between the two sounds useful. In my eyes an important utility of the library is exactly that, you don't have to use multiple processes or go through the rpc to interact with Bitcoin Core's data structures and validation rules.",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-2189810744",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29256"
    },
    {
      "event": "commented",
      "id": 2189951185,
      "node_id": "IC_kwDOABII586CiADR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2189951185",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-25T20:55:04Z",
      "updated_at": "2024-06-25T20:55:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-2090083022\r\n\r\nAJ, thanks for the response. I want to let your comment stand, and not reply in detail right away to wait for input on this PR from other potential reviewers. I think your views on importance of hardcoding category constants in certain log statements, and on not allowing categories to be specified in other log statements are atypical, or at least will not be as strongly felt by other reviewers.\r\n\r\nBut your response does help me understand your concerns better, and your preferred solution of letting wallet code use its own logging functions, and having kernel code continue to use a global logger. It is also maybe a sign of hope to me that you seem to like `log.Debug(...)` syntax while disliking `LogDebug(log, ...)` syntax. I personally don't see much distinction between the two syntaxes, other than that latter allows arguments to be conditionally evaluated. But not evaluating arguments seems less important to me than being able to log in a consistent way across the codebase, so this offers hope for compromise.\r\n\r\nI also want to say again that I respect your opinions and appreciate you paying attention to this PR. Your earlier comments directly led to a number of improvements in the PR since it was opened.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-2189951185",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29256"
    },
    {
      "event": "subscribed",
      "id": 13289061625,
      "node_id": "SE_lADOABII5858R1mSzwAAAAMYFvz5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13289061625",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-25T23:28:01Z"
    },
    {
      "event": "commented",
      "id": 2191074487,
      "node_id": "IC_kwDOABII586CmSS3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2191074487",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-26T08:05:24Z",
      "updated_at": "2024-06-26T08:16:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Take a block file linearizer replacing the scripts in `contrib/linearize` as an example; you have one that reads blocks in their indexed order and another that writes blocks and their index back to another location on disk. \r\n\r\nI don't think we should be reworking logging in our entire codebase in order to have a slight improvement in the hypothetical case where we replace some python scripts in contrib with C++ code? If this is worth doing, surely there is a *much* better example of why.\r\n\r\n> Having something to distinguishing logs issued between the two sounds useful\r\n\r\nTo me, this suggests that a \"context\" parameter would be more appropriate than an \"instance\" one -- eg `LogInfo(walletctx, \"opened wallet, and sent all your funds to the genesis address, haha\\n\");` where the logging system would automatically invoke `msg = walletctx(msg)` when provided, in order to prefix the wallet name to the message or similar, but only after verifying logging is actually enabled. That's much more constrained behaviour than an instance parameter -- it just adds context information to a log message rather than allowing you to change the priority/category, or have completely different logging parameters (log file location, log to stdout, display source location, etc). The difference between `LogInfo(m_wallet_ctx, \"...\")` and the existing `WalletLogPrintf(\"...\")` seems pretty minor to me.\r\n\r\nThere are two different ways you might want to add context information: internally to a module, in the way that the wallet does, which would imply the `ctx` variable is established within the module and is private/local to that module. In that case, a similar approach to the one here would make sense -- have it be an optional parameter that the wallet module uses.\r\n\r\nThe other way is to have the context be provided externally to a module, so that you can create two instances of the module with different logging contexts that the caller controls. The latter seems like what you're imagining for the contrib/linearize example; but in that case, every module needs to pull in a context from its caller, much more like #30338. I don't see how the latter would mesh well with modules like wallet that also want to add internal context (would we have chained contexts? would the context object manage that?), and it seems like unnecessary complexity to me.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-2191074487",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29256"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13302187074,
      "node_id": "HRFPE_lADOABII5858R1mSzwAAAAMY30RC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13302187074",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5f64eab013a58967af37a59c863c2ab6d45ba6e8",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/5f64eab013a58967af37a59c863c2ab6d45ba6e8",
      "created_at": "2024-06-26T17:49:26Z"
    },
    {
      "event": "commented",
      "id": 2192368771,
      "node_id": "IC_kwDOABII586CrOSD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2192368771",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-26T18:19:38Z",
      "updated_at": "2024-06-26T18:19:38Z",
      "author_association": "CONTRIBUTOR",
      "body": "With the latest push, this PR is now much smaller, and now mostly consists of documentation and test changes.\r\n\r\nI wanted to split this up in order to be able to base #30342 on a smaller changeset. The wallet changes that were previously part of this PR were moved to #30343.\r\n\r\nRebased ce0004e42d37786f98cdf9d55b976b935dcf1ba1 -> 5f64eab013a58967af37a59c863c2ab6d45ba6e8 ([`pr/bclog.16`](https://github.com/ryanofsky/bitcoin/commits/pr/bclog.16) -> [`pr/bclog.17`](https://github.com/ryanofsky/bitcoin/commits/pr/bclog.17), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bclog.16-rebase..pr/bclog.17)) updating the PR as described.\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-2192368771",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29256"
    },
    {
      "event": "reviewed",
      "id": 2142978382,
      "node_id": "PRR_kwDOABII585_u0FO",
      "url": null,
      "actor": null,
      "commit_id": "5f64eab013a58967af37a59c863c2ab6d45ba6e8",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-06-26T22:02:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "NACK 5f64eab013a58967af37a59c863c2ab6d45ba6e8\r\n\r\nAt first glance it seems good to be able to specify an optional category to `LogInfo`, but it risks encouraging inflating `LogInfo` usage over `LogDebug`. This could open up future arguments like \"you can just filter out the whole category if you don't like my added `LogInfo`\". How about disallowing *category* for `LogInfo` like we currently do, but optionally accept something like *source* for the occasional exception like wallet code in #30343?\r\n\r\nIt's better to keep requiring either a category (or a source) for `LogDebug` & `LogTrace` as they are many and it makes them easier to filter.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#pullrequestreview-2142978382",
      "submitted_at": "2024-06-26T22:02:30Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29256"
    },
    {
      "event": "referenced",
      "id": 13307766682,
      "node_id": "REFE_lADOABII5858R1mSzwAAAAMZNGea",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13307766682",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "38d3298ea7e547797871140a02df3e7d60d34d36",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/38d3298ea7e547797871140a02df3e7d60d34d36",
      "created_at": "2024-06-27T03:12:31Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13307766766,
      "node_id": "HRFPE_lADOABII5858R1mSzwAAAAMZNGfu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13307766766",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "38d3298ea7e547797871140a02df3e7d60d34d36",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/38d3298ea7e547797871140a02df3e7d60d34d36",
      "created_at": "2024-06-27T03:12:31Z"
    },
    {
      "event": "reviewed",
      "id": 2143744323,
      "node_id": "PRR_kwDOABII585_xvFD",
      "url": null,
      "actor": null,
      "commit_id": "38d3298ea7e547797871140a02df3e7d60d34d36",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-06-27T06:32:09Z",
      "author_association": "CONTRIBUTOR",
      "body": "Updated 5f64eab013a58967af37a59c863c2ab6d45ba6e8 -> 38d3298ea7e547797871140a02df3e7d60d34d36 ([`pr/bclog.17`](https://github.com/ryanofsky/bitcoin/commits/pr/bclog.17) -> [`pr/bclog.18`](https://github.com/ryanofsky/bitcoin/commits/pr/bclog.18), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bclog.17..pr/bclog.18)) with suggested changes.\r\n\r\n---\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/29256#pullrequestreview-2142978382\r\n\r\nThank you for the close review!\r\n\r\nOn disallowing category arguments in `LogInfo`, that is an interesting line of reasoning that would not have occurred to me. Your suggestion to only accept source arguments not category arguments for `LogInfo` would probably be ok and is something I can implement.\r\n\r\nIf I understand correctly, you are worried that if it is possible to specify categories in `LogInfo`, then developers will be tempted to add spammy `LogInfo` prints that will drown out useful information, when they should be using `LogDebug` instead, because developers will assume that users can filter out categories they are not interested in. I think this is something worth thinking about, but I'm not sure if you know that logging options (before and after this PR) actually do not support filtering out Info/Warning/Error messages at all, by category or otherwise. These are considered unconditional logging levels, so users would need to write scripts or use external software to filter these. I'm not sure if that fact might change your opinion, but it should be concrete rationale that would push back against developers adding spammy `LogInfo` prints.\r\n\r\n~~It's also interesting that your reason for not wanting to allow category arguments in `LogInfo` is sort of the opposite of AJ's reason for not wanting to allow categories in `LogInfo` (though the reasons are technically compatible). AJ believes it is unsafe to allow specify category arguments in `LogInfo` and `LogWarning` and `LogError` statements because it creates the risk that users will write external scripts or filters that drop entire categories and leave themselves unaware of important log information.~~ (EDIT: Rereading AJ's comments, I'm not sure this paragraph actually represents what he thinks, so striking it out.)\r\n\r\nI do think there are plausible reasons to want to disallow attaching categories to certain log statements. If the only way I can make progress on this PR is to refuse to allow categories to be specified, I can make changes implementing that. But doing this would not be my starting point because I think generally category information is useful, and as long as we don't add unsafe options to our own software to filter out entire categories, I think we should try to provide users with category information and let them decide how to use it.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#pullrequestreview-2143744323",
      "submitted_at": "2024-06-27T03:42:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29256"
    },
    {
      "event": "commented",
      "id": 2194926577,
      "node_id": "IC_kwDOABII586C0-vx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2194926577",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-27T14:47:13Z",
      "updated_at": "2024-06-27T14:47:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Rereading AJ's comments, I'm not sure this paragraph actually represents what he thinks, so striking it out.\r\n\r\nThanks for that, it was bumming me out thinking about how to try and clarify it.\r\n\r\nI really prefer your approach in #30348 and #30347 where you identify a specific objective problem and separately propose a targeted fix for exactly that problem.\r\n\r\n> logging options (before and after this PR) actually do not support filtering out Info/Warning/Error messages at all, by category or otherwise\r\n\r\nNote that filtering out Info messages was previously a feature the logging system (and in particular, Info messages with a category would be filtered out by *default*). That feature was removed in https://github.com/bitcoin/bitcoin/pull/28318/commits/ab34dc6012351e7b8aab871dd9d2b38ade1cd9bc .\r\n\r\nI'll have another go at explaining my point of view:\r\n\r\n> But doing this would not be my starting point because I think generally category information is useful, \r\n\r\nI don't think category information is useful *except* for enabling log message filtering. It's not useful otherwise, because `-logsourcelocations` is strictly superior in multiple ways (it's automatic, it doesn't need to be updated if we refactor things, and it gives more detailed information). For messages we don't want users to filter, we shouldn't provide a category, as that would provide no benefit at all.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-2194926577",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29256"
    },
    {
      "event": "commented",
      "id": 2195631997,
      "node_id": "IC_kwDOABII586C3q99",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2195631997",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-27T20:40:53Z",
      "updated_at": "2024-06-27T20:40:53Z",
      "author_association": "CONTRIBUTOR",
      "body": "> On disallowing category arguments in `LogInfo`, that is an interesting line of reasoning that would not have occurred to me. Your suggestion to only accept source arguments not category arguments for `LogInfo` would probably be ok and is something I can implement.\r\n\r\n> I do think there are plausible reasons to want to disallow attaching categories to certain log statements. If the only way I can make progress on this PR is to refuse to allow categories to be specified, I can make changes implementing that.\r\n\r\nCool! Hoping that's something @ajtowns could agree to allowing something like an optional `source` being passed to `LogInfo` etc to make the wallet code and other exceptions nicer without suddenly also accepting category everywhere.\r\n\r\nThe fact that there's something behind the immediate macro level preventing `LogInfo`/`LogError`/`LogWarning` from being filtered is a weaker argument to use in pushing against added logging outside of `LogDebug`/`LogTrace` statements, than them not even accepting a category to potentially filter on. Gotta respect an opinionated API. :)",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-2195631997",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29256"
    },
    {
      "event": "mentioned",
      "id": 13323322356,
      "node_id": "MEE_lADOABII5858R1mSzwAAAAMaIcP0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13323322356",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-27T20:40:54Z"
    },
    {
      "event": "subscribed",
      "id": 13323322371,
      "node_id": "SE_lADOABII5858R1mSzwAAAAMaIcQD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13323322371",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-27T20:40:54Z"
    },
    {
      "event": "referenced",
      "id": 13332334938,
      "node_id": "REFE_lADOABII5858R1mSzwAAAAMaq0la",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13332334938",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "681b21f7ca07f0e1411354baa01649e7b1f30e8c",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/681b21f7ca07f0e1411354baa01649e7b1f30e8c",
      "created_at": "2024-06-28T14:11:37Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13332335060,
      "node_id": "HRFPE_lADOABII5858R1mSzwAAAAMaq0nU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13332335060",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "681b21f7ca07f0e1411354baa01649e7b1f30e8c",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/681b21f7ca07f0e1411354baa01649e7b1f30e8c",
      "created_at": "2024-06-28T14:11:37Z"
    },
    {
      "event": "reviewed",
      "id": 2148139535,
      "node_id": "PRR_kwDOABII586ACgIP",
      "url": null,
      "actor": null,
      "commit_id": "681b21f7ca07f0e1411354baa01649e7b1f30e8c",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-06-28T14:23:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-2195631997\r\n\r\n> The fact that there's something behind the immediate macro level preventing LogInfo/LogError/LogWarning from being filtered is a weaker argument to use in pushing against added logging outside of LogDebug/LogTrace statements, than them not even accepting a category to potentially filter on. Gotta respect an opinionated API. :)\r\n\r\nUnderstood. If the current restrictions which prevent categories from being filtered out are not enough, a developer restriction to prevent categories constants from being specified could be a stronger tool to do the things you and maybe AJ are trying to accomplish. I implemented that restriction in 44afae705a12252149adbe7ac6d3646052b8bf3b and would be ok with adding it this PR if it solves problems for you and AJ, even if I don't personally see a need for the API to be so restrictive.\r\n\r\nI will say one nice thing about the approach in 44afae705a12252149adbe7ac6d3646052b8bf3b is that someone tries to write a `LogInfo` statement that includes a category they will get a clear `static_assert` error explaining that they need to drop the category argument or reduce the log level, instead of just seeing preprocessor and strprintf errors which are harder to decipher.\r\n\r\n---\r\n\r\nUpdated 38d3298ea7e547797871140a02df3e7d60d34d36 -> 681b21f7ca07f0e1411354baa01649e7b1f30e8c ([`pr/bclog.18`](https://github.com/ryanofsky/bitcoin/commits/pr/bclog.18) -> [`pr/bclog.19`](https://github.com/ryanofsky/bitcoin/commits/pr/bclog.19), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bclog.18..pr/bclog.19)) with suggested `constexpr` change (thank you for the suggestion!)",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#pullrequestreview-2148139535",
      "submitted_at": "2024-06-28T14:23:54Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29256"
    },
    {
      "event": "commented",
      "id": 2197318437,
      "node_id": "IC_kwDOABII586C-Gsl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2197318437",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-28T16:58:00Z",
      "updated_at": "2024-06-28T17:02:44Z",
      "author_association": "MEMBER",
      "body": ">    All consistent, now accepting the same parameters\r\n>    All compatible with log categories, to make it possible to filter or highlight log messages from a particular component\r\n>    All compatible with wallet logging, which includes the wallet name in log messages\r\n>    Require less verbosity, by not needing category constants to be repeated in log prints from a common source.\r\n>    Not tied to one hardcoded global Logger instance\r\n\r\n\r\nI think I'd be Concept ACK on these, though I've somewhat tuned out since the unfortunate deviation the severity-based logging has taken since https://github.com/bitcoin/bitcoin/pull/28318 for the reasons I've stated there and in other PRs.\r\n\r\nWe've just over-wrought everything when it could be simple and open. A number of other developers think the same but don't speak up much because it seems pointless to do so.\r\n\r\nAside, and unsure it is an issue of discussion: Unless proven otherwise in practice later on, I do not think we need to be overly paranoid and helicopter parenting yet with respect to node operators footgunning themselves en masse with custom log level settings. Only developers and more technically aware users are likely to use them.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-2197318437",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29256"
    },
    {
      "event": "commented",
      "id": 2197361518,
      "node_id": "IC_kwDOABII586C-RNu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2197361518",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-28T17:22:08Z",
      "updated_at": "2024-06-28T17:22:22Z",
      "author_association": "CONTRIBUTOR",
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-2197318437\r\n\r\n> We've just over-complicated everything when it could be simple and open. I know a number of other developers think the same but don't speak up much because it seems pointless to do so.\r\n\r\nCurious, when you say \"over-complicated\", are you referring to the implementation of the logging code, or to the usage of the logging API? Or to effects of logging settings?\r\n\r\nI don't think the logging API is too complicated. I think #28318 made it more self documenting and simpler.\r\n\r\nOn the other hand, I would say that the macro definitions used to implement the logging API are pretty complicated. This PR does try to improve them by making the implementation sequential and documenting every part of it. But I think it is ok for the implementation to be complicated if the interface is simple, and if there are legitimate reasons to make it complicated, like not evaluating arguments when debug logging is turned off.\r\n\r\nI'm not sure about interpretation of logging settings, but I haven't been involved in those PRs.\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-2197361518",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29256"
    },
    {
      "event": "commented",
      "id": 2197457587,
      "node_id": "IC_kwDOABII586C-oqz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2197457587",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-28T18:49:08Z",
      "updated_at": "2024-06-28T18:49:08Z",
      "author_association": "CONTRIBUTOR",
      "body": "> AJ, thanks for the response. I want to let your comment stand, and not reply in detail right away to wait for input on this PR from other potential reviewers.\r\n\r\nThat comment had already stood for eight weeks, and included an example patchset of changes that could improve things with regards to your complaints about wallet logging, while discussion continued on this. Instead we've had no progress and no discussion, which seems to me to be pretty counter productive. I've opened up what I assume is the least controversial of those as #30355 if you have any interest.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-2197457587",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29256"
    },
    {
      "event": "commented",
      "id": 2197461775,
      "node_id": "IC_kwDOABII586C-psP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2197461775",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-28T18:52:33Z",
      "updated_at": "2024-06-28T19:06:17Z",
      "author_association": "MEMBER",
      "body": "> Curious, when you say \"over-complicated\", are you referring to the implementation of the logging code, or to the usage of the logging API? Or to effects of logging settings?\r\n\r\nAll of these, I think.  The idea was:\r\n\r\n- one `Log(level, cat, msg)` macro with a consistent API replace the current macros\r\n- the -debug and -loglevel config options and logging RPC soft-aligned into a single user-facing logging API\r\n- the printed logs to be the same format for each `Log` call, apart from custom options\r\n- developer documentation in the `Log` macro and the level/category enums, where grepping would lead you directly\r\n\r\nInstead (from memory, I'm maybe not up to date), we now have:\r\n\r\n- a larger slew of macros\r\n- an inconsistent API and printed log that vary depending on which of the new level macros is called\r\n- various restrictions on calls and usage\r\n- documentation in various places\r\n- all these ducks to keep in a row\r\n\r\nNone of that seems necessary (unless there is a technical obstacle?)\r\n\r\nI suggest doing the simplest consistent implementation and API we can come up. Easier for both users and developers. Those seem more valuable than e.g. saving characters that developers might copy/paste when adding new logging.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-2197461775",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29256"
    },
    {
      "event": "commented",
      "id": 2197540896,
      "node_id": "IC_kwDOABII586C-9Ag",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2197540896",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-28T19:54:43Z",
      "updated_at": "2024-06-28T19:54:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-2197461775\r\n\r\nThanks I appreciate the clarification, and I agree with most of those points, except I genuinely do think having one convenience macro for each log level is nice. And LogPrintLevel exists so it is even possible to ignore the convenience macros if you want to do that. \r\n\r\nJust as an observation, I get the sense that I am not the only one who likes the convenience macros, and that when other people read your comments complaining about the existence of these macros, it might make them discount the value of other things you are saying. So I don't know if it would help, but it might be better if you could come to a grudging acceptance of the macros, and think about not bringing them up if they aren't essential to points you are making. It might help other points be better received and understood.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-2197540896",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29256"
    },
    {
      "event": "commented",
      "id": 2197730404,
      "node_id": "IC_kwDOABII586C_rRk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2197730404",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-28T22:25:42Z",
      "updated_at": "2024-06-28T22:25:42Z",
      "author_association": "CONTRIBUTOR",
      "body": "(For what it is worth, I'm used to thin convenience macros for logging from other codebases. In the ecosystem we also have https://github.com/ElementsProject/lightning/blob/master/lightningd/log.h which follows the same pattern).\r\n\r\n> I implemented that restriction in 44afae705a12252149adbe7ac6d3646052b8bf3b and would be ok with adding it this PR if it solves problems for you and AJ, even if I don't personally see a need for the API to be so restrictive.\r\n\r\nThe API feels good to me, nice touch with the `static_assert`! Wish the implementation of the combined functionality were simpler, but don't have the throughput to attempt boiling it down right now.\r\n\r\nSide note: `LogPrintfCategory` surprised me in that it is logging with categories at Info-level. Seems to be only used by tests and benchmarks.. maybe uses of it could be removed as it was [deprecated in the last release](https://github.com/bitcoin/bitcoin/blob/27.x/src/logging.h#L244), or changed to use `LogDebug`?",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-2197730404",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29256"
    },
    {
      "event": "labeled",
      "id": 13663074979,
      "node_id": "LE_lADOABII5858R1mSzwAAAAMuYfqj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13663074979",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-26T15:46:15Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "referenced",
      "id": 13785652578,
      "node_id": "REFE_lADOABII5858R1mSzwAAAAM1sF1i",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13785652578",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "db2e3ff6fe49b3f96029c5f11a37a0c182a8860b",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/db2e3ff6fe49b3f96029c5f11a37a0c182a8860b",
      "created_at": "2024-08-07T01:56:14Z"
    },
    {
      "event": "referenced",
      "id": 13785652608,
      "node_id": "REFE_lADOABII5858R1mSzwAAAAM1sF2A",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13785652608",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "46f5e27e86f9bd2c88df86f0d652fedab1bd0f21",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/46f5e27e86f9bd2c88df86f0d652fedab1bd0f21",
      "created_at": "2024-08-07T01:56:15Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13785652628,
      "node_id": "HRFPE_lADOABII5858R1mSzwAAAAM1sF2U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13785652628",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "46f5e27e86f9bd2c88df86f0d652fedab1bd0f21",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/46f5e27e86f9bd2c88df86f0d652fedab1bd0f21",
      "created_at": "2024-08-07T01:56:15Z"
    },
    {
      "event": "unlabeled",
      "id": 13785898063,
      "node_id": "UNLE_lADOABII5858R1mSzwAAAAM1tBxP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13785898063",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-07T02:42:09Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 14107548747,
      "node_id": "LE_lADOABII5858R1mSzwAAAANI4BxL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14107548747",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-02T22:45:32Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "referenced",
      "id": 15588889966,
      "node_id": "REFE_lADOABII5858R1mSzwAAAAOhK5Vu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15588889966",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "117de1cc268db0f58f4dc942b4e822511ea88693",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/117de1cc268db0f58f4dc942b4e822511ea88693",
      "created_at": "2024-12-09T19:11:45Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15588890052,
      "node_id": "HRFPE_lADOABII5858R1mSzwAAAAOhK5XE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15588890052",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "48b3c951aa256c6be0cc50461de00f758d92dcb4",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/48b3c951aa256c6be0cc50461de00f758d92dcb4",
      "created_at": "2024-12-09T19:11:46Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15590135575,
      "node_id": "HRFPE_lADOABII5858R1mSzwAAAAOhPpcX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15590135575",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5db1958e60aef9d3604448c21e1f397e561480ee",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/5db1958e60aef9d3604448c21e1f397e561480ee",
      "created_at": "2024-12-09T20:29:57Z"
    },
    {
      "event": "unlabeled",
      "id": 15590414266,
      "node_id": "UNLE_lADOABII5858R1mSzwAAAAOhQte6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15590414266",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-09T20:52:43Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2531717743,
      "node_id": "IC_kwDOABII586W5vJv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2531717743",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-10T14:00:01Z",
      "updated_at": "2024-12-10T14:00:01Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased 46f5e27e86f9bd2c88df86f0d652fedab1bd0f21 -> 48b3c951aa256c6be0cc50461de00f758d92dcb4 ([`pr/bclog.20`](https://github.com/ryanofsky/bitcoin/commits/pr/bclog.20) -> [`pr/bclog.21`](https://github.com/ryanofsky/bitcoin/commits/pr/bclog.21), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bclog.20-rebase..pr/bclog.21)) due to conflicts with with #31174 and other PRs.\r\nUpdated 48b3c951aa256c6be0cc50461de00f758d92dcb4 -> 5db1958e60aef9d3604448c21e1f397e561480ee ([`pr/bclog.21`](https://github.com/ryanofsky/bitcoin/commits/pr/bclog.21) -> [`pr/bclog.22`](https://github.com/ryanofsky/bitcoin/commits/pr/bclog.22), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bclog.21..pr/bclog.22)) to fix MSVC error C3495 https://github.com/bitcoin/bitcoin/actions/runs/12242607762/job/34150305407?pr=29256\r\n\r\nIf reviewers agree with previous feedback that allowing category arguments to be passed to LogError/LogWarning/LogInfo macros is dangerous because it encourages developers to add log spam and encourages users to ignore important messages, I can add commit 0b5cbf9ee8ca39b91c6c635d27df94ec618be5cb here so specifying categories will remain forbidden. Would prefer not to do this because providing a consistent API and providing context with log messages seem like tangible benefits to me, while the current restrictions seem like an indirect and ineffective solution to log spam, but I could live with the restrictions if having them unblocks #30342 and #30343.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-2531717743",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29256"
    },
    {
      "event": "reviewed",
      "id": 2503381924,
      "node_id": "PRR_kwDOABII586VNpOk",
      "url": null,
      "actor": null,
      "commit_id": "5db1958e60aef9d3604448c21e1f397e561480ee",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-12-14T22:17:07Z",
      "author_association": "CONTRIBUTOR",
      "body": "Code reviewed 5db1958e60aef9d3604448c21e1f397e561480ee + 0b5cbf9ee8ca39b91c6c635d27df94ec618be5cb\r\n\r\n#### PR style\r\n\r\nI think it would be clearer to introduce the *logging_source_args*-test by itself in an initial commit without any behavioral changes to the logging system, to then have following commits demonstrate how the output changes.\r\n\r\n#### Subjective title\r\n\r\nThe PR title (and commit messages) is/are misleading/heavily subjective:\r\n\"Improve new LogDebug/Trace/Info/Warning/Error Macros\"\r\nMore objective:\r\n\"Make LogInfo/Warning/Error accept category and stop requiring it for LogDebug/Trace\"\r\n\r\nBut that title doesn't manage to also squeeze in what I think is the **undisputedly useful** part here - the log-source concept (required by child PRs #30342 and #30343). I wish that would be introduced without the other API changes.\r\n\r\n#### Suggested change\r\n\r\n0b5cbf9ee8ca39b91c6c635d27df94ec618be5cb disallowing categories for high priority levels does not go far enough, it is even more important that categories still be required for Debug/Trace IMO, to prevent spamming across categories. Took a stab at implementing that in additional commit ~86c7b578cb4563a09783d95e95adc437c04447bc~ cebc9e2a22892abf70f16f08a0cbfb12a98291b5. (It also resets the category for high priority levels).\r\n\r\nWith my change the PR title could more or less be changed to \"Add log source and non-global logging support\".\r\n\r\nTo me it still feels like we should live with the consciously made API decisions from #28318 a bit longer without having to change them.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#pullrequestreview-2503381924",
      "submitted_at": "2024-12-14T22:11:28Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29256"
    },
    {
      "event": "renamed",
      "id": 17117946903,
      "node_id": "RTE_lADOABII5858R1mSzwAAAAP8TyQX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17117946903",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-03T17:28:27Z",
      "rename": {
        "from": "Improve new LogDebug/Trace/Info/Warning/Error Macros",
        "to": "log, refactor: Allow log macros to accept context arguments"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17117976225,
      "node_id": "HRFPE_lADOABII5858R1mSzwAAAAP8T5ah",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17117976225",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "07295ff649e72e267b6f285dcf0f670e676019ef",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/07295ff649e72e267b6f285dcf0f670e676019ef",
      "created_at": "2025-04-03T17:30:51Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17118053888,
      "node_id": "HRFPE_lADOABII5858R1mSzwAAAAP8UMYA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17118053888",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2ebcc54b886dd7e54688bf7e0a6238e354a35236",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/2ebcc54b886dd7e54688bf7e0a6238e354a35236",
      "created_at": "2025-04-03T17:36:56Z"
    },
    {
      "event": "labeled",
      "id": 17118054758,
      "node_id": "LE_lADOABII5858R1mSzwAAAAP8UMlm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17118054758",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-03T17:37:00Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2776499371,
      "node_id": "IC_kwDOABII586lfgSr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2776499371",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-03T17:37:01Z",
      "updated_at": "2025-04-03T17:37:01Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/39937528078</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-2776499371",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29256"
    },
    {
      "event": "reviewed",
      "id": 2740681914,
      "node_id": "PRR_kwDOABII586jW3y6",
      "url": null,
      "actor": null,
      "commit_id": "2ebcc54b886dd7e54688bf7e0a6238e354a35236",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-10-09T14:56:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased 5db1958e60aef9d3604448c21e1f397e561480ee -> 07295ff649e72e267b6f285dcf0f670e676019ef ([`pr/bclog.22`](https://github.com/ryanofsky/bitcoin/commits/pr/bclog.22) -> [`pr/bclog.23`](https://github.com/ryanofsky/bitcoin/commits/pr/bclog.23), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bclog.22-rebase..pr/bclog.23)) with suggested changes adding back #28318 restrictions.\nUpdated 07295ff649e72e267b6f285dcf0f670e676019ef -> 2ebcc54b886dd7e54688bf7e0a6238e354a35236 ([`pr/bclog.23`](https://github.com/ryanofsky/bitcoin/commits/pr/bclog.23) -> [`pr/bclog.24`](https://github.com/ryanofsky/bitcoin/commits/pr/bclog.24), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bclog.23..pr/bclog.24)) to fix CI \"no return statement in function\" errors from GCC\nUpdated 2ebcc54b886dd7e54688bf7e0a6238e354a35236 -> 176ad35e69b2f0ba94b4db47c66a583b1bf87744 ([`pr/bclog.24`](https://github.com/ryanofsky/bitcoin/commits/pr/bclog.24) -> [`pr/bclog.25`](https://github.com/ryanofsky/bitcoin/commits/pr/bclog.25), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bclog.24..pr/bclog.25)) to fix CI errors from older clang versions and add new unit test in separate commit as suggested.\n<!-- begin push-26 -->\nUpdated 176ad35e69b2f0ba94b4db47c66a583b1bf87744 -> 093d58e055b10a1031c97b24de5e029221f176d7 ([`pr/bclog.25`](https://github.com/ryanofsky/bitcoin/commits/pr/bclog.25) -> [`pr/bclog.26`](https://github.com/ryanofsky/bitcoin/commits/pr/bclog.26), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bclog.25..pr/bclog.26))<!-- end --> with minor tweaks to declarations and commit messages.\n\n---\n\nre: https://github.com/bitcoin/bitcoin/pull/29256#pullrequestreview-2503381924\n\nThanks @hodlinator. I really appreciate you figuring out how to implement the restrictions from #28318. Even though I don't like them, I don't think they add a very big cost, so I've incorporated them to help narrow the scope of this PR and unblock it.\n\nI'm still unable to wrap my head around the appeal of a logging framework with an inconsistent API that yells at you if you supply too much context for important messages, and yells at you if you give too little context for less important messages. I can follow the logic which leads to the conclusion that the restrictions are good, but it's not compelling to me, and seems like it just makes the logging framework jankier for developers and users and different from logging frameworks that are well regarded anywhere else. But dropping the restrictions is not the main goal of this PR, so I'm ok with keeping them.\n\n> I think it would be clearer to introduce the logging_source_args-test by itself in an initial commit without any behavioral changes to the logging system, to then have following commits demonstrate how the output changes.\n\nMissed this suggestion but will implement in the next push. Need to fix some issues happening in CI anyway. (UPDATE: Implemented this suggestion now).",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#pullrequestreview-2740681914",
      "submitted_at": "2025-04-03T17:53:31Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29256"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17119286018,
      "node_id": "HRFPE_lADOABII5858R1mSzwAAAAP8Y5MC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17119286018",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "176ad35e69b2f0ba94b4db47c66a583b1bf87744",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/176ad35e69b2f0ba94b4db47c66a583b1bf87744",
      "created_at": "2025-04-03T19:13:06Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17123434702,
      "node_id": "HRFPE_lADOABII5858R1mSzwAAAAP8ouDO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17123434702",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "093d58e055b10a1031c97b24de5e029221f176d7",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/093d58e055b10a1031c97b24de5e029221f176d7",
      "created_at": "2025-04-04T03:35:23Z"
    },
    {
      "event": "unlabeled",
      "id": 17124096919,
      "node_id": "UNLE_lADOABII5858R1mSzwAAAAP8rPuX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17124096919",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-04T05:16:49Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2762150883,
      "node_id": "PRR_kwDOABII586koxPj",
      "url": null,
      "actor": null,
      "commit_id": "093d58e055b10a1031c97b24de5e029221f176d7",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-04-12T22:08:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "Code reviewed 093d58e055b10a1031c97b24de5e029221f176d7\r\n\r\nThank you for changing the end result of this PR to abide by the API decisions of #28318!\r\n\r\n(Still think it's a bit odd to open up the gates in eaac991552abe9bfbffc22d99a8baee659ae3173 to then return to closer to master behavior in 093d58e055b10a1031c97b24de5e029221f176d7. But no blocker).\r\n\r\nWhile the API has been \"reverted\", I still think there's a shift in behavior (output) - see inline comments.\r\n\r\n(Sorry I didn't get to this sooner, somehow only registered that you had rebased before looking back at this today).",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#pullrequestreview-2762150883",
      "submitted_at": "2025-04-12T22:08:37Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29256"
    },
    {
      "event": "labeled",
      "id": 18553227338,
      "node_id": "LE_lADOABII5858R1mSzwAAAARR28hK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18553227338",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-09T20:37:07Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDI2MDE3MGQwMTQ3MzdmNGRhOTkxZDU1ZGQ0MTc2NDQ3MGZlZWNkMzQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/260170d014737f4da991d55dd41764470feecd34",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/260170d014737f4da991d55dd41764470feecd34",
      "tree": {
        "sha": "068e5b10be5624a6e8f0bc7962c35e6691ccad7c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/068e5b10be5624a6e8f0bc7962c35e6691ccad7c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d2987102dd13f965c7a0bf1d5b8ee15bcf025398",
          "sha": "d2987102dd13f965c7a0bf1d5b8ee15bcf025398",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d2987102dd13f965c7a0bf1d5b8ee15bcf025398"
        }
      ],
      "message": "log, test: Add test for currently accepted logging arguments\n\nTest will be extended in next commit to cover support for context objects.",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2025-10-10T19:52:00Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-01-12T21:52:05Z"
      },
      "sha": "260170d014737f4da991d55dd41764470feecd34"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDhlM2VlOWQ3ZTc5NDk0ZTk1YmRhN2IyZjc1OTE4M2I4OGRkMmNhNjg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8e3ee9d7e79494e95bda7b2f759183b88dd2ca68",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8e3ee9d7e79494e95bda7b2f759183b88dd2ca68",
      "tree": {
        "sha": "9d8384e67690c9f96e631115d9444ee06854a579",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9d8384e67690c9f96e631115d9444ee06854a579"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/260170d014737f4da991d55dd41764470feecd34",
          "sha": "260170d014737f4da991d55dd41764470feecd34",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/260170d014737f4da991d55dd41764470feecd34"
        }
      ],
      "message": "log, refactor: Allow log macros to accept context arguments\n\nAllow LogDebug(), LogTrace(), LogInfo(), LogWarning(), and LogError() macros to\naccept context arguments to provide more information in log messages and more\ncontrol over logging to callers.\n\nThis functionality is used in followup PRs:\n\n- https://github.com/bitcoin/bitcoin/pull/30342 - To let libbitcoinkernel send\n  output to specfic `BCLog::Logger` instances instead of a global instance, so\n  output can be disambiguated and applications can have more control over\n  logging.\n\n- https://github.com/bitcoin/bitcoin/pull/30343 - To replace custom\n  `WalletLogPrintf` calls with standard logging calls that automatically include\n  wallet names and don't log everything at info level.\n\nThis commit does not change behavior of current log prints or require them to\nbe updated. It includes tests and documentation covering the new functionality.\n\nCo-Authored-By: Hodlinator <172445034+hodlinator@users.noreply.github.com>",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2025-10-10T19:52:00Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-01-12T21:52:05Z"
      },
      "sha": "8e3ee9d7e79494e95bda7b2f759183b88dd2ca68"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGI0YzZiMTZjMzcxNTJlMzVlZThkZDYyZTQwYTdlY2YwZWUwNWRjMWM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b4c6b16c37152e35ee8dd62e40a7ecf0ee05dc1c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b4c6b16c37152e35ee8dd62e40a7ecf0ee05dc1c",
      "tree": {
        "sha": "27951550b615aad1bcb4dacfe8b1988e0cd6d4aa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/27951550b615aad1bcb4dacfe8b1988e0cd6d4aa"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8e3ee9d7e79494e95bda7b2f759183b88dd2ca68",
          "sha": "8e3ee9d7e79494e95bda7b2f759183b88dd2ca68",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8e3ee9d7e79494e95bda7b2f759183b88dd2ca68"
        }
      ],
      "message": "logging: Add support for custom log contexts\n\nCustom log contexts allow overridding log formatting and adding metadata such\nas request ids or wallet names to log messages while still using standard\nmacros for logging. This is used to replace WalletLogPrintf() functions with\nLogInfo() calls in followup PR #30343.",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2025-10-10T19:52:00Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2025-04-02T21:40:52Z"
      },
      "sha": "b4c6b16c37152e35ee8dd62e40a7ecf0ee05dc1c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGE3YjdmMDQzYzJmMWE1NjcxNmEzYjc2OWRjOTA3ODk2MmM1ZjE4M2M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a7b7f043c2f1a56716a3b769dc9078962c5f183c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a7b7f043c2f1a56716a3b769dc9078962c5f183c",
      "tree": {
        "sha": "b344a64911e1818ce5acc5e5255afc59fd957e18",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b344a64911e1818ce5acc5e5255afc59fd957e18"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b4c6b16c37152e35ee8dd62e40a7ecf0ee05dc1c",
          "sha": "b4c6b16c37152e35ee8dd62e40a7ecf0ee05dc1c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b4c6b16c37152e35ee8dd62e40a7ecf0ee05dc1c"
        }
      ],
      "message": "log, refactor: Add preprocessor workaround for MSVC\n\nNeeded to fix errors like:\n\nconst Context &GetContext(const Context &)': expects 1 arguments - 3 provided\n\ndue to a compiler bug:\n\nhttps://stackoverflow.com/questions/5134523/msvc-doesnt-expand-va-args-correctly/5134656#5134656\n\nExample CI failure:\n\nhttps://github.com/bitcoin/bitcoin/actions/runs/8072891468/job/22055528830?pr=29256",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2025-10-10T19:52:00Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-02-28T01:45:00Z"
      },
      "sha": "a7b7f043c2f1a56716a3b769dc9078962c5f183c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQwMzIwMjJmZjU5MjA0Yjg1YjIwNTdhYjlhODhmNGQyODQyZGJkZTk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d032022ff59204b85b2057ab9a88f4d2842dbde9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d032022ff59204b85b2057ab9a88f4d2842dbde9",
      "tree": {
        "sha": "2f5475dc5f91131593a08298952b12fc17e7ac1e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2f5475dc5f91131593a08298952b12fc17e7ac1e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a7b7f043c2f1a56716a3b769dc9078962c5f183c",
          "sha": "a7b7f043c2f1a56716a3b769dc9078962c5f183c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a7b7f043c2f1a56716a3b769dc9078962c5f183c"
        }
      ],
      "message": "log, refactor: Disallow category args to logging macros\n\nDisallow passing BCLog category constants to LogInfo(), LogWarning(), and\nLogError() macros, and disallow omitting BCLog categories when calling\nLogDebug() and LogTrace() macros.\n\nAdditionally, drop category information from log output at higher levels as\nsuggested by Hodlinator\nhttps://github.com/bitcoin/bitcoin/pull/29256#discussion_r2040671181.\n\nNone of these restrictions are technically necessary, and not everybody\nbelieves they are good. However, they have existed since the\nLog{Trace,Debug,Info,Warning,Error} macros were introduced in #28318, and\nremoving these restrictions is orthogonal to the goals of this PR which are:\n(1) to allow the Log macros to work without accessing global state and (2) to\nsupport local logging customization with additional metadata.\n\nThis change just more clearly documents the current logging restrictions and\nprovides better error messages to developers when enforcing them.\n\nCo-Authored-By: Hodlinator <172445034+hodlinator@users.noreply.github.com>",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2025-10-10T19:52:00Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-06-28T01:52:53Z"
      },
      "sha": "d032022ff59204b85b2057ab9a88f4d2842dbde9"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 20282221263,
      "node_id": "HRFPE_lADOABII5858R1mSzwAAAAS46iLP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20282221263",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d032022ff59204b85b2057ab9a88f4d2842dbde9",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/d032022ff59204b85b2057ab9a88f4d2842dbde9",
      "created_at": "2025-10-15T00:42:14Z"
    },
    {
      "event": "unlabeled",
      "id": 20282358389,
      "node_id": "UNLE_lADOABII5858R1mSzwAAAAS47Dp1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20282358389",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-15T00:57:25Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1655528095",
      "pull_request_review_id": 2142978382,
      "id": 1655528095,
      "node_id": "PRRC_kwDOABII585irVqf",
      "diff_hunk": "",
      "path": "doc/developer-notes.md",
      "position": 1,
      "original_position": 1,
      "commit_id": "5f64eab013a58967af37a59c863c2ab6d45ba6e8",
      "original_commit_id": "5f64eab013a58967af37a59c863c2ab6d45ba6e8",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`source` feels a bit abstract and special case, it would be good to keep `LogDebug(BCLog::CATEGORY, ...` examples as the most prominent as they are the common case.",
      "created_at": "2024-06-26T21:09:30Z",
      "updated_at": "2024-06-26T22:02:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#discussion_r1655528095",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1655528095"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29256"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1655531667",
      "pull_request_review_id": 2142978382,
      "id": 1655531667,
      "node_id": "PRRC_kwDOABII585irWiT",
      "diff_hunk": "@@ -201,9 +208,36 @@ namespace BCLog {\n         bool DefaultShrinkDebugFile() const;\n     };\n \n+    //! Object representing a particular source of log messages. Holds a logging\n+    //! category, a reference to the logger object to output to, and a\n+    //! formatting hook.\n+    struct Source {\n+        LogFlags category;\n+        Logger& logger;\n+\n+        Source(LogFlags category = LogFlags::ALL, Logger& logger = LogInstance()) : category{category}, logger{logger} {}",
      "path": "src/logging.h",
      "position": 1,
      "original_position": 32,
      "commit_id": "093d58e055b10a1031c97b24de5e029221f176d7",
      "original_commit_id": "5f64eab013a58967af37a59c863c2ab6d45ba6e8",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Could do with a comment such as `// Implicitly constructible from a LogFlags value in order to be created by LogDebug(BCLog::NET, ...) etc.` if the current approach is kept.",
      "created_at": "2024-06-26T21:13:23Z",
      "updated_at": "2024-06-26T22:02:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#discussion_r1655531667",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1655531667"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29256"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 248,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1655531815",
      "pull_request_review_id": 2142978382,
      "id": 1655531815,
      "node_id": "PRRC_kwDOABII585irWkn",
      "diff_hunk": "@@ -201,9 +208,36 @@ namespace BCLog {\n         bool DefaultShrinkDebugFile() const;\n     };\n \n+    //! Object representing a particular source of log messages. Holds a logging\n+    //! category, a reference to the logger object to output to, and a\n+    //! formatting hook.\n+    struct Source {\n+        LogFlags category;",
      "path": "src/logging.h",
      "position": 1,
      "original_position": 29,
      "commit_id": "093d58e055b10a1031c97b24de5e029221f176d7",
      "original_commit_id": "5f64eab013a58967af37a59c863c2ab6d45ba6e8",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n        const LogFlags category;\r\n```",
      "created_at": "2024-06-26T21:13:36Z",
      "updated_at": "2024-06-26T22:02:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#discussion_r1655531815",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1655531815"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29256"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 244,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1655537932",
      "pull_request_review_id": 2142978382,
      "id": 1655537932,
      "node_id": "PRRC_kwDOABII585irYEM",
      "diff_hunk": "@@ -76,6 +76,123 @@ struct LogSetup : public BasicTestingSetup {\n     }\n };\n \n+//! Test logging to local logger.\n+BOOST_AUTO_TEST_CASE(logging_local_logger)\n+{\n+    BCLog::Logger logger;\n+    logger.m_log_timestamps = false;\n+    logger.EnableCategory(BCLog::LogFlags::ALL);\n+    logger.SetLogLevel(BCLog::Level::Trace);\n+    logger.StartLogging();\n+\n+    std::vector<std::string> messages;\n+    logger.PushBackCallback([&](const std::string& s) { messages.push_back(s); });\n+\n+    BCLog::Source log{BCLog::NET, logger};\n+    LogError(log, \"error %s\\n\", \"arg\");\n+    LogWarning(log, \"warning %s\\n\", \"arg\");\n+    LogInfo(log, \"info %s\\n\", \"arg\");\n+    LogDebug(log, \"debug %s\\n\", \"arg\");\n+    LogTrace(log, \"trace %s\\n\", \"arg\");\n+\n+    std::vector<std::string> expected = {",
      "path": "src/test/logging_tests.cpp",
      "position": 1,
      "original_position": 23,
      "commit_id": "093d58e055b10a1031c97b24de5e029221f176d7",
      "original_commit_id": "5f64eab013a58967af37a59c863c2ab6d45ba6e8",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Could be made `constexpr` here and in other places:\r\n```suggestion\r\n    constexpr auto EXPECTED = std::to_array({\r\n```",
      "created_at": "2024-06-26T21:21:10Z",
      "updated_at": "2024-06-26T22:02:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#discussion_r1655537932",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1655537932"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29256"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 98,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1655562082",
      "pull_request_review_id": 2142978382,
      "id": 1655562082,
      "node_id": "PRRC_kwDOABII585ird9i",
      "diff_hunk": "@@ -86,6 +203,9 @@ BOOST_AUTO_TEST_CASE(logging_timer)\n BOOST_FIXTURE_TEST_CASE(logging_LogPrintf_, LogSetup)\n {\n     LogInstance().m_log_sourcelocations = true;\n+    auto LogPrintf_ = [](const std::string&fun, const std::string&file, int line, BCLog::LogFlags category, BCLog::Level level, const auto&... args) {\n+        LogInstance().LogPrintStr(strprintf(args...), fun, file, line, category, level);\n+    };",
      "path": "src/test/logging_tests.cpp",
      "position": 1,
      "original_position": 130,
      "commit_id": "093d58e055b10a1031c97b24de5e029221f176d7",
      "original_commit_id": "5f64eab013a58967af37a59c863c2ab6d45ba6e8",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Feels like a half-baked workaround for having removed the global `LogPrintf_`.",
      "created_at": "2024-06-26T21:48:03Z",
      "updated_at": "2024-06-26T22:02:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#discussion_r1655562082",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1655562082"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29256"
        }
      },
      "start_line": null,
      "original_start_line": 206,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 208,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1656109703",
      "pull_request_review_id": 2143744323,
      "id": 1656109703,
      "node_id": "PRRC_kwDOABII585itjqH",
      "diff_hunk": "",
      "path": "doc/developer-notes.md",
      "position": 1,
      "original_position": 1,
      "commit_id": "5f64eab013a58967af37a59c863c2ab6d45ba6e8",
      "original_commit_id": "5f64eab013a58967af37a59c863c2ab6d45ba6e8",
      "in_reply_to_id": 1655528095,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29256#discussion_r1655528095\r\n\r\n> `source` feels a bit abstract and special case, it would be good to keep `LogDebug(BCLog::CATEGORY, ...` examples as the most prominent as they are the common case.\r\n\r\nGreat point, reverted this. There's no need to change this document anymore since the current version of this PR is backwards compatible (unlike the original version) so the original recommendations are still good. There's more complete reference documentation in the logging header.",
      "created_at": "2024-06-27T03:11:11Z",
      "updated_at": "2024-06-27T03:42:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#discussion_r1656109703",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1656109703"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29256"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1656110508",
      "pull_request_review_id": 2143744323,
      "id": 1656110508,
      "node_id": "PRRC_kwDOABII585itj2s",
      "diff_hunk": "@@ -201,9 +208,36 @@ namespace BCLog {\n         bool DefaultShrinkDebugFile() const;\n     };\n \n+    //! Object representing a particular source of log messages. Holds a logging\n+    //! category, a reference to the logger object to output to, and a\n+    //! formatting hook.\n+    struct Source {\n+        LogFlags category;",
      "path": "src/logging.h",
      "position": 1,
      "original_position": 29,
      "commit_id": "093d58e055b10a1031c97b24de5e029221f176d7",
      "original_commit_id": "5f64eab013a58967af37a59c863c2ab6d45ba6e8",
      "in_reply_to_id": 1655531815,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29256#discussion_r1655531815\r\n\r\nThanks again, but for now I did not take this suggestion. I think making individual struct members const can unnecessarily restrict the ways the struct can be initialized. I think the safety benefits of making the `category` member const are better enforced and more explicit when the entire struct is const, which should be best practice and already the case everywhere.\r\n\r\n",
      "created_at": "2024-06-27T03:11:19Z",
      "updated_at": "2024-06-27T03:42:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#discussion_r1656110508",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1656110508"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29256"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 244,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1656111030",
      "pull_request_review_id": 2143744323,
      "id": 1656111030,
      "node_id": "PRRC_kwDOABII585itj-2",
      "diff_hunk": "@@ -201,9 +208,36 @@ namespace BCLog {\n         bool DefaultShrinkDebugFile() const;\n     };\n \n+    //! Object representing a particular source of log messages. Holds a logging\n+    //! category, a reference to the logger object to output to, and a\n+    //! formatting hook.\n+    struct Source {\n+        LogFlags category;\n+        Logger& logger;\n+\n+        Source(LogFlags category = LogFlags::ALL, Logger& logger = LogInstance()) : category{category}, logger{logger} {}",
      "path": "src/logging.h",
      "position": 1,
      "original_position": 32,
      "commit_id": "093d58e055b10a1031c97b24de5e029221f176d7",
      "original_commit_id": "5f64eab013a58967af37a59c863c2ab6d45ba6e8",
      "in_reply_to_id": 1655531667,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29256#discussion_r1655531667\r\n\r\n> Could do with a comment such as `// Implicitly constructible from a LogFlags value in order to be created by LogDebug(BCLog::NET, ...) etc.` if the current approach is kept.\r\n\r\nThank you! Added.",
      "created_at": "2024-06-27T03:11:24Z",
      "updated_at": "2024-06-27T03:42:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#discussion_r1656111030",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1656111030"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29256"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 248,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1656112131",
      "pull_request_review_id": 2143744323,
      "id": 1656112131,
      "node_id": "PRRC_kwDOABII585itkQD",
      "diff_hunk": "@@ -76,6 +76,123 @@ struct LogSetup : public BasicTestingSetup {\n     }\n };\n \n+//! Test logging to local logger.\n+BOOST_AUTO_TEST_CASE(logging_local_logger)\n+{\n+    BCLog::Logger logger;\n+    logger.m_log_timestamps = false;\n+    logger.EnableCategory(BCLog::LogFlags::ALL);\n+    logger.SetLogLevel(BCLog::Level::Trace);\n+    logger.StartLogging();\n+\n+    std::vector<std::string> messages;\n+    logger.PushBackCallback([&](const std::string& s) { messages.push_back(s); });\n+\n+    BCLog::Source log{BCLog::NET, logger};\n+    LogError(log, \"error %s\\n\", \"arg\");\n+    LogWarning(log, \"warning %s\\n\", \"arg\");\n+    LogInfo(log, \"info %s\\n\", \"arg\");\n+    LogDebug(log, \"debug %s\\n\", \"arg\");\n+    LogTrace(log, \"trace %s\\n\", \"arg\");\n+\n+    std::vector<std::string> expected = {",
      "path": "src/test/logging_tests.cpp",
      "position": 1,
      "original_position": 23,
      "commit_id": "093d58e055b10a1031c97b24de5e029221f176d7",
      "original_commit_id": "5f64eab013a58967af37a59c863c2ab6d45ba6e8",
      "in_reply_to_id": 1655537932,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29256#discussion_r1655537932\r\n\r\n> Could be made `constexpr` here and in other places:\r\n\r\nThanks! I don't think there's an obvious way to make these constexpr, but they should be const, so changed the declarations here, below, and in the next PR.\r\n",
      "created_at": "2024-06-27T03:11:35Z",
      "updated_at": "2024-06-27T03:42:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#discussion_r1656112131",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1656112131"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29256"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 98,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1656113790",
      "pull_request_review_id": 2143744323,
      "id": 1656113790,
      "node_id": "PRRC_kwDOABII585itkp-",
      "diff_hunk": "@@ -86,6 +203,9 @@ BOOST_AUTO_TEST_CASE(logging_timer)\n BOOST_FIXTURE_TEST_CASE(logging_LogPrintf_, LogSetup)\n {\n     LogInstance().m_log_sourcelocations = true;\n+    auto LogPrintf_ = [](const std::string&fun, const std::string&file, int line, BCLog::LogFlags category, BCLog::Level level, const auto&... args) {\n+        LogInstance().LogPrintStr(strprintf(args...), fun, file, line, category, level);\n+    };",
      "path": "src/test/logging_tests.cpp",
      "position": 1,
      "original_position": 130,
      "commit_id": "093d58e055b10a1031c97b24de5e029221f176d7",
      "original_commit_id": "5f64eab013a58967af37a59c863c2ab6d45ba6e8",
      "in_reply_to_id": 1655562082,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29256#discussion_r1655562082\r\n\r\n> Feels like a half-baked workaround for having removed the global `LogPrintf_`.\r\n\r\nYes, good catch. I wanted to leave the test case below unchanged in the main commit to check (and let it be obvious) that the new logging features do not change any current behavior. But it's not good to leave behind a reference to an old function with a confusing name, so I added a new commit afterwards to modernize the test.\r\n\r\n",
      "created_at": "2024-06-27T03:11:56Z",
      "updated_at": "2024-06-27T03:42:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#discussion_r1656113790",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1656113790"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29256"
        }
      },
      "start_line": null,
      "original_start_line": 206,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 208,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657145216",
      "pull_request_review_id": 2145385692,
      "id": 1657145216,
      "node_id": "PRRC_kwDOABII585ixgeA",
      "diff_hunk": "@@ -76,6 +76,123 @@ struct LogSetup : public BasicTestingSetup {\n     }\n };\n \n+//! Test logging to local logger.\n+BOOST_AUTO_TEST_CASE(logging_local_logger)\n+{\n+    BCLog::Logger logger;\n+    logger.m_log_timestamps = false;\n+    logger.EnableCategory(BCLog::LogFlags::ALL);\n+    logger.SetLogLevel(BCLog::Level::Trace);\n+    logger.StartLogging();\n+\n+    std::vector<std::string> messages;\n+    logger.PushBackCallback([&](const std::string& s) { messages.push_back(s); });\n+\n+    BCLog::Source log{BCLog::NET, logger};\n+    LogError(log, \"error %s\\n\", \"arg\");\n+    LogWarning(log, \"warning %s\\n\", \"arg\");\n+    LogInfo(log, \"info %s\\n\", \"arg\");\n+    LogDebug(log, \"debug %s\\n\", \"arg\");\n+    LogTrace(log, \"trace %s\\n\", \"arg\");\n+\n+    std::vector<std::string> expected = {",
      "path": "src/test/logging_tests.cpp",
      "position": 1,
      "original_position": 23,
      "commit_id": "093d58e055b10a1031c97b24de5e029221f176d7",
      "original_commit_id": "5f64eab013a58967af37a59c863c2ab6d45ba6e8",
      "in_reply_to_id": 1655537932,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I suggested `constexpr auto EXPECTED = std::to_array({` above but maybe it doesn't work for you?\r\n[Should support `constexpr` that way under C++20 as far as I can tell](https://en.cppreference.com/w/cpp/container/array/to_array). Are you using some fancy interface to GitHub that doesn't yet show suggestion-embeds?",
      "created_at": "2024-06-27T13:29:40Z",
      "updated_at": "2024-06-27T13:29:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#discussion_r1657145216",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657145216"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29256"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 98,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657178875",
      "pull_request_review_id": 2145443505,
      "id": 1657178875,
      "node_id": "PRRC_kwDOABII585ixor7",
      "diff_hunk": "@@ -76,6 +76,123 @@ struct LogSetup : public BasicTestingSetup {\n     }\n };\n \n+//! Test logging to local logger.\n+BOOST_AUTO_TEST_CASE(logging_local_logger)\n+{\n+    BCLog::Logger logger;\n+    logger.m_log_timestamps = false;\n+    logger.EnableCategory(BCLog::LogFlags::ALL);\n+    logger.SetLogLevel(BCLog::Level::Trace);\n+    logger.StartLogging();\n+\n+    std::vector<std::string> messages;\n+    logger.PushBackCallback([&](const std::string& s) { messages.push_back(s); });\n+\n+    BCLog::Source log{BCLog::NET, logger};\n+    LogError(log, \"error %s\\n\", \"arg\");\n+    LogWarning(log, \"warning %s\\n\", \"arg\");\n+    LogInfo(log, \"info %s\\n\", \"arg\");\n+    LogDebug(log, \"debug %s\\n\", \"arg\");\n+    LogTrace(log, \"trace %s\\n\", \"arg\");\n+\n+    std::vector<std::string> expected = {",
      "path": "src/test/logging_tests.cpp",
      "position": 1,
      "original_position": 23,
      "commit_id": "093d58e055b10a1031c97b24de5e029221f176d7",
      "original_commit_id": "5f64eab013a58967af37a59c863c2ab6d45ba6e8",
      "in_reply_to_id": 1655537932,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Could go even more old-school and do:\r\n```C++\r\n    constexpr const char* EXPECTED[]{\r\n        ...\r\n    BOOST_CHECK_EQUAL_COLLECTIONS(log_lines.begin(), log_lines.end(), std::cbegin(EXPECTED), std::cend(EXPECTED));\r\n```",
      "created_at": "2024-06-27T13:51:04Z",
      "updated_at": "2024-06-27T13:51:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#discussion_r1657178875",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657178875"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29256"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 98,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658818412",
      "pull_request_review_id": 2148139535,
      "id": 1658818412,
      "node_id": "PRRC_kwDOABII585i349s",
      "diff_hunk": "@@ -76,6 +76,123 @@ struct LogSetup : public BasicTestingSetup {\n     }\n };\n \n+//! Test logging to local logger.\n+BOOST_AUTO_TEST_CASE(logging_local_logger)\n+{\n+    BCLog::Logger logger;\n+    logger.m_log_timestamps = false;\n+    logger.EnableCategory(BCLog::LogFlags::ALL);\n+    logger.SetLogLevel(BCLog::Level::Trace);\n+    logger.StartLogging();\n+\n+    std::vector<std::string> messages;\n+    logger.PushBackCallback([&](const std::string& s) { messages.push_back(s); });\n+\n+    BCLog::Source log{BCLog::NET, logger};\n+    LogError(log, \"error %s\\n\", \"arg\");\n+    LogWarning(log, \"warning %s\\n\", \"arg\");\n+    LogInfo(log, \"info %s\\n\", \"arg\");\n+    LogDebug(log, \"debug %s\\n\", \"arg\");\n+    LogTrace(log, \"trace %s\\n\", \"arg\");\n+\n+    std::vector<std::string> expected = {",
      "path": "src/test/logging_tests.cpp",
      "position": 1,
      "original_position": 23,
      "commit_id": "093d58e055b10a1031c97b24de5e029221f176d7",
      "original_commit_id": "5f64eab013a58967af37a59c863c2ab6d45ba6e8",
      "in_reply_to_id": 1655537932,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29256#discussion_r1657145216\r\n\r\n> I suggested `constexpr auto EXPECTED = std::to_array({` above but maybe it doesn't work for you? [Should support `constexpr` that way under C++20 as far as I can tell](https://en.cppreference.com/w/cpp/container/array/to_array). Are you using some fancy interface to GitHub that doesn't yet show suggestion-embeds?\r\n\r\nNo sorry, that works perfectly. I was just careless and only noticed `constexpr` without seeing the rest of it. Added your suggestion to this PR and followup PR #30343.\r\n\r\n",
      "created_at": "2024-06-28T14:08:47Z",
      "updated_at": "2024-06-28T14:23:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#discussion_r1658818412",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658818412"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29256"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 98,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1884641997",
      "pull_request_review_id": 2503381924,
      "id": 1884641997,
      "node_id": "PRRC_kwDOABII585wVVrN",
      "diff_hunk": "@@ -238,46 +277,86 @@ static inline bool LogAcceptCategory(BCLog::LogFlags category, BCLog::Level leve\n /** Return true if str parses as a log category and set the flag */\n bool GetLogCategory(BCLog::LogFlags& flag, std::string_view str);\n \n-template <typename... Args>\n-inline void LogPrintFormatInternal(std::string_view logging_function, std::string_view source_file, const int source_line, const BCLog::LogFlags flag, const BCLog::Level level, util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n-{\n-    if (LogInstance().Enabled()) {\n-        std::string log_msg;\n-        try {\n-            log_msg = tfm::format(fmt, args...);\n-        } catch (tinyformat::format_error& fmterr) {\n-            log_msg = \"Error \\\"\" + std::string{fmterr.what()} + \"\\\" while formatting log message: \" + fmt.fmt;\n-        }\n-        LogInstance().LogPrintStr(log_msg, logging_function, source_file, source_line, flag, level);\n-    }\n-}\n-\n-#define LogPrintLevel_(category, level, ...) LogPrintFormatInternal(__func__, __FILE__, __LINE__, category, level, __VA_ARGS__)\n-\n-// Log unconditionally.\n-// Be conservative when using functions that unconditionally log to debug.log!\n-// It should not be the case that an inbound peer can fill up a user's storage\n-// with debug.log entries.\n-#define LogInfo(...) LogPrintLevel_(BCLog::LogFlags::ALL, BCLog::Level::Info, __VA_ARGS__)\n-#define LogWarning(...) LogPrintLevel_(BCLog::LogFlags::ALL, BCLog::Level::Warning, __VA_ARGS__)\n-#define LogError(...) LogPrintLevel_(BCLog::LogFlags::ALL, BCLog::Level::Error, __VA_ARGS__)\n+//! Internal helper to get log source object from macro argument, if argument is\n+//! BCLog::Source object or a category constant that BCLog::Source can be\n+//! constructed from.\n+static inline const BCLog::Source& _LogSource(const BCLog::Source& source LIFETIMEBOUND) { return source; }\n \n-// Deprecated unconditional logging.\n-#define LogPrintf(...) LogInfo(__VA_ARGS__)\n+//! Internal helper to get log source object from macro argument, if argument is\n+//! just a format string and no source or category was provided.\n+static inline BCLog::Source _LogSource(std::string_view fmt) { return {}; }\n \n-// Use a macro instead of a function for conditional logging to prevent\n-// evaluating arguments when logging for the category is not enabled.\n+//! Internal helper to format log arguments and call a logging function.\n+template <typename LogFn, typename Source, typename SourceArg, typename... Args>\n+requires (!std::is_convertible_v<SourceArg, std::string_view>)\n+void _LogFormat(LogFn&& log, Source&& source, SourceArg&&, util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n+{\n+    log(source, source.Format(fmt, args...));\n+}\n+template <typename LogFn, typename Source, typename... Args>\n+void _LogFormat(LogFn&& log, Source&& source, util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n+{\n+    log(source, source.Format(fmt, args...));\n+}\n \n-// Log conditionally, prefixing the output with the passed category name and severity level.\n-#define LogPrintLevel(category, level, ...)               \\\n-    do {                                                  \\\n-        if (LogAcceptCategory((category), (level))) {     \\\n-            LogPrintLevel_(category, level, __VA_ARGS__); \\\n-        }                                                 \\\n+//! Internal helper to return first arg in a __VA_ARGS__ pack. This could be\n+//! simplified to `#define _FirstArg(arg, ...) arg` if not for a preprocessor\n+//! bug in Visual C++.\n+#define _FirstArgImpl(arg, ...) arg\n+#define _FirstArg(args) _FirstArgImpl args",
      "path": "src/logging.h",
      "position": 1,
      "original_position": 134,
      "commit_id": "093d58e055b10a1031c97b24de5e029221f176d7",
      "original_commit_id": "5db1958e60aef9d3604448c21e1f397e561480ee",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This looks less weird, would it be equivalent in this case or defeat the purpose?\r\n```suggestion\r\n#define _FirstArg(args) _FirstArgImpl(args)\r\n```",
      "created_at": "2024-12-13T23:21:01Z",
      "updated_at": "2024-12-14T22:11:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#discussion_r1884641997",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1884641997"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29256"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 306,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1884649628",
      "pull_request_review_id": 2503381924,
      "id": 1884649628,
      "node_id": "PRRC_kwDOABII585wVXic",
      "diff_hunk": "@@ -238,46 +277,86 @@ static inline bool LogAcceptCategory(BCLog::LogFlags category, BCLog::Level leve\n /** Return true if str parses as a log category and set the flag */\n bool GetLogCategory(BCLog::LogFlags& flag, std::string_view str);\n \n-template <typename... Args>\n-inline void LogPrintFormatInternal(std::string_view logging_function, std::string_view source_file, const int source_line, const BCLog::LogFlags flag, const BCLog::Level level, util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n-{\n-    if (LogInstance().Enabled()) {\n-        std::string log_msg;\n-        try {\n-            log_msg = tfm::format(fmt, args...);\n-        } catch (tinyformat::format_error& fmterr) {\n-            log_msg = \"Error \\\"\" + std::string{fmterr.what()} + \"\\\" while formatting log message: \" + fmt.fmt;\n-        }\n-        LogInstance().LogPrintStr(log_msg, logging_function, source_file, source_line, flag, level);\n-    }\n-}\n-\n-#define LogPrintLevel_(category, level, ...) LogPrintFormatInternal(__func__, __FILE__, __LINE__, category, level, __VA_ARGS__)\n-\n-// Log unconditionally.\n-// Be conservative when using functions that unconditionally log to debug.log!\n-// It should not be the case that an inbound peer can fill up a user's storage\n-// with debug.log entries.\n-#define LogInfo(...) LogPrintLevel_(BCLog::LogFlags::ALL, BCLog::Level::Info, __VA_ARGS__)\n-#define LogWarning(...) LogPrintLevel_(BCLog::LogFlags::ALL, BCLog::Level::Warning, __VA_ARGS__)\n-#define LogError(...) LogPrintLevel_(BCLog::LogFlags::ALL, BCLog::Level::Error, __VA_ARGS__)\n+//! Internal helper to get log source object from macro argument, if argument is\n+//! BCLog::Source object or a category constant that BCLog::Source can be\n+//! constructed from.\n+static inline const BCLog::Source& _LogSource(const BCLog::Source& source LIFETIMEBOUND) { return source; }",
      "path": "src/logging.h",
      "position": 1,
      "original_position": 101,
      "commit_id": "093d58e055b10a1031c97b24de5e029221f176d7",
      "original_commit_id": "5db1958e60aef9d3604448c21e1f397e561480ee",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Maybe best to avoid introducing identifiers starting with underscore, especially if followed by uppercase?\r\n\r\nhttps://stackoverflow.com/a/228848",
      "created_at": "2024-12-13T23:33:44Z",
      "updated_at": "2024-12-14T22:11:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#discussion_r1884649628",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1884649628"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29256"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 283,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1884651483",
      "pull_request_review_id": 2503381924,
      "id": 1884651483,
      "node_id": "PRRC_kwDOABII585wVX_b",
      "diff_hunk": "@@ -238,46 +277,86 @@ static inline bool LogAcceptCategory(BCLog::LogFlags category, BCLog::Level leve\n /** Return true if str parses as a log category and set the flag */\n bool GetLogCategory(BCLog::LogFlags& flag, std::string_view str);\n \n-template <typename... Args>\n-inline void LogPrintFormatInternal(std::string_view logging_function, std::string_view source_file, const int source_line, const BCLog::LogFlags flag, const BCLog::Level level, util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n-{\n-    if (LogInstance().Enabled()) {\n-        std::string log_msg;\n-        try {\n-            log_msg = tfm::format(fmt, args...);\n-        } catch (tinyformat::format_error& fmterr) {\n-            log_msg = \"Error \\\"\" + std::string{fmterr.what()} + \"\\\" while formatting log message: \" + fmt.fmt;\n-        }\n-        LogInstance().LogPrintStr(log_msg, logging_function, source_file, source_line, flag, level);\n-    }\n-}\n-\n-#define LogPrintLevel_(category, level, ...) LogPrintFormatInternal(__func__, __FILE__, __LINE__, category, level, __VA_ARGS__)\n-\n-// Log unconditionally.\n-// Be conservative when using functions that unconditionally log to debug.log!\n-// It should not be the case that an inbound peer can fill up a user's storage\n-// with debug.log entries.\n-#define LogInfo(...) LogPrintLevel_(BCLog::LogFlags::ALL, BCLog::Level::Info, __VA_ARGS__)\n-#define LogWarning(...) LogPrintLevel_(BCLog::LogFlags::ALL, BCLog::Level::Warning, __VA_ARGS__)\n-#define LogError(...) LogPrintLevel_(BCLog::LogFlags::ALL, BCLog::Level::Error, __VA_ARGS__)\n+//! Internal helper to get log source object from macro argument, if argument is\n+//! BCLog::Source object or a category constant that BCLog::Source can be\n+//! constructed from.\n+static inline const BCLog::Source& _LogSource(const BCLog::Source& source LIFETIMEBOUND) { return source; }\n \n-// Deprecated unconditional logging.\n-#define LogPrintf(...) LogInfo(__VA_ARGS__)\n+//! Internal helper to get log source object from macro argument, if argument is\n+//! just a format string and no source or category was provided.\n+static inline BCLog::Source _LogSource(std::string_view fmt) { return {}; }\n \n-// Use a macro instead of a function for conditional logging to prevent\n-// evaluating arguments when logging for the category is not enabled.\n+//! Internal helper to format log arguments and call a logging function.\n+template <typename LogFn, typename Source, typename SourceArg, typename... Args>\n+requires (!std::is_convertible_v<SourceArg, std::string_view>)\n+void _LogFormat(LogFn&& log, Source&& source, SourceArg&&, util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n+{\n+    log(source, source.Format(fmt, args...));\n+}\n+template <typename LogFn, typename Source, typename... Args>\n+void _LogFormat(LogFn&& log, Source&& source, util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n+{\n+    log(source, source.Format(fmt, args...));\n+}\n \n-// Log conditionally, prefixing the output with the passed category name and severity level.\n-#define LogPrintLevel(category, level, ...)               \\\n-    do {                                                  \\\n-        if (LogAcceptCategory((category), (level))) {     \\\n-            LogPrintLevel_(category, level, __VA_ARGS__); \\\n-        }                                                 \\\n+//! Internal helper to return first arg in a __VA_ARGS__ pack. This could be\n+//! simplified to `#define _FirstArg(arg, ...) arg` if not for a preprocessor\n+//! bug in Visual C++.\n+#define _FirstArgImpl(arg, ...) arg\n+#define _FirstArg(args) _FirstArgImpl args\n+\n+//! Internal helper to check level and log. Avoids evaluating arguments if not logging.\n+#define _LogPrint(level, ...)                                             \\\n+    do {                                                                  \\\n+        if (LogEnabled(_LogSource(_FirstArg((__VA_ARGS__))), (level))) {  \\\n+            const auto& func = __func__;                                  \\\n+            _LogFormat([&](auto&& source, auto&& message) {               \\\n+                source.logger.LogPrintStr(message, func, __FILE__,        \\\n+                    __LINE__, source.category, (level));                  \\\n+            }, _LogSource(_FirstArg((__VA_ARGS__))), __VA_ARGS__);        \\\n+        }                                                                 \\",
      "path": "src/logging.h",
      "position": 1,
      "original_position": 145,
      "commit_id": "093d58e055b10a1031c97b24de5e029221f176d7",
      "original_commit_id": "5db1958e60aef9d3604448c21e1f397e561480ee",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Could potentially avoid repeated `Source` construction:\r\n```suggestion\r\n        auto log_source = _LogSource(_FirstArg((__VA_ARGS__)));           \\\r\n        if (LogEnabled(log_source, (level))) {                            \\\r\n            const auto& func = __func__;                                  \\\r\n            _LogFormat([&](auto&& source, auto&& message) {               \\\r\n                source.logger.LogPrintStr(message, func, __FILE__,        \\\r\n                    __LINE__, source.category, (level));                  \\\r\n            }, log_source, __VA_ARGS__);                                  \\\r\n        }                                                                 \\\r\n```",
      "created_at": "2024-12-13T23:37:12Z",
      "updated_at": "2024-12-14T22:11:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#discussion_r1884651483",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1884651483"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29256"
        }
      },
      "start_line": null,
      "original_start_line": 311,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 317,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1885379919",
      "pull_request_review_id": 2503381924,
      "id": 1885379919,
      "node_id": "PRRC_kwDOABII585wYJ1P",
      "diff_hunk": "",
      "path": "doc/developer-notes.md",
      "position": 1,
      "original_position": 1,
      "commit_id": "5f64eab013a58967af37a59c863c2ab6d45ba6e8",
      "original_commit_id": "5f64eab013a58967af37a59c863c2ab6d45ba6e8",
      "in_reply_to_id": 1655528095,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "If we were to go ahead with something close to what this PR is, I think it would be good to mention in *developer-notes.md* that `LogInfo`/`Warning`/`Error` take an optional category or source. - Or at the very least hint at there being more flexibility which is documented together with the macro implementations.",
      "created_at": "2024-12-14T20:29:30Z",
      "updated_at": "2024-12-14T22:11:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#discussion_r1885379919",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1885379919"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29256"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2027473459",
      "pull_request_review_id": 2740681914,
      "id": 2027473459,
      "node_id": "PRRC_kwDOABII58542Moz",
      "diff_hunk": "@@ -238,46 +277,86 @@ static inline bool LogAcceptCategory(BCLog::LogFlags category, BCLog::Level leve\n /** Return true if str parses as a log category and set the flag */\n bool GetLogCategory(BCLog::LogFlags& flag, std::string_view str);\n \n-template <typename... Args>\n-inline void LogPrintFormatInternal(std::string_view logging_function, std::string_view source_file, const int source_line, const BCLog::LogFlags flag, const BCLog::Level level, util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n-{\n-    if (LogInstance().Enabled()) {\n-        std::string log_msg;\n-        try {\n-            log_msg = tfm::format(fmt, args...);\n-        } catch (tinyformat::format_error& fmterr) {\n-            log_msg = \"Error \\\"\" + std::string{fmterr.what()} + \"\\\" while formatting log message: \" + fmt.fmt;\n-        }\n-        LogInstance().LogPrintStr(log_msg, logging_function, source_file, source_line, flag, level);\n-    }\n-}\n-\n-#define LogPrintLevel_(category, level, ...) LogPrintFormatInternal(__func__, __FILE__, __LINE__, category, level, __VA_ARGS__)\n-\n-// Log unconditionally.\n-// Be conservative when using functions that unconditionally log to debug.log!\n-// It should not be the case that an inbound peer can fill up a user's storage\n-// with debug.log entries.\n-#define LogInfo(...) LogPrintLevel_(BCLog::LogFlags::ALL, BCLog::Level::Info, __VA_ARGS__)\n-#define LogWarning(...) LogPrintLevel_(BCLog::LogFlags::ALL, BCLog::Level::Warning, __VA_ARGS__)\n-#define LogError(...) LogPrintLevel_(BCLog::LogFlags::ALL, BCLog::Level::Error, __VA_ARGS__)\n+//! Internal helper to get log source object from macro argument, if argument is\n+//! BCLog::Source object or a category constant that BCLog::Source can be\n+//! constructed from.\n+static inline const BCLog::Source& _LogSource(const BCLog::Source& source LIFETIMEBOUND) { return source; }\n \n-// Deprecated unconditional logging.\n-#define LogPrintf(...) LogInfo(__VA_ARGS__)\n+//! Internal helper to get log source object from macro argument, if argument is\n+//! just a format string and no source or category was provided.\n+static inline BCLog::Source _LogSource(std::string_view fmt) { return {}; }\n \n-// Use a macro instead of a function for conditional logging to prevent\n-// evaluating arguments when logging for the category is not enabled.\n+//! Internal helper to format log arguments and call a logging function.\n+template <typename LogFn, typename Source, typename SourceArg, typename... Args>\n+requires (!std::is_convertible_v<SourceArg, std::string_view>)\n+void _LogFormat(LogFn&& log, Source&& source, SourceArg&&, util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n+{\n+    log(source, source.Format(fmt, args...));\n+}\n+template <typename LogFn, typename Source, typename... Args>\n+void _LogFormat(LogFn&& log, Source&& source, util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n+{\n+    log(source, source.Format(fmt, args...));\n+}\n \n-// Log conditionally, prefixing the output with the passed category name and severity level.\n-#define LogPrintLevel(category, level, ...)               \\\n-    do {                                                  \\\n-        if (LogAcceptCategory((category), (level))) {     \\\n-            LogPrintLevel_(category, level, __VA_ARGS__); \\\n-        }                                                 \\\n+//! Internal helper to return first arg in a __VA_ARGS__ pack. This could be\n+//! simplified to `#define _FirstArg(arg, ...) arg` if not for a preprocessor\n+//! bug in Visual C++.\n+#define _FirstArgImpl(arg, ...) arg\n+#define _FirstArg(args) _FirstArgImpl args",
      "path": "src/logging.h",
      "position": 1,
      "original_position": 134,
      "commit_id": "093d58e055b10a1031c97b24de5e029221f176d7",
      "original_commit_id": "5db1958e60aef9d3604448c21e1f397e561480ee",
      "in_reply_to_id": 1884641997,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29256#discussion_r1884641997\r\n\r\n> This looks less weird, would it be equivalent in this case or defeat the purpose?\r\n\r\nYeah, that doesn't really work here because `args` contains multiple arguments already enclosed in parentheses, so adding extra parentheses prevents them from being separated.",
      "created_at": "2025-04-03T17:39:45Z",
      "updated_at": "2025-04-03T17:53:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#discussion_r2027473459",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2027473459"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29256"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 306,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2027474721",
      "pull_request_review_id": 2740681914,
      "id": 2027474721,
      "node_id": "PRRC_kwDOABII58542M8h",
      "diff_hunk": "@@ -238,46 +277,86 @@ static inline bool LogAcceptCategory(BCLog::LogFlags category, BCLog::Level leve\n /** Return true if str parses as a log category and set the flag */\n bool GetLogCategory(BCLog::LogFlags& flag, std::string_view str);\n \n-template <typename... Args>\n-inline void LogPrintFormatInternal(std::string_view logging_function, std::string_view source_file, const int source_line, const BCLog::LogFlags flag, const BCLog::Level level, util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n-{\n-    if (LogInstance().Enabled()) {\n-        std::string log_msg;\n-        try {\n-            log_msg = tfm::format(fmt, args...);\n-        } catch (tinyformat::format_error& fmterr) {\n-            log_msg = \"Error \\\"\" + std::string{fmterr.what()} + \"\\\" while formatting log message: \" + fmt.fmt;\n-        }\n-        LogInstance().LogPrintStr(log_msg, logging_function, source_file, source_line, flag, level);\n-    }\n-}\n-\n-#define LogPrintLevel_(category, level, ...) LogPrintFormatInternal(__func__, __FILE__, __LINE__, category, level, __VA_ARGS__)\n-\n-// Log unconditionally.\n-// Be conservative when using functions that unconditionally log to debug.log!\n-// It should not be the case that an inbound peer can fill up a user's storage\n-// with debug.log entries.\n-#define LogInfo(...) LogPrintLevel_(BCLog::LogFlags::ALL, BCLog::Level::Info, __VA_ARGS__)\n-#define LogWarning(...) LogPrintLevel_(BCLog::LogFlags::ALL, BCLog::Level::Warning, __VA_ARGS__)\n-#define LogError(...) LogPrintLevel_(BCLog::LogFlags::ALL, BCLog::Level::Error, __VA_ARGS__)\n+//! Internal helper to get log source object from macro argument, if argument is\n+//! BCLog::Source object or a category constant that BCLog::Source can be\n+//! constructed from.\n+static inline const BCLog::Source& _LogSource(const BCLog::Source& source LIFETIMEBOUND) { return source; }",
      "path": "src/logging.h",
      "position": 1,
      "original_position": 101,
      "commit_id": "093d58e055b10a1031c97b24de5e029221f176d7",
      "original_commit_id": "5db1958e60aef9d3604448c21e1f397e561480ee",
      "in_reply_to_id": 1884649628,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29256#discussion_r1884649628\r\n\r\n> Maybe best to avoid introducing identifiers starting with underscore, especially if followed by uppercase?\r\n> \r\n> https://stackoverflow.com/a/228848\r\n\r\nThanks, I had no idea those were reserved. Switched to a `detail` namespace for the functions and trailing underscore for the macros.",
      "created_at": "2025-04-03T17:40:42Z",
      "updated_at": "2025-04-03T17:53:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#discussion_r2027474721",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2027474721"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29256"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 283,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2027475859",
      "pull_request_review_id": 2740681914,
      "id": 2027475859,
      "node_id": "PRRC_kwDOABII58542NOT",
      "diff_hunk": "@@ -238,46 +277,86 @@ static inline bool LogAcceptCategory(BCLog::LogFlags category, BCLog::Level leve\n /** Return true if str parses as a log category and set the flag */\n bool GetLogCategory(BCLog::LogFlags& flag, std::string_view str);\n \n-template <typename... Args>\n-inline void LogPrintFormatInternal(std::string_view logging_function, std::string_view source_file, const int source_line, const BCLog::LogFlags flag, const BCLog::Level level, util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n-{\n-    if (LogInstance().Enabled()) {\n-        std::string log_msg;\n-        try {\n-            log_msg = tfm::format(fmt, args...);\n-        } catch (tinyformat::format_error& fmterr) {\n-            log_msg = \"Error \\\"\" + std::string{fmterr.what()} + \"\\\" while formatting log message: \" + fmt.fmt;\n-        }\n-        LogInstance().LogPrintStr(log_msg, logging_function, source_file, source_line, flag, level);\n-    }\n-}\n-\n-#define LogPrintLevel_(category, level, ...) LogPrintFormatInternal(__func__, __FILE__, __LINE__, category, level, __VA_ARGS__)\n-\n-// Log unconditionally.\n-// Be conservative when using functions that unconditionally log to debug.log!\n-// It should not be the case that an inbound peer can fill up a user's storage\n-// with debug.log entries.\n-#define LogInfo(...) LogPrintLevel_(BCLog::LogFlags::ALL, BCLog::Level::Info, __VA_ARGS__)\n-#define LogWarning(...) LogPrintLevel_(BCLog::LogFlags::ALL, BCLog::Level::Warning, __VA_ARGS__)\n-#define LogError(...) LogPrintLevel_(BCLog::LogFlags::ALL, BCLog::Level::Error, __VA_ARGS__)\n+//! Internal helper to get log source object from macro argument, if argument is\n+//! BCLog::Source object or a category constant that BCLog::Source can be\n+//! constructed from.\n+static inline const BCLog::Source& _LogSource(const BCLog::Source& source LIFETIMEBOUND) { return source; }\n \n-// Deprecated unconditional logging.\n-#define LogPrintf(...) LogInfo(__VA_ARGS__)\n+//! Internal helper to get log source object from macro argument, if argument is\n+//! just a format string and no source or category was provided.\n+static inline BCLog::Source _LogSource(std::string_view fmt) { return {}; }\n \n-// Use a macro instead of a function for conditional logging to prevent\n-// evaluating arguments when logging for the category is not enabled.\n+//! Internal helper to format log arguments and call a logging function.\n+template <typename LogFn, typename Source, typename SourceArg, typename... Args>\n+requires (!std::is_convertible_v<SourceArg, std::string_view>)\n+void _LogFormat(LogFn&& log, Source&& source, SourceArg&&, util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n+{\n+    log(source, source.Format(fmt, args...));\n+}\n+template <typename LogFn, typename Source, typename... Args>\n+void _LogFormat(LogFn&& log, Source&& source, util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n+{\n+    log(source, source.Format(fmt, args...));\n+}\n \n-// Log conditionally, prefixing the output with the passed category name and severity level.\n-#define LogPrintLevel(category, level, ...)               \\\n-    do {                                                  \\\n-        if (LogAcceptCategory((category), (level))) {     \\\n-            LogPrintLevel_(category, level, __VA_ARGS__); \\\n-        }                                                 \\\n+//! Internal helper to return first arg in a __VA_ARGS__ pack. This could be\n+//! simplified to `#define _FirstArg(arg, ...) arg` if not for a preprocessor\n+//! bug in Visual C++.\n+#define _FirstArgImpl(arg, ...) arg\n+#define _FirstArg(args) _FirstArgImpl args\n+\n+//! Internal helper to check level and log. Avoids evaluating arguments if not logging.\n+#define _LogPrint(level, ...)                                             \\\n+    do {                                                                  \\\n+        if (LogEnabled(_LogSource(_FirstArg((__VA_ARGS__))), (level))) {  \\\n+            const auto& func = __func__;                                  \\\n+            _LogFormat([&](auto&& source, auto&& message) {               \\\n+                source.logger.LogPrintStr(message, func, __FILE__,        \\\n+                    __LINE__, source.category, (level));                  \\\n+            }, _LogSource(_FirstArg((__VA_ARGS__))), __VA_ARGS__);        \\\n+        }                                                                 \\",
      "path": "src/logging.h",
      "position": 1,
      "original_position": 145,
      "commit_id": "093d58e055b10a1031c97b24de5e029221f176d7",
      "original_commit_id": "5db1958e60aef9d3604448c21e1f397e561480ee",
      "in_reply_to_id": 1884651483,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29256#discussion_r1884651483\r\n\r\n> nit: Could potentially avoid repeated `Source` construction:\r\n\r\nThanks that is cleaner. Switched to this approach.",
      "created_at": "2025-04-03T17:41:11Z",
      "updated_at": "2025-04-03T17:53:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#discussion_r2027475859",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2027475859"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29256"
        }
      },
      "start_line": null,
      "original_start_line": 311,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 317,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2040646228",
      "pull_request_review_id": 2762150883,
      "id": 2040646228,
      "node_id": "PRRC_kwDOABII5855ocpU",
      "diff_hunk": "@@ -76,6 +76,113 @@ struct LogSetup : public BasicTestingSetup {\n     }\n };\n \n+//! Test logging to local logger.\n+BOOST_AUTO_TEST_CASE(logging_local_logger)\n+{\n+    BCLog::Logger logger;\n+    logger.m_log_timestamps = false;\n+    logger.EnableCategory(BCLog::LogFlags::ALL);\n+    logger.SetLogLevel(BCLog::Level::Trace);\n+    logger.StartLogging();\n+\n+    std::vector<std::string> messages;\n+    logger.PushBackCallback([&](const std::string& s) { messages.push_back(s); });\n+\n+    BCLog::Context log{logger, BCLog::NET};\n+    LogError(log, \"error %s\\n\", \"arg\");\n+    LogWarning(log, \"warning %s\\n\", \"arg\");\n+    LogInfo(log, \"info %s\\n\", \"arg\");\n+    LogDebug(log, \"debug %s\\n\", \"arg\");\n+    LogTrace(log, \"trace %s\\n\", \"arg\");\n+\n+    constexpr auto expected{std::to_array({\n+        \"[net:error] error arg\\n\",\n+        \"[net:warning] warning arg\\n\",\n+        \"[net:info] info arg\\n\",",
      "path": "src/test/logging_tests.cpp",
      "position": 1,
      "original_position": 26,
      "commit_id": "093d58e055b10a1031c97b24de5e029221f176d7",
      "original_commit_id": "093d58e055b10a1031c97b24de5e029221f176d7",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "1) This still goes against the intent of #28318 in my opinion, by adding categories to output of `LogError`/`LogWarning`/`LogInfo` when used with context.\r\n\r\n2) This also changes behavior insofar as adding `[.*info] `-prefixes for LogInfo(), which were intentionally avoided in #28318:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/e60fc7d5d34f23cccbff6e4f5f3d716fa8dad50c/src/test/logging_tests.cpp#L139-L149\r\n\r\nSee other comment about suggested change to `LogPrint_()` to address both above points.\r\n\r\n---\r\n\r\n3) Especially `LogInfo()` without any prefix would feel less \"naked\" if you were to import the test with `CustomLogContext` from fea5da15eef4479729aa27868277a720fdfe36e8 (#30343) into this PR to demonstrate usage. Doing so would also give a greater sense of completeness here IMO.",
      "created_at": "2025-04-12T12:22:02Z",
      "updated_at": "2025-04-12T22:08:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#discussion_r2040646228",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2040646228"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29256"
        }
      },
      "start_line": null,
      "original_start_line": 99,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 101,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2040646297",
      "pull_request_review_id": 2762150883,
      "id": 2040646297,
      "node_id": "PRRC_kwDOABII5855ocqZ",
      "diff_hunk": "@@ -76,6 +76,113 @@ struct LogSetup : public BasicTestingSetup {\n     }\n };\n \n+//! Test logging to local logger.\n+BOOST_AUTO_TEST_CASE(logging_local_logger)\n+{\n+    BCLog::Logger logger;\n+    logger.m_log_timestamps = false;\n+    logger.EnableCategory(BCLog::LogFlags::ALL);\n+    logger.SetLogLevel(BCLog::Level::Trace);\n+    logger.StartLogging();\n+\n+    std::vector<std::string> messages;\n+    logger.PushBackCallback([&](const std::string& s) { messages.push_back(s); });\n+\n+    BCLog::Context log{logger, BCLog::NET};\n+    LogError(log, \"error %s\\n\", \"arg\");",
      "path": "src/test/logging_tests.cpp",
      "position": 1,
      "original_position": 17,
      "commit_id": "093d58e055b10a1031c97b24de5e029221f176d7",
      "original_commit_id": "093d58e055b10a1031c97b24de5e029221f176d7",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Superfluous newlines here and in the other new test case below:\r\n```suggestion\r\n    LogError(log, \"error %s\", \"arg\");\r\n```",
      "created_at": "2025-04-12T12:22:31Z",
      "updated_at": "2025-04-12T22:08:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#discussion_r2040646297",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2040646297"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29256"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 92,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2040671181",
      "pull_request_review_id": 2762150883,
      "id": 2040671181,
      "node_id": "PRRC_kwDOABII5855oivN",
      "diff_hunk": "@@ -225,59 +237,150 @@ namespace BCLog {\n         bool DefaultShrinkDebugFile() const;\n     };\n \n-} // namespace BCLog\n+    //! Object representing a particular source of log messages. Holds a logging\n+    //! category, a reference to the logger object to output to, and a\n+    //! formatting hook.\n+    struct Context {\n+        Logger& logger;\n+        LogFlags category;\n \n-BCLog::Logger& LogInstance();\n+        explicit Context(Logger& logger, LogFlags category = LogFlags::ALL) : logger{logger}, category{category} {}\n \n-/** Return true if log accepts specified category, at the specified level. */\n-static inline bool LogAcceptCategory(BCLog::LogFlags category, BCLog::Level level)\n+        template <typename... Args>\n+        std::string Format(util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args) const\n+        {\n+            std::string log_msg;\n+            try {\n+                log_msg = tfm::format(fmt, args...);\n+            } catch (tinyformat::format_error& fmterr) {\n+                log_msg = \"Error \\\"\" + std::string{fmterr.what()} + \"\\\" while formatting log message: \" + fmt.fmt;\n+            }\n+            return log_msg;\n+        }\n+    };\n+\n+namespace detail {\n+//! Internal helper to get log context object from the first macro argument.\n+template <bool take_category>\n+static const Context& GetContext(const Context& ctx LIFETIMEBOUND) { return ctx; }\n+\n+template <bool take_category>\n+static Context GetContext(LogFlags category)\n {\n-    return LogInstance().WillLogCategoryLevel(category, level);\n+    //! Trigger a compile error if a caller tries to pass a category constant as\n+    //! a source argument to a logging macro that specifies take_category ==\n+    //! false. There is no technical reason why all logging macros cannot accept\n+    //! category arguments, but for various reasons, such as (1) not wanting to\n+    //! allow users filter by category at high priority levels, and (2) wanting\n+    //! to incentivize developers to use lower log levels to avoid log spam,\n+    //! passing category constants at higher levels is forbidden.\n+    static_assert(take_category, \"Cannot pass BCLog::LogFlags category argument to high level Info/Warning/Error logging macros. Please use lower level Debug/Trace macro, or drop the category argument!\");\n+    return Context{LogInstance(), category};\n }\n \n-/** Return true if str parses as a log category and set the flag */\n-bool GetLogCategory(BCLog::LogFlags& flag, std::string_view str);\n+template <bool take_category>\n+static Context GetContext(std::string_view fmt)\n+{\n+    //! Trigger a compile error if a caller forgets to pass a category constant\n+    //! as a source argument to a logging macro that specifies take_category ==\n+    //! true. There is no technical reason why all logging macros could not\n+    //! allow the category argument to be optional, but low priority level\n+    //! macros should specify category in order to only be visible when the\n+    //! selected category is enabled. This helps reduce log spam.\n+    static_assert(!take_category, \"Must pass category to Debug/Trace logging macros.\");\n+    return Context{LogInstance()};\n+}\n \n-template <typename... Args>\n-inline void LogPrintFormatInternal(std::string_view logging_function, std::string_view source_file, const int source_line, const BCLog::LogFlags flag, const BCLog::Level level, util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n+//! Internal helper to format log arguments and call a logging function.\n+template <typename LogFn, typename Context, typename ContextArg, typename... Args>\n+requires (!std::is_convertible_v<ContextArg, std::string_view>)\n+void Format(LogFn&& log, Context&& ctx, ContextArg&&, util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n {\n-    if (LogInstance().Enabled()) {\n-        std::string log_msg;\n-        try {\n-            log_msg = tfm::format(fmt, args...);\n-        } catch (tinyformat::format_error& fmterr) {\n-            log_msg = \"Error \\\"\" + std::string{fmterr.what()} + \"\\\" while formatting log message: \" + fmt.fmt;\n-        }\n-        LogInstance().LogPrintStr(log_msg, logging_function, source_file, source_line, flag, level);\n-    }\n+    log(ctx.Format(fmt, args...));\n+}\n+template <typename LogFn, typename Context, typename... Args>\n+void Format(LogFn&& log, Context&& ctx, util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n+{\n+    log(ctx.Format(fmt, args...));\n }\n+} // namespace detail\n+} // namespace BCLog\n \n-#define LogPrintLevel_(category, level, ...) LogPrintFormatInternal(__func__, __FILE__, __LINE__, category, level, __VA_ARGS__)\n+//! Determine whether logging is enabled in a context at the specified level.\n+template <typename Context>\n+static inline bool LogEnabled(const Context& ctx, BCLog::Level level)\n+{\n+    return ctx.logger.WillLogCategoryLevel(ctx.category, level) && ctx.logger.Enabled();\n+}\n \n-// Log unconditionally.\n-// Be conservative when using functions that unconditionally log to debug.log!\n-// It should not be the case that an inbound peer can fill up a user's storage\n-// with debug.log entries.\n-#define LogInfo(...) LogPrintLevel_(BCLog::LogFlags::ALL, BCLog::Level::Info, __VA_ARGS__)\n-#define LogWarning(...) LogPrintLevel_(BCLog::LogFlags::ALL, BCLog::Level::Warning, __VA_ARGS__)\n-#define LogError(...) LogPrintLevel_(BCLog::LogFlags::ALL, BCLog::Level::Error, __VA_ARGS__)\n+/** Return true if log accepts specified category, at the specified level. */\n+static inline bool LogAcceptCategory(BCLog::LogFlags category, BCLog::Level level)\n+{\n+    return LogInstance().WillLogCategoryLevel(category, level);\n+}\n \n-// Deprecated unconditional logging.\n-#define LogPrintf(...) LogInfo(__VA_ARGS__)\n+/** Return true if str parses as a log category and set the flag */\n+bool GetLogCategory(BCLog::LogFlags& flag, std::string_view str);\n \n-// Use a macro instead of a function for conditional logging to prevent\n-// evaluating arguments when logging for the category is not enabled.\n \n-// Log conditionally, prefixing the output with the passed category name and severity level.\n-#define LogPrintLevel(category, level, ...)               \\\n-    do {                                                  \\\n-        if (LogAcceptCategory((category), (level))) {     \\\n-            LogPrintLevel_(category, level, __VA_ARGS__); \\\n-        }                                                 \\\n+//! Internal helper to return first arg in a __VA_ARGS__ pack. This could be\n+//! simplified to `#define FirstArg_(arg, ...) arg` if not for a preprocessor\n+//! bug in Visual C++.\n+#define FirstArg_Impl(arg, ...) arg\n+#define FirstArg_(args) FirstArg_Impl args\n+\n+//! Internal helper to conditionally log. Only evaluates arguments when needed.\n+#define LogPrint_(level, take_category, ...)                                   \\\n+    do {                                                                       \\\n+        const auto& ctx{BCLog::detail::GetContext<take_category>(FirstArg_((__VA_ARGS__)))}; \\\n+        if (LogEnabled(ctx, (level))) {                                        \\\n+            const auto& func = __func__;                                       \\\n+            BCLog::detail::Format([&](auto&& message) {                        \\\n+                ctx.logger.LogPrintStr(message, func, __FILE__, __LINE__,      \\\n+                    ctx.category, (level));                                    \\",
      "path": "src/logging.h",
      "position": 1,
      "original_position": 173,
      "commit_id": "093d58e055b10a1031c97b24de5e029221f176d7",
      "original_commit_id": "093d58e055b10a1031c97b24de5e029221f176d7",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`LogPrint_()` - Highly suggest one remaining change to maintain output behavior for `LogError`/`LogWarning`/`LogInfo` when used with context:\r\n```suggestion\r\n                    take_category ? ctx.category : BCLog::LogFlags::ALL,       \\\r\n                    (level));                                                  \\\r\n```\r\nOne can still use the escape hatch of `LogPrintLevel()` or `LogPrintStr()` if one wants things like `[net:info] `-prefixes.\r\n\r\nLooking back, this is a reinvention of that part of my change in cebc9e2a22892abf70f16f08a0cbfb12a98291b5 from https://github.com/bitcoin/bitcoin/pull/29256#pullrequestreview-2503381924. Curious to at least hear your thoughts. Not a definite blocker as context-support is after all something new.",
      "created_at": "2025-04-12T14:49:31Z",
      "updated_at": "2025-04-12T22:08:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29256#discussion_r2040671181",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2040671181"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29256"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 340,
      "side": "RIGHT"
    }
  ]
}