{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531",
    "id": 1529587038,
    "node_id": "PR_kwDOABII585bK6Ve",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/28531",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/28531.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/28531.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28531",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28531/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/b36b234197f189db7241b2062b37c0e93cfc4e73",
    "number": 28531,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "improve MallocUsage() accuracy",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "The `MallocUsage()` function takes an allocation size as an argument and returns the amount of physical memory consumed, which is greater due to memory allocator overhead and alignment. It was first added in 2015 (first commit of #6102), but its accuracy has degraded as memory allocation libraries have evolved. It's used when it's important that large data structures, such as the coins cache and mempool, should use a predictable, configurable (limited) amount of physical memory (see the `-dbcache` and `-maxmempool` configuration options), as well as a few other places.\r\n\r\nsipa figured out a concise, efficient [expression](https://github.com/bitcoin/bitcoin/pull/27748#discussion_r1215541260) that this function can use, and that's what's implemented here.\r\n\r\nAlso add a unit test, which is more helpful than usual in this case since platforms, operating systems, and libraries vary significantly in this area.",
    "labels": [
      {
        "id": 749416508,
        "node_id": "MDU6TGFiZWw3NDk0MTY1MDg=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Up%20for%20grabs",
        "name": "Up for grabs",
        "color": "99a810",
        "default": false
      },
      {
        "id": 955867938,
        "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
        "name": "Needs rebase",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2023-09-25T22:17:07Z",
    "updated_at": "2025-10-22T15:42:29Z",
    "closed_at": "2025-10-22T15:42:28Z",
    "mergeable": false,
    "mergeable_state": "dirty",
    "merged": false,
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "LarryRuane:2023-09-MallocUsage",
      "ref": "2023-09-MallocUsage",
      "sha": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 176543842,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNzY1NDM4NDI=",
        "name": "bitcoin",
        "full_name": "LarryRuane/bitcoin",
        "owner": {
          "login": "LarryRuane",
          "id": 8321330,
          "node_id": "MDQ6VXNlcjgzMjEzMzA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/LarryRuane",
          "html_url": "https://github.com/LarryRuane",
          "followers_url": "https://api.github.com/users/LarryRuane/followers",
          "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
          "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
          "repos_url": "https://api.github.com/users/LarryRuane/repos",
          "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/LarryRuane/bitcoin",
        "description": "Bitcore Bitcoin build with address indexes",
        "fork": true,
        "url": "https://api.github.com/repos/LarryRuane/bitcoin",
        "archive_url": "https://api.github.com/repos/LarryRuane/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/LarryRuane/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/LarryRuane/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/LarryRuane/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/LarryRuane/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/LarryRuane/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/LarryRuane/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/LarryRuane/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/LarryRuane/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/LarryRuane/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/LarryRuane/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/LarryRuane/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/LarryRuane/bitcoin/events",
        "forks_url": "https://api.github.com/repos/LarryRuane/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/LarryRuane/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/LarryRuane/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/LarryRuane/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/LarryRuane/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/LarryRuane/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/LarryRuane/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/LarryRuane/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/LarryRuane/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/LarryRuane/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/LarryRuane/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/LarryRuane/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/LarryRuane/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/LarryRuane/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/LarryRuane/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/LarryRuane/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:LarryRuane/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/LarryRuane/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/LarryRuane/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/LarryRuane/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/LarryRuane/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/LarryRuane/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/LarryRuane/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/LarryRuane/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/LarryRuane/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/LarryRuane/bitcoin/hooks",
        "svn_url": "https://github.com/LarryRuane/bitcoin",
        "homepage": "https://bitcore.io/bitcoin",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 277766,
        "default_branch": "0.12.1-bitcore",
        "open_issues_count": 8,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-10-02T17:06:17Z",
        "created_at": "2019-03-19T15:31:01Z",
        "updated_at": "2023-02-24T19:51:21Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "e2174378aa8a339c7be8b4e91311513ed520a16d",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 38066,
        "stargazers_count": 86341,
        "watchers_count": 86341,
        "size": 295104,
        "default_branch": "master",
        "open_issues_count": 752,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-10-22T10:50:05Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-10-22T13:41:44Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": true,
    "additions": 234,
    "deletions": 103,
    "changed_files": 5,
    "commits": 2,
    "review_comments": 54,
    "comments": 27
  },
  "events": [
    {
      "event": "mentioned",
      "id": 10467996958,
      "node_id": "MEE_lADOABII585x_FI8zwAAAAJv8PUe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10467996958",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-25T22:17:07Z"
    },
    {
      "event": "subscribed",
      "id": 10467996963,
      "node_id": "SE_lADOABII585x_FI8zwAAAAJv8PUj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10467996963",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-25T22:17:07Z"
    },
    {
      "event": "commented",
      "id": 1734540409,
      "node_id": "IC_kwDOABII585nYvx5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1734540409",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-25T22:17:09Z",
      "updated_at": "2025-07-23T07:14:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/28531.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#33021](https://github.com/bitcoin/bitcoin/pull/33021) (test: revive test verifying that `GetCoinsCacheSizeState` switches from OK→LARGE→CRITICAL by l0rinc)\n* [#32588](https://github.com/bitcoin/bitcoin/pull/32588) (util: Abort on failing CHECK_NONFATAL in debug builds by maflcko)\n* [#32279](https://github.com/bitcoin/bitcoin/pull/32279) ([IBD] prevector: store `P2WSH`/`P2TR`/`P2PK` scripts inline by l0rinc)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->\n### LLM Linter (✨ experimental)\n\nPossible typos and grammar issues:\n\n- larger that size -> larger than that size [“larger that size” should use “than” for comparison]\n- beyojnd -> beyond [typo in “beyo​j​nd”]\n\n<sup>drahtbot_id_4_m</sup>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#issuecomment-1734540409",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28531"
    },
    {
      "event": "commented",
      "id": 1734540676,
      "node_id": "IC_kwDOABII585nYv2E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1734540676",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-25T22:17:28Z",
      "updated_at": "2023-09-25T22:17:28Z",
      "author_association": "CONTRIBUTOR",
      "body": "The results of the old and new versions of this function should differ only slightly; it would be bad if the new one gave very different results, because node operators might find too much memory being consumed, or (not as bad) not enough. To manually test this, I ran `-reindex-chainstate` on Ubuntu, and watched memory usage by printing `/proc/pid/statm` and watching the `data` (6th) field. On master, the value settled to 315140 (units are 4k pages); with this PR it was 315606, which indicates that the new version produces slightly smaller results, but they're close.",
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#issuecomment-1734540676",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28531"
    },
    {
      "event": "labeled",
      "id": 10468347435,
      "node_id": "LE_lADOABII585x_FI8zwAAAAJv9k4r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10468347435",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-25T23:22:04Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unsubscribed",
      "id": 10471426866,
      "node_id": "UE_lADOABII585x_FI8zwAAAAJwJUsy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10471426866",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-26T07:51:15Z"
    },
    {
      "event": "commented",
      "id": 1737598930,
      "node_id": "IC_kwDOABII585nkafS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1737598930",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-27T15:11:34Z",
      "updated_at": "2023-09-27T15:11:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "Changing to draft because CI on a couple of the platforms failed the new test, so the physical memory calculation will need to be different on those platforms, I try to figure that out.",
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#issuecomment-1737598930",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28531"
    },
    {
      "event": "convert_to_draft",
      "id": 10488994764,
      "node_id": "CTDE_lADOABII585x_FI8zwAAAAJxMVvM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10488994764",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-27T15:11:56Z"
    },
    {
      "event": "commented",
      "id": 1818440265,
      "node_id": "IC_kwDOABII585sYzJJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1818440265",
      "actor": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-20T08:24:02Z",
      "updated_at": "2023-11-21T14:47:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "I can reproduce the same results with glibc 2.31 and 2.38, in 32bit and 64bit. I don't think it needs to be perfect on all platforms, I think your new calculation is fine.\r\n\r\nI played a bit with a reproducer, here is mine:  https://godbolt.org/z/s971sbnhG I refactored your `MallocUsage` formula a bit, but it's basically the same",
      "user": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#issuecomment-1818440265",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28531"
    },
    {
      "event": "commented",
      "id": 1970985970,
      "node_id": "IC_kwDOABII5851etvy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1970985970",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-29T11:58:43Z",
      "updated_at": "2024-02-29T11:58:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--2e250dc3d92b2c9115b66051148d6e47-->\n🤔 There hasn't been much activity lately and the CI seems to be failing.\n\nIf no one reviewed the current pull request by commit hash, a [rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes) can be considered. While the CI failure may be a false positive, the CI hasn't been running for some time, so there may be a real issue hiding as well. A rebase triggers the latest CI and makes sure that no silent merge conflicts have snuck in.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#issuecomment-1970985970",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28531"
    },
    {
      "event": "ready_for_review",
      "id": 11970936074,
      "node_id": "RFRE_lADOABII585x_FI8zwAAAALJhf0K",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11970936074",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-29T20:07:29Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11971122236,
      "node_id": "HRFPE_lADOABII585x_FI8zwAAAALJiNQ8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11971122236",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "04f3fbe308728d2fb18fad418603cab97f0b9f59",
      "commit_url": "https://api.github.com/repos/LarryRuane/bitcoin/commits/04f3fbe308728d2fb18fad418603cab97f0b9f59",
      "created_at": "2024-02-29T20:26:22Z"
    },
    {
      "event": "commented",
      "id": 1971902956,
      "node_id": "IC_kwDOABII5851iNns",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1971902956",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-29T20:28:06Z",
      "updated_at": "2024-02-29T20:28:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "Force-pushed to 04f3fbe308728d2fb18fad418603cab97f0b9f59 - rebase only. (CI is still expected to fail, I'm working on that now.)",
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#issuecomment-1971902956",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28531"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11985002873,
      "node_id": "HRFPE_lADOABII585x_FI8zwAAAALKXKF5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11985002873",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "cee653f8e96efcaa198fcbf6a3c9578d6d284501",
      "commit_url": "https://api.github.com/repos/LarryRuane/bitcoin/commits/cee653f8e96efcaa198fcbf6a3c9578d6d284501",
      "created_at": "2024-03-01T23:02:23Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11985122567,
      "node_id": "HRFPE_lADOABII585x_FI8zwAAAALKXnUH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11985122567",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "86b71ec8d8e3b2d2ab78edb945594bbbbdbb17da",
      "commit_url": "https://api.github.com/repos/LarryRuane/bitcoin/commits/86b71ec8d8e3b2d2ab78edb945594bbbbdbb17da",
      "created_at": "2024-03-01T23:22:55Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12125078274,
      "node_id": "HRFPE_lADOABII585x_FI8zwAAAALStgMC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12125078274",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e6d7f57c51fd90b8a10155169990b5bca9f2d3f8",
      "commit_url": "https://api.github.com/repos/LarryRuane/bitcoin/commits/e6d7f57c51fd90b8a10155169990b5bca9f2d3f8",
      "created_at": "2024-03-14T23:38:14Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12125267727,
      "node_id": "HRFPE_lADOABII585x_FI8zwAAAALSuOcP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12125267727",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6bfdad9a725bd92a19e4c080505110403072e985",
      "commit_url": "https://api.github.com/repos/LarryRuane/bitcoin/commits/6bfdad9a725bd92a19e4c080505110403072e985",
      "created_at": "2024-03-15T00:16:32Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12136930884,
      "node_id": "HRFPE_lADOABII585x_FI8zwAAAALTat5E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12136930884",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "58ebf90f6f05351f7445d5874317243110615e38",
      "commit_url": "https://api.github.com/repos/LarryRuane/bitcoin/commits/58ebf90f6f05351f7445d5874317243110615e38",
      "created_at": "2024-03-15T21:32:52Z"
    },
    {
      "event": "commented",
      "id": 2000589243,
      "node_id": "IC_kwDOABII5853PpG7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2000589243",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-15T22:34:47Z",
      "updated_at": "2024-03-15T22:34:47Z",
      "author_association": "CONTRIBUTOR",
      "body": "@martinus\r\nCan you think of why the macOS and Win64 are failing (I have only Ubuntu, which passes)? As an experiment, I changed the memory usage ratio needed to pass to the resource map being just less than `std_map`, but not even that passes (that is, the resource map uses more space). Both of those platforms fail the same way (you can see this in the CI results, this is Win64):\r\n```\r\nD:/a/bitcoin/bitcoin/src/test/pool_tests.cpp(183): error: in \"pool_tests/memusage_test\": \r\n  check memusage::DynamicUsage(resource_map) <= memusage::DynamicUsage(std_map) * 100 / 100 \r\n  has failed [466624 > 451088]\r\n```\r\nOn earlier runs, some other tests have failed, but I'm not sure if those are spurious failures.\r\n\r\nI'm not sure what to do now, any thoughts or suggestions are welcome!",
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#issuecomment-2000589243",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28531"
    },
    {
      "event": "mentioned",
      "id": 12137375124,
      "node_id": "MEE_lADOABII585x_FI8zwAAAALTcaWU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12137375124",
      "actor": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-15T22:34:48Z"
    },
    {
      "event": "subscribed",
      "id": 12137375133,
      "node_id": "SE_lADOABII585x_FI8zwAAAALTcaWd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12137375133",
      "actor": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-15T22:34:48Z"
    },
    {
      "event": "commented",
      "id": 2002088507,
      "node_id": "IC_kwDOABII5853VXI7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2002088507",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-16T18:57:08Z",
      "updated_at": "2024-03-17T02:06:32Z",
      "author_association": "MEMBER",
      "body": "@LarryRuane There is no reason to assume that the memory allocation overhead on those platforms, with substantially different C libraries, would match the formula we inferred on x86_64 and arm Linux.\n\nIf our goal is actually accurate memory usage calculations on all systems, we will need to derive a formula for each supported system separately.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#issuecomment-2002088507",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28531"
    },
    {
      "event": "mentioned",
      "id": 12140640559,
      "node_id": "MEE_lADOABII585x_FI8zwAAAALTo3kv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12140640559",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-16T18:57:10Z"
    },
    {
      "event": "subscribed",
      "id": 12140640564,
      "node_id": "SE_lADOABII585x_FI8zwAAAALTo3k0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12140640564",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-16T18:57:10Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12162541818,
      "node_id": "HRFPE_lADOABII585x_FI8zwAAAALU8aj6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12162541818",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e0fa518f971bca227c1870e8f8fcd7ecbf138a98",
      "commit_url": "https://api.github.com/repos/LarryRuane/bitcoin/commits/e0fa518f971bca227c1870e8f8fcd7ecbf138a98",
      "created_at": "2024-03-19T02:29:40Z"
    },
    {
      "event": "commented",
      "id": 2007777780,
      "node_id": "IC_kwDOABII5853rEH0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2007777780",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-19T17:40:18Z",
      "updated_at": "2024-03-22T20:38:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "@sipa - I don't think the test failures could be due to differences in memory allocation overhead across platforms. The actual memory allocation overhead isn't being tested at all. To do that would probably require a test that uses `/proc/meminfo` (which doesn't exist on all platforms) or similar.\r\n\r\nI don't mind giving up and closing this PR, but as @martinus said in an [earlier comment](https://github.com/bitcoin/bitcoin/pull/28531#issuecomment-1818440265), this calculation doesn't need to be perfect, just better.\r\n\r\nI think this test failure must be due to differences in `std::unordered_map` implementations. That container does various allocations for different reasons, and it must be that with this PR's change in memory usage calculation, the `std::unordered_map` on macOS and Win64 (at least) are doing more a kind of allocation that the new calculation thinks has higher overhead. Something like that.\r\n\r\n[UPDATE: the following discussion about `std::unordered_map::reserve()` is incorrect, calling `reserve()` doesn't prevent the bucket array from being reallocated multiple times _within the pool resource_ -- rather, it's reallocated using regular memory. Only allocations up to 128 bytes come from the pool allocator. (I'll probably remove these comments later.)\r\n\r\nI thought I had it figured out; I verified with the debugger that as the test adds the 10k entries to the two maps, it has to repeatedly grow the bucket array. The allocation sizes (in bytes) for the bucket array that I saw here on Ubuntu were: 104, 232, 472, 1026, 2056, 4328, 8872, 18856, 40696, 82184.... The tradeoff one makes when using the pool resource allocator is that memory allocations that are freed but then those same sizes not allocated again, those allocations are, in effect, leaked (until the resource is destroyed). The pool resource works great when freeing and allocating the same sizes (rounded up to the alignment, usually 8 bytes) repeatedly. This is, of course, the case for the individual map entries.\r\n\r\nSo the latest force-push simply calls `reserve()` initially on both maps (this is only really needed for the pool resource map). Debugging verifies that this does prevent the bucket array from being reallocated, here on Ubuntu. But it didn't fix the problem on at least macOS and Win64. Maybe those platforms' implementations of `std::unordered_map` ignore the `reserve()` hint?\r\n\r\nIt's difficult when CI fails on platforms that I don't have access to. Do others have a solution to that? Can I install macOS on Ubuntu or Windows 10 (I have both) as a VM? Maybe I can set up my Windows laptop to build and run the debugger, but that seems like a lot of work.",
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#issuecomment-2007777780",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28531"
    },
    {
      "event": "mentioned",
      "id": 12173282027,
      "node_id": "MEE_lADOABII585x_FI8zwAAAALVlYrr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12173282027",
      "actor": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-19T17:40:20Z"
    },
    {
      "event": "subscribed",
      "id": 12173282040,
      "node_id": "SE_lADOABII585x_FI8zwAAAALVlYr4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12173282040",
      "actor": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-19T17:40:20Z"
    },
    {
      "event": "mentioned",
      "id": 12173282062,
      "node_id": "MEE_lADOABII585x_FI8zwAAAALVlYsO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12173282062",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-19T17:40:20Z"
    },
    {
      "event": "subscribed",
      "id": 12173282083,
      "node_id": "SE_lADOABII585x_FI8zwAAAALVlYsj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12173282083",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-19T17:40:20Z"
    },
    {
      "event": "commented",
      "id": 2009121482,
      "node_id": "IC_kwDOABII5853wMLK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2009121482",
      "actor": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-20T09:32:38Z",
      "updated_at": "2024-03-20T09:37:25Z",
      "author_association": "CONTRIBUTOR",
      "body": "@LarryRuane The problem here is that the `DynamicUsage(const std::unordered_map<X, Y, Z>& m)` just estimates the memory usage by thinking that internally it uses a node with a single pointer (see `struct unordered_node : private X` in `memusage.h`). This estimation is probably not correct on all platforms, e.g. windows seems to use a double linked list, so this underestimates actual memory usage.\r\n\r\nThe inconcsistency now comes when using `DynamicUsage` with a pool resource. Here the actual real world memory usage is counted (because it uses a custom allocator, there's no need for estimating node size), and here the different implementations actually effect the result.\r\n\r\nSo, with your new MallocUsage the numbers are most likely more correct, but this seems to trigger the incorrect underestimation for `DynamicUsage(const std::unordered_map<X, Y, Z>& m)`",
      "user": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#issuecomment-2009121482",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28531"
    },
    {
      "event": "mentioned",
      "id": 12181919865,
      "node_id": "MEE_lADOABII585x_FI8zwAAAALWGVh5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12181919865",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-20T09:32:39Z"
    },
    {
      "event": "subscribed",
      "id": 12181919878,
      "node_id": "SE_lADOABII585x_FI8zwAAAALWGViG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12181919878",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-20T09:32:39Z"
    },
    {
      "event": "commented",
      "id": 2013147240,
      "node_id": "IC_kwDOABII5853_jBo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2013147240",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-21T17:37:44Z",
      "updated_at": "2024-03-21T17:37:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "@martinus - thanks, that makes perfect sense! I hadn't thought of the possibility of the nodes having two pointers instead of one (double instead of single linked list). Seems like a bad design, but anyway.\r\n\r\nI don't think there would be much benefit to fixing `DynamicUsage(const std::unordered_map<X, Y, Z>& m)` to account for this (make it dependent on platform), because this function is no longer important since we're using the pool resource. It's probably really used only in the test. So it's really just a test problem. I'll see what I can do to fix this.",
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#issuecomment-2013147240",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28531"
    },
    {
      "event": "mentioned",
      "id": 12204588675,
      "node_id": "MEE_lADOABII585x_FI8zwAAAALXcz6D",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12204588675",
      "actor": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-21T17:37:45Z"
    },
    {
      "event": "subscribed",
      "id": 12204588700,
      "node_id": "SE_lADOABII585x_FI8zwAAAALXcz6c",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12204588700",
      "actor": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-21T17:37:45Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12221063916,
      "node_id": "HRFPE_lADOABII585x_FI8zwAAAALYbqLs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12221063916",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "c6cba06199b2e1bfcb1df5372bbc40548cd1a9cf",
      "commit_url": "https://api.github.com/repos/LarryRuane/bitcoin/commits/c6cba06199b2e1bfcb1df5372bbc40548cd1a9cf",
      "created_at": "2024-03-22T21:10:14Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12386260242,
      "node_id": "HRFPE_lADOABII585x_FI8zwAAAALiR1US",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12386260242",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "eec71127333d44a169d0e29f17b4070556f9629a",
      "commit_url": "https://api.github.com/repos/LarryRuane/bitcoin/commits/eec71127333d44a169d0e29f17b4070556f9629a",
      "created_at": "2024-04-08T03:02:02Z"
    },
    {
      "event": "labeled",
      "id": 12437147193,
      "node_id": "LE_lADOABII585x_FI8zwAAAALlT845",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12437147193",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-11T14:08:18Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12698075342,
      "node_id": "HRFPE_lADOABII585x_FI8zwAAAAL03UDO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12698075342",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ee3683d4a1599602c376809b342dcf9720b254a7",
      "commit_url": "https://api.github.com/repos/LarryRuane/bitcoin/commits/ee3683d4a1599602c376809b342dcf9720b254a7",
      "created_at": "2024-05-03T15:38:37Z"
    },
    {
      "event": "unlabeled",
      "id": 12698828220,
      "node_id": "UNLE_lADOABII585x_FI8zwAAAAL06L28",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12698828220",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-03T16:54:21Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "convert_to_draft",
      "id": 12783036960,
      "node_id": "CTDE_lADOABII585x_FI8zwAAAAL57aog",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12783036960",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-13T08:02:29Z"
    },
    {
      "event": "commented",
      "id": 2106905968,
      "node_id": "IC_kwDOABII5859lNVw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2106905968",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-13T08:02:59Z",
      "updated_at": "2024-05-13T08:02:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "Turned into draft for now, due to failing CI. If this is no longer a WIP, you can move it out of draft.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#issuecomment-2106905968",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28531"
    },
    {
      "event": "ready_for_review",
      "id": 12886295859,
      "node_id": "RFRE_lADOABII585x_FI8zwAAAAMAFUUz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12886295859",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-21T22:57:25Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12886332283,
      "node_id": "HRFPE_lADOABII585x_FI8zwAAAAMAFdN7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12886332283",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "9bc440df2d5f00bac0e423a16eebc3efc1e55489",
      "commit_url": "https://api.github.com/repos/LarryRuane/bitcoin/commits/9bc440df2d5f00bac0e423a16eebc3efc1e55489",
      "created_at": "2024-05-21T23:03:47Z"
    },
    {
      "event": "labeled",
      "id": 12886626686,
      "node_id": "LE_lADOABII585x_FI8zwAAAAMAGlF-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12886626686",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-21T23:57:28Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12888250872,
      "node_id": "HRFPE_lADOABII585x_FI8zwAAAAMAMxn4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12888250872",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "aeac0f22f6b1c7e0abbfcdd8f56b971bea5f439a",
      "commit_url": "https://api.github.com/repos/LarryRuane/bitcoin/commits/aeac0f22f6b1c7e0abbfcdd8f56b971bea5f439a",
      "created_at": "2024-05-22T04:58:08Z"
    },
    {
      "event": "unlabeled",
      "id": 12888793065,
      "node_id": "UNLE_lADOABII585x_FI8zwAAAAMAO1_p",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12888793065",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-22T06:14:24Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 12889729520,
      "node_id": "UNLE_lADOABII585x_FI8zwAAAAMASanw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12889729520",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-22T07:23:13Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2125570369,
      "node_id": "IC_kwDOABII585-saFB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2125570369",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-22T19:12:35Z",
      "updated_at": "2024-05-22T19:12:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "**NOTE**, this PR isn't ready to merge; at the very least it has some debug prints that need to be removed.\r\n\r\nCI was failing on some platforms (Windows and macOS), in `test/functional/mempool_limit.py: test_mid_package_eviction()`. I think this test is fragile; this very-unrelated PR shouldn't be able to cause it to fail IMO. The problem turned out to be the following:\r\n\r\nThis test calls the test utility function `fill_mempool()`. This function creates independent physically-large (around 65kb) transactions at varying fee rates until the one with the lowest feerate is evicted due to the mempool becoming full. The functional tests run with `-maxmempool=5` (MB), so that requires about 72 transactions.\r\n\r\nAfter `fill_mempool()` returns, the mempool likely won't be _completely_ full, because these were large transactions, so there's some space left but not enough for another transaction. The test, `test_mid_package_eviction`, then submits a smaller transaction (weight around 8k) called `mempool_evicted_tx` with a fee just barely high enough to be accepted, and expects that transaction to be accepted. (It has this name, `mempool_evicted_tx`, because the test expects it to be evicted later.)\r\n\r\nWith this PR, that transaction was not accepted on Windows and macOS. Some debug prints show that on those platforms, when `fill_mempool()` returns, there are only 1200 bytes of free space in the mempool. This is because the `std::unordered_map` library implementations are different on these platforms, and this causes the memory usage calculation (for the entire map) to be slightly different in this PR. So it's really just bad luck. This is why I think the test is fragile.\r\n\r\nAfter trying a few fixes to the test that didn't work, what finally worked (the current branch) is, to have `fill_mempool()`, just before it returns, submit another transaction that _replaces_ (RBF) an existing one in the mempool, but is slightly smaller. This frees up about 10kb of additional space, which allows room for the 8k transaction to be reliably accepted. This doesn't break the other tests that call `fill_mempool()`.\r\n\r\nThis attempt didn't work the first time, however, because the mempools wouldn't reliably sync in `test/functional/p2p_1p1c_network.py`. This test starts 4 nodes, and calls `fill_mempool()` on node 0 then waits for all 4 mempools to become synced. Sometimes they do but other times this never happens. I wonder if there might be an unrelated bug (I can investigate later), but what often happens (it's timing dependent and thus random) is that the replacement tx (added by this PR) does appear on all nodes, but a low-feerate tx that was evicted on node 0 remains on nodes 1-3. I can explain what I'm seeing in more detail later if needed. What ended up fixing this is to [delay](https://github.com/bitcoin/bitcoin/pull/28531/files#diff-1a6267ad805cafba25aba03b9c6e3f8315b3f9eb9a938e7c64d4c2b8fac525f9R91) a few seconds before submitting the RBF transaction. It's ugly, maybe there's a better way, but syncing mempools is kind of non-deterministic anyway, so I don't think it's terribly bad.\r\n\r\n@glozow and @theStack, can you let me know your opinion? You two have worked a lot in this area.",
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#issuecomment-2125570369",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28531"
    },
    {
      "event": "mentioned",
      "id": 12899529701,
      "node_id": "MEE_lADOABII585x_FI8zwAAAAMA3zPl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12899529701",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-22T19:12:36Z"
    },
    {
      "event": "subscribed",
      "id": 12899529713,
      "node_id": "SE_lADOABII585x_FI8zwAAAAMA3zPx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12899529713",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-22T19:12:36Z"
    },
    {
      "event": "mentioned",
      "id": 12899529734,
      "node_id": "MEE_lADOABII585x_FI8zwAAAAMA3zQG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12899529734",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-22T19:12:36Z"
    },
    {
      "event": "subscribed",
      "id": 12899529746,
      "node_id": "SE_lADOABII585x_FI8zwAAAAMA3zQS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12899529746",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-22T19:12:36Z"
    },
    {
      "event": "commented",
      "id": 2125983180,
      "node_id": "IC_kwDOABII585-t-3M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2125983180",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-23T00:24:51Z",
      "updated_at": "2024-05-23T00:24:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "@LarryRuane: Interesting problem (and very creative solution with the RBF tx :)). Fwiw, on one of my machines running OpenBSD 7.5, the same behaviour as you described occurs on commit 663e5012d318a7e80a42385ac4e6f71dec46814e: after `fill_mempool`, mempool usage is very close to the max (`'usage': 4998768`), and the subtest `test_mid_package_eviction` fails on the first MiniWallet tx submission with a `\"mempool full\"` error.\r\n\r\nOne idea I had to solve this at the `fill_mempool` side is to submit an extra tx at the end of `fill_mempool` that is smaller (I chose half the size) than the filler txs. Given that this causes eviction, a large filler tx is removed, and the smaller-sized tx is getting in, freeing up some space (around ~32.5KB in terms of bytes). It's still very ugly, especially since this code is only ever executed for edge cases (note that we can't unconditionally submit the smaller tx, as this could cause the problem rather than solve it, if no eviction happens), but passes all the tests that use `fill_mempool` for me: https://github.com/theStack/bitcoin/commit/f758e73a943b8e45acac1ab8834305f7f0bfbf14\r\n\r\nHowever, is this even necessary to be solved in `fill_mempool`? Haven't looked closer at the failing test yet, but maybe it's just a bug in the fee calculation (or MiniWallet's treatment of `target_weight`).",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#issuecomment-2125983180",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28531"
    },
    {
      "event": "mentioned",
      "id": 12901906328,
      "node_id": "MEE_lADOABII585x_FI8zwAAAAMBA3eY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12901906328",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-23T00:24:52Z"
    },
    {
      "event": "subscribed",
      "id": 12901906336,
      "node_id": "SE_lADOABII585x_FI8zwAAAAMBA3eg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12901906336",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-23T00:24:53Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12915098501,
      "node_id": "HRFPE_lADOABII585x_FI8zwAAAAMBzMOF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12915098501",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f758e73a943b8e45acac1ab8834305f7f0bfbf14",
      "commit_url": "https://api.github.com/repos/LarryRuane/bitcoin/commits/f758e73a943b8e45acac1ab8834305f7f0bfbf14",
      "created_at": "2024-05-23T20:54:40Z"
    },
    {
      "event": "commented",
      "id": 2128007110,
      "node_id": "IC_kwDOABII585-1s_G",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2128007110",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-23T20:58:18Z",
      "updated_at": "2024-05-23T20:58:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "Your patch is much better, @theStack, thanks! It's simpler and doesn't need that weird `sleep`. Force-pushed your patch. If it passes CI, I think this is the way to go. I had tried something similar, but I didn't think to make the sending of that extra (smaller) transaction conditional based on available mempool space.",
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#issuecomment-2128007110",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28531"
    },
    {
      "event": "mentioned",
      "id": 12915131016,
      "node_id": "MEE_lADOABII585x_FI8zwAAAAMBzUKI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12915131016",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-23T20:58:19Z"
    },
    {
      "event": "subscribed",
      "id": 12915131038,
      "node_id": "SE_lADOABII585x_FI8zwAAAAMBzUKe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12915131038",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-23T20:58:19Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12928384748,
      "node_id": "HRFPE_lADOABII585x_FI8zwAAAAMCl37s",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12928384748",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1fcbebcae0e96bac7f09cf3a458a61552b5e489b",
      "commit_url": "https://api.github.com/repos/LarryRuane/bitcoin/commits/1fcbebcae0e96bac7f09cf3a458a61552b5e489b",
      "created_at": "2024-05-24T18:29:13Z"
    },
    {
      "event": "commented",
      "id": 2130140023,
      "node_id": "IC_kwDOABII585-91t3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2130140023",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-24T18:31:07Z",
      "updated_at": "2024-05-24T18:31:07Z",
      "author_association": "CONTRIBUTOR",
      "body": "CI passed, thanks @theStack. I just force-pushed swapping of the two commits, the test commit has to be first for each commit to pass CI.",
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#issuecomment-2130140023",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28531"
    },
    {
      "event": "mentioned",
      "id": 12928401487,
      "node_id": "MEE_lADOABII585x_FI8zwAAAAMCl8BP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12928401487",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-24T18:31:08Z"
    },
    {
      "event": "subscribed",
      "id": 12928401511,
      "node_id": "SE_lADOABII585x_FI8zwAAAAMCl8Bn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12928401511",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-24T18:31:08Z"
    },
    {
      "event": "labeled",
      "id": 14227717177,
      "node_id": "LE_lADOABII585x_FI8zwAAAANQCbw5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14227717177",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-12T07:11:21Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 14263049105,
      "node_id": "UNLE_lADOABII585x_FI8zwAAAANSJNuR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14263049105",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-15T12:36:11Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "review_requested",
      "id": 14659204180,
      "node_id": "RRE_lADOABII585x_FI8zwAAAANpwbRU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14659204180",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-15T14:54:33Z",
      "requested_reviewer": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "labeled",
      "id": 16754287771,
      "node_id": "LE_lADOABII585x_FI8zwAAAAPmoiSb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16754287771",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-14T03:23:34Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2726462754,
      "node_id": "IC_kwDOABII586igoUi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2726462754",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-15T11:33:58Z",
      "updated_at": "2025-03-15T11:33:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "Needs rebase, if still relevant",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#issuecomment-2726462754",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28531"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16815601653,
      "node_id": "HRFPE_lADOABII585x_FI8zwAAAAPqSbf1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16815601653",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "28dc1056263aadf84046b4112f5c61bbd7a6a15e",
      "commit_url": "https://api.github.com/repos/LarryRuane/bitcoin/commits/28dc1056263aadf84046b4112f5c61bbd7a6a15e",
      "created_at": "2025-03-17T22:40:17Z"
    },
    {
      "event": "reviewed",
      "id": 2697432959,
      "node_id": "PRR_kwDOABII586gx49_",
      "url": null,
      "actor": null,
      "commit_id": "28dc1056263aadf84046b4112f5c61bbd7a6a15e",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-03-19T08:37:37Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#pullrequestreview-2697432959",
      "submitted_at": "2025-03-19T08:37:37Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
    },
    {
      "event": "reviewed",
      "id": 2697495377,
      "node_id": "PRR_kwDOABII586gyINR",
      "url": null,
      "actor": null,
      "commit_id": "28dc1056263aadf84046b4112f5c61bbd7a6a15e",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-03-19T20:30:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "I think this is an important change, ~I'm running a full `reindex-chainstate` to check for any noticeable behavior changes~.\r\n\r\nI left a few recommendations:\r\n```patch\r\ndiff --git a/src/memusage.h b/src/memusage.h\r\nindex 501f7068ca..5855e9d18b 100644\r\n--- a/src/memusage.h\r\n+++ b/src/memusage.h\r\n@@ -24,9 +24,6 @@\r\n namespace memusage\r\n {\r\n \r\n-/** Compute the total memory used by allocating alloc bytes. */\r\n-static size_t MallocUsage(size_t alloc);\r\n-\r\n /** Dynamic memory usage for built-in types is zero. */\r\n static inline size_t DynamicUsage(const int8_t& v) { return 0; }\r\n static inline size_t DynamicUsage(const uint8_t& v) { return 0; }\r\n@@ -48,7 +45,7 @@ template<typename X> static inline size_t DynamicUsage(const X * const &v) { ret\r\n  *  application data structures require more accurate inner accounting, they should\r\n  *  iterate themselves, or use more efficient caching + updating on modification.\r\n  */\r\n-static inline size_t MallocUsage(size_t alloc)\r\n+static constexpr size_t MallocUsage(size_t alloc)\r\n {\r\n     // There are few if any actual zero-length allocations; when\r\n     // DynamicUsage(std::vector<X>& v) calls this function, and v.capacity() == 0,\r\n@@ -59,20 +56,16 @@ static inline size_t MallocUsage(size_t alloc)\r\n     // library-dependent.\r\n     if (alloc == 0) return 0;\r\n \r\n-    static constexpr size_t overhead = sizeof(void*);\r\n-#if defined(__arm__)\r\n-    // tested with ARM 32bit\r\n-    static constexpr size_t step = sizeof(void*) * 2;\r\n-    static constexpr size_t min_alloc = 9;\r\n+#if defined(__arm__) || SIZE_MAX == UINT64_MAX\r\n+    constexpr size_t min_alloc{9};\r\n #else\r\n-    static constexpr size_t step = 16U;\r\n-    static constexpr size_t min_alloc = sizeof(void*) == 8 ? 9 : 0;\r\n+    constexpr size_t min_alloc{0};\r\n #endif\r\n-    // step should be nonzero and a power of 2\r\n-    static_assert(step > 0);\r\n-    static_assert((step & (step-1)) == 0);\r\n-    // tested with Linux glibc 2.31 and 2.38, 32bit and 64bit\r\n-    return (std::max(min_alloc, alloc) + overhead + (step - 1)) & ~(step - 1);\r\n+    constexpr size_t overhead{sizeof(size_t)};\r\n+    constexpr size_t step{alignof(std::max_align_t)};\r\n+    static_assert(std::has_single_bit(step));\r\n+\r\n+    return (std::max(min_alloc, alloc) + overhead + (step - 1)) & -step;\r\n }\r\n \r\n // STL data structures\r\ndiff --git a/src/test/mempool_tests.cpp b/src/test/mempool_tests.cpp\r\nindex f0094dce59..9e9ae4d73c 100644\r\n--- a/src/test/mempool_tests.cpp\r\n+++ b/src/test/mempool_tests.cpp\r\n@@ -804,4 +804,13 @@ BOOST_AUTO_TEST_CASE(MempoolAncestryTestsDiamond)\r\n     BOOST_CHECK_EQUAL(descendants, 4ULL);\r\n }\r\n \r\n+BOOST_AUTO_TEST_CASE(BitwiseStepSimplificationTest)\r\n+{\r\n+    for (uint64_t step{1}; step != 0; step <<= 1) {\r\n+        std::cout << step << std::endl;\r\n+        BOOST_CHECK(std::has_single_bit(step));\r\n+        BOOST_CHECK_EQUAL((~(step - 1)), -step);\r\n+    }\r\n+}\r\n+\r\n BOOST_AUTO_TEST_SUITE_END()\r\n```\r\n\r\nthe updated https://godbolt.org/z/45EnoP16T shows that the output is the same as currently",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#pullrequestreview-2697495377",
      "submitted_at": "2025-03-19T11:06:44Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
    },
    {
      "event": "reviewed",
      "id": 2698031897,
      "node_id": "PRR_kwDOABII586g0LMZ",
      "url": null,
      "actor": null,
      "commit_id": "28dc1056263aadf84046b4112f5c61bbd7a6a15e",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-03-19T17:38:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "Some of the usages seem to contain some magical values, tailored to the previous behavior:\r\n* https://github.com/bitcoin/bitcoin/blob/master/src/txmempool.cpp#L1066\r\n* https://github.com/bitcoin/bitcoin/blob/master/src/test/disconnected_transactions.cpp#L39-L43\r\n\r\nDo any of them need adjustments now?\r\n\r\nEdit: finished reindexing, it doesn't seem to result in any performance regression or speedup\r\n\r\n<details>\r\n<summary>Details</summary>\r\n\r\n```\r\nCOMMITS=\"3171d7465c237cb752eb500285b272f00027d97d 7ff32e40735c3379da4a14fca1af029d67d43488\"; \\\r\nSTOP_HEIGHT=888000; DBCACHE=5000; \\\r\nC_COMPILER=gcc; CXX_COMPILER=g++; \\\r\ngit fetch -aq && (for c in $COMMITS; do git log -1 --oneline $c || exit 1; done) && \\\r\nhyperfine \\\r\n  --export-json \"/mnt/my_storage/rdx-${COMMITS// /-}-${STOP_HEIGHT}-${DBCACHE}-${C_COMPILER}.json\" \\\r\n  --runs 1 \\\r\n  --parameter-list COMMIT ${COMMITS// /,} \\\r\n  --prepare \"killall bitcoind || true; rm -f /mnt/my_storage/BitcoinData/debug.log; git checkout {COMMIT}; git clean -fxd; git reset --hard; cmake -B build -DCMAKE_BUILD_TYPE=Release -DENABLE_WALLET=OFF -DCMAKE_C_COMPILER=$C_COMPILER -DCMAKE_CXX_COMPILER=$CXX_COMPILER && cmake --build build -j$(nproc) --target bitcoind && ./build/bin/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=$STOP_HEIGHT -dbcache=10000 -printtoconsole=0 || true\" \\\r\n  --cleanup \"cp /mnt/my_storage/BitcoinData/debug.log /mnt/my_storage/logs/debug-{COMMIT}-$(date +%s).log || true\" \\\r\n  \"COMPILER=$C_COMPILER COMMIT={COMMIT} ./build/bin/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=$STOP_HEIGHT -dbcache=$DBCACHE -blocksonly -reindex-chainstate -connect=0 -printtoconsole=0\"\r\n\r\n3171d7465c test: ensure that `fill_mempool` leaves some room in mempool\r\n7ff32e4073 Test fix\r\n\r\nBenchmark 1: COMPILER=gcc COMMIT=3171d7465c237cb752eb500285b272f00027d97d ./build/bin/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=888000 -dbcache=5000 -blocksonly -reindex-chainstate -connect=0 -printtoconsole=0\r\n  Time (abs ≡):        13876.186 s               [User: 17593.222 s, System: 731.343 s]\r\n \r\nBenchmark 2: COMPILER=gcc COMMIT=7ff32e40735c3379da4a14fca1af029d67d43488 ./build/bin/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=888000 -dbcache=5000 -blocksonly -reindex-chainstate -connect=0 -printtoconsole=0\r\n  Time (abs ≡):        13912.878 s               [User: 17549.791 s, System: 709.007 s]\r\n \r\nSummary\r\n  COMPILER=gcc COMMIT=3171d7465c237cb752eb500285b272f00027d97d ./build/bin/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=888000 -dbcache=5000 -blocksonly -reindex-chainstate -connect=0 -printtoconsole=0 ran\r\n    1.00 times faster than COMPILER=gcc COMMIT=7ff32e40735c3379da4a14fca1af029d67d43488 ./build/bin/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=888000 -dbcache=5000 -blocksonly -reindex-chainstate -connect=0 -printtoconsole=0\r\n```\r\n\r\n</details>",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#pullrequestreview-2698031897",
      "submitted_at": "2025-03-19T12:05:48Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
    },
    {
      "event": "reviewed",
      "id": 2699829126,
      "node_id": "PRR_kwDOABII586g7B-G",
      "url": null,
      "actor": null,
      "commit_id": "28dc1056263aadf84046b4112f5c61bbd7a6a15e",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-03-19T20:24:39Z",
      "author_association": "CONTRIBUTOR",
      "body": "@l0rinc - thank you for the excellent review and great suggestions. I especially like making `MallocUsage()` a `constexpr` function.\r\n\r\nI'll force-push a commit taking all of them except moving the first (test-only) commit (I left a comment explaining my reasoning).",
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#pullrequestreview-2699829126",
      "submitted_at": "2025-03-19T20:24:39Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16878571164,
      "node_id": "HRFPE_lADOABII585x_FI8zwAAAAPuCo6c",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16878571164",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d4b18c5f12ed054847c5a53800fd2b8fabf98c3f",
      "commit_url": "https://api.github.com/repos/LarryRuane/bitcoin/commits/d4b18c5f12ed054847c5a53800fd2b8fabf98c3f",
      "created_at": "2025-03-19T20:24:59Z"
    },
    {
      "event": "reviewed",
      "id": 2700144694,
      "node_id": "PRR_kwDOABII586g8PA2",
      "url": null,
      "actor": null,
      "commit_id": "d4b18c5f12ed054847c5a53800fd2b8fabf98c3f",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-03-19T20:40:43Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#pullrequestreview-2700144694",
      "submitted_at": "2025-03-19T20:40:43Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16881961584,
      "node_id": "HRFPE_lADOABII585x_FI8zwAAAAPuPkpw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16881961584",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "52a313f4f21496b8af5e5c49c86e280b2d984d5d",
      "commit_url": "https://api.github.com/repos/LarryRuane/bitcoin/commits/52a313f4f21496b8af5e5c49c86e280b2d984d5d",
      "created_at": "2025-03-19T22:34:41Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16922214568,
      "node_id": "HRFPE_lADOABII585x_FI8zwAAAAPwpICo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16922214568",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "85c7ef3708ba8d0657b5cf557cb86fdcf4249974",
      "commit_url": "https://api.github.com/repos/LarryRuane/bitcoin/commits/85c7ef3708ba8d0657b5cf557cb86fdcf4249974",
      "created_at": "2025-03-21T05:41:19Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16934158920,
      "node_id": "HRFPE_lADOABII585x_FI8zwAAAAPxWsJI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16934158920",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f39bafba87d0b25546ee5ef4a865c0114fd6a068",
      "commit_url": "https://api.github.com/repos/LarryRuane/bitcoin/commits/f39bafba87d0b25546ee5ef4a865c0114fd6a068",
      "created_at": "2025-03-21T19:19:28Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16934605826,
      "node_id": "HRFPE_lADOABII585x_FI8zwAAAAPxYZQC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16934605826",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "dff45f2b6629122748c90b1a58949116e72b6155",
      "commit_url": "https://api.github.com/repos/LarryRuane/bitcoin/commits/dff45f2b6629122748c90b1a58949116e72b6155",
      "created_at": "2025-03-21T19:55:58Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16936048410,
      "node_id": "HRFPE_lADOABII585x_FI8zwAAAAPxd5ca",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16936048410",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e4201a2c370888d5148b720de3547c8e631a68d3",
      "commit_url": "https://api.github.com/repos/LarryRuane/bitcoin/commits/e4201a2c370888d5148b720de3547c8e631a68d3",
      "created_at": "2025-03-21T21:56:18Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16939301742,
      "node_id": "HRFPE_lADOABII585x_FI8zwAAAAPxqTtu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16939301742",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7f77c2c489a68e497d3be7bb8273287bee54a059",
      "commit_url": "https://api.github.com/repos/LarryRuane/bitcoin/commits/7f77c2c489a68e497d3be7bb8273287bee54a059",
      "created_at": "2025-03-22T06:44:38Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16940542403,
      "node_id": "HRFPE_lADOABII585x_FI8zwAAAAPxvCnD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16940542403",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "3a7b60e3cfd6298f97773359fd9f0728ded18d86",
      "commit_url": "https://api.github.com/repos/LarryRuane/bitcoin/commits/3a7b60e3cfd6298f97773359fd9f0728ded18d86",
      "created_at": "2025-03-22T14:52:29Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16961804967,
      "node_id": "HRFPE_lADOABII585x_FI8zwAAAAPzAJqn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16961804967",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7ff38be949414e60db5d56d07881a9ad5e01aec0",
      "commit_url": "https://api.github.com/repos/LarryRuane/bitcoin/commits/7ff38be949414e60db5d56d07881a9ad5e01aec0",
      "created_at": "2025-03-24T19:21:46Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16963778718,
      "node_id": "HRFPE_lADOABII585x_FI8zwAAAAPzHrie",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16963778718",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0fe6923784d5a61dea70faf6fc39640ffb6db4c1",
      "commit_url": "https://api.github.com/repos/LarryRuane/bitcoin/commits/0fe6923784d5a61dea70faf6fc39640ffb6db4c1",
      "created_at": "2025-03-24T22:00:16Z"
    },
    {
      "event": "unlabeled",
      "id": 16964813410,
      "node_id": "UNLE_lADOABII585x_FI8zwAAAAPzLoJi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16964813410",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-25T00:05:46Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16998635506,
      "node_id": "HRFPE_lADOABII585x_FI8zwAAAAP1Mpfy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16998635506",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6fca5e200f2b15c4b015674b15b0189c02f42e66",
      "commit_url": "https://api.github.com/repos/LarryRuane/bitcoin/commits/6fca5e200f2b15c4b015674b15b0189c02f42e66",
      "created_at": "2025-03-26T19:06:51Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16999939913,
      "node_id": "HRFPE_lADOABII585x_FI8zwAAAAP1Rn9J",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16999939913",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "440e40155a874e835fc33d91bfb289eb4e722f27",
      "commit_url": "https://api.github.com/repos/LarryRuane/bitcoin/commits/440e40155a874e835fc33d91bfb289eb4e722f27",
      "created_at": "2025-03-26T20:45:09Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17021161796,
      "node_id": "HRFPE_lADOABII585x_FI8zwAAAAP2ilFE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17021161796",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "77ebad9651cd9138cf385c84402fd6042db8536e",
      "commit_url": "https://api.github.com/repos/LarryRuane/bitcoin/commits/77ebad9651cd9138cf385c84402fd6042db8536e",
      "created_at": "2025-03-27T19:54:10Z"
    },
    {
      "event": "reviewed",
      "id": 2723248133,
      "node_id": "PRR_kwDOABII586iUXgF",
      "url": null,
      "actor": null,
      "commit_id": "77ebad9651cd9138cf385c84402fd6042db8536e",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-03-27T20:00:33Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#pullrequestreview-2723248133",
      "submitted_at": "2025-03-27T20:00:33Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
    },
    {
      "event": "reviewed",
      "id": 2726885785,
      "node_id": "PRR_kwDOABII586iiPmZ",
      "url": null,
      "actor": null,
      "commit_id": "77ebad9651cd9138cf385c84402fd6042db8536e",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-03-28T22:25:04Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#pullrequestreview-2726885785",
      "submitted_at": "2025-03-28T22:25:04Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
    },
    {
      "event": "reviewed",
      "id": 2756046565,
      "node_id": "PRR_kwDOABII586kRe7l",
      "url": null,
      "actor": null,
      "commit_id": "77ebad9651cd9138cf385c84402fd6042db8536e",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-04-10T09:49:21Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#pullrequestreview-2756046565",
      "submitted_at": "2025-04-10T09:49:21Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17680043892,
      "node_id": "HRFPE_lADOABII585x_FI8zwAAAAQd0A90",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17680043892",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "726a87c172cdcbef430aca1f35b145315c17b62d",
      "commit_url": "https://api.github.com/repos/LarryRuane/bitcoin/commits/726a87c172cdcbef430aca1f35b145315c17b62d",
      "created_at": "2025-05-15T22:37:43Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17680349865,
      "node_id": "HRFPE_lADOABII585x_FI8zwAAAAQd1Lqp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17680349865",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e6ae196963d44a8ac6f9c69835634b4131fadc15",
      "commit_url": "https://api.github.com/repos/LarryRuane/bitcoin/commits/e6ae196963d44a8ac6f9c69835634b4131fadc15",
      "created_at": "2025-05-15T23:15:29Z"
    },
    {
      "event": "labeled",
      "id": 17680351312,
      "node_id": "LE_lADOABII585x_FI8zwAAAAQd1MBQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17680351312",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-15T23:15:40Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2885251842,
      "node_id": "IC_kwDOABII586r-XMC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2885251842",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-15T23:15:42Z",
      "updated_at": "2025-05-15T23:15:42Z",
      "author_association": "CONTRIBUTOR",
      "body": "The main change in the latest force push is to address the [review comment](#discussion_r2044004503) about `validation_flush_tests.cpp`. I ended up almost completely rewriting the `getcoinscachesizestate` test case; it was kind of a mess. It was far too fragile because it required equality of various values related to memory usage (which is why this test started failing with this PR, even though nothing had actually broken). This is especially difficult when a test must run in both the 32-bit and 64-bit environments. A test like this should be more of a sanity check. \r\n\r\nThis test case also tested things outside of the `GetCoinsCacheSizeState()` function, which is what the test case name implies. The new version tests exactly that function, driving it to return its various possible results. It's more focused and easier to understand now, in my opinion.\r\n\r\nAlso, I squashed the three commits, two of them test-only, down to a single commit, as [suggested above](#discussion_r2003105459); it's still a pretty small commit.\r\n\r\nReviewers, please let me know if the commit message is too wordy. It's almost entirely about the test changes (I preserved the text from what used to be separate commits), because those were the trickiest parts of this PR. But maybe it would be better for some of that explanation to be here in the PR instead of the commit message.\r\n\r\n@l0rinc, thank you for your excellent review comments. There were a few suggestions I didn't take (so far, at least); I'll leave comments as replies to yours.",
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#issuecomment-2885251842",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28531"
    },
    {
      "event": "commented",
      "id": 2885251858,
      "node_id": "IC_kwDOABII586r-XMS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2885251858",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-15T23:15:43Z",
      "updated_at": "2025-05-15T23:15:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Task `multiprocess, i686, DEBUG`: https://github.com/bitcoin/bitcoin/runs/42323610465</sub>\n<sub>LLM reason (✨ experimental): (empty)</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#issuecomment-2885251858",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28531"
    },
    {
      "event": "mentioned",
      "id": 17680351637,
      "node_id": "MEE_lADOABII585x_FI8zwAAAAQd1MGV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17680351637",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-15T23:15:43Z"
    },
    {
      "event": "subscribed",
      "id": 17680351644,
      "node_id": "SE_lADOABII585x_FI8zwAAAAQd1MGc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17680351644",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-15T23:15:43Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17692009782,
      "node_id": "HRFPE_lADOABII585x_FI8zwAAAAQehqU2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17692009782",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "4228018ace848adcafd197776cbb4afc2400bf16",
      "commit_url": "https://api.github.com/repos/LarryRuane/bitcoin/commits/4228018ace848adcafd197776cbb4afc2400bf16",
      "created_at": "2025-05-16T17:00:39Z"
    },
    {
      "event": "commented",
      "id": 2887255441,
      "node_id": "IC_kwDOABII586sGAWR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2887255441",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-16T17:02:15Z",
      "updated_at": "2025-05-16T17:02:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased to see if that fixes CI failure (which seems unrelated), the branch was previously rebased on Mar 17 2025.",
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#issuecomment-2887255441",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28531"
    },
    {
      "event": "unlabeled",
      "id": 17694325066,
      "node_id": "UNLE_lADOABII585x_FI8zwAAAAQeqflK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17694325066",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-16T20:47:16Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 17798465976,
      "node_id": "LE_lADOABII585x_FI8zwAAAAQk3wm4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17798465976",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-24T03:01:26Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2870983929,
      "node_id": "PRR_kwDOABII586rH7z5",
      "url": null,
      "actor": null,
      "commit_id": "4228018ace848adcafd197776cbb4afc2400bf16",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-05-27T13:01:15Z",
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#pullrequestreview-2870983929",
      "submitted_at": "2025-05-27T13:01:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
    },
    {
      "event": "reviewed",
      "id": 2870986735,
      "node_id": "PRR_kwDOABII586rH8fv",
      "url": null,
      "actor": null,
      "commit_id": "4228018ace848adcafd197776cbb4afc2400bf16",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-05-27T13:02:05Z",
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#pullrequestreview-2870986735",
      "submitted_at": "2025-05-27T13:02:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
    },
    {
      "event": "reviewed",
      "id": 2871139248,
      "node_id": "PRR_kwDOABII586rIhuw",
      "url": null,
      "actor": null,
      "commit_id": "4228018ace848adcafd197776cbb4afc2400bf16",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-05-27T15:34:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for getting back to this change.\r\nWe should synchronize it with `CCoinsMap`, chich already claims to account for an \"overhead of 1 or 2 pointers\".\r\nAlso, the test should pass before the change as well, so it would be helpful to add it as a separate commit before the change to make it easy to see how it behaves before and after the change as well.\r\nThe test still contains a lot of repetition, please see my suggestion on how to compact it a bit more.\r\nThere are still uncovered parts of the code, I'd feel more comfortable if all modified code parts are exercised by tests.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#pullrequestreview-2871139248",
      "submitted_at": "2025-05-27T15:34:51Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
    },
    {
      "event": "unlabeled",
      "id": 17858066616,
      "node_id": "UNLE_lADOABII585x_FI8zwAAAAQobHi4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17858066616",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-28T21:06:19Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2939315304,
      "node_id": "IC_kwDOABII586vMmRo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2939315304",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-04T09:34:41Z",
      "updated_at": "2025-06-04T09:37:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "I understand the difficulties of guessing the correct memory usage of such an app (especially when the user cannot even provide total memory usage requirements, just `dbcache` ones), trying to find a formula that is good enough on all OSs, compilers, versions, 32/64 bits, architectures, etc.\r\nI ran a simple benchmark to see if this memory accounting changed the behavior of IBD (simulated via a `reindex-chainstate` with default `dbcache=450` until block 888,888).\r\n\r\nFor reference, the commits I used are:\r\n*   3f83c744ac - master with old `MallocUsage`\r\n*   4228018ace - this PR with new `MallocUsage`\r\n\r\n<details>\r\n<summary>The PR introduces a ~2% slowdown</summary>\r\n\r\n```bash\r\nCOMMITS=\"3f83c744ac28b700090e15b5dda2260724a56f49 4228018ace848adcafd197776cbb4afc2400bf16\"; \\\r\nSTOP=888888; DBCACHE=450; \\\r\nCC=gcc; CXX=g++; \\\r\nBASE_DIR=\"/mnt/my_storage\"; DATA_DIR=\"$BASE_DIR/BitcoinData\"; LOG_DIR=\"$BASE_DIR/logs\"; \\\r\n(echo \"\"; for c in $COMMITS; do git fetch -q origin $c && git log -1 --pretty='%h %s' $c || exit 1; done; echo \"\") && \\\r\nhyperfine \\\r\n  --sort command \\\r\n  --runs 1 \\\r\n  --export-json \"$BASE_DIR/rdx-$(sed -E 's/(\\w{8})\\w+ ?/\\1-/g;s/-$//'<<<\"$COMMITS\")-$STOP-$DBCACHE-$CC.json\" \\\r\n  --parameter-list COMMIT ${COMMITS// /,} \\\r\n  --prepare \"killall bitcoind; rm -f $DATA_DIR/debug.log; git checkout {COMMIT}; git clean -fxd; git reset --hard && \\\r\n    cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=Release && ninja -C build bitcoind && \\\r\n    ./build/bin/bitcoind -datadir=$DATA_DIR -stopatheight=$STOP -dbcache=10000 -printtoconsole=0; sleep 10\" \\\r\n  --cleanup \"cp $DATA_DIR/debug.log $LOG_DIR/debug-{COMMIT}-$(date +%s).log\" \\\r\n  \"COMPILER=$CC ./build/bin/bitcoind -datadir=$DATA_DIR -stopatheight=$STOP -dbcache=$DBCACHE -reindex-chainstate -blocksonly -connect=0 -printtoconsole=0\"\r\n```\r\n\r\n> 3f83c744ac Merge bitcoin/bitcoin#32526: fuzz: Delete wallet_notifications\r\n> 4228018ace improve MallocUsage() accuracy\r\n\r\n```bash\r\nBenchmark 1: COMPILER=gcc ./build/bin/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=888888 -reindex-chainstate -blocksonly -connect=0 -printtoconsole=0 -dbcache=450 (COMMIT = 3f83c744ac28b700090e15b5dda2260724a56f49)\r\n  Time (abs ≡):        19573.674 s               [User: 35453.443 s, System: 2822.880 s]\r\n\r\nBenchmark 2: COMPILER=gcc ./build/bin/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=888888 -reindex-chainstate -blocksonly -connect=0 -printtoconsole=0 -dbcache=450 (COMMIT = 4228018ace848adcafd197776cbb4afc2400bf16)\r\n  Time (abs ≡):        20031.162 s               [User: 36761.112 s, System: 2992.418 s]\r\n```\r\n\r\n```python\r\nRelative speed comparison\r\n        1.00          COMPILER=gcc ./build/bin/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=888888 -reindex-chainstate -blocksonly -connect=0 -printtoconsole=0 -dbcache=450 (COMMIT = 3f83c744ac28b700090e15b5dda2260724a56f49)\r\n        1.02          COMPILER=gcc ./build/bin/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=888888 -reindex-chainstate -blocksonly -connect=0 -printtoconsole=0 -dbcache=450 (COMMIT = 4228018ace848adcafd197776cbb4afc2400bf16)\r\n```\r\n</details>\r\n\r\nTo understand the performance and memory implications, I ran the same benchmark with Massif profiling, revealing that after this PR we're using ~4% less total memory now\r\n<details>\r\n<summary>3f83c744ac28b700090e15b5dda2260724a56f49 has 790MB peak</summary>\r\n\r\n```\r\n    MB\r\n790.2^#\r\n     |#:   :  :           :        :                           :\r\n     |#:   :  :        :  :        :               :  :  :: : :: ::   @   :\r\n     |#::  :  :        :  :        :       :     : :  :  :: : :: ::   @   :\r\n     |#::  :  :        :  :        :       :     :::  : ::: : :: ::   @   : :\r\n     |#::  :  : :      :: : :      :      ::   : :::  : ::: : :: ::  :@   : ::\r\n     |#::  :  ::: :    :: : :     :::::   :::  : :::  ::::::: :: ::  :@:  : ::\r\n     |#::  :  :::::    :: : :  : :::: :   :::: : :::: ::::::: :: ::  :@:  : ::\r\n     |#::  :  :::::   ::: : :  : :::: : :::::: : :::: ::::@::::: :: ::@:: : ::\r\n     |#:: ::  :::::   :::::::  : :::: ::: :::::: :::: ::::@::::: :: ::@:::: ::\r\n     |#:::::  ::::::  ::::::: :: :::: ::: ::::::::::::::::@::::: :: ::@:::: @:\r\n     |#::::: :::::::  :::::::::: :::: ::: ::::::::::@:::::@:::::@:: ::@:::: @:\r\n     |#::::: ::::::::::::::::::: :::: ::: ::::::::::@:::::@:::::@:: ::@:::::@:\r\n     |#:::::::::::::::::::::::::::::: ::: ::::::::::@:::::@:::::@:::::@:::::@:\r\n     |#:::::::::::::::::::::::::::::: ::: ::::::::::@:::::@:::::@:::::@:::::@:\r\n     |#:::::::::::::::::::::::::::::: ::: ::::::::::@:::::@:::::@:::::@:::::@:\r\n     |#:::::::::::::::::::::::::::::: ::: ::::::::::@:::::@:::::@:::::@:::::@:\r\n     |#:::::::::::::::::::::::::::::: ::: ::::::::::@:::::@:::::@:::::@:::::@:\r\n     |#:::::::::::::::::::::::::::::: ::: ::::::::::@:::::@:::::@:::::@:::::@:\r\n     |#:::::::::::::::::::::::::::::: ::: ::::::::::@:::::@:::::@:::::@:::::@:\r\n   0 +----------------------------------------------------------------------->h\r\n     0                                                                   77.36\r\n```\r\n</details>\r\n\r\n\r\n<details>\r\n<summary>4228018ace848adcafd197776cbb4afc2400bf16 has 760MB peak</summary>\r\n\r\n```\r\n    MB\r\n760.9^                                                      ##\r\n     |               @@        @                            #        :   :\r\n     |               @         @    :::           ::        #        :   ::\r\n     |  ::     :     @  :      @    : : ::        :         #  :::   :   ::\r\n     |  : ::   :  :: @  :  ::  @    : : : : :    :: ::      #  ::    :   ::\r\n     |  : : :: :  :  @  :  :   @    : : : : :  :::: :       #  :: @  :   ::\r\n     |  : : : ::  :  @  :  :   @ :: : :@: : :  : :: :       #  :: @  :   ::\r\n     |  : : : ::  :  @  :  :   @ : :: :@: : :  : :: : ::    #  :: @  :   ::\r\n     | :: : : ::  :  @ ::  :   @ : :: :@: : :  : :: : :     #  :: @ ::  ::::\r\n     | :: : : ::  :  @ ::  :   @:: :: :@: : :::: :: : : ::  #  :: @ ::  ::::\r\n     | :: : : ::  : :@ :::::   @:: :: :@: :@:: : :: : : : ::#  :: @ ::  :::: :\r\n     | :: : : ::::: :@ ::: : ::@:: :: :@: :@:: : :: : : : : #  :: @ ::::::::@:\r\n     | :: : : ::: : :@ ::: : : @:: :: :@: :@:: : :: : : : : #  :: @:::: ::::@:\r\n     | :: : : ::: : :@ ::: : : @:: :: :@: :@:: : :: : : : : # ::: @:::: ::::@:\r\n     | :: : : ::: : :@ ::: : : @:: :: :@: :@:: : :: : : : : # ::: @:::: ::::@:\r\n     | :: : : ::: : :@ ::: : : @:: :: :@: :@:: : :: : : : : # ::: @:::: ::::@:\r\n     | :: : : ::: : :@ ::: : : @:: :: :@: :@:: : :: : : : : # ::: @:::: ::::@:\r\n     | :: : : ::: : :@ ::: : : @:: :: :@: :@:: : :: : : : : # ::: @:::: ::::@:\r\n     | :: : : ::: : :@ ::: : : @:: :: :@: :@:: : :: : : : : # ::: @:::: ::::@:\r\n     | :: : : ::: : :@ ::: : : @:: :: :@: :@:: : :: : : : : # ::: @:::: ::::@:\r\n   0 +----------------------------------------------------------------------->h\r\n     0                                                                   79.52\r\n```\r\n</details>\r\n\r\nIt's not immediately obvious if this is more accurate than before, so I've checked the dbcache related memory usages, which we can see in the logs as:\r\n> Using 440.0 MiB for in-memory UTXO set (plus up to 4.8 MiB of unused mempool space)\r\n\r\n<details>\r\n<summary>3f83c744ac28b700090e15b5dda2260724a56f49 - 414,449,664B for nodes + 47,738,776B for buckets = ~440MiB dbcache usage</summary>\r\n\r\n```\r\n->50.02% (414,449,664B) 0x7D42A2: std::__detail::_Hash_node<std::pair<COutPoint const, CCoinsCacheEntry>, false>* std::__detail::_Hashtable_alloc<PoolAllocator<std::__detail::_Hash_node<std::pair<COutPoint const, CCoinsCacheEntry>, false>, 144ul, 8ul> >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<COutPoint const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<COutPoint const&>&&, std::tuple<>&&) [clone .isra.0] (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| ->48.66% (403,177,472B) 0x7D5F9B: CCoinsViewCache::BatchWrite(CoinsViewCacheCursor&, uint256 const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | ->48.66% (403,177,472B) 0x7D4C15: CCoinsViewCache::Flush() (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |   ->48.66% (403,177,472B) 0x528158: Chainstate::ConnectTip(BlockValidationState&, CBlockIndex*, std::shared_ptr<CBlock const> const&, ConnectTrace&, DisconnectedBlockTransactions&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |     ->48.66% (403,177,472B) 0x52E7C5: Chainstate::ActivateBestChainStep(BlockValidationState&, CBlockIndex*, std::shared_ptr<CBlock const> const&, bool&, ConnectTrace&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |       ->48.66% (403,177,472B) 0x52EEA3: Chainstate::ActivateBestChain(BlockValidationState&, std::shared_ptr<CBlock const>) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |         ->48.66% (403,177,472B) 0x30AD44: node::ImportBlocks(ChainstateManager&, std::span<fs::path const, 18446744073709551615ul>) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |           ->48.66% (403,177,472B) 0x27800F: std::_Function_handler<void (), AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::{lambda()\r\n| |             ->48.66% (403,177,472B) 0x941FCE: util::TraceThread(std::basic_string_view<char, std::char_traits<char> >, std::function<void ()>) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |               ->48.66% (403,177,472B) 0x2669BA: std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(std::basic_string_view<char, std::char_traits<char> >, std::function<void ()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::{lambda()\r\n| |                 ->48.66% (403,177,472B) 0x4B11DB3: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33)\r\n| |                   ->48.66% (403,177,472B) 0x4E56AA3: start_thread (pthread_create.c:447)\r\n| |                     ->48.66% (403,177,472B) 0x4EE3A33: clone (clone.S:100)\r\n| |\r\n| ->01.36% (11,272,192B) 0x7D50F2: CCoinsViewCache::FetchCoin(COutPoint const&) const (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | ->01.36% (11,272,192B) 0x7D51E9: CCoinsViewCache::GetCoin(COutPoint const&) const (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | | ->01.36% (11,272,192B) 0x7D4FFA: CCoinsViewCache::FetchCoin(COutPoint const&) const (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | |   ->01.36% (11,272,192B) 0x7D543C: CCoinsViewCache::HaveCoin(COutPoint const&) const (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | |     ->01.36% (11,272,192B) 0x518713: Chainstate::ConnectBlock(CBlock const&, BlockValidationState&, CBlockIndex*, CCoinsViewCache&, bool) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | |       ->01.36% (11,272,192B) 0x527CC8: Chainstate::ConnectTip(BlockValidationState&, CBlockIndex*, std::shared_ptr<CBlock const> const&, ConnectTrace&, DisconnectedBlockTransactions&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | |         ->01.36% (11,272,192B) 0x52E7C5: Chainstate::ActivateBestChainStep(BlockValidationState&, CBlockIndex*, std::shared_ptr<CBlock const> const&, bool&, ConnectTrace&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | |           ->01.36% (11,272,192B) 0x52EEA3: Chainstate::ActivateBestChain(BlockValidationState&, std::shared_ptr<CBlock const>) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | |             ->01.36% (11,272,192B) 0x30AD44: node::ImportBlocks(ChainstateManager&, std::span<fs::path const, 18446744073709551615ul>) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | |               ->01.36% (11,272,192B) 0x27800F: std::_Function_handler<void (), AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::{lambda()\r\n| | |                 ->01.36% (11,272,192B) 0x941FCE: util::TraceThread(std::basic_string_view<char, std::char_traits<char> >, std::function<void ()>) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | |                   ->01.36% (11,272,192B) 0x2669BA: std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(std::basic_string_view<char, std::char_traits<char> >, std::function<void ()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::{lambda()\r\n| | |                     ->01.36% (11,272,192B) 0x4B11DB3: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33)\r\n| | |                       ->01.36% (11,272,192B) 0x4E56AA3: start_thread (pthread_create.c:447)\r\n| | |                         ->01.36% (11,272,192B) 0x4EE3A33: clone (clone.S:100)\r\n| | |\r\n| | ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)\r\n| |\r\n| ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)\r\n|\r\n->21.67% (179,561,400B) 0x30D5A9: node::BlockManager::InsertBlockIndex(uint256 const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| ->10.84% (89,842,600B) 0x3114E9: kernel::BlockTreeDB::LoadBlockIndexGuts(Consensus::Params const&, std::function<CBlockIndex* (uint256 const&)>, util::SignalInterrupt const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | ->10.84% (89,842,600B) 0x311900: node::BlockManager::LoadBlockIndex(std::optional<uint256> const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |   ->10.84% (89,842,600B) 0x31238C: node::BlockManager::LoadBlockIndexDB(std::optional<uint256> const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |     ->10.84% (89,842,600B) 0x52449F: ChainstateManager::LoadBlockIndex() (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |       ->10.84% (89,842,600B) 0x320D97: node::CompleteChainstateInitialization(ChainstateManager&, node::ChainstateLoadOptions const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |         ->10.84% (89,842,600B) 0x321F52: node::LoadChainstate(ChainstateManager&, kernel::CacheSizes const&, node::ChainstateLoadOptions const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |           ->10.84% (89,842,600B) 0x2726C4: InitAndLoadChainstate(node::NodeContext&, bool, bool, kernel::CacheSizes const&, ArgsManager const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |             ->10.84% (89,842,600B) 0x27BDAF: AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |               ->10.84% (89,842,600B) 0x23CB15: main (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |\r\n| ->10.83% (89,718,800B) 0x311503: kernel::BlockTreeDB::LoadBlockIndexGuts(Consensus::Params const&, std::function<CBlockIndex* (uint256 const&)>, util::SignalInterrupt const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|   ->10.83% (89,718,800B) 0x311900: node::BlockManager::LoadBlockIndex(std::optional<uint256> const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|     ->10.83% (89,718,800B) 0x31238C: node::BlockManager::LoadBlockIndexDB(std::optional<uint256> const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|       ->10.83% (89,718,800B) 0x52449F: ChainstateManager::LoadBlockIndex() (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|         ->10.83% (89,718,800B) 0x320D97: node::CompleteChainstateInitialization(ChainstateManager&, node::ChainstateLoadOptions const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|           ->10.83% (89,718,800B) 0x321F52: node::LoadChainstate(ChainstateManager&, kernel::CacheSizes const&, node::ChainstateLoadOptions const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|             ->10.83% (89,718,800B) 0x2726C4: InitAndLoadChainstate(node::NodeContext&, bool, bool, kernel::CacheSizes const&, ArgsManager const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|               ->10.83% (89,718,800B) 0x27BDAF: AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|                 ->10.83% (89,718,800B) 0x23CB15: main (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|\r\n->06.10% (50,585,543B) 0x7B792D: leveldb::Arena::AllocateNewBlock(unsigned long) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| ->06.10% (50,573,312B) 0x7B7A90: leveldb::Arena::AllocateFallback(unsigned long) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | ->04.82% (39,923,712B) 0x79CE20: leveldb::MemTable::Add(unsigned long, leveldb::ValueType, leveldb::Slice const&, leveldb::Slice const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | | ->04.15% (34,418,688B) 0x7AE513: leveldb::WriteBatch::Iterate(leveldb::WriteBatch::Handler*) const (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | | | ->04.15% (34,418,688B) 0x7AEBA4: leveldb::WriteBatchInternal::InsertInto(leveldb::WriteBatch const*, leveldb::MemTable*) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | | |   ->04.15% (34,418,688B) 0x78AAFF: leveldb::DBImpl::Write(leveldb::WriteOptions const&, leveldb::WriteBatch*) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | | |     ->04.15% (34,418,688B) 0x59710D: CDBWrapper::WriteBatch(CDBBatch&, bool) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | | |       ->04.15% (34,418,688B) 0x4DE3DF: CCoinsViewDB::BatchWrite(CoinsViewCacheCursor&, uint256 const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | | |         ->04.15% (34,418,688B) 0x7D4C15: CCoinsViewCache::Flush() (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | | |           ->04.15% (34,418,688B) 0x525634: Chainstate::FlushStateToDisk(BlockValidationState&, FlushStateMode, int) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | | |             ->04.15% (34,418,688B) 0x5283D7: Chainstate::ConnectTip(BlockValidationState&, CBlockIndex*, std::shared_ptr<CBlock const> const&, ConnectTrace&, DisconnectedBlockTransactions&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | | |               ->04.15% (34,418,688B) 0x52E7C5: Chainstate::ActivateBestChainStep(BlockValidationState&, CBlockIndex*, std::shared_ptr<CBlock const> const&, bool&, ConnectTrace&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | | |                 ->04.15% (34,418,688B) 0x52EEA3: Chainstate::ActivateBestChain(BlockValidationState&, std::shared_ptr<CBlock const>) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | | |                   ->04.15% (34,418,688B) 0x30AD44: node::ImportBlocks(ChainstateManager&, std::span<fs::path const, 18446744073709551615ul>) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | | |                     ->04.15% (34,418,688B) 0x27800F: std::_Function_handler<void (), AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::{lambda()\r\n| | | |                       ->04.15% (34,418,688B) 0x941FCE: util::TraceThread(std::basic_string_view<char, std::char_traits<char> >, std::function<void ()>) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | | |                         ->04.15% (34,418,688B) 0x2669BA: std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(std::basic_string_view<char, std::char_traits<char> >, std::function<void ()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::{lambda()\r\n| | | |                           ->04.15% (34,418,688B) 0x4B11DB3: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33)\r\n| | | |                             ->04.15% (34,418,688B) 0x4E56AA3: start_thread (pthread_create.c:447)\r\n| | | |                               ->04.15% (34,418,688B) 0x4EE3A33: clone (clone.S:100)\r\n| | | |\r\n| | | ->00.66% (5,505,024B) in 1+ places, all below ms_print's threshold (01.00%)\r\n| | |\r\n| | ->01.29% (10,649,600B) 0x7B7B5C: leveldb::Arena::AllocateAligned(unsigned long) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |   ->01.28% (10,637,312B) 0x79D7D9: leveldb::SkipList<char const*, leveldb::MemTable::KeyComparator>::Insert(char const* const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |   | ->01.28% (10,637,312B) 0x79CDEB: leveldb::MemTable::Add(unsigned long, leveldb::ValueType, leveldb::Slice const&, leveldb::Slice const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |   |   ->01.03% (8,548,352B) 0x7AE513: leveldb::WriteBatch::Iterate(leveldb::WriteBatch::Handler*) const (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |   |   | ->01.03% (8,548,352B) 0x7AEBA4: leveldb::WriteBatchInternal::InsertInto(leveldb::WriteBatch const*, leveldb::MemTable*) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |   |   |   ->01.03% (8,548,352B) 0x78AAFF: leveldb::DBImpl::Write(leveldb::WriteOptions const&, leveldb::WriteBatch*) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |   |   |     ->01.03% (8,548,352B) 0x59710D: CDBWrapper::WriteBatch(CDBBatch&, bool) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |   |   |       ->01.03% (8,548,352B) 0x4DE3DF: CCoinsViewDB::BatchWrite(CoinsViewCacheCursor&, uint256 const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |   |   |         ->01.03% (8,548,352B) 0x7D4C15: CCoinsViewCache::Flush() (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |   |   |           ->01.03% (8,548,352B) 0x525634: Chainstate::FlushStateToDisk(BlockValidationState&, FlushStateMode, int) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |   |   |             ->01.03% (8,548,352B) 0x5283D7: Chainstate::ConnectTip(BlockValidationState&, CBlockIndex*, std::shared_ptr<CBlock const> const&, ConnectTrace&, DisconnectedBlockTransactions&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |   |   |               ->01.03% (8,548,352B) 0x52E7C5: Chainstate::ActivateBestChainStep(BlockValidationState&, CBlockIndex*, std::shared_ptr<CBlock const> const&, bool&, ConnectTrace&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |   |   |                 ->01.03% (8,548,352B) 0x52EEA3: Chainstate::ActivateBestChain(BlockValidationState&, std::shared_ptr<CBlock const>) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |   |   |                   ->01.03% (8,548,352B) 0x30AD44: node::ImportBlocks(ChainstateManager&, std::span<fs::path const, 18446744073709551615ul>) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |   |   |                     ->01.03% (8,548,352B) 0x27800F: std::_Function_handler<void (), AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::{lambda()\r\n| |   |   |                       ->01.03% (8,548,352B) 0x941FCE: util::TraceThread(std::basic_string_view<char, std::char_traits<char> >, std::function<void ()>) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |   |   |                         ->01.03% (8,548,352B) 0x2669BA: std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(std::basic_string_view<char, std::char_traits<char> >, std::function<void ()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::{lambda()\r\n| |   |   |                           ->01.03% (8,548,352B) 0x4B11DB3: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33)\r\n| |   |   |                             ->01.03% (8,548,352B) 0x4E56AA3: start_thread (pthread_create.c:447)\r\n| |   |   |                               ->01.03% (8,548,352B) 0x4EE3A33: clone (clone.S:100)\r\n| |   |   |\r\n| |   |   ->00.25% (2,088,960B) in 1+ places, all below ms_print's threshold (01.00%)\r\n| |   |\r\n| |   ->00.00% (12,288B) in 1+ places, all below ms_print's threshold (01.00%)\r\n| |\r\n| ->00.00% (12,231B) in 1+ places, all below ms_print's threshold (01.00%)\r\n|\r\n->05.76% (47,738,776B) 0x7D730C: std::__detail::_Hashtable_alloc<PoolAllocator<std::__detail::_Hash_node<std::pair<COutPoint const, CCoinsCacheEntry>, false>, 144ul, 8ul> >::_M_allocate_buckets(unsigned long) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| ->05.76% (47,738,776B) 0x7D7538: std::_Hashtable<COutPoint, std::pair<COutPoint const, CCoinsCacheEntry>, PoolAllocator<std::pair<COutPoint const, CCoinsCacheEntry>, 144ul, 8ul>, std::__detail::_Select1st, std::equal_to<COutPoint>, SaltedOutpointHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<COutPoint const, CCoinsCacheEntry>, false>*, unsigned long) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|   ->05.76% (47,738,776B) 0x7D5FB7: CCoinsViewCache::BatchWrite(CoinsViewCacheCursor&, uint256 const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|   | ->05.76% (47,738,776B) 0x7D4C15: CCoinsViewCache::Flush() (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|   |   ->05.76% (47,738,776B) 0x528158: Chainstate::ConnectTip(BlockValidationState&, CBlockIndex*, std::shared_ptr<CBlock const> const&, ConnectTrace&, DisconnectedBlockTransactions&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|   |     ->05.76% (47,738,776B) 0x52E7C5: Chainstate::ActivateBestChainStep(BlockValidationState&, CBlockIndex*, std::shared_ptr<CBlock const> const&, bool&, ConnectTrace&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|   |       ->05.76% (47,738,776B) 0x52EEA3: Chainstate::ActivateBestChain(BlockValidationState&, std::shared_ptr<CBlock const>) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|   |         ->05.76% (47,738,776B) 0x30AD44: node::ImportBlocks(ChainstateManager&, std::span<fs::path const, 18446744073709551615ul>) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|   |           ->05.76% (47,738,776B) 0x27800F: std::_Function_handler<void (), AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::{lambda()\r\n|   |             ->05.76% (47,738,776B) 0x941FCE: util::TraceThread(std::basic_string_view<char, std::char_traits<char> >, std::function<void ()>) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|   |               ->05.76% (47,738,776B) 0x2669BA: std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(std::basic_string_view<char, std::char_traits<char> >, std::function<void ()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::{lambda()\r\n|   |                 ->05.76% (47,738,776B) 0x4B11DB3: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33)\r\n|   |                   ->05.76% (47,738,776B) 0x4E56AA3: start_thread (pthread_create.c:447)\r\n|   |                     ->05.76% (47,738,776B) 0x4EE3A33: clone (clone.S:100)\r\n|   |\r\n|   ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)\r\n|\r\n->04.05% (33,554,432B) 0x5534C0: std::vector<uint256, std::allocator<uint256> >::_M_default_append(unsigned long) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| ->02.02% (16,777,216B) 0x539B7D: ValidationCache::ValidationCache(unsigned long, unsigned long) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | ->02.02% (16,777,216B) 0x53AC8C: ChainstateManager::ChainstateManager(util::SignalInterrupt const&, kernel::ChainstateManagerOpts, kernel::BlockManagerOpts) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |   ->02.02% (16,777,216B) 0x272139: InitAndLoadChainstate(node::NodeContext&, bool, bool, kernel::CacheSizes const&, ArgsManager const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |     ->02.02% (16,777,216B) 0x27BDAF: AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |       ->02.02% (16,777,216B) 0x23CB15: main (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |\r\n| ->02.02% (16,777,216B) 0x5ECCC1: SignatureCache::SignatureCache(unsigned long) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|   ->02.02% (16,777,216B) 0x5398DD: ValidationCache::ValidationCache(unsigned long, unsigned long) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|     ->02.02% (16,777,216B) 0x53AC8C: ChainstateManager::ChainstateManager(util::SignalInterrupt const&, kernel::ChainstateManagerOpts, kernel::BlockManagerOpts) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|       ->02.02% (16,777,216B) 0x272139: InitAndLoadChainstate(node::NodeContext&, bool, bool, kernel::CacheSizes const&, ArgsManager const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|         ->02.02% (16,777,216B) 0x27BDAF: AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|           ->02.02% (16,777,216B) 0x23CB15: main (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|\r\n->03.27% (27,059,600B) 0x522D80: Chainstate::TryAddBlockIndexCandidate(CBlockIndex*) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| ->03.27% (27,059,600B) 0x52483A: ChainstateManager::LoadBlockIndex() (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|   ->03.27% (27,059,600B) 0x320D97: node::CompleteChainstateInitialization(ChainstateManager&, node::ChainstateLoadOptions const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|     ->03.27% (27,059,600B) 0x321F52: node::LoadChainstate(ChainstateManager&, kernel::CacheSizes const&, node::ChainstateLoadOptions const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|       ->03.27% (27,059,600B) 0x2726C4: InitAndLoadChainstate(node::NodeContext&, bool, bool, kernel::CacheSizes const&, ArgsManager const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|         ->03.27% (27,059,600B) 0x27BDAF: AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|           ->03.27% (27,059,600B) 0x23CB15: main (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|\r\n->02.74% (22,680,870B) 0x262882: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| ->02.66% (22,020,097B) 0x7BA029: leveldb::PutLengthPrefixedSlice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, leveldb::Slice const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | ->02.66% (22,020,097B) 0x7AE875: leveldb::WriteBatch::Put(leveldb::Slice const&, leveldb::Slice const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | | ->02.66% (22,020,097B) 0x5965CD: CDBBatch::WriteImpl(std::span<std::byte const, 18446744073709551615ul>, DataStream&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | |   ->02.66% (22,020,097B) 0x4DE258: CCoinsViewDB::BatchWrite(CoinsViewCacheCursor&, uint256 const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | |   | ->02.66% (22,020,097B) 0x7D4C15: CCoinsViewCache::Flush() (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | |   |   ->02.66% (22,020,097B) 0x525634: Chainstate::FlushStateToDisk(BlockValidationState&, FlushStateMode, int) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | |   |     ->02.66% (22,020,097B) 0x5283D7: Chainstate::ConnectTip(BlockValidationState&, CBlockIndex*, std::shared_ptr<CBlock const> const&, ConnectTrace&, DisconnectedBlockTransactions&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | |   |       ->02.66% (22,020,097B) 0x52E7C5: Chainstate::ActivateBestChainStep(BlockValidationState&, CBlockIndex*, std::shared_ptr<CBlock const> const&, bool&, ConnectTrace&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | |   |         ->02.66% (22,020,097B) 0x52EEA3: Chainstate::ActivateBestChain(BlockValidationState&, std::shared_ptr<CBlock const>) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | |   |           ->02.66% (22,020,097B) 0x30AD44: node::ImportBlocks(ChainstateManager&, std::span<fs::path const, 18446744073709551615ul>) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | |   |             ->02.66% (22,020,097B) 0x27800F: std::_Function_handler<void (), AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::{lambda()\r\n| | |   |               ->02.66% (22,020,097B) 0x941FCE: util::TraceThread(std::basic_string_view<char, std::char_traits<char> >, std::function<void ()>) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | |   |                 ->02.66% (22,020,097B) 0x2669BA: std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(std::basic_string_view<char, std::char_traits<char> >, std::function<void ()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::{lambda()\r\n| | |   |                   ->02.66% (22,020,097B) 0x4B11DB3: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33)\r\n| | |   |                     ->02.66% (22,020,097B) 0x4E56AA3: start_thread (pthread_create.c:447)\r\n| | |   |                       ->02.66% (22,020,097B) 0x4EE3A33: clone (clone.S:100)\r\n| | |   |\r\n| | |   ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)\r\n| | |\r\n| | ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)\r\n| |\r\n| ->00.08% (660,773B) in 1+ places, all below ms_print's threshold (01.00%)\r\n|\r\n->01.75% (14,502,982B) in 1391 places, all below massif's threshold (1.00%)\r\n|\r\n->01.40% (11,577,224B) 0x31C9A9: std::_Hashtable<uint256, std::pair<uint256 const, CBlockIndex>, std::allocator<std::pair<uint256 const, CBlockIndex> >, std::__detail::_Select1st, std::equal_to<uint256>, BlockHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<uint256 const, CBlockIndex>, true>*, unsigned long) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n  ->01.40% (11,577,224B) 0x30D5ED: node::BlockManager::InsertBlockIndex(uint256 const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n    ->01.40% (11,577,224B) 0x311503: kernel::BlockTreeDB::LoadBlockIndexGuts(Consensus::Params const&, std::function<CBlockIndex* (uint256 const&)>, util::SignalInterrupt const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n    | ->01.40% (11,577,224B) 0x311900: node::BlockManager::LoadBlockIndex(std::optional<uint256> const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n    |   ->01.40% (11,577,224B) 0x31238C: node::BlockManager::LoadBlockIndexDB(std::optional<uint256> const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n    |     ->01.40% (11,577,224B) 0x52449F: ChainstateManager::LoadBlockIndex() (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n    |       ->01.40% (11,577,224B) 0x320D97: node::CompleteChainstateInitialization(ChainstateManager&, node::ChainstateLoadOptions const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n    |         ->01.40% (11,577,224B) 0x321F52: node::LoadChainstate(ChainstateManager&, kernel::CacheSizes const&, node::ChainstateLoadOptions const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n    |           ->01.40% (11,577,224B) 0x2726C4: InitAndLoadChainstate(node::NodeContext&, bool, bool, kernel::CacheSizes const&, ArgsManager const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n    |             ->01.40% (11,577,224B) 0x27BDAF: AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n    |               ->01.40% (11,577,224B) 0x23CB15: main (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n    |\r\n    ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)\r\n```\r\n</details>\r\n\r\n\r\n<details>\r\n<summary>4228018ace848adcafd197776cbb4afc2400bf16 - 371,195,904B for nodes + 47,738,776B for buckets = ~400MiB dbcache usage</summary>\r\n\r\n```\r\n->47.01% (371,195,904B) 0x7D4622: std::__detail::_Hash_node<std::pair<COutPoint const, CCoinsCacheEntry>, false>* std::__detail::_Hashtable_alloc<PoolAllocator<std::__detail::_Hash_node<std::pair<COutPoint const, CCoinsCacheEntry>, false>, 144ul, 8ul> >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<COutPoint const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<COutPoint const&>&&, std::tuple<>&&) [clone .isra.0] (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| ->30.41% (240,123,904B) 0x7D54C2: CCoinsViewCache::FetchCoin(COutPoint const&) const (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | ->30.41% (240,123,904B) 0x7D5589: CCoinsViewCache::GetCoin(COutPoint const&) const (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | | ->30.41% (240,123,904B) 0x7D53BA: CCoinsViewCache::FetchCoin(COutPoint const&) const (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | |   ->30.41% (240,123,904B) 0x7D58BA: CCoinsViewCache::HaveInputs(CTransaction const&) const (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | |   | ->30.41% (240,123,904B) 0x594022: Consensus::CheckTxInputs(CTransaction const&, TxValidationState&, CCoinsViewCache const&, int, long&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | |   |   ->30.41% (240,123,904B) 0x518DB3: Chainstate::ConnectBlock(CBlock const&, BlockValidationState&, CBlockIndex*, CCoinsViewCache&, bool) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | |   |     ->30.41% (240,123,904B) 0x527F08: Chainstate::ConnectTip(BlockValidationState&, CBlockIndex*, std::shared_ptr<CBlock const> const&, ConnectTrace&, DisconnectedBlockTransactions&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | |   |       ->30.41% (240,123,904B) 0x52EA05: Chainstate::ActivateBestChainStep(BlockValidationState&, CBlockIndex*, std::shared_ptr<CBlock const> const&, bool&, ConnectTrace&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | |   |         ->30.41% (240,123,904B) 0x52F0E3: Chainstate::ActivateBestChain(BlockValidationState&, std::shared_ptr<CBlock const>) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | |   |           ->30.41% (240,123,904B) 0x30AE04: node::ImportBlocks(ChainstateManager&, std::span<fs::path const, 18446744073709551615ul>) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | |   |             ->30.41% (240,123,904B) 0x27804F: std::_Function_handler<void (), AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::{lambda()\r\n| | |   |               ->30.41% (240,123,904B) 0x94234E: util::TraceThread(std::basic_string_view<char, std::char_traits<char> >, std::function<void ()>) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | |   |                 ->30.41% (240,123,904B) 0x2669FA: std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(std::basic_string_view<char, std::char_traits<char> >, std::function<void ()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::{lambda()\r\n| | |   |                   ->30.41% (240,123,904B) 0x4B11DB3: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33)\r\n| | |   |                     ->30.41% (240,123,904B) 0x4E56AA3: start_thread (pthread_create.c:447)\r\n| | |   |                       ->30.41% (240,123,904B) 0x4EE3A33: clone (clone.S:100)\r\n| | |   |\r\n| | |   ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)\r\n| | |\r\n| | ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)\r\n| |\r\n| ->16.60% (131,072,000B) 0x7D632B: CCoinsViewCache::BatchWrite(CoinsViewCacheCursor&, uint256 const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | ->16.60% (131,072,000B) 0x7D4FB5: CCoinsViewCache::Flush() (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |   ->16.60% (131,072,000B) 0x528398: Chainstate::ConnectTip(BlockValidationState&, CBlockIndex*, std::shared_ptr<CBlock const> const&, ConnectTrace&, DisconnectedBlockTransactions&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |     ->16.60% (131,072,000B) 0x52EA05: Chainstate::ActivateBestChainStep(BlockValidationState&, CBlockIndex*, std::shared_ptr<CBlock const> const&, bool&, ConnectTrace&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |       ->16.60% (131,072,000B) 0x52F0E3: Chainstate::ActivateBestChain(BlockValidationState&, std::shared_ptr<CBlock const>) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |         ->16.60% (131,072,000B) 0x30AE04: node::ImportBlocks(ChainstateManager&, std::span<fs::path const, 18446744073709551615ul>) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |           ->16.60% (131,072,000B) 0x27804F: std::_Function_handler<void (), AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::{lambda()\r\n| |             ->16.60% (131,072,000B) 0x94234E: util::TraceThread(std::basic_string_view<char, std::char_traits<char> >, std::function<void ()>) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |               ->16.60% (131,072,000B) 0x2669FA: std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(std::basic_string_view<char, std::char_traits<char> >, std::function<void ()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::{lambda()\r\n| |                 ->16.60% (131,072,000B) 0x4B11DB3: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33)\r\n| |                   ->16.60% (131,072,000B) 0x4E56AA3: start_thread (pthread_create.c:447)\r\n| |                     ->16.60% (131,072,000B) 0x4EE3A33: clone (clone.S:100)\r\n| |\r\n| ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)\r\n|\r\n->22.74% (179,561,400B) 0x30D669: node::BlockManager::InsertBlockIndex(uint256 const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| ->11.38% (89,842,600B) 0x3115A9: kernel::BlockTreeDB::LoadBlockIndexGuts(Consensus::Params const&, std::function<CBlockIndex* (uint256 const&)>, util::SignalInterrupt const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | ->11.38% (89,842,600B) 0x3119C0: node::BlockManager::LoadBlockIndex(std::optional<uint256> const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |   ->11.38% (89,842,600B) 0x31244C: node::BlockManager::LoadBlockIndexDB(std::optional<uint256> const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |     ->11.38% (89,842,600B) 0x5246DF: ChainstateManager::LoadBlockIndex() (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |       ->11.38% (89,842,600B) 0x320E57: node::CompleteChainstateInitialization(ChainstateManager&, node::ChainstateLoadOptions const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |         ->11.38% (89,842,600B) 0x322012: node::LoadChainstate(ChainstateManager&, kernel::CacheSizes const&, node::ChainstateLoadOptions const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |           ->11.38% (89,842,600B) 0x272704: InitAndLoadChainstate(node::NodeContext&, bool, bool, kernel::CacheSizes const&, ArgsManager const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |             ->11.38% (89,842,600B) 0x27BDEF: AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |               ->11.38% (89,842,600B) 0x23CB55: main (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |\r\n| ->11.36% (89,718,800B) 0x3115C3: kernel::BlockTreeDB::LoadBlockIndexGuts(Consensus::Params const&, std::function<CBlockIndex* (uint256 const&)>, util::SignalInterrupt const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|   ->11.36% (89,718,800B) 0x3119C0: node::BlockManager::LoadBlockIndex(std::optional<uint256> const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|     ->11.36% (89,718,800B) 0x31244C: node::BlockManager::LoadBlockIndexDB(std::optional<uint256> const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|       ->11.36% (89,718,800B) 0x5246DF: ChainstateManager::LoadBlockIndex() (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|         ->11.36% (89,718,800B) 0x320E57: node::CompleteChainstateInitialization(ChainstateManager&, node::ChainstateLoadOptions const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|           ->11.36% (89,718,800B) 0x322012: node::LoadChainstate(ChainstateManager&, kernel::CacheSizes const&, node::ChainstateLoadOptions const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|             ->11.36% (89,718,800B) 0x272704: InitAndLoadChainstate(node::NodeContext&, bool, bool, kernel::CacheSizes const&, ArgsManager const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|               ->11.36% (89,718,800B) 0x27BDEF: AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|                 ->11.36% (89,718,800B) 0x23CB55: main (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|\r\n->07.13% (56,274,944B) 0x7B7CAD: leveldb::Arena::AllocateNewBlock(unsigned long) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| ->07.13% (56,274,944B) 0x7B7E10: leveldb::Arena::AllocateFallback(unsigned long) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | ->05.34% (42,160,128B) 0x79D1A0: leveldb::MemTable::Add(unsigned long, leveldb::ValueType, leveldb::Slice const&, leveldb::Slice const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | | ->03.32% (26,202,112B) 0x7AE96A: leveldb::WriteBatch::Iterate(leveldb::WriteBatch::Handler*) const (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | | | ->03.32% (26,202,112B) 0x7AEF24: leveldb::WriteBatchInternal::InsertInto(leveldb::WriteBatch const*, leveldb::MemTable*) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | | |   ->03.32% (26,202,112B) 0x78AE7F: leveldb::DBImpl::Write(leveldb::WriteOptions const&, leveldb::WriteBatch*) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | | |     ->03.32% (26,202,112B) 0x59734D: CDBWrapper::WriteBatch(CDBBatch&, bool) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | | |       ->03.32% (26,202,112B) 0x4DE55F: CCoinsViewDB::BatchWrite(CoinsViewCacheCursor&, uint256 const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | | |       | ->03.32% (26,202,112B) 0x7D4FB5: CCoinsViewCache::Flush() (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | | |       |   ->03.32% (26,202,112B) 0x525874: Chainstate::FlushStateToDisk(BlockValidationState&, FlushStateMode, int) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | | |       |     ->03.32% (26,202,112B) 0x528617: Chainstate::ConnectTip(BlockValidationState&, CBlockIndex*, std::shared_ptr<CBlock const> const&, ConnectTrace&, DisconnectedBlockTransactions&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | | |       |       ->03.32% (26,202,112B) 0x52EA05: Chainstate::ActivateBestChainStep(BlockValidationState&, CBlockIndex*, std::shared_ptr<CBlock const> const&, bool&, ConnectTrace&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | | |       |         ->03.32% (26,202,112B) 0x52F0E3: Chainstate::ActivateBestChain(BlockValidationState&, std::shared_ptr<CBlock const>) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | | |       |           ->03.32% (26,202,112B) 0x30AE04: node::ImportBlocks(ChainstateManager&, std::span<fs::path const, 18446744073709551615ul>) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | | |       |             ->03.32% (26,202,112B) 0x27804F: std::_Function_handler<void (), AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::{lambda()\r\n| | | |       |               ->03.32% (26,202,112B) 0x94234E: util::TraceThread(std::basic_string_view<char, std::char_traits<char> >, std::function<void ()>) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | | |       |                 ->03.32% (26,202,112B) 0x2669FA: std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(std::basic_string_view<char, std::char_traits<char> >, std::function<void ()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::{lambda()\r\n| | | |       |                   ->03.32% (26,202,112B) 0x4B11DB3: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33)\r\n| | | |       |                     ->03.32% (26,202,112B) 0x4E56AA3: start_thread (pthread_create.c:447)\r\n| | | |       |                       ->03.32% (26,202,112B) 0x4EE3A33: clone (clone.S:100)\r\n| | | |       |\r\n| | | |       ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)\r\n| | | |\r\n| | | ->02.02% (15,958,016B) 0x7AE893: leveldb::WriteBatch::Iterate(leveldb::WriteBatch::Handler*) const (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | |   ->02.02% (15,958,016B) 0x7AEF24: leveldb::WriteBatchInternal::InsertInto(leveldb::WriteBatch const*, leveldb::MemTable*) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | |     ->02.02% (15,958,016B) 0x78AE7F: leveldb::DBImpl::Write(leveldb::WriteOptions const&, leveldb::WriteBatch*) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | |       ->02.02% (15,958,016B) 0x59734D: CDBWrapper::WriteBatch(CDBBatch&, bool) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | |         ->02.02% (15,953,920B) 0x4DE55F: CCoinsViewDB::BatchWrite(CoinsViewCacheCursor&, uint256 const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | |         | ->02.02% (15,953,920B) 0x7D4FB5: CCoinsViewCache::Flush() (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | |         |   ->02.02% (15,953,920B) 0x525874: Chainstate::FlushStateToDisk(BlockValidationState&, FlushStateMode, int) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | |         |     ->02.02% (15,953,920B) 0x528617: Chainstate::ConnectTip(BlockValidationState&, CBlockIndex*, std::shared_ptr<CBlock const> const&, ConnectTrace&, DisconnectedBlockTransactions&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | |         |       ->02.02% (15,953,920B) 0x52EA05: Chainstate::ActivateBestChainStep(BlockValidationState&, CBlockIndex*, std::shared_ptr<CBlock const> const&, bool&, ConnectTrace&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | |         |         ->02.02% (15,953,920B) 0x52F0E3: Chainstate::ActivateBestChain(BlockValidationState&, std::shared_ptr<CBlock const>) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | |         |           ->02.02% (15,953,920B) 0x30AE04: node::ImportBlocks(ChainstateManager&, std::span<fs::path const, 18446744073709551615ul>) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | |         |             ->02.02% (15,953,920B) 0x27804F: std::_Function_handler<void (), AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::{lambda()\r\n| | |         |               ->02.02% (15,953,920B) 0x94234E: util::TraceThread(std::basic_string_view<char, std::char_traits<char> >, std::function<void ()>) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | |         |                 ->02.02% (15,953,920B) 0x2669FA: std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(std::basic_string_view<char, std::char_traits<char> >, std::function<void ()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::{lambda()\r\n| | |         |                   ->02.02% (15,953,920B) 0x4B11DB3: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33)\r\n| | |         |                     ->02.02% (15,953,920B) 0x4E56AA3: start_thread (pthread_create.c:447)\r\n| | |         |                       ->02.02% (15,953,920B) 0x4EE3A33: clone (clone.S:100)\r\n| | |         |\r\n| | |         ->00.00% (4,096B) in 1+ places, all below ms_print's threshold (01.00%)\r\n| | |\r\n| | ->01.79% (14,114,816B) 0x7B7EDC: leveldb::Arena::AllocateAligned(unsigned long) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |   ->01.79% (14,102,528B) 0x79DB59: leveldb::SkipList<char const*, leveldb::MemTable::KeyComparator>::Insert(char const* const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |   | ->01.79% (14,102,528B) 0x79D16B: leveldb::MemTable::Add(unsigned long, leveldb::ValueType, leveldb::Slice const&, leveldb::Slice const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |   |   ->01.28% (10,133,504B) 0x7AE96A: leveldb::WriteBatch::Iterate(leveldb::WriteBatch::Handler*) const (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |   |   | ->01.28% (10,133,504B) 0x7AEF24: leveldb::WriteBatchInternal::InsertInto(leveldb::WriteBatch const*, leveldb::MemTable*) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |   |   |   ->01.28% (10,133,504B) 0x78AE7F: leveldb::DBImpl::Write(leveldb::WriteOptions const&, leveldb::WriteBatch*) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |   |   |     ->01.28% (10,133,504B) 0x59734D: CDBWrapper::WriteBatch(CDBBatch&, bool) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |   |   |       ->01.28% (10,133,504B) 0x4DE55F: CCoinsViewDB::BatchWrite(CoinsViewCacheCursor&, uint256 const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |   |   |       | ->01.28% (10,133,504B) 0x7D4FB5: CCoinsViewCache::Flush() (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |   |   |       |   ->01.28% (10,133,504B) 0x525874: Chainstate::FlushStateToDisk(BlockValidationState&, FlushStateMode, int) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |   |   |       |     ->01.28% (10,133,504B) 0x528617: Chainstate::ConnectTip(BlockValidationState&, CBlockIndex*, std::shared_ptr<CBlock const> const&, ConnectTrace&, DisconnectedBlockTransactions&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |   |   |       |       ->01.28% (10,133,504B) 0x52EA05: Chainstate::ActivateBestChainStep(BlockValidationState&, CBlockIndex*, std::shared_ptr<CBlock const> const&, bool&, ConnectTrace&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |   |   |       |         ->01.28% (10,133,504B) 0x52F0E3: Chainstate::ActivateBestChain(BlockValidationState&, std::shared_ptr<CBlock const>) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |   |   |       |           ->01.28% (10,133,504B) 0x30AE04: node::ImportBlocks(ChainstateManager&, std::span<fs::path const, 18446744073709551615ul>) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |   |   |       |             ->01.28% (10,133,504B) 0x27804F: std::_Function_handler<void (), AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::{lambda()\r\n| |   |   |       |               ->01.28% (10,133,504B) 0x94234E: util::TraceThread(std::basic_string_view<char, std::char_traits<char> >, std::function<void ()>) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |   |   |       |                 ->01.28% (10,133,504B) 0x2669FA: std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(std::basic_string_view<char, std::char_traits<char> >, std::function<void ()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::{lambda()\r\n| |   |   |       |                   ->01.28% (10,133,504B) 0x4B11DB3: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33)\r\n| |   |   |       |                     ->01.28% (10,133,504B) 0x4E56AA3: start_thread (pthread_create.c:447)\r\n| |   |   |       |                       ->01.28% (10,133,504B) 0x4EE3A33: clone (clone.S:100)\r\n| |   |   |       |\r\n| |   |   |       ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)\r\n| |   |   |\r\n| |   |   ->00.50% (3,969,024B) in 1+ places, all below ms_print's threshold (01.00%)\r\n| |   |\r\n| |   ->00.00% (12,288B) in 1+ places, all below ms_print's threshold (01.00%)\r\n| |\r\n| ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)\r\n|\r\n->06.05% (47,738,776B) 0x7D76AC: std::__detail::_Hashtable_alloc<PoolAllocator<std::__detail::_Hash_node<std::pair<COutPoint const, CCoinsCacheEntry>, false>, 144ul, 8ul> >::_M_allocate_buckets(unsigned long) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| ->06.05% (47,738,776B) 0x7D78D8: std::_Hashtable<COutPoint, std::pair<COutPoint const, CCoinsCacheEntry>, PoolAllocator<std::pair<COutPoint const, CCoinsCacheEntry>, 144ul, 8ul>, std::__detail::_Select1st, std::equal_to<COutPoint>, SaltedOutpointHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<COutPoint const, CCoinsCacheEntry>, false>*, unsigned long) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|   ->06.05% (47,738,776B) 0x7D54DE: CCoinsViewCache::FetchCoin(COutPoint const&) const (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|   | ->06.05% (47,738,776B) 0x7D5589: CCoinsViewCache::GetCoin(COutPoint const&) const (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|   | | ->06.05% (47,738,776B) 0x7D53BA: CCoinsViewCache::FetchCoin(COutPoint const&) const (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|   | |   ->06.05% (47,738,776B) 0x7D58BA: CCoinsViewCache::HaveInputs(CTransaction const&) const (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|   | |   | ->06.05% (47,738,776B) 0x594022: Consensus::CheckTxInputs(CTransaction const&, TxValidationState&, CCoinsViewCache const&, int, long&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|   | |   |   ->06.05% (47,738,776B) 0x518DB3: Chainstate::ConnectBlock(CBlock const&, BlockValidationState&, CBlockIndex*, CCoinsViewCache&, bool) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|   | |   |     ->06.05% (47,738,776B) 0x527F08: Chainstate::ConnectTip(BlockValidationState&, CBlockIndex*, std::shared_ptr<CBlock const> const&, ConnectTrace&, DisconnectedBlockTransactions&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|   | |   |       ->06.05% (47,738,776B) 0x52EA05: Chainstate::ActivateBestChainStep(BlockValidationState&, CBlockIndex*, std::shared_ptr<CBlock const> const&, bool&, ConnectTrace&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|   | |   |         ->06.05% (47,738,776B) 0x52F0E3: Chainstate::ActivateBestChain(BlockValidationState&, std::shared_ptr<CBlock const>) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|   | |   |           ->06.05% (47,738,776B) 0x30AE04: node::ImportBlocks(ChainstateManager&, std::span<fs::path const, 18446744073709551615ul>) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|   | |   |             ->06.05% (47,738,776B) 0x27804F: std::_Function_handler<void (), AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::{lambda()\r\n|   | |   |               ->06.05% (47,738,776B) 0x94234E: util::TraceThread(std::basic_string_view<char, std::char_traits<char> >, std::function<void ()>) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|   | |   |                 ->06.05% (47,738,776B) 0x2669FA: std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(std::basic_string_view<char, std::char_traits<char> >, std::function<void ()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::{lambda()\r\n|   | |   |                   ->06.05% (47,738,776B) 0x4B11DB3: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33)\r\n|   | |   |                     ->06.05% (47,738,776B) 0x4E56AA3: start_thread (pthread_create.c:447)\r\n|   | |   |                       ->06.05% (47,738,776B) 0x4EE3A33: clone (clone.S:100)\r\n|   | |   |\r\n|   | |   ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)\r\n|   | |\r\n|   | ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)\r\n|   |\r\n|   ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)\r\n|\r\n->04.25% (33,554,432B) 0x553700: std::vector<uint256, std::allocator<uint256> >::_M_default_append(unsigned long) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| ->02.12% (16,777,216B) 0x539DBD: ValidationCache::ValidationCache(unsigned long, unsigned long) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | ->02.12% (16,777,216B) 0x53AECC: ChainstateManager::ChainstateManager(util::SignalInterrupt const&, kernel::ChainstateManagerOpts, kernel::BlockManagerOpts) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |   ->02.12% (16,777,216B) 0x272179: InitAndLoadChainstate(node::NodeContext&, bool, bool, kernel::CacheSizes const&, ArgsManager const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |     ->02.12% (16,777,216B) 0x27BDEF: AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |       ->02.12% (16,777,216B) 0x23CB55: main (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| |\r\n| ->02.12% (16,777,216B) 0x5ED041: SignatureCache::SignatureCache(unsigned long) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|   ->02.12% (16,777,216B) 0x539B1D: ValidationCache::ValidationCache(unsigned long, unsigned long) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|     ->02.12% (16,777,216B) 0x53AECC: ChainstateManager::ChainstateManager(util::SignalInterrupt const&, kernel::ChainstateManagerOpts, kernel::BlockManagerOpts) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|       ->02.12% (16,777,216B) 0x272179: InitAndLoadChainstate(node::NodeContext&, bool, bool, kernel::CacheSizes const&, ArgsManager const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|         ->02.12% (16,777,216B) 0x27BDEF: AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|           ->02.12% (16,777,216B) 0x23CB55: main (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|\r\n->02.94% (23,223,062B) 0x2628C2: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| ->02.79% (22,020,097B) 0x7BA3A9: leveldb::PutLengthPrefixedSlice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, leveldb::Slice const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | ->02.79% (22,020,097B) 0x59680D: CDBBatch::WriteImpl(std::span<std::byte const, 18446744073709551615ul>, DataStream&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | | ->02.79% (22,020,097B) 0x4DE3D8: CCoinsViewDB::BatchWrite(CoinsViewCacheCursor&, uint256 const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | | | ->02.79% (22,020,097B) 0x7D4FB5: CCoinsViewCache::Flush() (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | | |   ->02.79% (22,020,097B) 0x525874: Chainstate::FlushStateToDisk(BlockValidationState&, FlushStateMode, int) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | | |     ->02.79% (22,020,097B) 0x528617: Chainstate::ConnectTip(BlockValidationState&, CBlockIndex*, std::shared_ptr<CBlock const> const&, ConnectTrace&, DisconnectedBlockTransactions&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | | |       ->02.79% (22,020,097B) 0x52EA05: Chainstate::ActivateBestChainStep(BlockValidationState&, CBlockIndex*, std::shared_ptr<CBlock const> const&, bool&, ConnectTrace&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | | |         ->02.79% (22,020,097B) 0x52F0E3: Chainstate::ActivateBestChain(BlockValidationState&, std::shared_ptr<CBlock const>) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | | |           ->02.79% (22,020,097B) 0x30AE04: node::ImportBlocks(ChainstateManager&, std::span<fs::path const, 18446744073709551615ul>) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | | |             ->02.79% (22,020,097B) 0x27804F: std::_Function_handler<void (), AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::{lambda()\r\n| | | |               ->02.79% (22,020,097B) 0x94234E: util::TraceThread(std::basic_string_view<char, std::char_traits<char> >, std::function<void ()>) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| | | |                 ->02.79% (22,020,097B) 0x2669FA: std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(std::basic_string_view<char, std::char_traits<char> >, std::function<void ()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::{lambda()\r\n| | | |                   ->02.79% (22,020,097B) 0x4B11DB3: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33)\r\n| | | |                     ->02.79% (22,020,097B) 0x4E56AA3: start_thread (pthread_create.c:447)\r\n| | | |                       ->02.79% (22,020,097B) 0x4EE3A33: clone (clone.S:100)\r\n| | | |\r\n| | | ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)\r\n| | |\r\n| | ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)\r\n| |\r\n| ->00.15% (1,202,965B) in 1+ places, all below ms_print's threshold (01.00%)\r\n|\r\n->02.63% (20,761,810B) in 1447 places, all below massif's threshold (1.00%)\r\n|\r\n->01.81% (14,280,200B) 0x522FC0: Chainstate::TryAddBlockIndexCandidate(CBlockIndex*) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| ->01.81% (14,280,200B) 0x524A7A: ChainstateManager::LoadBlockIndex() (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|   ->01.81% (14,280,200B) 0x320E57: node::CompleteChainstateInitialization(ChainstateManager&, node::ChainstateLoadOptions const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|     ->01.81% (14,280,200B) 0x322012: node::LoadChainstate(ChainstateManager&, kernel::CacheSizes const&, node::ChainstateLoadOptions const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|       ->01.81% (14,280,200B) 0x272704: InitAndLoadChainstate(node::NodeContext&, bool, bool, kernel::CacheSizes const&, ArgsManager const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|         ->01.81% (14,280,200B) 0x27BDEF: AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|           ->01.81% (14,280,200B) 0x23CB55: main (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|\r\n->01.47% (11,577,224B) 0x31CA69: std::_Hashtable<uint256, std::pair<uint256 const, CBlockIndex>, std::allocator<std::pair<uint256 const, CBlockIndex> >, std::__detail::_Select1st, std::equal_to<uint256>, BlockHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<uint256 const, CBlockIndex>, true>*, unsigned long) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n| ->01.47% (11,577,224B) 0x30D6AD: node::BlockManager::InsertBlockIndex(uint256 const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|   ->01.47% (11,577,224B) 0x3115C3: kernel::BlockTreeDB::LoadBlockIndexGuts(Consensus::Params const&, std::function<CBlockIndex* (uint256 const&)>, util::SignalInterrupt const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|   | ->01.47% (11,577,224B) 0x3119C0: node::BlockManager::LoadBlockIndex(std::optional<uint256> const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|   |   ->01.47% (11,577,224B) 0x31244C: node::BlockManager::LoadBlockIndexDB(std::optional<uint256> const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|   |     ->01.47% (11,577,224B) 0x5246DF: ChainstateManager::LoadBlockIndex() (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|   |       ->01.47% (11,577,224B) 0x320E57: node::CompleteChainstateInitialization(ChainstateManager&, node::ChainstateLoadOptions const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|   |         ->01.47% (11,577,224B) 0x322012: node::LoadChainstate(ChainstateManager&, kernel::CacheSizes const&, node::ChainstateLoadOptions const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|   |           ->01.47% (11,577,224B) 0x272704: InitAndLoadChainstate(node::NodeContext&, bool, bool, kernel::CacheSizes const&, ArgsManager const&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|   |             ->01.47% (11,577,224B) 0x27BDEF: AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|   |               ->01.47% (11,577,224B) 0x23CB55: main (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n|   |\r\n|   ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)\r\n|\r\n->01.06% (8,388,608B) 0x7CFA4D: std::vector<CBlockIndex*, std::allocator<CBlockIndex*> >::_M_default_append(unsigned long) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n  ->01.06% (8,388,608B) 0x7CF99A: CChain::SetTip(CBlockIndex&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n    ->01.06% (8,388,608B) 0x528699: Chainstate::ConnectTip(BlockValidationState&, CBlockIndex*, std::shared_ptr<CBlock const> const&, ConnectTrace&, DisconnectedBlockTransactions&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n      ->01.06% (8,388,608B) 0x52EA05: Chainstate::ActivateBestChainStep(BlockValidationState&, CBlockIndex*, std::shared_ptr<CBlock const> const&, bool&, ConnectTrace&) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n        ->01.06% (8,388,608B) 0x52F0E3: Chainstate::ActivateBestChain(BlockValidationState&, std::shared_ptr<CBlock const>) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n          ->01.06% (8,388,608B) 0x30AE04: node::ImportBlocks(ChainstateManager&, std::span<fs::path const, 18446744073709551615ul>) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n            ->01.06% (8,388,608B) 0x27804F: std::_Function_handler<void (), AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::{lambda()\r\n              ->01.06% (8,388,608B) 0x94234E: util::TraceThread(std::basic_string_view<char, std::char_traits<char> >, std::function<void ()>) (in /mnt/my_storage/bitcoin/build/bin/bitcoind)\r\n                ->01.06% (8,388,608B) 0x2669FA: std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(std::basic_string_view<char, std::char_traits<char> >, std::function<void ()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::{lambda()\r\n                  ->01.06% (8,388,608B) 0x4B11DB3: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33)\r\n                    ->01.06% (8,388,608B) 0x4E56AA3: start_thread (pthread_create.c:447)\r\n                      ->01.06% (8,388,608B) 0x4EE3A33: clone (clone.S:100)\r\n```\r\n</details>\r\n\r\nWhich reveals that the the new `MallocUsage` formula overestimates node allocations, allowing fewer coins in the cache.\r\nPlotting the number of cache coins over time is also revealing:\r\n![cache_coins_vs_time](https://github.com/user-attachments/assets/1bad9a83-d089-495f-80bc-5ae2f32369c2)\r\n\r\nThe actual memory allocated for the bucket arrays of the cache appears identical at peak times.\r\nI found it surprising that the two measurements resulted in *exactly* the same bucket sizes - and how precisely master estimated the dbcache size (at least with GCC).\r\n\r\n-----\r\n\r\nI would expect clang to behave slightly differently - but it takes a week to measure these, so I would like some explanations first before I spend more time re-measuring the scenarios, since it seems that MallocUsage accuracy was already surprisingly accurate.\r\n",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#issuecomment-2939315304",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28531"
    },
    {
      "event": "labeled",
      "id": 18030840525,
      "node_id": "LE_lADOABII585x_FI8zwAAAAQyuMrN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18030840525",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-07T01:13:32Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2951375632,
      "node_id": "IC_kwDOABII586v6msQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2951375632",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-07T01:13:33Z",
      "updated_at": "2025-06-07T01:13:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Task `no wallet, libbitcoinkernel`: https://github.com/bitcoin/bitcoin/runs/43652579216</sub>\n<sub>LLM reason (✨ experimental): The CI failure is caused by compilation errors due to compiler flags treating unused private fields as errors.</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#issuecomment-2951375632",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28531"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDI0NjMwMDY5YWQyZjMyMmIxNGEyMDUwOWQ4MzJmZjdkMDllZjhkNTY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/24630069ad2f322b14a20509d832ff7d09ef8d56",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/24630069ad2f322b14a20509d832ff7d09ef8d56",
      "tree": {
        "sha": "5d668e6665df7d9ecf368b0352ec5aef53a4315e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5d668e6665df7d9ecf368b0352ec5aef53a4315e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3f83c744ac28b700090e15b5dda2260724a56f49",
          "sha": "3f83c744ac28b700090e15b5dda2260724a56f49",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3f83c744ac28b700090e15b5dda2260724a56f49"
        }
      ],
      "message": "improve MallocUsage() accuracy\n\nCo-authored-by: Sebastian Falbesoner <sebastian.falbesoner@gmail.com>\nCo-authored-by: Pieter Wuille <pieter@wuille.net>\nCo-authored-by: Martin Leitner-Ankerl <martin.ankerl@gmail.com>\nCo-authored-by: l0rinc <pap.lorinc@gmail.com>\n\n# Changes to test/functional/test_framework/mempool_util.py:\n\n## fill_mempool() should call sync_mempools() before returning\n\nWe saw a case where a test (p2p_1p1c_network.py) called\nraise_network_minfee(), which called fill_mempool() using node 0.\n\nThen raise_network_minfee() returned, and the test called rescan_utxos(),\nwhich called getrawmempool() using a different node (node 1) followed by\ngetrawtransaction() on each returned transaction, and the test asserted\nbecause a transaction was not found.\n\nThis was caused by the timing window between the call to getrawmempool()\nand fetching the individual transactions; the transactions were still\nbeing propagated on the P2P network. During this window, a transaction\n(returned by getrawmempool()) was evicted (the mempool is close to full\nduring this test), and did not exist in the mempool by the time it was\nattempted to be fetched.\n\nIt might make more sense for rescan_utxos() to call sync_mempools() just\nbefore calling getrawmempool(), but it can't because rescan_utxos() is\npart of the MiniWallet class, which doesn't have access to test_framework\n(but that could probably be changed).\n\n## ensure that `fill_mempool` leaves some room in mempool\n\nWithout this change, fill_mempool() may leave the mempool very close\nto its memory size limit (-maxmempool). This can cause tests to\nincorrectly fail when they submit another transaction expecting it\nto succeed. Note that without this change, the same test that fails on\none platform may succeed on another, because their memory allocation\naccounting algorithms (how they calculate memory usage, that is,\nMallocUsage()) may be slightly different.",
      "committer": {
        "name": "Larry Ruane",
        "email": "larryruane@gmail.com",
        "date": "2025-06-08T16:13:59Z"
      },
      "author": {
        "name": "Larry Ruane",
        "email": "larryruane@gmail.com",
        "date": "2025-06-08T16:13:59Z"
      },
      "sha": "24630069ad2f322b14a20509d832ff7d09ef8d56"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGIzNmIyMzQxOTdmMTg5ZGI3MjQxYjIwNjJiMzdjMGU5M2NmYzRlNzM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b36b234197f189db7241b2062b37c0e93cfc4e73",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b36b234197f189db7241b2062b37c0e93cfc4e73",
      "tree": {
        "sha": "85cbab3da96bb5ecb51a884dc26be3de63f5d9af",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/85cbab3da96bb5ecb51a884dc26be3de63f5d9af"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/24630069ad2f322b14a20509d832ff7d09ef8d56",
          "sha": "24630069ad2f322b14a20509d832ff7d09ef8d56",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/24630069ad2f322b14a20509d832ff7d09ef8d56"
        }
      ],
      "message": "temporary commit (don't merge), add MallocUsage tests\n\nThis commit is temporary because it makes one of the new tests fail\nintentionally so we can gather some information from CI across the\nplatforms. (second attempt, fixes CI error private field not used)",
      "committer": {
        "name": "Larry Ruane",
        "email": "larryruane@gmail.com",
        "date": "2025-06-08T16:15:26Z"
      },
      "author": {
        "name": "Larry Ruane",
        "email": "larryruane@gmail.com",
        "date": "2025-06-08T16:15:26Z"
      },
      "sha": "b36b234197f189db7241b2062b37c0e93cfc4e73"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18045420086,
      "node_id": "HRFPE_lADOABII585x_FI8zwAAAAQzl0I2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18045420086",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "commit_url": "https://api.github.com/repos/LarryRuane/bitcoin/commits/b36b234197f189db7241b2062b37c0e93cfc4e73",
      "created_at": "2025-06-08T16:17:17Z"
    },
    {
      "event": "reviewed",
      "id": 2908597962,
      "node_id": "PRR_kwDOABII586tXa7K",
      "url": null,
      "actor": null,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-06-08T18:15:34Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#pullrequestreview-2908597962",
      "submitted_at": "2025-06-08T18:15:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
    },
    {
      "event": "commented",
      "id": 2954239265,
      "node_id": "IC_kwDOABII586wFh0h",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2954239265",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-08T19:31:47Z",
      "updated_at": "2025-06-08T19:32:26Z",
      "author_association": "MEMBER",
      "body": "I wonder if perhaps it would be feasible to run a little runtime self-calibration at startup to find the malloc overhead parameters, so that they would be correct on all platforms.\n\nIt would make calls to `MallocUsage` much slower of course, but maybe not to such an extent that it is measurable.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#issuecomment-2954239265",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28531"
    },
    {
      "event": "commented",
      "id": 2960748073,
      "node_id": "IC_kwDOABII586weW4p",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2960748073",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-10T22:43:59Z",
      "updated_at": "2025-06-10T22:43:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "As @LarryRuane noticed, the new address-diff test sometimes disagrees with `MallocUsage` on macOS and on sanitizer builds.\r\n\r\nI had to read a bit to understand why - I never needed the gory details until now. 🙂\r\n\r\nIt seem to me that macOS's nano allocator, and the allocators used by TSan/ASan, store per-chunk metadata in shadow tables rather than inline with the user block. For example, this might be related to what we're seeing: https://github.com/aosm/libmalloc/blob/master/src/nano_malloc.c#L181.\r\nAnd because the test measures only the spacing between user-visible blocks, it doesn't account for that out-of-band metadata and ends up underreporting (e.g. it sees 16 bytes used when the real usage is 24). And let's not forget that we also have a specialized `PoolAllocator` which we should probably include in our testing to be able to measure the main memory hog properly.\r\n\r\nSo maybe we could specialize the tests by platform/compiler/arch/OS (without duplicating `MallocUsage` of course) - skipping sanitizers if they still behave differently - and only checking that our estimate is never lower, and if higher, not more than a fixed or a relative amount.\r\n\r\nI personally would avoid the runtime self-calibration path -  rather abstracting away our findings and generalizing it based on self-contained test behavior sounds more predictable to me.\r\n\r\nIf we decide to keep the current settings (even though my massif memory allocation measurements (which should actually measure everything instead of just hoping that it instruments every call) do show it to be less accurate), and if we're still over-counting in the end, we can probably increase the default `-dbcache` slightly to adjust for the calculation difference.\r\nThat's why I'm trying to remeasure with `heaptrack` as well to know if it's just some bias of the tool.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#issuecomment-2960748073",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28531"
    },
    {
      "event": "mentioned",
      "id": 18083756944,
      "node_id": "MEE_lADOABII585x_FI8zwAAAAQ14DuQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18083756944",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-10T22:44:00Z"
    },
    {
      "event": "subscribed",
      "id": 18083756959,
      "node_id": "SE_lADOABII585x_FI8zwAAAAQ14Duf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18083756959",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-10T22:44:00Z"
    },
    {
      "event": "commented",
      "id": 3089357219,
      "node_id": "IC_kwDOABII5864I9mj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3089357219",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-18T12:39:27Z",
      "updated_at": "2025-07-18T12:39:27Z",
      "author_association": "MEMBER",
      "body": "Could turn into draft while CI is red?",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#issuecomment-3089357219",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28531"
    },
    {
      "event": "convert_to_draft",
      "id": 18700521343,
      "node_id": "CTDE_lADOABII585x_FI8zwAAAARao09_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18700521343",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-18T13:10:44Z"
    },
    {
      "event": "referenced",
      "id": 18714058022,
      "node_id": "REFE_lADOABII585x_FI8zwAAAARbcd0m",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18714058022",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "34b7beb39c27c39bd4eb3dcd52a125ab0741b895",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/34b7beb39c27c39bd4eb3dcd52a125ab0741b895",
      "created_at": "2025-07-20T00:58:59Z"
    },
    {
      "event": "referenced",
      "id": 18714244682,
      "node_id": "REFE_lADOABII585x_FI8zwAAAARbdLZK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18714244682",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "090292848d144f995eb8e52ed61085e8b038a0bc",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/090292848d144f995eb8e52ed61085e8b038a0bc",
      "created_at": "2025-07-20T02:07:23Z"
    },
    {
      "event": "referenced",
      "id": 18714505871,
      "node_id": "REFE_lADOABII585x_FI8zwAAAARbeLKP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18714505871",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "dbadcdd826adb3fbddc6d7e9ee3b9705e78658a2",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/dbadcdd826adb3fbddc6d7e9ee3b9705e78658a2",
      "created_at": "2025-07-20T03:41:01Z"
    },
    {
      "event": "referenced",
      "id": 18714677829,
      "node_id": "REFE_lADOABII585x_FI8zwAAAARbe1JF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18714677829",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "4a393ce5999916c9d393ef55e5f1cd65e953de1f",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/4a393ce5999916c9d393ef55e5f1cd65e953de1f",
      "created_at": "2025-07-20T04:45:31Z"
    },
    {
      "event": "referenced",
      "id": 18714792583,
      "node_id": "REFE_lADOABII585x_FI8zwAAAARbfRKH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18714792583",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "966bbabbd69039a2c7a03429c783f7d6e6a7c2a7",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/966bbabbd69039a2c7a03429c783f7d6e6a7c2a7",
      "created_at": "2025-07-20T05:33:47Z"
    },
    {
      "event": "referenced",
      "id": 18717307463,
      "node_id": "REFE_lADOABII585x_FI8zwAAAARbo3JH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18717307463",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1027ac6a40d62fcc1cb8f676b083f542cb075c82",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/1027ac6a40d62fcc1cb8f676b083f542cb075c82",
      "created_at": "2025-07-20T16:48:29Z"
    },
    {
      "event": "referenced",
      "id": 18717409858,
      "node_id": "REFE_lADOABII585x_FI8zwAAAARbpQJC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18717409858",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b2d82668a57d4ab4eef310c25a2aebda18563677",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/b2d82668a57d4ab4eef310c25a2aebda18563677",
      "created_at": "2025-07-20T17:23:31Z"
    },
    {
      "event": "referenced",
      "id": 18863994789,
      "node_id": "REFE_lADOABII585x_FI8zwAAAARkYbel",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18863994789",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "554befd8738ea993b3b555e7366558a9c32c915c",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/554befd8738ea993b3b555e7366558a9c32c915c",
      "created_at": "2025-07-28T20:17:49Z"
    },
    {
      "event": "labeled",
      "id": 18864079538,
      "node_id": "LE_lADOABII585x_FI8zwAAAARkYwKy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18864079538",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-28T20:24:47Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 3129520262,
      "node_id": "IC_kwDOABII5866iLCG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3129520262",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-28T20:24:49Z",
      "updated_at": "2025-07-28T20:24:49Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--cf906140f33d8803c4a75a2196329ecb-->\n🐙 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#issuecomment-3129520262",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28531"
    },
    {
      "event": "referenced",
      "id": 19099010917,
      "node_id": "REFE_lADOABII585x_FI8zwAAAARyY8dl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19099010917",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "273e600e65c2e31a6e9a0bd72b40672aaa503b08",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/273e600e65c2e31a6e9a0bd72b40672aaa503b08",
      "created_at": "2025-08-11T22:16:18Z"
    },
    {
      "event": "referenced",
      "id": 19683522622,
      "node_id": "REFE_lADOABII585x_FI8zwAAAASVOrg-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19683522622",
      "actor": {
        "login": "janus",
        "id": 6726,
        "node_id": "MDQ6VXNlcjY3MjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6726?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janus",
        "html_url": "https://github.com/janus",
        "followers_url": "https://api.github.com/users/janus/followers",
        "following_url": "https://api.github.com/users/janus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janus/subscriptions",
        "organizations_url": "https://api.github.com/users/janus/orgs",
        "repos_url": "https://api.github.com/users/janus/repos",
        "events_url": "https://api.github.com/users/janus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "691e339154fbdf9a47217984c3ae38c5ee26bf9e",
      "commit_url": "https://api.github.com/repos/BitgesellOfficial/bitgesell/commits/691e339154fbdf9a47217984c3ae38c5ee26bf9e",
      "created_at": "2025-09-14T06:31:36Z"
    },
    {
      "event": "unlabeled",
      "id": 19942405127,
      "node_id": "UNLE_lADOABII585x_FI8zwAAAASkqPQH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19942405127",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-26T12:00:34Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 20434469976,
      "node_id": "LE_lADOABII585x_FI8zwAAAATB_URY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20434469976",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-22T15:42:13Z",
      "label": {
        "name": "Up for grabs",
        "color": "99a810"
      }
    },
    {
      "event": "commented",
      "id": 3433075236,
      "node_id": "IC_kwDOABII587MoJIk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3433075236",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-22T15:42:28Z",
      "updated_at": "2025-10-22T15:42:28Z",
      "author_association": "MEMBER",
      "body": "Closing this as it has not had any activity in a while. If you are interested in continuing work on this, please leave a comment so that it can be reopened.\r\n\r\nMarking as up for grabs.\r\n\r\ncc @l0rinc @sipa ",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#issuecomment-3433075236",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28531"
    },
    {
      "event": "closed",
      "id": 20434475202,
      "node_id": "CE_lADOABII585x_FI8zwAAAATB_VjC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20434475202",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-22T15:42:28Z"
    },
    {
      "event": "mentioned",
      "id": 20434475757,
      "node_id": "MEE_lADOABII585x_FI8zwAAAATB_Vrt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20434475757",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-22T15:42:30Z"
    },
    {
      "event": "subscribed",
      "id": 20434475815,
      "node_id": "SE_lADOABII585x_FI8zwAAAATB_Vsn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20434475815",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-22T15:42:30Z"
    },
    {
      "event": "mentioned",
      "id": 20434475866,
      "node_id": "MEE_lADOABII585x_FI8zwAAAATB_Vta",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20434475866",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-22T15:42:30Z"
    },
    {
      "event": "subscribed",
      "id": 20434475892,
      "node_id": "SE_lADOABII585x_FI8zwAAAATB_Vt0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20434475892",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-22T15:42:30Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2002746377",
      "pull_request_review_id": 2697432959,
      "id": 2002746377,
      "node_id": "PRRC_kwDOABII5853X3wJ",
      "diff_hunk": "@@ -92,6 +93,14 @@ def send_batch(fee):\n         send_batch(fee)\n     tx_sync_fun() if tx_sync_fun else test_framework.sync_mempools()  # sync after all evictions\n \n+    # if mempool is almost full (<10k usage bytes left), submit one extra middle-sized tx,\n+    # in order to evict a large filler tx and leave some room; this will enable tests to submit\n+    # txs with just the mempoolminfee without immediate eviction (\"mempool full\" error)\n+    if node.getmempoolinfo()['usage'] >= 4_990_000:\n+        ephemeral_miniwallet.send_self_transfer(from_node=node, fee=num_of_batches * (base_fee / 2),\n+                                                utxo_to_spend=confirmed_utxos.pop(0), target_weight = 32500 * 4)",
      "path": "test/functional/test_framework/mempool_util.py",
      "position": 1,
      "original_position": 30,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "28dc1056263aadf84046b4112f5c61bbd7a6a15e",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "After https://github.com/bitcoin/bitcoin/pull/30718 this should likely be:\r\n```suggestion\r\n                                                utxo_to_spend=confirmed_utxos.pop(0), target_vsize=32500)\r\n```",
      "created_at": "2025-03-19T08:37:37Z",
      "updated_at": "2025-03-19T08:37:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2002746377",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2002746377"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 101,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2002868062",
      "pull_request_review_id": 2697495377,
      "id": 2002868062,
      "node_id": "PRRC_kwDOABII5853YVde",
      "diff_hunk": "@@ -48,19 +48,31 @@ template<typename X> static inline size_t DynamicUsage(const X * const &v) { ret\n  *  application data structures require more accurate inner accounting, they should\n  *  iterate themselves, or use more efficient caching + updating on modification.\n  */\n-\n static inline size_t MallocUsage(size_t alloc)",
      "path": "src/memusage.h",
      "position": 1,
      "original_position": 5,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "28dc1056263aadf84046b4112f5c61bbd7a6a15e",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "'inline' may be redundant on a global static function, but we should be able to make it `constexpr` regardless:\r\n```suggestion\r\nstatic constexpr size_t MallocUsage(size_t alloc)\r\n...\r\n    constexpr size_t overhead{sizeof(size_t)};\r\n```",
      "created_at": "2025-03-19T09:27:46Z",
      "updated_at": "2025-03-19T11:50:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2002868062",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2002868062"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2002883412",
      "pull_request_review_id": 2697495377,
      "id": 2002883412,
      "node_id": "PRRC_kwDOABII5853YZNU",
      "diff_hunk": "@@ -48,19 +48,31 @@ template<typename X> static inline size_t DynamicUsage(const X * const &v) { ret\n  *  application data structures require more accurate inner accounting, they should\n  *  iterate themselves, or use more efficient caching + updating on modification.\n  */\n-\n static inline size_t MallocUsage(size_t alloc)\n {\n-    // Measured on libc6 2.19 on Linux.\n-    if (alloc == 0) {\n-        return 0;\n-    } else if (sizeof(void*) == 8) {\n-        return ((alloc + 31) >> 4) << 4;\n-    } else if (sizeof(void*) == 4) {\n-        return ((alloc + 15) >> 3) << 3;\n-    } else {\n-        assert(0);\n-    }\n+    // There are few if any actual zero-length allocations; when\n+    // DynamicUsage(std::vector<X>& v) calls this function, and v.capacity() == 0,\n+    // for example, there has not been a zero-byte allocation (which would require\n+    // some physical space). std::vector has optimized this case. Experimental\n+    // evidence indicates the same is true of other data structures -- there are\n+    // no actual zero-length allocations observed, although of course this is\n+    // library-dependent.\n+    if (alloc == 0) return 0;\n+\n+    static constexpr size_t overhead = sizeof(void*);\n+#if defined(__arm__)\n+    // tested with ARM 32bit\n+    static constexpr size_t step = sizeof(void*) * 2;\n+    static constexpr size_t min_alloc = 9;\n+#else\n+    static constexpr size_t step = 16U;\n+    static constexpr size_t min_alloc = sizeof(void*) == 8 ? 9 : 0;\n+#endif\n+    // step should be nonzero and a power of 2\n+    static_assert(step > 0);\n+    static_assert((step & (step-1)) == 0);",
      "path": "src/memusage.h",
      "position": 1,
      "original_position": 37,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "28dc1056263aadf84046b4112f5c61bbd7a6a15e",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "we could use the C++20 https://en.cppreference.com/w/cpp/numeric/has_single_bit here:\r\n```suggestion\r\n    static_assert(std::has_single_bit(step));\r\n```",
      "created_at": "2025-03-19T09:35:22Z",
      "updated_at": "2025-03-19T11:06:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2002883412",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2002883412"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 73,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2002916382",
      "pull_request_review_id": 2697495377,
      "id": 2002916382,
      "node_id": "PRRC_kwDOABII5853YhQe",
      "diff_hunk": "@@ -48,19 +48,31 @@ template<typename X> static inline size_t DynamicUsage(const X * const &v) { ret\n  *  application data structures require more accurate inner accounting, they should\n  *  iterate themselves, or use more efficient caching + updating on modification.\n  */\n-\n static inline size_t MallocUsage(size_t alloc)\n {\n-    // Measured on libc6 2.19 on Linux.\n-    if (alloc == 0) {\n-        return 0;\n-    } else if (sizeof(void*) == 8) {\n-        return ((alloc + 31) >> 4) << 4;\n-    } else if (sizeof(void*) == 4) {\n-        return ((alloc + 15) >> 3) << 3;\n-    } else {\n-        assert(0);\n-    }\n+    // There are few if any actual zero-length allocations; when\n+    // DynamicUsage(std::vector<X>& v) calls this function, and v.capacity() == 0,\n+    // for example, there has not been a zero-byte allocation (which would require\n+    // some physical space). std::vector has optimized this case. Experimental\n+    // evidence indicates the same is true of other data structures -- there are\n+    // no actual zero-length allocations observed, although of course this is\n+    // library-dependent.\n+    if (alloc == 0) return 0;\n+\n+    static constexpr size_t overhead = sizeof(void*);\n+#if defined(__arm__)\n+    // tested with ARM 32bit\n+    static constexpr size_t step = sizeof(void*) * 2;\n+    static constexpr size_t min_alloc = 9;\n+#else\n+    static constexpr size_t step = 16U;\n+    static constexpr size_t min_alloc = sizeof(void*) == 8 ? 9 : 0;\n+#endif\n+    // step should be nonzero and a power of 2\n+    static_assert(step > 0);\n+    static_assert((step & (step-1)) == 0);\n+    // tested with Linux glibc 2.31 and 2.38, 32bit and 64bit\n+    return (std::max(min_alloc, alloc) + overhead + (step - 1)) & ~(step - 1);",
      "path": "src/memusage.h",
      "position": 40,
      "original_position": 39,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "28dc1056263aadf84046b4112f5c61bbd7a6a15e",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Since `step` is guaranteed to be a power of 2, the expression `~(step - 1)` simplifies to `-step`.\r\n\r\n<details>\r\n<summary>Reproducer</summary>\r\n\r\n```C++\r\nBOOST_AUTO_TEST_CASE(BitwiseStepSimplificationTest)\r\n{\r\n    for (uint64_t step{1}; step != 0; step <<= 1) {\r\n        std::cout << step << std::endl;\r\n        BOOST_CHECK(std::has_single_bit(step));\r\n        BOOST_CHECK_EQUAL((~(step - 1)), -step);\r\n    }\r\n}\r\n```\r\n\r\n</details>\r\n\r\nso we should be able to write:\r\n```suggestion\r\n    return (std::max(min_alloc, alloc) + overhead + (step - 1)) & -step;\r\n```",
      "created_at": "2025-03-19T09:50:40Z",
      "updated_at": "2025-03-19T11:41:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2002916382",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2002916382"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 62,
      "original_line": 62,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2002955096",
      "pull_request_review_id": 2697495377,
      "id": 2002955096,
      "node_id": "PRRC_kwDOABII5853YqtY",
      "diff_hunk": "@@ -48,19 +48,31 @@ template<typename X> static inline size_t DynamicUsage(const X * const &v) { ret\n  *  application data structures require more accurate inner accounting, they should\n  *  iterate themselves, or use more efficient caching + updating on modification.\n  */\n-\n static inline size_t MallocUsage(size_t alloc)\n {\n-    // Measured on libc6 2.19 on Linux.\n-    if (alloc == 0) {\n-        return 0;\n-    } else if (sizeof(void*) == 8) {\n-        return ((alloc + 31) >> 4) << 4;\n-    } else if (sizeof(void*) == 4) {\n-        return ((alloc + 15) >> 3) << 3;\n-    } else {\n-        assert(0);\n-    }\n+    // There are few if any actual zero-length allocations; when\n+    // DynamicUsage(std::vector<X>& v) calls this function, and v.capacity() == 0,\n+    // for example, there has not been a zero-byte allocation (which would require\n+    // some physical space). std::vector has optimized this case. Experimental\n+    // evidence indicates the same is true of other data structures -- there are\n+    // no actual zero-length allocations observed, although of course this is\n+    // library-dependent.\n+    if (alloc == 0) return 0;\n+\n+    static constexpr size_t overhead = sizeof(void*);\n+#if defined(__arm__)\n+    // tested with ARM 32bit\n+    static constexpr size_t step = sizeof(void*) * 2;\n+    static constexpr size_t min_alloc = 9;\n+#else\n+    static constexpr size_t step = 16U;\n+    static constexpr size_t min_alloc = sizeof(void*) == 8 ? 9 : 0;\n+#endif",
      "path": "src/memusage.h",
      "position": 1,
      "original_position": 34,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "28dc1056263aadf84046b4112f5c61bbd7a6a15e",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'm not exactly sure how we got to the `min_alloc` of `9` on these platforms, but we can probably simplify the platform dependent code to:\r\n```C++\r\n#if defined(__arm__) || SIZE_MAX == UINT64_MAX\r\n    constexpr size_t min_alloc{9};\r\n#else\r\n    constexpr size_t min_alloc{0};\r\n#endif\r\n```",
      "created_at": "2025-03-19T10:11:18Z",
      "updated_at": "2025-03-19T11:06:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2002955096",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2002955096"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": 63,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2002984240",
      "pull_request_review_id": 2697495377,
      "id": 2002984240,
      "node_id": "PRRC_kwDOABII5853Yx0w",
      "diff_hunk": "@@ -48,19 +48,31 @@ template<typename X> static inline size_t DynamicUsage(const X * const &v) { ret\n  *  application data structures require more accurate inner accounting, they should\n  *  iterate themselves, or use more efficient caching + updating on modification.\n  */\n-\n static inline size_t MallocUsage(size_t alloc)\n {\n-    // Measured on libc6 2.19 on Linux.\n-    if (alloc == 0) {\n-        return 0;\n-    } else if (sizeof(void*) == 8) {\n-        return ((alloc + 31) >> 4) << 4;\n-    } else if (sizeof(void*) == 4) {\n-        return ((alloc + 15) >> 3) << 3;\n-    } else {\n-        assert(0);\n-    }\n+    // There are few if any actual zero-length allocations; when\n+    // DynamicUsage(std::vector<X>& v) calls this function, and v.capacity() == 0,\n+    // for example, there has not been a zero-byte allocation (which would require\n+    // some physical space). std::vector has optimized this case. Experimental\n+    // evidence indicates the same is true of other data structures -- there are\n+    // no actual zero-length allocations observed, although of course this is\n+    // library-dependent.\n+    if (alloc == 0) return 0;\n+\n+    static constexpr size_t overhead = sizeof(void*);\n+#if defined(__arm__)\n+    // tested with ARM 32bit\n+    static constexpr size_t step = sizeof(void*) * 2;\n+    static constexpr size_t min_alloc = 9;\n+#else\n+    static constexpr size_t step = 16U;\n+    static constexpr size_t min_alloc = sizeof(void*) == 8 ? 9 : 0;\n+#endif\n+    // step should be nonzero and a power of 2\n+    static_assert(step > 0);",
      "path": "src/memusage.h",
      "position": 1,
      "original_position": 36,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "28dc1056263aadf84046b4112f5c61bbd7a6a15e",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "what's the purpose of checking positivity for a `size_t` value? Is this some weird compiler trick or a refactoring leftover? Or if it's purpose is to check the two instantiations have the same type, we could rather create a boolean with the necessary conditions and use that to initialize `step` once.",
      "created_at": "2025-03-19T10:27:12Z",
      "updated_at": "2025-03-19T12:04:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2002984240",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2002984240"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 72,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2002988544",
      "pull_request_review_id": 2697495377,
      "id": 2002988544,
      "node_id": "PRRC_kwDOABII5853Yy4A",
      "diff_hunk": "@@ -48,19 +48,31 @@ template<typename X> static inline size_t DynamicUsage(const X * const &v) { ret\n  *  application data structures require more accurate inner accounting, they should\n  *  iterate themselves, or use more efficient caching + updating on modification.\n  */\n-\n static inline size_t MallocUsage(size_t alloc)\n {\n-    // Measured on libc6 2.19 on Linux.\n-    if (alloc == 0) {\n-        return 0;\n-    } else if (sizeof(void*) == 8) {\n-        return ((alloc + 31) >> 4) << 4;\n-    } else if (sizeof(void*) == 4) {\n-        return ((alloc + 15) >> 3) << 3;\n-    } else {\n-        assert(0);\n-    }\n+    // There are few if any actual zero-length allocations; when\n+    // DynamicUsage(std::vector<X>& v) calls this function, and v.capacity() == 0,\n+    // for example, there has not been a zero-byte allocation (which would require\n+    // some physical space). std::vector has optimized this case. Experimental\n+    // evidence indicates the same is true of other data structures -- there are\n+    // no actual zero-length allocations observed, although of course this is\n+    // library-dependent.\n+    if (alloc == 0) return 0;\n+\n+    static constexpr size_t overhead = sizeof(void*);\n+#if defined(__arm__)\n+    // tested with ARM 32bit\n+    static constexpr size_t step = sizeof(void*) * 2;",
      "path": "src/memusage.h",
      "position": 1,
      "original_position": 29,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "28dc1056263aadf84046b4112f5c61bbd7a6a15e",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`step` is basically the `alignment`, right?\r\nWe could probably do it in a platform-independent way (and get rid of `static_assert(step > 0);` while we're here):\r\n```C++\r\nconstexpr size_t alignment{alignof(std::max_align_t)};\r\n```\r\n",
      "created_at": "2025-03-19T10:29:33Z",
      "updated_at": "2025-03-19T11:06:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2002988544",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2002988544"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2003031317",
      "pull_request_review_id": 2697495377,
      "id": 2003031317,
      "node_id": "PRRC_kwDOABII5853Y9UV",
      "diff_hunk": "@@ -48,19 +48,31 @@ template<typename X> static inline size_t DynamicUsage(const X * const &v) { ret\n  *  application data structures require more accurate inner accounting, they should\n  *  iterate themselves, or use more efficient caching + updating on modification.\n  */\n-\n static inline size_t MallocUsage(size_t alloc)\n {\n-    // Measured on libc6 2.19 on Linux.\n-    if (alloc == 0) {\n-        return 0;\n-    } else if (sizeof(void*) == 8) {\n-        return ((alloc + 31) >> 4) << 4;\n-    } else if (sizeof(void*) == 4) {\n-        return ((alloc + 15) >> 3) << 3;\n-    } else {\n-        assert(0);\n-    }\n+    // There are few if any actual zero-length allocations; when\n+    // DynamicUsage(std::vector<X>& v) calls this function, and v.capacity() == 0,\n+    // for example, there has not been a zero-byte allocation (which would require\n+    // some physical space). std::vector has optimized this case. Experimental\n+    // evidence indicates the same is true of other data structures -- there are\n+    // no actual zero-length allocations observed, although of course this is\n+    // library-dependent.\n+    if (alloc == 0) return 0;",
      "path": "src/memusage.h",
      "position": 28,
      "original_position": 24,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "28dc1056263aadf84046b4112f5c61bbd7a6a15e",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Adding the current implementation to the reproducer of @martinus shows this is a behavior change compared to his version - https://godbolt.org/z/cPWz6YnWd\r\n```bash\r\n0: actual=16, estimate=0\r\n```",
      "created_at": "2025-03-19T10:50:51Z",
      "updated_at": "2025-03-19T11:06:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2003031317",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2003031317"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 50,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2003067985",
      "pull_request_review_id": 2697495377,
      "id": 2003067985,
      "node_id": "PRRC_kwDOABII5853ZGRR",
      "diff_hunk": "@@ -177,11 +189,16 @@ static inline size_t DynamicUsage(const std::list<X>& l)\n     return MallocUsage(sizeof(list_node<X>)) * l.size();\n }\n \n+// struct unordered_node adds the container overhead to the given structure X,\n+// although this varies across library container implementations (platforms).\n+// It is believed that some containers use two pointers per node, so this",
      "path": "src/memusage.h",
      "position": 1,
      "original_position": 49,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "28dc1056263aadf84046b4112f5c61bbd7a6a15e",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "can we add some references to avoid having to rely on beliefs?",
      "created_at": "2025-03-19T11:03:32Z",
      "updated_at": "2025-03-19T11:06:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2003067985",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2003067985"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 194,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2003099949",
      "pull_request_review_id": 2698031897,
      "id": 2003099949,
      "node_id": "PRRC_kwDOABII5853ZOEt",
      "diff_hunk": "@@ -48,19 +48,31 @@ template<typename X> static inline size_t DynamicUsage(const X * const &v) { ret\n  *  application data structures require more accurate inner accounting, they should\n  *  iterate themselves, or use more efficient caching + updating on modification.\n  */\n-\n static inline size_t MallocUsage(size_t alloc)\n {\n-    // Measured on libc6 2.19 on Linux.\n-    if (alloc == 0) {\n-        return 0;\n-    } else if (sizeof(void*) == 8) {\n-        return ((alloc + 31) >> 4) << 4;\n-    } else if (sizeof(void*) == 4) {\n-        return ((alloc + 15) >> 3) << 3;\n-    } else {\n-        assert(0);\n-    }\n+    // There are few if any actual zero-length allocations; when\n+    // DynamicUsage(std::vector<X>& v) calls this function, and v.capacity() == 0,\n+    // for example, there has not been a zero-byte allocation (which would require\n+    // some physical space). std::vector has optimized this case. Experimental\n+    // evidence indicates the same is true of other data structures -- there are\n+    // no actual zero-length allocations observed, although of course this is\n+    // library-dependent.\n+    if (alloc == 0) return 0;\n+\n+    static constexpr size_t overhead = sizeof(void*);\n+#if defined(__arm__)\n+    // tested with ARM 32bit",
      "path": "src/memusage.h",
      "position": 1,
      "original_position": 28,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "28dc1056263aadf84046b4112f5c61bbd7a6a15e",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`__arm__` only applies to [32 bits](https://stackoverflow.com/a/41666292), no need for the comments (I'd prefer having them in the commit messages). Before merging we have to make sure we're not just testing ARM on 32 bits",
      "created_at": "2025-03-19T11:20:04Z",
      "updated_at": "2025-03-19T12:05:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2003099949",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2003099949"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 64,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2003105459",
      "pull_request_review_id": 2698031897,
      "id": 2003105459,
      "node_id": "PRRC_kwDOABII5853ZPaz",
      "diff_hunk": "@@ -92,6 +93,14 @@ def send_batch(fee):\n         send_batch(fee)\n     tx_sync_fun() if tx_sync_fun else test_framework.sync_mempools()  # sync after all evictions\n \n+    # if mempool is almost full (<10k usage bytes left), submit one extra middle-sized tx,\n+    # in order to evict a large filler tx and leave some room; this will enable tests to submit\n+    # txs with just the mempoolminfee without immediate eviction (\"mempool full\" error)\n+    if node.getmempoolinfo()['usage'] >= 4_990_000:",
      "path": "test/functional/test_framework/mempool_util.py",
      "position": 28,
      "original_position": 28,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "18a2bd4b041c7d8995c08ce62876a290d66919ea",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I see you've put the test before the fix after the recent rebase - but it never enters this condition before the fix, so basically dead code was added.\r\n```C++\r\n    if node.getmempoolinfo()['usage'] >= 4_990_000:\r\n        raise \"\"\r\n```\r\n\r\nCould we either make sure we enter, and update it in the next commit  accordingly, or add it after the fix commit?\r\nAlso, the commit message claims that \"fill mempool leaves room\" - I think this needs some explanation.",
      "created_at": "2025-03-19T11:23:53Z",
      "updated_at": "2025-03-19T12:16:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2003105459",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2003105459"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 99,
      "original_line": 99,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2003144710",
      "pull_request_review_id": 2698031897,
      "id": 2003144710,
      "node_id": "PRRC_kwDOABII5853ZZAG",
      "diff_hunk": "@@ -48,19 +48,31 @@ template<typename X> static inline size_t DynamicUsage(const X * const &v) { ret\n  *  application data structures require more accurate inner accounting, they should\n  *  iterate themselves, or use more efficient caching + updating on modification.\n  */\n-\n static inline size_t MallocUsage(size_t alloc)\n {\n-    // Measured on libc6 2.19 on Linux.\n-    if (alloc == 0) {\n-        return 0;\n-    } else if (sizeof(void*) == 8) {\n-        return ((alloc + 31) >> 4) << 4;\n-    } else if (sizeof(void*) == 4) {\n-        return ((alloc + 15) >> 3) << 3;\n-    } else {\n-        assert(0);\n-    }\n+    // There are few if any actual zero-length allocations; when\n+    // DynamicUsage(std::vector<X>& v) calls this function, and v.capacity() == 0,\n+    // for example, there has not been a zero-byte allocation (which would require\n+    // some physical space). std::vector has optimized this case. Experimental\n+    // evidence indicates the same is true of other data structures -- there are\n+    // no actual zero-length allocations observed, although of course this is\n+    // library-dependent.\n+    if (alloc == 0) return 0;\n+\n+    static constexpr size_t overhead = sizeof(void*);",
      "path": "src/memusage.h",
      "position": 1,
      "original_position": 26,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "28dc1056263aadf84046b4112f5c61bbd7a6a15e",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "If it's simpler, we might as well use the size of `size_t` here: https://github.com/bitcoin/bitcoin/blob/master/src/compat/assumptions.h#L37",
      "created_at": "2025-03-19T11:49:22Z",
      "updated_at": "2025-03-19T12:06:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2003144710",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2003144710"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 62,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2004100921",
      "pull_request_review_id": 2699829126,
      "id": 2004100921,
      "node_id": "PRRC_kwDOABII5853dCc5",
      "diff_hunk": "@@ -48,19 +48,31 @@ template<typename X> static inline size_t DynamicUsage(const X * const &v) { ret\n  *  application data structures require more accurate inner accounting, they should\n  *  iterate themselves, or use more efficient caching + updating on modification.\n  */\n-\n static inline size_t MallocUsage(size_t alloc)\n {\n-    // Measured on libc6 2.19 on Linux.\n-    if (alloc == 0) {\n-        return 0;\n-    } else if (sizeof(void*) == 8) {\n-        return ((alloc + 31) >> 4) << 4;\n-    } else if (sizeof(void*) == 4) {\n-        return ((alloc + 15) >> 3) << 3;\n-    } else {\n-        assert(0);\n-    }\n+    // There are few if any actual zero-length allocations; when\n+    // DynamicUsage(std::vector<X>& v) calls this function, and v.capacity() == 0,\n+    // for example, there has not been a zero-byte allocation (which would require\n+    // some physical space). std::vector has optimized this case. Experimental\n+    // evidence indicates the same is true of other data structures -- there are\n+    // no actual zero-length allocations observed, although of course this is\n+    // library-dependent.\n+    if (alloc == 0) return 0;\n+\n+    static constexpr size_t overhead = sizeof(void*);\n+#if defined(__arm__)\n+    // tested with ARM 32bit\n+    static constexpr size_t step = sizeof(void*) * 2;\n+    static constexpr size_t min_alloc = 9;\n+#else\n+    static constexpr size_t step = 16U;\n+    static constexpr size_t min_alloc = sizeof(void*) == 8 ? 9 : 0;\n+#endif\n+    // step should be nonzero and a power of 2\n+    static_assert(step > 0);",
      "path": "src/memusage.h",
      "position": 1,
      "original_position": 36,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "28dc1056263aadf84046b4112f5c61bbd7a6a15e",
      "in_reply_to_id": 2002984240,
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I wrote this because the following line (`static_assert((step & (step-1)) == 0)`) doesn't actually assert that `step` has a single bit set (which is what I wanted to check); it also succeeds if `step` is zero. But using `std::has_single_bit()` is better, so we can remove `static_assert(step > 0)`, good catch.",
      "created_at": "2025-03-19T19:08:01Z",
      "updated_at": "2025-03-19T20:24:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2004100921",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2004100921"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 72,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2004163332",
      "pull_request_review_id": 2699829126,
      "id": 2004163332,
      "node_id": "PRRC_kwDOABII5853dRsE",
      "diff_hunk": "@@ -177,11 +189,16 @@ static inline size_t DynamicUsage(const std::list<X>& l)\n     return MallocUsage(sizeof(list_node<X>)) * l.size();\n }\n \n+// struct unordered_node adds the container overhead to the given structure X,\n+// although this varies across library container implementations (platforms).\n+// It is believed that some containers use two pointers per node, so this",
      "path": "src/memusage.h",
      "position": 1,
      "original_position": 49,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "28dc1056263aadf84046b4112f5c61bbd7a6a15e",
      "in_reply_to_id": 2003067985,
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good point, I am going to back this change out until we see evidence for needing it. I think I \"deduced\" this based on macOS CI failing while the others were passing. But it's been too long. \r\n\r\nJust now, after searching for a while with no luck, I asked X's Grok (I know, we shouldn't trust it too much), and it said LLVM's implementation of `std::unordered_map` that the node includes a next pointer but no previous pointer. You can indeed see that in the source code: https://github.com/llvm/llvm-project/blob/main/libcxx/include/__hash_table#L95",
      "created_at": "2025-03-19T19:42:12Z",
      "updated_at": "2025-03-19T20:24:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2004163332",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2004163332"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 194,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2004197157",
      "pull_request_review_id": 2699829126,
      "id": 2004197157,
      "node_id": "PRRC_kwDOABII5853dZ8l",
      "diff_hunk": "@@ -92,6 +93,14 @@ def send_batch(fee):\n         send_batch(fee)\n     tx_sync_fun() if tx_sync_fun else test_framework.sync_mempools()  # sync after all evictions\n \n+    # if mempool is almost full (<10k usage bytes left), submit one extra middle-sized tx,\n+    # in order to evict a large filler tx and leave some room; this will enable tests to submit\n+    # txs with just the mempoolminfee without immediate eviction (\"mempool full\" error)\n+    if node.getmempoolinfo()['usage'] >= 4_990_000:",
      "path": "test/functional/test_framework/mempool_util.py",
      "position": 28,
      "original_position": 28,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "18a2bd4b041c7d8995c08ce62876a290d66919ea",
      "in_reply_to_id": 2003105459,
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think it's okay that it's initially dead code because it makes the test less fragile in general. In theory, a different project could cherry-pick just this test-only commit, and later make some other changes that would have caused this test to break (when it's really a false-positive failure), but because of taking this commit, that doesn't happen (the test continues to pass). Or, a similar way to think of it is, the test could have been written this way to begin with (and that would not have seemed strange). But I don't feel strongly about, I can make that change if you'd like.\r\n\r\nI'll update the commit comment, good catch.",
      "created_at": "2025-03-19T20:04:30Z",
      "updated_at": "2025-03-19T20:24:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2004197157",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2004197157"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 99,
      "original_line": 99,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2004255350",
      "pull_request_review_id": 2700131619,
      "id": 2004255350,
      "node_id": "PRRC_kwDOABII5853doJ2",
      "diff_hunk": "@@ -92,6 +93,14 @@ def send_batch(fee):\n         send_batch(fee)\n     tx_sync_fun() if tx_sync_fun else test_framework.sync_mempools()  # sync after all evictions\n \n+    # if mempool is almost full (<10k usage bytes left), submit one extra middle-sized tx,\n+    # in order to evict a large filler tx and leave some room; this will enable tests to submit\n+    # txs with just the mempoolminfee without immediate eviction (\"mempool full\" error)\n+    if node.getmempoolinfo()['usage'] >= 4_990_000:",
      "path": "test/functional/test_framework/mempool_util.py",
      "position": 28,
      "original_position": 28,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "18a2bd4b041c7d8995c08ce62876a290d66919ea",
      "in_reply_to_id": 2003105459,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I would like to avoid having a false sense of security by putting this before the fix, which usually indicates that the desired behavior is reproduced and is retained after this fix - which isn't the case here exactly. And the dead code part also bothers me for a similar reason.",
      "created_at": "2025-03-19T20:36:35Z",
      "updated_at": "2025-03-19T20:36:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2004255350",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2004255350"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 99,
      "original_line": 99,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2004259676",
      "pull_request_review_id": 2700140886,
      "id": 2004259676,
      "node_id": "PRRC_kwDOABII5853dpNc",
      "diff_hunk": "@@ -48,19 +48,31 @@ template<typename X> static inline size_t DynamicUsage(const X * const &v) { ret\n  *  application data structures require more accurate inner accounting, they should\n  *  iterate themselves, or use more efficient caching + updating on modification.\n  */\n-\n static inline size_t MallocUsage(size_t alloc)\n {\n-    // Measured on libc6 2.19 on Linux.\n-    if (alloc == 0) {\n-        return 0;\n-    } else if (sizeof(void*) == 8) {\n-        return ((alloc + 31) >> 4) << 4;\n-    } else if (sizeof(void*) == 4) {\n-        return ((alloc + 15) >> 3) << 3;\n-    } else {\n-        assert(0);\n-    }\n+    // There are few if any actual zero-length allocations; when\n+    // DynamicUsage(std::vector<X>& v) calls this function, and v.capacity() == 0,\n+    // for example, there has not been a zero-byte allocation (which would require\n+    // some physical space). std::vector has optimized this case. Experimental\n+    // evidence indicates the same is true of other data structures -- there are\n+    // no actual zero-length allocations observed, although of course this is\n+    // library-dependent.\n+    if (alloc == 0) return 0;\n+\n+    static constexpr size_t overhead = sizeof(void*);\n+#if defined(__arm__)\n+    // tested with ARM 32bit\n+    static constexpr size_t step = sizeof(void*) * 2;",
      "path": "src/memusage.h",
      "position": 1,
      "original_position": 29,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "28dc1056263aadf84046b4112f5c61bbd7a6a15e",
      "in_reply_to_id": 2002988544,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I forgot to include this in the full patch, my bad",
      "created_at": "2025-03-19T20:39:43Z",
      "updated_at": "2025-03-19T20:39:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2004259676",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2004259676"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2004261310",
      "pull_request_review_id": 2700144694,
      "id": 2004261310,
      "node_id": "PRRC_kwDOABII5853dpm-",
      "diff_hunk": "@@ -804,4 +804,13 @@ BOOST_AUTO_TEST_CASE(MempoolAncestryTestsDiamond)\n     BOOST_CHECK_EQUAL(descendants, 4ULL);\n }\n \n+BOOST_AUTO_TEST_CASE(BitwiseStepSimplificationTest)\n+{\n+    for (uint64_t step{1}; step != 0; step <<= 1) {\n+        std::cout << step << std::endl;",
      "path": "src/test/mempool_tests.cpp",
      "position": 1,
      "original_position": 7,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "d4b18c5f12ed054847c5a53800fd2b8fabf98c3f",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "if you decide to keep this test (which was meant to demonstrate the safety of the change), please remove the logging part",
      "created_at": "2025-03-19T20:40:43Z",
      "updated_at": "2025-03-19T20:40:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2004261310",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2004261310"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 810,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2017521423",
      "pull_request_review_id": 2723248133,
      "id": 2017521423,
      "node_id": "PRRC_kwDOABII5854QO8P",
      "diff_hunk": "@@ -177,23 +176,33 @@ static inline size_t DynamicUsage(const std::list<X>& l)\n     return MallocUsage(sizeof(list_node<X>)) * l.size();\n }\n \n+// Empirically, an std::unordered_map node has two pointers (likely\n+// forward and backward pointers) on some platforms (Windows and macOS),\n+// so be conservative in estimating memory usage by assuming this is\n+// the case for all platforms.\n template<typename X>\n struct unordered_node : private X\n {\n private:\n     void* ptr;\n+    void* ptr2;",
      "path": "src/memusage.h",
      "position": 1,
      "original_position": 57,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "77ebad9651cd9138cf385c84402fd6042db8536e",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "was this added back by accident?",
      "created_at": "2025-03-27T19:57:12Z",
      "updated_at": "2025-03-27T20:00:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2017521423",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2017521423"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 188,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2017542083",
      "pull_request_review_id": 2723283346,
      "id": 2017542083,
      "node_id": "PRRC_kwDOABII5854QT_D",
      "diff_hunk": "@@ -177,23 +176,33 @@ static inline size_t DynamicUsage(const std::list<X>& l)\n     return MallocUsage(sizeof(list_node<X>)) * l.size();\n }\n \n+// Empirically, an std::unordered_map node has two pointers (likely\n+// forward and backward pointers) on some platforms (Windows and macOS),\n+// so be conservative in estimating memory usage by assuming this is\n+// the case for all platforms.\n template<typename X>\n struct unordered_node : private X\n {\n private:\n     void* ptr;\n+    void* ptr2;",
      "path": "src/memusage.h",
      "position": 1,
      "original_position": 57,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "77ebad9651cd9138cf385c84402fd6042db8536e",
      "in_reply_to_id": 2017521423,
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "No, I'll write a detailed comment later today or tomorrow, but it turns out the lack of this second pointer caused the pool test to fail, because on macOS and Windows; they really do have two pointers per node. I was able to determine this with certainty with debug printing (you can see it in some of the force-pushes above). I added a comment just before the start of this `struct unordered_node` definition to explain this second pointer, did you see that? I didn't call it forward and previous because I really don't know that, I only know that there are 16 bytes in this part of the struct (but I am going to assume that there are two pointers).",
      "created_at": "2025-03-27T20:14:49Z",
      "updated_at": "2025-03-27T20:14:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2017542083",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2017542083"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 188,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019446723",
      "pull_request_review_id": 2726885785,
      "id": 2019446723,
      "node_id": "PRRC_kwDOABII5854Xk_D",
      "diff_hunk": "@@ -48,19 +48,31 @@ template<typename X> static inline size_t DynamicUsage(const X * const &v) { ret\n  *  application data structures require more accurate inner accounting, they should\n  *  iterate themselves, or use more efficient caching + updating on modification.\n  */\n-\n static inline size_t MallocUsage(size_t alloc)\n {\n-    // Measured on libc6 2.19 on Linux.\n-    if (alloc == 0) {\n-        return 0;\n-    } else if (sizeof(void*) == 8) {\n-        return ((alloc + 31) >> 4) << 4;\n-    } else if (sizeof(void*) == 4) {\n-        return ((alloc + 15) >> 3) << 3;\n-    } else {\n-        assert(0);\n-    }\n+    // There are few if any actual zero-length allocations; when\n+    // DynamicUsage(std::vector<X>& v) calls this function, and v.capacity() == 0,\n+    // for example, there has not been a zero-byte allocation (which would require\n+    // some physical space). std::vector has optimized this case. Experimental\n+    // evidence indicates the same is true of other data structures -- there are\n+    // no actual zero-length allocations observed, although of course this is\n+    // library-dependent.\n+    if (alloc == 0) return 0;\n+\n+    static constexpr size_t overhead = sizeof(void*);\n+#if defined(__arm__)\n+    // tested with ARM 32bit\n+    static constexpr size_t step = sizeof(void*) * 2;\n+    static constexpr size_t min_alloc = 9;\n+#else\n+    static constexpr size_t step = 16U;\n+    static constexpr size_t min_alloc = sizeof(void*) == 8 ? 9 : 0;\n+#endif\n+    // step should be nonzero and a power of 2\n+    static_assert(step > 0);\n+    static_assert((step & (step-1)) == 0);\n+    // tested with Linux glibc 2.31 and 2.38, 32bit and 64bit\n+    return (std::max(min_alloc, alloc) + overhead + (step - 1)) & ~(step - 1);",
      "path": "src/memusage.h",
      "position": 40,
      "original_position": 39,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "28dc1056263aadf84046b4112f5c61bbd7a6a15e",
      "in_reply_to_id": 2002916382,
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I had to change this back to `~(step - 1)` because CI complained; some compilers don't accept the negation of an unsigned type.",
      "created_at": "2025-03-28T21:39:20Z",
      "updated_at": "2025-03-28T22:25:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2019446723",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019446723"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 62,
      "original_line": 62,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019458266",
      "pull_request_review_id": 2726885785,
      "id": 2019458266,
      "node_id": "PRRC_kwDOABII5854Xnza",
      "diff_hunk": "@@ -212,7 +221,7 @@ static inline size_t DynamicUsage(const std::unordered_map<Key,\n     size_t estimated_list_node_size = MallocUsage(sizeof(void*) * 3);\n     size_t usage_resource = estimated_list_node_size * pool_resource->NumAllocatedChunks();\n     size_t usage_chunks = MallocUsage(pool_resource->ChunkSizeBytes()) * pool_resource->NumAllocatedChunks();\n-    return usage_resource + usage_chunks + MallocUsage(sizeof(void*) * m.bucket_count());\n+    return usage_resource + usage_chunks + MallocUsage(2 * sizeof(void*) * m.bucket_count());",
      "path": "src/memusage.h",
      "position": 1,
      "original_position": 85,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "77ebad9651cd9138cf385c84402fd6042db8536e",
      "in_reply_to_id": null,
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'm making this and two similar changes above (for `std::unordered_set` and `std::unordered_map` because CI debug prints show that on some platforms (macOS and Win64), each element of the bucket array uses 16 bytes (likely two pointers) rather than 8 bytes (one pointer). This is probably because the bucket lists are doubly-linked. (This gives a performance advantage for removal by iterator; it's not necessary to hash the key to find the bucket, then walk that bucket's list looking for the element being removed.)\r\n\r\nThere is no way to tell at compile time if the bucket lists should be assumed to be one or two pointers, so it's better to be conservative and assume it's two. (This may result in actual memory usage being slightly less than what the user configured for large data structures like the mempool and the coins cache.)",
      "created_at": "2025-03-28T21:48:17Z",
      "updated_at": "2025-06-02T17:42:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2019458266",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019458266"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 224,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019458369",
      "pull_request_review_id": 2726885785,
      "id": 2019458369,
      "node_id": "PRRC_kwDOABII5854Xn1B",
      "diff_hunk": "@@ -177,23 +176,33 @@ static inline size_t DynamicUsage(const std::list<X>& l)\n     return MallocUsage(sizeof(list_node<X>)) * l.size();\n }\n \n+// Empirically, an std::unordered_map node has two pointers (likely\n+// forward and backward pointers) on some platforms (Windows and macOS),\n+// so be conservative in estimating memory usage by assuming this is\n+// the case for all platforms.\n template<typename X>\n struct unordered_node : private X\n {\n private:\n     void* ptr;\n+    void* ptr2;\n };\n \n+// The memory used by an unordered_set or unordered map is the sum of the\n+// sizes of the individual nodes (which are separately allocated) plus\n+// the size of the bucket array (which is a single allocation).\n+// Empirically, each element of the bucket array consists of two pointers\n+// on some platforms (Windows and macOS), so be conservative.\n template<typename X, typename Y>\n static inline size_t DynamicUsage(const std::unordered_set<X, Y>& s)\n {\n-    return MallocUsage(sizeof(unordered_node<X>)) * s.size() + MallocUsage(sizeof(void*) * s.bucket_count());\n+    return MallocUsage(sizeof(unordered_node<X>)) * s.size() + MallocUsage(2 * sizeof(void*) * s.bucket_count());",
      "path": "src/memusage.h",
      "position": 1,
      "original_position": 69,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "77ebad9651cd9138cf385c84402fd6042db8536e",
      "in_reply_to_id": null,
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "see review comment below",
      "created_at": "2025-03-28T21:48:27Z",
      "updated_at": "2025-03-28T22:25:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2019458369",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019458369"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 199,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019458527",
      "pull_request_review_id": 2726885785,
      "id": 2019458527,
      "node_id": "PRRC_kwDOABII5854Xn3f",
      "diff_hunk": "@@ -177,23 +176,33 @@ static inline size_t DynamicUsage(const std::list<X>& l)\n     return MallocUsage(sizeof(list_node<X>)) * l.size();\n }\n \n+// Empirically, an std::unordered_map node has two pointers (likely\n+// forward and backward pointers) on some platforms (Windows and macOS),\n+// so be conservative in estimating memory usage by assuming this is\n+// the case for all platforms.\n template<typename X>\n struct unordered_node : private X\n {\n private:\n     void* ptr;\n+    void* ptr2;\n };\n \n+// The memory used by an unordered_set or unordered map is the sum of the\n+// sizes of the individual nodes (which are separately allocated) plus\n+// the size of the bucket array (which is a single allocation).\n+// Empirically, each element of the bucket array consists of two pointers\n+// on some platforms (Windows and macOS), so be conservative.\n template<typename X, typename Y>\n static inline size_t DynamicUsage(const std::unordered_set<X, Y>& s)\n {\n-    return MallocUsage(sizeof(unordered_node<X>)) * s.size() + MallocUsage(sizeof(void*) * s.bucket_count());\n+    return MallocUsage(sizeof(unordered_node<X>)) * s.size() + MallocUsage(2 * sizeof(void*) * s.bucket_count());\n }\n \n template<typename X, typename Y, typename Z>\n static inline size_t DynamicUsage(const std::unordered_map<X, Y, Z>& m)\n {\n-    return MallocUsage(sizeof(unordered_node<std::pair<const X, Y> >)) * m.size() + MallocUsage(sizeof(void*) * m.bucket_count());\n+    return MallocUsage(sizeof(unordered_node<std::pair<const X, Y> >)) * m.size() + MallocUsage(2 * sizeof(void*) * m.bucket_count());",
      "path": "src/memusage.h",
      "position": 1,
      "original_position": 76,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "77ebad9651cd9138cf385c84402fd6042db8536e",
      "in_reply_to_id": null,
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "see review comment below",
      "created_at": "2025-03-28T21:48:39Z",
      "updated_at": "2025-03-28T22:25:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2019458527",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019458527"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 205,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019499591",
      "pull_request_review_id": 2726885785,
      "id": 2019499591,
      "node_id": "PRRC_kwDOABII5854Xx5H",
      "diff_hunk": "@@ -92,6 +93,14 @@ def send_batch(fee):\n         send_batch(fee)\n     tx_sync_fun() if tx_sync_fun else test_framework.sync_mempools()  # sync after all evictions\n \n+    # if mempool is almost full (<10k usage bytes left), submit one extra middle-sized tx,\n+    # in order to evict a large filler tx and leave some room; this will enable tests to submit\n+    # txs with just the mempoolminfee without immediate eviction (\"mempool full\" error)\n+    if node.getmempoolinfo()['usage'] >= 4_990_000:",
      "path": "test/functional/test_framework/mempool_util.py",
      "position": 28,
      "original_position": 28,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "18a2bd4b041c7d8995c08ce62876a290d66919ea",
      "in_reply_to_id": 2003105459,
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I just realized that I can't add this test commit after the functional commit, because then the functional commit doesn't pass on some platforms (macOS is one for sure). So it would have to be part of the functional commit. Does that sound okay to you?",
      "created_at": "2025-03-28T22:24:18Z",
      "updated_at": "2025-03-28T22:25:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2019499591",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019499591"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 99,
      "original_line": 99,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036949816",
      "pull_request_review_id": 2756046565,
      "id": 2036949816,
      "node_id": "PRRC_kwDOABII5855aWM4",
      "diff_hunk": "@@ -92,6 +93,14 @@ def send_batch(fee):\n         send_batch(fee)\n     tx_sync_fun() if tx_sync_fun else test_framework.sync_mempools()  # sync after all evictions\n \n+    # if mempool is almost full (<10k usage bytes left), submit one extra middle-sized tx,\n+    # in order to evict a large filler tx and leave some room; this will enable tests to submit\n+    # txs with just the mempoolminfee without immediate eviction (\"mempool full\" error)\n+    if node.getmempoolinfo()['usage'] >= 4_990_000:",
      "path": "test/functional/test_framework/mempool_util.py",
      "position": 28,
      "original_position": 28,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "18a2bd4b041c7d8995c08ce62876a290d66919ea",
      "in_reply_to_id": 2003105459,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "yes, it's fine if it's in the same commit, of course.",
      "created_at": "2025-04-10T09:39:53Z",
      "updated_at": "2025-04-10T09:49:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2036949816",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036949816"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 99,
      "original_line": 99,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036954366",
      "pull_request_review_id": 2756046565,
      "id": 2036954366,
      "node_id": "PRRC_kwDOABII5855aXT-",
      "diff_hunk": "@@ -30,7 +30,7 @@ BOOST_AUTO_TEST_CASE(getcoinscachesizestate)\n     // (prevector<28, unsigned char>) when assigned 56 bytes of data per above.\n     //\n     // See also: Coin::DynamicMemoryUsage().\n-    constexpr unsigned int COIN_SIZE = is_64_bit ? 80 : 64;\n+    constexpr size_t COIN_SIZE{64};",
      "path": "src/test/validation_flush_tests.cpp",
      "position": 1,
      "original_position": 5,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "77ebad9651cd9138cf385c84402fd6042db8536e",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This is a surprising change, can you please explain it?\r\nDo we even get to `BOOST_CHECK_EQUAL(view.DynamicMemoryUsage(), is_64_bit ? 32U : 16U)` here - and if so, how come none of the other bitness-related values need changing?",
      "created_at": "2025-04-10T09:41:58Z",
      "updated_at": "2025-04-10T09:51:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2036954366",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036954366"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036958978",
      "pull_request_review_id": 2756046565,
      "id": 2036958978,
      "node_id": "PRRC_kwDOABII5855aYcC",
      "diff_hunk": "@@ -92,6 +93,14 @@ def send_batch(fee):\n         send_batch(fee)\n     tx_sync_fun() if tx_sync_fun else test_framework.sync_mempools()  # sync after all evictions\n \n+    # if mempool is almost full (<10k usage bytes left), submit one extra middle-sized tx,\n+    # in order to evict a large filler tx and leave some room; this will enable tests to submit\n+    # txs with just the mempoolminfee without immediate eviction (\"mempool full\" error)\n+    if node.getmempoolinfo()['usage'] >= 4_990_000:\n+        ephemeral_miniwallet.send_self_transfer(from_node=node, fee=num_of_batches * (base_fee / 2),\n+                                                utxo_to_spend=confirmed_utxos.pop(0), target_weight = 32500 * 4)",
      "path": "test/functional/test_framework/mempool_util.py",
      "position": 1,
      "original_position": 30,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "28dc1056263aadf84046b4112f5c61bbd7a6a15e",
      "in_reply_to_id": 2002746377,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This is introduced here incorrectly and fixed in a later commit - as discussed, could you please add it in the same or after the fix commit?",
      "created_at": "2025-04-10T09:44:28Z",
      "updated_at": "2025-04-10T09:49:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2036958978",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036958978"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 101,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036960203",
      "pull_request_review_id": 2756046565,
      "id": 2036960203,
      "node_id": "PRRC_kwDOABII5855aYvL",
      "diff_hunk": "@@ -48,19 +45,21 @@ template<typename X> static inline size_t DynamicUsage(const X * const &v) { ret\n  *  application data structures require more accurate inner accounting, they should\n  *  iterate themselves, or use more efficient caching + updating on modification.\n  */\n-\n-static inline size_t MallocUsage(size_t alloc)\n+static constexpr size_t MallocUsage(size_t alloc)\n {\n-    // Measured on libc6 2.19 on Linux.\n-    if (alloc == 0) {\n-        return 0;\n-    } else if (sizeof(void*) == 8) {\n-        return ((alloc + 31) >> 4) << 4;\n-    } else if (sizeof(void*) == 4) {\n-        return ((alloc + 15) >> 3) << 3;\n-    } else {\n-        assert(0);\n-    }\n+    if (alloc == 0) return 0;\n+\n+#if defined(__arm__) || SIZE_MAX == UINT64_MAX\n+    constexpr size_t min_alloc{9};",
      "path": "src/memusage.h",
      "position": 31,
      "original_position": 31,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "77ebad9651cd9138cf385c84402fd6042db8536e",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "could we document this number here, it's definitely not obvious",
      "created_at": "2025-04-10T09:45:06Z",
      "updated_at": "2025-04-10T09:49:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2036960203",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036960203"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 53,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036963185",
      "pull_request_review_id": 2756046565,
      "id": 2036963185,
      "node_id": "PRRC_kwDOABII5855aZdx",
      "diff_hunk": "@@ -177,23 +176,33 @@ static inline size_t DynamicUsage(const std::list<X>& l)\n     return MallocUsage(sizeof(list_node<X>)) * l.size();\n }\n \n+// Empirically, an std::unordered_map node has two pointers (likely\n+// forward and backward pointers) on some platforms (Windows and macOS),\n+// so be conservative in estimating memory usage by assuming this is\n+// the case for all platforms.\n template<typename X>\n struct unordered_node : private X\n {\n private:\n     void* ptr;\n+    void* ptr2;\n };\n \n+// The memory used by an unordered_set or unordered map is the sum of the\n+// sizes of the individual nodes (which are separately allocated) plus\n+// the size of the bucket array (which is a single allocation).\n+// Empirically, each element of the bucket array consists of two pointers\n+// on some platforms (Windows and macOS), so be conservative.\n template<typename X, typename Y>\n static inline size_t DynamicUsage(const std::unordered_set<X, Y>& s)\n {\n-    return MallocUsage(sizeof(unordered_node<X>)) * s.size() + MallocUsage(sizeof(void*) * s.bucket_count());\n+    return MallocUsage(sizeof(unordered_node<X>)) * s.size() + MallocUsage(2 * sizeof(void*) * s.bucket_count());\n }\n \n template<typename X, typename Y, typename Z>\n static inline size_t DynamicUsage(const std::unordered_map<X, Y, Z>& m)\n {\n-    return MallocUsage(sizeof(unordered_node<std::pair<const X, Y> >)) * m.size() + MallocUsage(sizeof(void*) * m.bucket_count());\n+    return MallocUsage(sizeof(unordered_node<std::pair<const X, Y> >)) * m.size() + MallocUsage(2 * sizeof(void*) * m.bucket_count());",
      "path": "src/memusage.h",
      "position": 1,
      "original_position": 76,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "77ebad9651cd9138cf385c84402fd6042db8536e",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`2 * sizeof(void*)` refers to `ptr` + `ptr2`, right? Can we extract that to an explanatory constant?",
      "created_at": "2025-04-10T09:46:47Z",
      "updated_at": "2025-04-10T09:49:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2036963185",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036963185"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 205,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036965120",
      "pull_request_review_id": 2756046565,
      "id": 2036965120,
      "node_id": "PRRC_kwDOABII5855aZ8A",
      "diff_hunk": "@@ -212,7 +221,7 @@ static inline size_t DynamicUsage(const std::unordered_map<Key,\n     size_t estimated_list_node_size = MallocUsage(sizeof(void*) * 3);\n     size_t usage_resource = estimated_list_node_size * pool_resource->NumAllocatedChunks();\n     size_t usage_chunks = MallocUsage(pool_resource->ChunkSizeBytes()) * pool_resource->NumAllocatedChunks();\n-    return usage_resource + usage_chunks + MallocUsage(sizeof(void*) * m.bucket_count());\n+    return usage_resource + usage_chunks + MallocUsage(2 * sizeof(void*) * m.bucket_count());",
      "path": "src/memusage.h",
      "position": 1,
      "original_position": 85,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "77ebad9651cd9138cf385c84402fd6042db8536e",
      "in_reply_to_id": 2019458266,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> likely two pointers\r\n\r\nIs there a way to verify and document that explicitly (pointing to doc or code)?",
      "created_at": "2025-04-10T09:47:54Z",
      "updated_at": "2025-04-10T09:49:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2036965120",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036965120"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 224,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036967303",
      "pull_request_review_id": 2756046565,
      "id": 2036967303,
      "node_id": "PRRC_kwDOABII5855aaeH",
      "diff_hunk": "@@ -57,16 +57,17 @@ def fill_mempool(test_framework, node, *, tx_sync_fun=None):\n     # Generate UTXOs to flood the mempool\n     # 1 to create a tx initially that will be evicted from the mempool later\n     # 75 transactions each with a fee rate higher than the previous one\n+    # 1 to create a final middle-sized tx to evict a filler tx and create room (if needed)\n     ephemeral_miniwallet = MiniWallet(node, tag_name=\"fill_mempool_ephemeral_wallet\")\n-    test_framework.generate(ephemeral_miniwallet, 1 + num_of_batches * tx_batch_size)\n+    test_framework.generate(ephemeral_miniwallet, 2 + num_of_batches * tx_batch_size)",
      "path": "test/functional/test_framework/mempool_util.py",
      "position": 7,
      "original_position": 7,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "77ebad9651cd9138cf385c84402fd6042db8536e",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "same, can we extract the `2` to a named constant?",
      "created_at": "2025-04-10T09:49:06Z",
      "updated_at": "2025-04-10T09:49:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2036967303",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036967303"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 62,
      "original_line": 62,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2044004503",
      "pull_request_review_id": 2767404680,
      "id": 2044004503,
      "node_id": "PRRC_kwDOABII58551QiX",
      "diff_hunk": "@@ -30,7 +30,7 @@ BOOST_AUTO_TEST_CASE(getcoinscachesizestate)\n     // (prevector<28, unsigned char>) when assigned 56 bytes of data per above.\n     //\n     // See also: Coin::DynamicMemoryUsage().\n-    constexpr unsigned int COIN_SIZE = is_64_bit ? 80 : 64;\n+    constexpr size_t COIN_SIZE{64};",
      "path": "src/test/validation_flush_tests.cpp",
      "position": 1,
      "original_position": 5,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "77ebad9651cd9138cf385c84402fd6042db8536e",
      "in_reply_to_id": 2036954366,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "[I've checked](https://github.com/bitcoin/bitcoin/pull/32244) and most of the test is dead for the [past 3 years](https://github.com/bitcoin/bitcoin/pull/25325), cc @martinus.\r\n\r\nCould you update the modified test all the way to revive it and define the desired behavior?",
      "created_at": "2025-04-15T08:45:55Z",
      "updated_at": "2025-04-15T08:45:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2044004503",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2044004503"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2092092067",
      "pull_request_review_id": 2845173684,
      "id": 2092092067,
      "node_id": "PRRC_kwDOABII5858ssqj",
      "diff_hunk": "@@ -48,19 +45,21 @@ template<typename X> static inline size_t DynamicUsage(const X * const &v) { ret\n  *  application data structures require more accurate inner accounting, they should\n  *  iterate themselves, or use more efficient caching + updating on modification.\n  */\n-\n-static inline size_t MallocUsage(size_t alloc)\n+static constexpr size_t MallocUsage(size_t alloc)\n {\n-    // Measured on libc6 2.19 on Linux.\n-    if (alloc == 0) {\n-        return 0;\n-    } else if (sizeof(void*) == 8) {\n-        return ((alloc + 31) >> 4) << 4;\n-    } else if (sizeof(void*) == 4) {\n-        return ((alloc + 15) >> 3) << 3;\n-    } else {\n-        assert(0);\n-    }\n+    if (alloc == 0) return 0;\n+\n+#if defined(__arm__) || SIZE_MAX == UINT64_MAX\n+    constexpr size_t min_alloc{9};",
      "path": "src/memusage.h",
      "position": 31,
      "original_position": 31,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "77ebad9651cd9138cf385c84402fd6042db8536e",
      "in_reply_to_id": 2036960203,
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "That constant came from your [comment](#pullrequestreview-2697495377) (which I've adopted into this PR), so I really don't know how to document this value. Where did you get it from? This stuff tends to have magic numbers; I don't think this PR makes it any worse.",
      "created_at": "2025-05-15T23:22:09Z",
      "updated_at": "2025-05-15T23:30:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2092092067",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2092092067"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 53,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2092094020",
      "pull_request_review_id": 2845173684,
      "id": 2092094020,
      "node_id": "PRRC_kwDOABII5858stJE",
      "diff_hunk": "@@ -177,23 +176,33 @@ static inline size_t DynamicUsage(const std::list<X>& l)\n     return MallocUsage(sizeof(list_node<X>)) * l.size();\n }\n \n+// Empirically, an std::unordered_map node has two pointers (likely\n+// forward and backward pointers) on some platforms (Windows and macOS),\n+// so be conservative in estimating memory usage by assuming this is\n+// the case for all platforms.\n template<typename X>\n struct unordered_node : private X\n {\n private:\n     void* ptr;\n+    void* ptr2;\n };\n \n+// The memory used by an unordered_set or unordered map is the sum of the\n+// sizes of the individual nodes (which are separately allocated) plus\n+// the size of the bucket array (which is a single allocation).\n+// Empirically, each element of the bucket array consists of two pointers\n+// on some platforms (Windows and macOS), so be conservative.\n template<typename X, typename Y>\n static inline size_t DynamicUsage(const std::unordered_set<X, Y>& s)\n {\n-    return MallocUsage(sizeof(unordered_node<X>)) * s.size() + MallocUsage(sizeof(void*) * s.bucket_count());\n+    return MallocUsage(sizeof(unordered_node<X>)) * s.size() + MallocUsage(2 * sizeof(void*) * s.bucket_count());\n }\n \n template<typename X, typename Y, typename Z>\n static inline size_t DynamicUsage(const std::unordered_map<X, Y, Z>& m)\n {\n-    return MallocUsage(sizeof(unordered_node<std::pair<const X, Y> >)) * m.size() + MallocUsage(sizeof(void*) * m.bucket_count());\n+    return MallocUsage(sizeof(unordered_node<std::pair<const X, Y> >)) * m.size() + MallocUsage(2 * sizeof(void*) * m.bucket_count());",
      "path": "src/memusage.h",
      "position": 1,
      "original_position": 76,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "77ebad9651cd9138cf385c84402fd6042db8536e",
      "in_reply_to_id": 2036963185,
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes, and there is a fairly detailed comment on lines 194-195 (just before the `unordered_set` version of `DynamicUsage`), so I think that's sufficient. But if you feel strongly, I'll try to come up with something.",
      "created_at": "2025-05-15T23:24:55Z",
      "updated_at": "2025-05-15T23:30:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2092094020",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2092094020"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 205,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2092095271",
      "pull_request_review_id": 2845173684,
      "id": 2092095271,
      "node_id": "PRRC_kwDOABII5858stcn",
      "diff_hunk": "@@ -57,16 +57,17 @@ def fill_mempool(test_framework, node, *, tx_sync_fun=None):\n     # Generate UTXOs to flood the mempool\n     # 1 to create a tx initially that will be evicted from the mempool later\n     # 75 transactions each with a fee rate higher than the previous one\n+    # 1 to create a final middle-sized tx to evict a filler tx and create room (if needed)\n     ephemeral_miniwallet = MiniWallet(node, tag_name=\"fill_mempool_ephemeral_wallet\")\n-    test_framework.generate(ephemeral_miniwallet, 1 + num_of_batches * tx_batch_size)\n+    test_framework.generate(ephemeral_miniwallet, 2 + num_of_batches * tx_batch_size)",
      "path": "test/functional/test_framework/mempool_util.py",
      "position": 7,
      "original_position": 7,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "77ebad9651cd9138cf385c84402fd6042db8536e",
      "in_reply_to_id": 2036967303,
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think the comment immediately above explains it sufficiently, and the \"1\" was not a named constant either (so this pull is not making it worse). But if you feel strongly, I can do something. (As someone once said, the hardest part of programming is coming up with good names!)",
      "created_at": "2025-05-15T23:26:23Z",
      "updated_at": "2025-05-15T23:30:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2092095271",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2092095271"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 62,
      "original_line": 62,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2092095535",
      "pull_request_review_id": 2845173684,
      "id": 2092095535,
      "node_id": "PRRC_kwDOABII5858stgv",
      "diff_hunk": "@@ -92,6 +93,14 @@ def send_batch(fee):\n         send_batch(fee)\n     tx_sync_fun() if tx_sync_fun else test_framework.sync_mempools()  # sync after all evictions\n \n+    # if mempool is almost full (<10k usage bytes left), submit one extra middle-sized tx,\n+    # in order to evict a large filler tx and leave some room; this will enable tests to submit\n+    # txs with just the mempoolminfee without immediate eviction (\"mempool full\" error)\n+    if node.getmempoolinfo()['usage'] >= 4_990_000:",
      "path": "test/functional/test_framework/mempool_util.py",
      "position": 28,
      "original_position": 28,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "18a2bd4b041c7d8995c08ce62876a290d66919ea",
      "in_reply_to_id": 2003105459,
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed.",
      "created_at": "2025-05-15T23:26:39Z",
      "updated_at": "2025-05-15T23:30:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2092095535",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2092095535"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 99,
      "original_line": 99,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2109129254",
      "pull_request_review_id": 2870983929,
      "id": 2109129254,
      "node_id": "PRRC_kwDOABII5859tsIm",
      "diff_hunk": "@@ -101,6 +110,7 @@ def send_batch(fee):\n     test_framework.log.debug(\"Check that mempoolminfee is larger than minrelaytxfee\")\n     assert_equal(node.getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n     assert_greater_than(node.getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n+    test_framework.sync_mempools()",
      "path": "test/functional/test_framework/mempool_util.py",
      "position": 40,
      "original_position": 40,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "4228018ace848adcafd197776cbb4afc2400bf16",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "https://cirrus-ci.com/task/4825274484785152?logs=ci#L3624\r\n\r\n```\r\nin sync_mempools\r\n[23:01:19.556]                                        raise AssertionError(\"Mempool sync timed out after {}s:{}\".format(\r\n[23:01:19.556]                                    AssertionError: Mempool sync timed out after 2400s:\r\n[23:01:19.556] ",
      "created_at": "2025-05-27T13:01:15Z",
      "updated_at": "2025-05-27T13:01:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2109129254",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2109129254"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 113,
      "original_line": 113,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2109130959",
      "pull_request_review_id": 2870986735,
      "id": 2109130959,
      "node_id": "PRRC_kwDOABII5859tsjP",
      "diff_hunk": "@@ -21,115 +21,113 @@ BOOST_AUTO_TEST_CASE(getcoinscachesizestate)\n {\n     Chainstate& chainstate{m_node.chainman->ActiveChainstate()};\n \n-    constexpr bool is_64_bit = sizeof(void*) == 8;\n-\n     LOCK(::cs_main);\n     auto& view = chainstate.CoinsTip();\n \n-    // The number of bytes consumed by coin's heap data, i.e. CScript\n-    // (prevector<28, unsigned char>) when assigned 56 bytes of data per above.\n-    //\n-    // See also: Coin::DynamicMemoryUsage().\n-    constexpr unsigned int COIN_SIZE = is_64_bit ? 80 : 64;\n+    // An empty coins cache still allocates one PoolResource 'chunk', which is 256 KiB, and there\n+    // is some overhead. As a sanity check, an empty coins cache should be only slightly larger.\n+    BOOST_CHECK_LT(view.DynamicMemoryUsage(), 256 * 1024 * 100 / 98);\n \n-    auto print_view_mem_usage = [](CCoinsViewCache& view) {\n-        BOOST_TEST_MESSAGE(\"CCoinsViewCache memory usage: \" << view.DynamicMemoryUsage());\n-    };\n+    // PoolResource defaults to 256 KiB that will be allocated, so we need to test with a size\n+    // significantly larger that size so that fragmentation effects are minimal.\n+    // But this size can still be much smaller than the default coins cache size, 450 MB.\n+    constexpr size_t MAX_COINS_CACHE_BYTES{8'000'000};\n \n-    // PoolResource defaults to 256 KiB that will be allocated, so we'll take that and make it a bit larger.\n-    constexpr size_t MAX_COINS_CACHE_BYTES = 262144 + 512;\n+    // The coins cache can also use the mempool.\n+    constexpr size_t MAX_MEMPOOL_CACHE_BYTES{4'000'000};\n \n-    // Without any coins in the cache, we shouldn't need to flush.\n-    BOOST_TEST(\n-        chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes=*/ 0) != CoinsCacheSizeState::CRITICAL);\n+    // Check GetCoinsCacheSizeState() with an empty coins cache.\n+    const CoinsCacheSizeState empty_cache{chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes=*/0)};\n \n-    // If the initial memory allocations of cacheCoins don't match these common\n-    // cases, we can't really continue to make assertions about memory usage.\n-    // End the test early.\n-    if (view.DynamicMemoryUsage() != 32 && view.DynamicMemoryUsage() != 16) {\n-        // Add a bunch of coins to see that we at least flip over to CRITICAL.\n+    // Without any coins in the cache, we shouldn't need to flush.\n+    BOOST_CHECK_NE(empty_cache, CoinsCacheSizeState::CRITICAL);\n \n-        for (int i{0}; i < 1000; ++i) {\n-            const COutPoint res = AddTestCoin(m_rng, view);\n-            BOOST_CHECK_EQUAL(view.AccessCoin(res).DynamicMemoryUsage(), COIN_SIZE);\n-        }\n+    // And we shouldn't be within 10% of full.\n+    BOOST_CHECK_NE(empty_cache, CoinsCacheSizeState::LARGE);\n \n-        BOOST_CHECK_EQUAL(\n-            chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes=*/0),\n-            CoinsCacheSizeState::CRITICAL);\n+    // There should be plenty of space.\n+    BOOST_CHECK_EQUAL(empty_cache, CoinsCacheSizeState::OK);\n \n-        BOOST_TEST_MESSAGE(\"Exiting cache flush tests early due to unsupported arch\");\n-        return;\n-    }\n-\n-    print_view_mem_usage(view);\n-    BOOST_CHECK_EQUAL(view.DynamicMemoryUsage(), is_64_bit ? 32U : 16U);\n+    // Add coins until the cache is just under 90% full; the returned state should\n+    // be OK until 90%. The loop counter prevents a runaway test.\n+    size_t i;\n+    for (i = 0; i < 80'000; ++i) {\n+        AddTestCoin(m_rng, view);\n \n-    // We should be able to add COINS_UNTIL_CRITICAL coins to the cache before going CRITICAL.\n-    // This is contingent not only on the dynamic memory usage of the Coins\n-    // that we're adding (COIN_SIZE bytes per), but also on how much memory the\n-    // cacheCoins (unordered_map) preallocates.\n-    constexpr int COINS_UNTIL_CRITICAL{3};\n+        // Fill to about 89% (below 90%) of the cache size limit.\n+        if (view.DynamicMemoryUsage() >= MAX_COINS_CACHE_BYTES * 89 / 100) break;\n \n-    // no coin added, so we have plenty of space left.\n-    BOOST_CHECK_EQUAL(\n-        chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes*/ 0),\n-        CoinsCacheSizeState::OK);\n+        BOOST_REQUIRE_EQUAL(\n+            chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes=*/0),\n+            CoinsCacheSizeState::OK);\n+    }\n+    BOOST_CHECK_LT(i, 80'000);\n \n-    for (int i{0}; i < COINS_UNTIL_CRITICAL; ++i) {\n-        const COutPoint res = AddTestCoin(m_rng, view);\n-        print_view_mem_usage(view);\n-        BOOST_CHECK_EQUAL(view.AccessCoin(res).DynamicMemoryUsage(), COIN_SIZE);\n+    // This loop transitions the cache state from OK (< 90%) to LARGE (between 90% and 100%).\n+    for (i = 0; i < 80'000; ++i) {\n+        AddTestCoin(m_rng, view);\n \n-        // adding first coin causes the MemoryResource to allocate one 256 KiB chunk of memory,\n-        // pushing us immediately over to LARGE\n-        BOOST_CHECK_EQUAL(\n-            chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes=*/ 0),\n-            CoinsCacheSizeState::LARGE);\n+        // Fill to about 95% of the cache size limit.\n+        if (view.DynamicMemoryUsage() >= MAX_COINS_CACHE_BYTES * 95 / 100) break;\n     }\n+    BOOST_CHECK_LT(i, 80'000);\n+    BOOST_CHECK_EQUAL(\n+        chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes=*/0),\n+        CoinsCacheSizeState::LARGE);\n \n-    // Adding some additional coins will push us over the edge to CRITICAL.\n-    for (int i{0}; i < 4; ++i) {\n+    // This loop moves the cache state from LARGE (90% to 100%) to CRITICAL (over 100%).\n+    for (i = 0; i < 80'000; ++i) {\n         AddTestCoin(m_rng, view);\n-        print_view_mem_usage(view);\n-        if (chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes=*/0) ==\n-            CoinsCacheSizeState::CRITICAL) {\n-            break;\n-        }\n-    }\n \n+        // Fill to just beyojnd the cache size limit.",
      "path": "src/test/validation_flush_tests.cpp",
      "position": 121,
      "original_position": 121,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "4228018ace848adcafd197776cbb4afc2400bf16",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "\r\n    that size -> than size [incorrect preposition]\r\n    beyojnd -> beyond [typographical error]\r\n",
      "created_at": "2025-05-27T13:02:05Z",
      "updated_at": "2025-05-27T13:02:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2109130959",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2109130959"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 82,
      "original_line": 82,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2109228294",
      "pull_request_review_id": 2871139248,
      "id": 2109228294,
      "node_id": "PRRC_kwDOABII5859uEUG",
      "diff_hunk": "",
      "path": "src/memusage.h",
      "position": 1,
      "original_position": 1,
      "commit_id": "4228018ace848adcafd197776cbb4afc2400bf16",
      "original_commit_id": "4228018ace848adcafd197776cbb4afc2400bf16",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "@LarryRuane I think you should probably be the author of the commit, given that you've already added @theStack as a co-author",
      "created_at": "2025-05-27T13:40:16Z",
      "updated_at": "2025-05-27T15:34:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2109228294",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2109228294"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2109257463",
      "pull_request_review_id": 2871139248,
      "id": 2109257463,
      "node_id": "PRRC_kwDOABII5859uLb3",
      "diff_hunk": "@@ -48,19 +48,31 @@ template<typename X> static inline size_t DynamicUsage(const X * const &v) { ret\n  *  application data structures require more accurate inner accounting, they should\n  *  iterate themselves, or use more efficient caching + updating on modification.\n  */\n-\n static inline size_t MallocUsage(size_t alloc)\n {\n-    // Measured on libc6 2.19 on Linux.\n-    if (alloc == 0) {\n-        return 0;\n-    } else if (sizeof(void*) == 8) {\n-        return ((alloc + 31) >> 4) << 4;\n-    } else if (sizeof(void*) == 4) {\n-        return ((alloc + 15) >> 3) << 3;\n-    } else {\n-        assert(0);\n-    }\n+    // There are few if any actual zero-length allocations; when\n+    // DynamicUsage(std::vector<X>& v) calls this function, and v.capacity() == 0,\n+    // for example, there has not been a zero-byte allocation (which would require\n+    // some physical space). std::vector has optimized this case. Experimental\n+    // evidence indicates the same is true of other data structures -- there are\n+    // no actual zero-length allocations observed, although of course this is\n+    // library-dependent.\n+    if (alloc == 0) return 0;\n+\n+    static constexpr size_t overhead = sizeof(void*);\n+#if defined(__arm__)\n+    // tested with ARM 32bit\n+    static constexpr size_t step = sizeof(void*) * 2;\n+    static constexpr size_t min_alloc = 9;\n+#else\n+    static constexpr size_t step = 16U;\n+    static constexpr size_t min_alloc = sizeof(void*) == 8 ? 9 : 0;\n+#endif\n+    // step should be nonzero and a power of 2\n+    static_assert(step > 0);\n+    static_assert((step & (step-1)) == 0);\n+    // tested with Linux glibc 2.31 and 2.38, 32bit and 64bit\n+    return (std::max(min_alloc, alloc) + overhead + (step - 1)) & ~(step - 1);",
      "path": "src/memusage.h",
      "position": 40,
      "original_position": 39,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "28dc1056263aadf84046b4112f5c61bbd7a6a15e",
      "in_reply_to_id": 2002916382,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Indeed, please resolve the comment",
      "created_at": "2025-05-27T13:51:30Z",
      "updated_at": "2025-05-27T15:34:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2109257463",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2109257463"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 62,
      "original_line": 62,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2109260580",
      "pull_request_review_id": 2871139248,
      "id": 2109260580,
      "node_id": "PRRC_kwDOABII5859uMMk",
      "diff_hunk": "@@ -177,23 +176,33 @@ static inline size_t DynamicUsage(const std::list<X>& l)\n     return MallocUsage(sizeof(list_node<X>)) * l.size();\n }\n \n+// Empirically, an std::unordered_map node has two pointers (likely\n+// forward and backward pointers) on some platforms (Windows and macOS),\n+// so be conservative in estimating memory usage by assuming this is\n+// the case for all platforms.\n template<typename X>\n struct unordered_node : private X\n {\n private:\n     void* ptr;\n+    void* ptr2;\n };\n \n+// The memory used by an unordered_set or unordered map is the sum of the\n+// sizes of the individual nodes (which are separately allocated) plus\n+// the size of the bucket array (which is a single allocation).\n+// Empirically, each element of the bucket array consists of two pointers\n+// on some platforms (Windows and macOS), so be conservative.\n template<typename X, typename Y>\n static inline size_t DynamicUsage(const std::unordered_set<X, Y>& s)\n {\n-    return MallocUsage(sizeof(unordered_node<X>)) * s.size() + MallocUsage(sizeof(void*) * s.bucket_count());\n+    return MallocUsage(sizeof(unordered_node<X>)) * s.size() + MallocUsage(2 * sizeof(void*) * s.bucket_count());\n }\n \n template<typename X, typename Y, typename Z>\n static inline size_t DynamicUsage(const std::unordered_map<X, Y, Z>& m)\n {\n-    return MallocUsage(sizeof(unordered_node<std::pair<const X, Y> >)) * m.size() + MallocUsage(sizeof(void*) * m.bucket_count());\n+    return MallocUsage(sizeof(unordered_node<std::pair<const X, Y> >)) * m.size() + MallocUsage(2 * sizeof(void*) * m.bucket_count());",
      "path": "src/memusage.h",
      "position": 1,
      "original_position": 76,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "77ebad9651cd9138cf385c84402fd6042db8536e",
      "in_reply_to_id": 2036963185,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I really dislike comments when code could be used, i.e. when I see `sizeof(void*)`, it doesn't tell me anything about what we're actually measuring ... `2 * sizeof(void*)` is even worse.\r\n\r\nI was thinking of showing exactly what we're measuring here, something like:\r\n```C++\r\n\r\n// Empirically, an std::unordered_map node has two pointers (likely\r\n// forward and backward pointers) on some platforms (Windows and macOS),\r\n// so be conservative in estimating memory usage by assuming this is\r\n// the case for all platforms.\r\ntemplate <typename X>\r\nstruct unordered_node : private X\r\n{\r\n    void* next_ptr;\r\n    void* prev_ptr;\r\n};\r\n\r\n// The memory used by an unordered_set or unordered_map is the sum of the\r\n// sizes of the individual nodes (which are separately allocated) plus\r\n// the size of the bucket array (which is a single allocation).\r\n// Empirically, each element of the bucket array consists of two pointers\r\n// on some platforms (Windows and macOS), so be conservative.\r\ntemplate <typename X, typename Y>\r\nstatic size_t DynamicUsage(const std::unordered_set<X, Y>& s)\r\n{\r\n    return MallocUsage(sizeof(unordered_node<X>)) * s.size() +\r\n           MallocUsage((sizeof(unordered_node<X>::next_ptr) + sizeof(unordered_node<X>::prev_ptr)) * s.bucket_count());\r\n}\r\n\r\ntemplate <typename X, typename Y, typename Z>\r\nstatic size_t DynamicUsage(const std::unordered_map<X, Y, Z>& m)\r\n{\r\n    return MallocUsage(sizeof(unordered_node<std::pair<const X, Y>>)) * m.size() +\r\n           MallocUsage((sizeof(unordered_node<std::pair<const X, Y>>::next_ptr) + sizeof(unordered_node<std::pair<const X, Y>>::prev_ptr)) * m.bucket_count());\r\n}\r\n```\r\n\r\nAlso note that the current test doesn't doesn't exercise these modified lines at all, so we've kinda' in the dark here...",
      "created_at": "2025-05-27T13:52:41Z",
      "updated_at": "2025-05-27T15:34:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2109260580",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2109260580"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 205,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2109304532",
      "pull_request_review_id": 2871139248,
      "id": 2109304532,
      "node_id": "PRRC_kwDOABII5859uW7U",
      "diff_hunk": "@@ -177,23 +176,33 @@ static inline size_t DynamicUsage(const std::list<X>& l)\n     return MallocUsage(sizeof(list_node<X>)) * l.size();\n }\n \n+// Empirically, an std::unordered_map node has two pointers (likely\n+// forward and backward pointers) on some platforms (Windows and macOS),\n+// so be conservative in estimating memory usage by assuming this is\n+// the case for all platforms.\n template<typename X>\n struct unordered_node : private X\n {\n private:\n     void* ptr;\n+    void* ptr2;\n };\n \n+// The memory used by an unordered_set or unordered map is the sum of the",
      "path": "src/memusage.h",
      "position": 1,
      "original_position": 60,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "4228018ace848adcafd197776cbb4afc2400bf16",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n// The memory used by an unordered_set or unordered_map is the sum of the\r\n```",
      "created_at": "2025-05-27T14:08:40Z",
      "updated_at": "2025-05-27T15:34:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2109304532",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2109304532"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 191,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2109307830",
      "pull_request_review_id": 2871139248,
      "id": 2109307830,
      "node_id": "PRRC_kwDOABII5859uXu2",
      "diff_hunk": "@@ -212,7 +221,9 @@ static inline size_t DynamicUsage(const std::unordered_map<Key,\n     size_t estimated_list_node_size = MallocUsage(sizeof(void*) * 3);\n     size_t usage_resource = estimated_list_node_size * pool_resource->NumAllocatedChunks();\n     size_t usage_chunks = MallocUsage(pool_resource->ChunkSizeBytes()) * pool_resource->NumAllocatedChunks();\n-    return usage_resource + usage_chunks + MallocUsage(sizeof(void*) * m.bucket_count());\n+    // Empirically, each element of the bucket array has two pointers on some platforms (Windows and macOS).",
      "path": "src/memusage.h",
      "position": 94,
      "original_position": 85,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "4228018ace848adcafd197776cbb4afc2400bf16",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Instead of empirically, can we add documentation or source code links here?",
      "created_at": "2025-05-27T14:09:50Z",
      "updated_at": "2025-05-27T15:34:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2109307830",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2109307830"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 232,
      "original_line": 232,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2109325757",
      "pull_request_review_id": 2871139248,
      "id": 2109325757,
      "node_id": "PRRC_kwDOABII5859ucG9",
      "diff_hunk": "@@ -21,115 +21,113 @@ BOOST_AUTO_TEST_CASE(getcoinscachesizestate)\n {\n     Chainstate& chainstate{m_node.chainman->ActiveChainstate()};\n \n-    constexpr bool is_64_bit = sizeof(void*) == 8;\n-\n     LOCK(::cs_main);\n     auto& view = chainstate.CoinsTip();\n \n-    // The number of bytes consumed by coin's heap data, i.e. CScript\n-    // (prevector<28, unsigned char>) when assigned 56 bytes of data per above.\n-    //\n-    // See also: Coin::DynamicMemoryUsage().\n-    constexpr unsigned int COIN_SIZE = is_64_bit ? 80 : 64;\n+    // An empty coins cache still allocates one PoolResource 'chunk', which is 256 KiB, and there\n+    // is some overhead. As a sanity check, an empty coins cache should be only slightly larger.\n+    BOOST_CHECK_LT(view.DynamicMemoryUsage(), 256 * 1024 * 100 / 98);\n \n-    auto print_view_mem_usage = [](CCoinsViewCache& view) {\n-        BOOST_TEST_MESSAGE(\"CCoinsViewCache memory usage: \" << view.DynamicMemoryUsage());\n-    };\n+    // PoolResource defaults to 256 KiB that will be allocated, so we need to test with a size\n+    // significantly larger that size so that fragmentation effects are minimal.\n+    // But this size can still be much smaller than the default coins cache size, 450 MB.\n+    constexpr size_t MAX_COINS_CACHE_BYTES{8'000'000};\n \n-    // PoolResource defaults to 256 KiB that will be allocated, so we'll take that and make it a bit larger.\n-    constexpr size_t MAX_COINS_CACHE_BYTES = 262144 + 512;\n+    // The coins cache can also use the mempool.\n+    constexpr size_t MAX_MEMPOOL_CACHE_BYTES{4'000'000};\n \n-    // Without any coins in the cache, we shouldn't need to flush.\n-    BOOST_TEST(\n-        chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes=*/ 0) != CoinsCacheSizeState::CRITICAL);\n+    // Check GetCoinsCacheSizeState() with an empty coins cache.\n+    const CoinsCacheSizeState empty_cache{chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes=*/0)};\n \n-    // If the initial memory allocations of cacheCoins don't match these common\n-    // cases, we can't really continue to make assertions about memory usage.\n-    // End the test early.\n-    if (view.DynamicMemoryUsage() != 32 && view.DynamicMemoryUsage() != 16) {\n-        // Add a bunch of coins to see that we at least flip over to CRITICAL.\n+    // Without any coins in the cache, we shouldn't need to flush.\n+    BOOST_CHECK_NE(empty_cache, CoinsCacheSizeState::CRITICAL);\n \n-        for (int i{0}; i < 1000; ++i) {\n-            const COutPoint res = AddTestCoin(m_rng, view);\n-            BOOST_CHECK_EQUAL(view.AccessCoin(res).DynamicMemoryUsage(), COIN_SIZE);\n-        }\n+    // And we shouldn't be within 10% of full.\n+    BOOST_CHECK_NE(empty_cache, CoinsCacheSizeState::LARGE);\n \n-        BOOST_CHECK_EQUAL(\n-            chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes=*/0),\n-            CoinsCacheSizeState::CRITICAL);\n+    // There should be plenty of space.\n+    BOOST_CHECK_EQUAL(empty_cache, CoinsCacheSizeState::OK);",
      "path": "src/test/validation_flush_tests.cpp",
      "position": 56,
      "original_position": 56,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "4228018ace848adcafd197776cbb4afc2400bf16",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "If we're already checking equality, what's the point of checking that it's not equal to something else?\r\nThis should also enable us inlining `empty_cache`",
      "created_at": "2025-05-27T14:15:02Z",
      "updated_at": "2025-05-27T15:34:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2109325757",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2109325757"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": 43,
      "original_start_line": 43,
      "start_side": "RIGHT",
      "line": 49,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2109331421",
      "pull_request_review_id": 2871139248,
      "id": 2109331421,
      "node_id": "PRRC_kwDOABII5859udfd",
      "diff_hunk": "@@ -21,115 +21,113 @@ BOOST_AUTO_TEST_CASE(getcoinscachesizestate)\n {\n     Chainstate& chainstate{m_node.chainman->ActiveChainstate()};\n \n-    constexpr bool is_64_bit = sizeof(void*) == 8;\n-\n     LOCK(::cs_main);\n     auto& view = chainstate.CoinsTip();\n \n-    // The number of bytes consumed by coin's heap data, i.e. CScript\n-    // (prevector<28, unsigned char>) when assigned 56 bytes of data per above.\n-    //\n-    // See also: Coin::DynamicMemoryUsage().\n-    constexpr unsigned int COIN_SIZE = is_64_bit ? 80 : 64;\n+    // An empty coins cache still allocates one PoolResource 'chunk', which is 256 KiB, and there\n+    // is some overhead. As a sanity check, an empty coins cache should be only slightly larger.\n+    BOOST_CHECK_LT(view.DynamicMemoryUsage(), 256 * 1024 * 100 / 98);\n \n-    auto print_view_mem_usage = [](CCoinsViewCache& view) {\n-        BOOST_TEST_MESSAGE(\"CCoinsViewCache memory usage: \" << view.DynamicMemoryUsage());\n-    };\n+    // PoolResource defaults to 256 KiB that will be allocated, so we need to test with a size\n+    // significantly larger that size so that fragmentation effects are minimal.\n+    // But this size can still be much smaller than the default coins cache size, 450 MB.\n+    constexpr size_t MAX_COINS_CACHE_BYTES{8'000'000};\n \n-    // PoolResource defaults to 256 KiB that will be allocated, so we'll take that and make it a bit larger.\n-    constexpr size_t MAX_COINS_CACHE_BYTES = 262144 + 512;\n+    // The coins cache can also use the mempool.\n+    constexpr size_t MAX_MEMPOOL_CACHE_BYTES{4'000'000};\n \n-    // Without any coins in the cache, we shouldn't need to flush.\n-    BOOST_TEST(\n-        chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes=*/ 0) != CoinsCacheSizeState::CRITICAL);\n+    // Check GetCoinsCacheSizeState() with an empty coins cache.\n+    const CoinsCacheSizeState empty_cache{chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes=*/0)};\n \n-    // If the initial memory allocations of cacheCoins don't match these common\n-    // cases, we can't really continue to make assertions about memory usage.\n-    // End the test early.\n-    if (view.DynamicMemoryUsage() != 32 && view.DynamicMemoryUsage() != 16) {\n-        // Add a bunch of coins to see that we at least flip over to CRITICAL.\n+    // Without any coins in the cache, we shouldn't need to flush.\n+    BOOST_CHECK_NE(empty_cache, CoinsCacheSizeState::CRITICAL);\n \n-        for (int i{0}; i < 1000; ++i) {\n-            const COutPoint res = AddTestCoin(m_rng, view);\n-            BOOST_CHECK_EQUAL(view.AccessCoin(res).DynamicMemoryUsage(), COIN_SIZE);\n-        }\n+    // And we shouldn't be within 10% of full.\n+    BOOST_CHECK_NE(empty_cache, CoinsCacheSizeState::LARGE);\n \n-        BOOST_CHECK_EQUAL(\n-            chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes=*/0),\n-            CoinsCacheSizeState::CRITICAL);\n+    // There should be plenty of space.\n+    BOOST_CHECK_EQUAL(empty_cache, CoinsCacheSizeState::OK);\n \n-        BOOST_TEST_MESSAGE(\"Exiting cache flush tests early due to unsupported arch\");\n-        return;\n-    }\n-\n-    print_view_mem_usage(view);\n-    BOOST_CHECK_EQUAL(view.DynamicMemoryUsage(), is_64_bit ? 32U : 16U);\n+    // Add coins until the cache is just under 90% full; the returned state should\n+    // be OK until 90%. The loop counter prevents a runaway test.\n+    size_t i;\n+    for (i = 0; i < 80'000; ++i) {\n+        AddTestCoin(m_rng, view);\n \n-    // We should be able to add COINS_UNTIL_CRITICAL coins to the cache before going CRITICAL.\n-    // This is contingent not only on the dynamic memory usage of the Coins\n-    // that we're adding (COIN_SIZE bytes per), but also on how much memory the\n-    // cacheCoins (unordered_map) preallocates.\n-    constexpr int COINS_UNTIL_CRITICAL{3};\n+        // Fill to about 89% (below 90%) of the cache size limit.\n+        if (view.DynamicMemoryUsage() >= MAX_COINS_CACHE_BYTES * 89 / 100) break;\n \n-    // no coin added, so we have plenty of space left.\n-    BOOST_CHECK_EQUAL(\n-        chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes*/ 0),\n-        CoinsCacheSizeState::OK);\n+        BOOST_REQUIRE_EQUAL(\n+            chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes=*/0),\n+            CoinsCacheSizeState::OK);\n+    }\n+    BOOST_CHECK_LT(i, 80'000);",
      "path": "src/test/validation_flush_tests.cpp",
      "position": 86,
      "original_position": 86,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "4228018ace848adcafd197776cbb4afc2400bf16",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I really dislike that we're exposing the loop variable just to see if we finished without transitioning.\r\nWe seem to exit at worst around `32415` for me locally, maybe we can reduce the attempt count and extract it to a variable:\r\n```C++\r\nconstexpr size_t MAX_ATTEMPTS{50'000};               //  runaway-loop safety cap\r\n```\r\nAnd we can add a worst-case condition for the very last iteration which should always be `LARGE`, e.g.:\r\n```C++\r\n// OK → LARGE\r\nfor (size_t i{1}; i <= MAX_ATTEMPTS; ++i) {\r\n    AddTestCoin(m_rng, view);\r\n\r\n    auto state{chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, max_mempool_size_bytes)};\r\n    if (i == MAX_ATTEMPTS || view.DynamicMemoryUsage() >= full_cap * 90 / 100) {\r\n        BOOST_CHECK_EQUAL(state, CoinsCacheSizeState::LARGE);\r\n        break;\r\n    }\r\n    BOOST_CHECK_EQUAL(state, CoinsCacheSizeState::OK);\r\n}\r\n```",
      "created_at": "2025-05-27T14:17:38Z",
      "updated_at": "2025-05-27T15:34:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2109331421",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2109331421"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 64,
      "original_line": 64,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2109336914",
      "pull_request_review_id": 2871139248,
      "id": 2109336914,
      "node_id": "PRRC_kwDOABII5859ue1S",
      "diff_hunk": "@@ -21,115 +21,113 @@ BOOST_AUTO_TEST_CASE(getcoinscachesizestate)\n {\n     Chainstate& chainstate{m_node.chainman->ActiveChainstate()};\n \n-    constexpr bool is_64_bit = sizeof(void*) == 8;\n-\n     LOCK(::cs_main);\n     auto& view = chainstate.CoinsTip();\n \n-    // The number of bytes consumed by coin's heap data, i.e. CScript\n-    // (prevector<28, unsigned char>) when assigned 56 bytes of data per above.\n-    //\n-    // See also: Coin::DynamicMemoryUsage().\n-    constexpr unsigned int COIN_SIZE = is_64_bit ? 80 : 64;\n+    // An empty coins cache still allocates one PoolResource 'chunk', which is 256 KiB, and there\n+    // is some overhead. As a sanity check, an empty coins cache should be only slightly larger.\n+    BOOST_CHECK_LT(view.DynamicMemoryUsage(), 256 * 1024 * 100 / 98);",
      "path": "src/test/validation_flush_tests.cpp",
      "position": 16,
      "original_position": 16,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "4228018ace848adcafd197776cbb4afc2400bf16",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I find the `100/98` a weird way to express a percentage - if we simply want to check that it's roughly 256 KiB, we could check their ratio:\r\n```suggestion\r\n    BOOST_CHECK_LT(view.DynamicMemoryUsage() / (256 * 1024.0), 1.1);\r\n```",
      "created_at": "2025-05-27T14:20:00Z",
      "updated_at": "2025-05-27T15:34:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2109336914",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2109336914"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 29,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2109380457",
      "pull_request_review_id": 2871139248,
      "id": 2109380457,
      "node_id": "PRRC_kwDOABII5859updp",
      "diff_hunk": "@@ -21,115 +21,113 @@ BOOST_AUTO_TEST_CASE(getcoinscachesizestate)\n {\n     Chainstate& chainstate{m_node.chainman->ActiveChainstate()};\n \n-    constexpr bool is_64_bit = sizeof(void*) == 8;\n-\n     LOCK(::cs_main);\n     auto& view = chainstate.CoinsTip();\n \n-    // The number of bytes consumed by coin's heap data, i.e. CScript\n-    // (prevector<28, unsigned char>) when assigned 56 bytes of data per above.\n-    //\n-    // See also: Coin::DynamicMemoryUsage().\n-    constexpr unsigned int COIN_SIZE = is_64_bit ? 80 : 64;\n+    // An empty coins cache still allocates one PoolResource 'chunk', which is 256 KiB, and there\n+    // is some overhead. As a sanity check, an empty coins cache should be only slightly larger.\n+    BOOST_CHECK_LT(view.DynamicMemoryUsage(), 256 * 1024 * 100 / 98);\n \n-    auto print_view_mem_usage = [](CCoinsViewCache& view) {\n-        BOOST_TEST_MESSAGE(\"CCoinsViewCache memory usage: \" << view.DynamicMemoryUsage());\n-    };\n+    // PoolResource defaults to 256 KiB that will be allocated, so we need to test with a size\n+    // significantly larger that size so that fragmentation effects are minimal.\n+    // But this size can still be much smaller than the default coins cache size, 450 MB.\n+    constexpr size_t MAX_COINS_CACHE_BYTES{8'000'000};\n \n-    // PoolResource defaults to 256 KiB that will be allocated, so we'll take that and make it a bit larger.\n-    constexpr size_t MAX_COINS_CACHE_BYTES = 262144 + 512;\n+    // The coins cache can also use the mempool.\n+    constexpr size_t MAX_MEMPOOL_CACHE_BYTES{4'000'000};\n \n-    // Without any coins in the cache, we shouldn't need to flush.\n-    BOOST_TEST(\n-        chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes=*/ 0) != CoinsCacheSizeState::CRITICAL);\n+    // Check GetCoinsCacheSizeState() with an empty coins cache.\n+    const CoinsCacheSizeState empty_cache{chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes=*/0)};\n \n-    // If the initial memory allocations of cacheCoins don't match these common\n-    // cases, we can't really continue to make assertions about memory usage.\n-    // End the test early.\n-    if (view.DynamicMemoryUsage() != 32 && view.DynamicMemoryUsage() != 16) {\n-        // Add a bunch of coins to see that we at least flip over to CRITICAL.\n+    // Without any coins in the cache, we shouldn't need to flush.\n+    BOOST_CHECK_NE(empty_cache, CoinsCacheSizeState::CRITICAL);\n \n-        for (int i{0}; i < 1000; ++i) {\n-            const COutPoint res = AddTestCoin(m_rng, view);\n-            BOOST_CHECK_EQUAL(view.AccessCoin(res).DynamicMemoryUsage(), COIN_SIZE);\n-        }\n+    // And we shouldn't be within 10% of full.\n+    BOOST_CHECK_NE(empty_cache, CoinsCacheSizeState::LARGE);\n \n-        BOOST_CHECK_EQUAL(\n-            chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes=*/0),\n-            CoinsCacheSizeState::CRITICAL);\n+    // There should be plenty of space.\n+    BOOST_CHECK_EQUAL(empty_cache, CoinsCacheSizeState::OK);\n \n-        BOOST_TEST_MESSAGE(\"Exiting cache flush tests early due to unsupported arch\");\n-        return;\n-    }\n-\n-    print_view_mem_usage(view);\n-    BOOST_CHECK_EQUAL(view.DynamicMemoryUsage(), is_64_bit ? 32U : 16U);\n+    // Add coins until the cache is just under 90% full; the returned state should\n+    // be OK until 90%. The loop counter prevents a runaway test.\n+    size_t i;\n+    for (i = 0; i < 80'000; ++i) {\n+        AddTestCoin(m_rng, view);\n \n-    // We should be able to add COINS_UNTIL_CRITICAL coins to the cache before going CRITICAL.\n-    // This is contingent not only on the dynamic memory usage of the Coins\n-    // that we're adding (COIN_SIZE bytes per), but also on how much memory the\n-    // cacheCoins (unordered_map) preallocates.\n-    constexpr int COINS_UNTIL_CRITICAL{3};\n+        // Fill to about 89% (below 90%) of the cache size limit.\n+        if (view.DynamicMemoryUsage() >= MAX_COINS_CACHE_BYTES * 89 / 100) break;\n \n-    // no coin added, so we have plenty of space left.\n-    BOOST_CHECK_EQUAL(\n-        chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes*/ 0),\n-        CoinsCacheSizeState::OK);\n+        BOOST_REQUIRE_EQUAL(\n+            chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes=*/0),\n+            CoinsCacheSizeState::OK);\n+    }\n+    BOOST_CHECK_LT(i, 80'000);\n \n-    for (int i{0}; i < COINS_UNTIL_CRITICAL; ++i) {\n-        const COutPoint res = AddTestCoin(m_rng, view);\n-        print_view_mem_usage(view);\n-        BOOST_CHECK_EQUAL(view.AccessCoin(res).DynamicMemoryUsage(), COIN_SIZE);\n+    // This loop transitions the cache state from OK (< 90%) to LARGE (between 90% and 100%).\n+    for (i = 0; i < 80'000; ++i) {\n+        AddTestCoin(m_rng, view);\n \n-        // adding first coin causes the MemoryResource to allocate one 256 KiB chunk of memory,\n-        // pushing us immediately over to LARGE\n-        BOOST_CHECK_EQUAL(\n-            chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes=*/ 0),\n-            CoinsCacheSizeState::LARGE);\n+        // Fill to about 95% of the cache size limit.\n+        if (view.DynamicMemoryUsage() >= MAX_COINS_CACHE_BYTES * 95 / 100) break;\n     }\n+    BOOST_CHECK_LT(i, 80'000);\n+    BOOST_CHECK_EQUAL(\n+        chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes=*/0),\n+        CoinsCacheSizeState::LARGE);\n \n-    // Adding some additional coins will push us over the edge to CRITICAL.\n-    for (int i{0}; i < 4; ++i) {\n+    // This loop moves the cache state from LARGE (90% to 100%) to CRITICAL (over 100%).\n+    for (i = 0; i < 80'000; ++i) {\n         AddTestCoin(m_rng, view);\n-        print_view_mem_usage(view);\n-        if (chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes=*/0) ==\n-            CoinsCacheSizeState::CRITICAL) {\n-            break;\n-        }\n-    }\n \n+        // Fill to just beyojnd the cache size limit.\n+        if (view.DynamicMemoryUsage() > MAX_COINS_CACHE_BYTES) break;\n+    }\n+    BOOST_CHECK_LT(i, 80'000);\n     BOOST_CHECK_EQUAL(\n         chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes=*/0),\n         CoinsCacheSizeState::CRITICAL);\n \n-    // Passing non-zero max mempool usage (512 KiB) should allow us more headroom.\n+    // Repeat (continuing with the existing cache) but with a non-zero max mempool;\n+    // this allows more headroom.\n     BOOST_CHECK_EQUAL(\n-        chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes=*/ 1 << 19),\n+        chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes=*/MAX_MEMPOOL_CACHE_BYTES),",
      "path": "src/test/validation_flush_tests.cpp",
      "position": 134,
      "original_position": 134,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "4228018ace848adcafd197776cbb4afc2400bf16",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "it makes sense to add the `/*max_mempool_size_bytes=*` for primitives - but we don't usually do it for self-explanatory variables:\r\n```suggestion\r\n        chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, MAX_MEMPOOL_CACHE_BYTES),\r\n```",
      "created_at": "2025-05-27T14:37:13Z",
      "updated_at": "2025-05-27T15:34:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2109380457",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2109380457"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 93,
      "original_line": 93,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2109417797",
      "pull_request_review_id": 2871139248,
      "id": 2109417797,
      "node_id": "PRRC_kwDOABII5859uylF",
      "diff_hunk": "@@ -21,115 +21,113 @@ BOOST_AUTO_TEST_CASE(getcoinscachesizestate)\n {\n     Chainstate& chainstate{m_node.chainman->ActiveChainstate()};\n \n-    constexpr bool is_64_bit = sizeof(void*) == 8;\n-\n     LOCK(::cs_main);\n     auto& view = chainstate.CoinsTip();\n \n-    // The number of bytes consumed by coin's heap data, i.e. CScript\n-    // (prevector<28, unsigned char>) when assigned 56 bytes of data per above.\n-    //\n-    // See also: Coin::DynamicMemoryUsage().\n-    constexpr unsigned int COIN_SIZE = is_64_bit ? 80 : 64;\n+    // An empty coins cache still allocates one PoolResource 'chunk', which is 256 KiB, and there\n+    // is some overhead. As a sanity check, an empty coins cache should be only slightly larger.\n+    BOOST_CHECK_LT(view.DynamicMemoryUsage(), 256 * 1024 * 100 / 98);\n \n-    auto print_view_mem_usage = [](CCoinsViewCache& view) {\n-        BOOST_TEST_MESSAGE(\"CCoinsViewCache memory usage: \" << view.DynamicMemoryUsage());\n-    };\n+    // PoolResource defaults to 256 KiB that will be allocated, so we need to test with a size\n+    // significantly larger that size so that fragmentation effects are minimal.\n+    // But this size can still be much smaller than the default coins cache size, 450 MB.\n+    constexpr size_t MAX_COINS_CACHE_BYTES{8'000'000};\n \n-    // PoolResource defaults to 256 KiB that will be allocated, so we'll take that and make it a bit larger.\n-    constexpr size_t MAX_COINS_CACHE_BYTES = 262144 + 512;\n+    // The coins cache can also use the mempool.\n+    constexpr size_t MAX_MEMPOOL_CACHE_BYTES{4'000'000};\n \n-    // Without any coins in the cache, we shouldn't need to flush.\n-    BOOST_TEST(\n-        chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes=*/ 0) != CoinsCacheSizeState::CRITICAL);\n+    // Check GetCoinsCacheSizeState() with an empty coins cache.\n+    const CoinsCacheSizeState empty_cache{chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes=*/0)};\n \n-    // If the initial memory allocations of cacheCoins don't match these common\n-    // cases, we can't really continue to make assertions about memory usage.\n-    // End the test early.\n-    if (view.DynamicMemoryUsage() != 32 && view.DynamicMemoryUsage() != 16) {\n-        // Add a bunch of coins to see that we at least flip over to CRITICAL.\n+    // Without any coins in the cache, we shouldn't need to flush.\n+    BOOST_CHECK_NE(empty_cache, CoinsCacheSizeState::CRITICAL);\n \n-        for (int i{0}; i < 1000; ++i) {\n-            const COutPoint res = AddTestCoin(m_rng, view);\n-            BOOST_CHECK_EQUAL(view.AccessCoin(res).DynamicMemoryUsage(), COIN_SIZE);\n-        }\n+    // And we shouldn't be within 10% of full.\n+    BOOST_CHECK_NE(empty_cache, CoinsCacheSizeState::LARGE);\n \n-        BOOST_CHECK_EQUAL(\n-            chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes=*/0),\n-            CoinsCacheSizeState::CRITICAL);\n+    // There should be plenty of space.\n+    BOOST_CHECK_EQUAL(empty_cache, CoinsCacheSizeState::OK);\n \n-        BOOST_TEST_MESSAGE(\"Exiting cache flush tests early due to unsupported arch\");\n-        return;\n-    }\n-\n-    print_view_mem_usage(view);\n-    BOOST_CHECK_EQUAL(view.DynamicMemoryUsage(), is_64_bit ? 32U : 16U);\n+    // Add coins until the cache is just under 90% full; the returned state should\n+    // be OK until 90%. The loop counter prevents a runaway test.\n+    size_t i;\n+    for (i = 0; i < 80'000; ++i) {\n+        AddTestCoin(m_rng, view);\n \n-    // We should be able to add COINS_UNTIL_CRITICAL coins to the cache before going CRITICAL.\n-    // This is contingent not only on the dynamic memory usage of the Coins\n-    // that we're adding (COIN_SIZE bytes per), but also on how much memory the\n-    // cacheCoins (unordered_map) preallocates.\n-    constexpr int COINS_UNTIL_CRITICAL{3};\n+        // Fill to about 89% (below 90%) of the cache size limit.\n+        if (view.DynamicMemoryUsage() >= MAX_COINS_CACHE_BYTES * 89 / 100) break;\n \n-    // no coin added, so we have plenty of space left.\n-    BOOST_CHECK_EQUAL(\n-        chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes*/ 0),\n-        CoinsCacheSizeState::OK);\n+        BOOST_REQUIRE_EQUAL(\n+            chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes=*/0),\n+            CoinsCacheSizeState::OK);\n+    }\n+    BOOST_CHECK_LT(i, 80'000);\n \n-    for (int i{0}; i < COINS_UNTIL_CRITICAL; ++i) {\n-        const COutPoint res = AddTestCoin(m_rng, view);\n-        print_view_mem_usage(view);\n-        BOOST_CHECK_EQUAL(view.AccessCoin(res).DynamicMemoryUsage(), COIN_SIZE);\n+    // This loop transitions the cache state from OK (< 90%) to LARGE (between 90% and 100%).\n+    for (i = 0; i < 80'000; ++i) {\n+        AddTestCoin(m_rng, view);\n \n-        // adding first coin causes the MemoryResource to allocate one 256 KiB chunk of memory,\n-        // pushing us immediately over to LARGE\n-        BOOST_CHECK_EQUAL(\n-            chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes=*/ 0),\n-            CoinsCacheSizeState::LARGE);\n+        // Fill to about 95% of the cache size limit.\n+        if (view.DynamicMemoryUsage() >= MAX_COINS_CACHE_BYTES * 95 / 100) break;\n     }\n+    BOOST_CHECK_LT(i, 80'000);\n+    BOOST_CHECK_EQUAL(\n+        chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes=*/0),\n+        CoinsCacheSizeState::LARGE);\n \n-    // Adding some additional coins will push us over the edge to CRITICAL.\n-    for (int i{0}; i < 4; ++i) {\n+    // This loop moves the cache state from LARGE (90% to 100%) to CRITICAL (over 100%).\n+    for (i = 0; i < 80'000; ++i) {\n         AddTestCoin(m_rng, view);\n-        print_view_mem_usage(view);\n-        if (chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes=*/0) ==\n-            CoinsCacheSizeState::CRITICAL) {\n-            break;\n-        }\n-    }\n \n+        // Fill to just beyojnd the cache size limit.\n+        if (view.DynamicMemoryUsage() > MAX_COINS_CACHE_BYTES) break;\n+    }\n+    BOOST_CHECK_LT(i, 80'000);\n     BOOST_CHECK_EQUAL(\n         chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes=*/0),\n         CoinsCacheSizeState::CRITICAL);\n \n-    // Passing non-zero max mempool usage (512 KiB) should allow us more headroom.\n+    // Repeat (continuing with the existing cache) but with a non-zero max mempool;",
      "path": "src/test/validation_flush_tests.cpp",
      "position": 130,
      "original_position": 130,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "4228018ace848adcafd197776cbb4afc2400bf16",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "hmmm, we're repeating the same steps but with different data?\r\nCan we separate the data from the algorithm and do the iteration in something like:\r\n```C++\r\nfor (size_t max_mempool_size_bytes : {size_t{0}, MAX_MEMPOOL_CACHE_BYTES}) {\r\n  // The steps from OK to CRITICAL\r\n}\r\n```\r\n\r\n<details>\r\n<summary>For simplicity, here's the full `getcoinscachesizestate` test</summary>\r\n\r\n```C++\r\n// Copyright (c) 2019-present The Bitcoin Core developers\r\n// Distributed under the MIT software license, see the accompanying\r\n// file COPYING or http://www.opensource.org/licenses/mit-license.php.\r\n\r\n#include <sync.h>\r\n#include <test/util/coins.h>\r\n#include <test/util/random.h>\r\n#include <test/util/setup_common.h>\r\n#include <validation.h>\r\n\r\n#include <boost/test/unit_test.hpp>\r\n\r\nBOOST_FIXTURE_TEST_SUITE(validation_flush_tests, TestingSetup)\r\n\r\n//! Verify that Chainstate::GetCoinsCacheSizeState() switches from OK→LARGE→CRITICAL\r\n//! at the expected utilization thresholds, first with *no* mempool head-room,\r\n//! then with additional mempool head-room.\r\nBOOST_AUTO_TEST_CASE(getcoinscachesizestate)\r\n{\r\n    Chainstate& chainstate{m_node.chainman->ActiveChainstate()};\r\n\r\n    LOCK(::cs_main);\r\n    CCoinsViewCache& view = chainstate.CoinsTip();\r\n    BOOST_CHECK_LT(view.DynamicMemoryUsage() / (256 * 1024.0), 1.1);\r\n\r\n    constexpr size_t MAX_COINS_CACHE_BYTES{8'000'000};   //  ~8 MB cache size for the test\r\n    constexpr size_t MAX_MEMPOOL_CACHE_BYTES{4'000'000}; //  ~4 MB extra head-room\r\n    constexpr size_t MAX_ATTEMPTS{50'000};               //  runaway-loop safety cap\r\n\r\n    // Run the same growth-path twice: first with 0 head-room, then with extra head-room\r\n    for (size_t max_mempool_size_bytes : {size_t{0}, MAX_MEMPOOL_CACHE_BYTES}) {\r\n        BOOST_CHECK_EQUAL(chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, max_mempool_size_bytes), CoinsCacheSizeState::OK);\r\n\r\n        const size_t full_cap = MAX_COINS_CACHE_BYTES + max_mempool_size_bytes;\r\n\r\n        // OK → LARGE\r\n        for (size_t i{1}; i <= MAX_ATTEMPTS; ++i) {\r\n            AddTestCoin(m_rng, view);\r\n\r\n            auto state{chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, max_mempool_size_bytes)};\r\n            if (i == MAX_ATTEMPTS || view.DynamicMemoryUsage() >= full_cap * 90 / 100) {\r\n                BOOST_CHECK_EQUAL(state, CoinsCacheSizeState::LARGE);\r\n                break;\r\n            }\r\n            BOOST_CHECK_EQUAL(state, CoinsCacheSizeState::OK);\r\n        }\r\n\r\n        // LARGE → CRITICAL\r\n        for (size_t i{1}; i <= MAX_ATTEMPTS; ++i) {\r\n            AddTestCoin(m_rng, view);\r\n\r\n            auto state{chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, max_mempool_size_bytes)};\r\n            if (i == MAX_ATTEMPTS || view.DynamicMemoryUsage() > full_cap) {\r\n                BOOST_CHECK_EQUAL(state, CoinsCacheSizeState::CRITICAL);\r\n                break;\r\n            }\r\n            BOOST_CHECK_EQUAL(state, CoinsCacheSizeState::LARGE);\r\n        }\r\n    }\r\n\r\n    for (int i{0}; i < 1'000; ++i) {\r\n        AddTestCoin(m_rng, view);\r\n        BOOST_CHECK_EQUAL(chainstate.GetCoinsCacheSizeState(), CoinsCacheSizeState::OK);\r\n    }\r\n\r\n    // CRITICAL → OK via Flush\r\n    BOOST_CHECK_EQUAL(chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*mempool=*/0), CoinsCacheSizeState::CRITICAL);\r\n    view.SetBestBlock(m_rng.rand256());\r\n    BOOST_CHECK(view.Flush());\r\n    BOOST_CHECK_EQUAL(chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*mempool=*/0), CoinsCacheSizeState::OK);\r\n}\r\n\r\nBOOST_AUTO_TEST_SUITE_END()\r\n```\r\n\r\n</details>",
      "created_at": "2025-05-27T14:50:24Z",
      "updated_at": "2025-05-27T15:34:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2109417797",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2109417797"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 90,
      "original_line": 90,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2109518426",
      "pull_request_review_id": 2871139248,
      "id": 2109518426,
      "node_id": "PRRC_kwDOABII5859vLJa",
      "diff_hunk": "@@ -212,7 +221,9 @@ static inline size_t DynamicUsage(const std::unordered_map<Key,\n     size_t estimated_list_node_size = MallocUsage(sizeof(void*) * 3);\n     size_t usage_resource = estimated_list_node_size * pool_resource->NumAllocatedChunks();\n     size_t usage_chunks = MallocUsage(pool_resource->ChunkSizeBytes()) * pool_resource->NumAllocatedChunks();\n-    return usage_resource + usage_chunks + MallocUsage(sizeof(void*) * m.bucket_count());\n+    // Empirically, each element of the bucket array has two pointers on some platforms (Windows and macOS).\n+    size_t usage_bucket_array = MallocUsage(2 * sizeof(void*) * m.bucket_count());",
      "path": "src/memusage.h",
      "position": 95,
      "original_position": 86,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "4228018ace848adcafd197776cbb4afc2400bf16",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "https://github.com/bitcoin/bitcoin/blob/master/src/coins.h#L219 already claims to account for 1-2 pointers, do we need any other change to synchronize it with the current PR?",
      "created_at": "2025-05-27T15:30:18Z",
      "updated_at": "2025-05-27T15:34:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2109518426",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2109518426"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 233,
      "original_line": 233,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2134789894",
      "pull_request_review_id": 2908597962,
      "id": 2134789894,
      "node_id": "PRRC_kwDOABII585_Pk8G",
      "diff_hunk": "@@ -0,0 +1,105 @@\n+// Copyright (c) 2025 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <memusage.h>\n+#include <tinyformat.h>\n+\n+#include <unordered_map>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_AUTO_TEST_SUITE(util_malloc_usage_tests)",
      "path": "src/test/util_malloc_usage_tests.cpp",
      "position": 12,
      "original_position": 12,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "@LarryRuane, most of these tests will be executed on your own fork as well (except a few Cirrus fuzzers).\r\nYou can freely experiment there - see for example my attempts at https://github.com/l0rinc/bitcoin/pull/20",
      "created_at": "2025-06-08T18:15:34Z",
      "updated_at": "2025-06-08T18:15:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2134789894",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2134789894"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 12,
      "original_line": 12,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2134790913",
      "pull_request_review_id": 2908599039,
      "id": 2134790913,
      "node_id": "PRRC_kwDOABII585_PlMB",
      "diff_hunk": "@@ -0,0 +1,105 @@\n+// Copyright (c) 2025 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <memusage.h>\n+#include <tinyformat.h>\n+\n+#include <unordered_map>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_AUTO_TEST_SUITE(util_malloc_usage_tests)",
      "path": "src/test/util_malloc_usage_tests.cpp",
      "position": 12,
      "original_position": 12,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "in_reply_to_id": 2134789894,
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I didn't know that, that will prevent clutter here with that temporary stuff, thanks! I'll do that from now on (I want to do a few more similar experiments).",
      "created_at": "2025-06-08T18:20:04Z",
      "updated_at": "2025-06-08T18:20:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2134790913",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2134790913"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 12,
      "original_line": 12,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2134791862",
      "pull_request_review_id": 2908600035,
      "id": 2134791862,
      "node_id": "PRRC_kwDOABII585_Pla2",
      "diff_hunk": "@@ -0,0 +1,105 @@\n+// Copyright (c) 2025 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <memusage.h>\n+#include <tinyformat.h>\n+\n+#include <unordered_map>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_AUTO_TEST_SUITE(util_malloc_usage_tests)",
      "path": "src/test/util_malloc_usage_tests.cpp",
      "position": 12,
      "original_position": 12,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "in_reply_to_id": 2134789894,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "yeah, I also have a few experiments where I'm not sure about the state of CI so I push to my local fork first - though the remaining CIs still surprise me sometimes after upstream push :)",
      "created_at": "2025-06-08T18:22:44Z",
      "updated_at": "2025-06-08T18:22:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2134791862",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2134791862"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 12,
      "original_line": 12,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2217521200",
      "pull_request_review_id": 3035640618,
      "id": 2217521200,
      "node_id": "PRRC_kwDOABII586ELLAw",
      "diff_hunk": "@@ -21,115 +21,113 @@ BOOST_AUTO_TEST_CASE(getcoinscachesizestate)\n {\n     Chainstate& chainstate{m_node.chainman->ActiveChainstate()};\n \n-    constexpr bool is_64_bit = sizeof(void*) == 8;\n-\n     LOCK(::cs_main);\n     auto& view = chainstate.CoinsTip();\n \n-    // The number of bytes consumed by coin's heap data, i.e. CScript\n-    // (prevector<28, unsigned char>) when assigned 56 bytes of data per above.\n-    //\n-    // See also: Coin::DynamicMemoryUsage().\n-    constexpr unsigned int COIN_SIZE = is_64_bit ? 80 : 64;\n+    // An empty coins cache still allocates one PoolResource 'chunk', which is 256 KiB, and there\n+    // is some overhead. As a sanity check, an empty coins cache should be only slightly larger.\n+    BOOST_CHECK_LT(view.DynamicMemoryUsage(), 256 * 1024 * 100 / 98);\n \n-    auto print_view_mem_usage = [](CCoinsViewCache& view) {\n-        BOOST_TEST_MESSAGE(\"CCoinsViewCache memory usage: \" << view.DynamicMemoryUsage());\n-    };\n+    // PoolResource defaults to 256 KiB that will be allocated, so we need to test with a size\n+    // significantly larger that size so that fragmentation effects are minimal.\n+    // But this size can still be much smaller than the default coins cache size, 450 MB.\n+    constexpr size_t MAX_COINS_CACHE_BYTES{8'000'000};\n \n-    // PoolResource defaults to 256 KiB that will be allocated, so we'll take that and make it a bit larger.\n-    constexpr size_t MAX_COINS_CACHE_BYTES = 262144 + 512;\n+    // The coins cache can also use the mempool.\n+    constexpr size_t MAX_MEMPOOL_CACHE_BYTES{4'000'000};\n \n-    // Without any coins in the cache, we shouldn't need to flush.\n-    BOOST_TEST(\n-        chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes=*/ 0) != CoinsCacheSizeState::CRITICAL);\n+    // Check GetCoinsCacheSizeState() with an empty coins cache.\n+    const CoinsCacheSizeState empty_cache{chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes=*/0)};\n \n-    // If the initial memory allocations of cacheCoins don't match these common\n-    // cases, we can't really continue to make assertions about memory usage.\n-    // End the test early.\n-    if (view.DynamicMemoryUsage() != 32 && view.DynamicMemoryUsage() != 16) {\n-        // Add a bunch of coins to see that we at least flip over to CRITICAL.\n+    // Without any coins in the cache, we shouldn't need to flush.\n+    BOOST_CHECK_NE(empty_cache, CoinsCacheSizeState::CRITICAL);\n \n-        for (int i{0}; i < 1000; ++i) {\n-            const COutPoint res = AddTestCoin(m_rng, view);\n-            BOOST_CHECK_EQUAL(view.AccessCoin(res).DynamicMemoryUsage(), COIN_SIZE);\n-        }\n+    // And we shouldn't be within 10% of full.\n+    BOOST_CHECK_NE(empty_cache, CoinsCacheSizeState::LARGE);\n \n-        BOOST_CHECK_EQUAL(\n-            chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes=*/0),\n-            CoinsCacheSizeState::CRITICAL);\n+    // There should be plenty of space.\n+    BOOST_CHECK_EQUAL(empty_cache, CoinsCacheSizeState::OK);\n \n-        BOOST_TEST_MESSAGE(\"Exiting cache flush tests early due to unsupported arch\");\n-        return;\n-    }\n-\n-    print_view_mem_usage(view);\n-    BOOST_CHECK_EQUAL(view.DynamicMemoryUsage(), is_64_bit ? 32U : 16U);\n+    // Add coins until the cache is just under 90% full; the returned state should\n+    // be OK until 90%. The loop counter prevents a runaway test.\n+    size_t i;\n+    for (i = 0; i < 80'000; ++i) {\n+        AddTestCoin(m_rng, view);\n \n-    // We should be able to add COINS_UNTIL_CRITICAL coins to the cache before going CRITICAL.\n-    // This is contingent not only on the dynamic memory usage of the Coins\n-    // that we're adding (COIN_SIZE bytes per), but also on how much memory the\n-    // cacheCoins (unordered_map) preallocates.\n-    constexpr int COINS_UNTIL_CRITICAL{3};\n+        // Fill to about 89% (below 90%) of the cache size limit.\n+        if (view.DynamicMemoryUsage() >= MAX_COINS_CACHE_BYTES * 89 / 100) break;\n \n-    // no coin added, so we have plenty of space left.\n-    BOOST_CHECK_EQUAL(\n-        chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes*/ 0),\n-        CoinsCacheSizeState::OK);\n+        BOOST_REQUIRE_EQUAL(\n+            chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes=*/0),\n+            CoinsCacheSizeState::OK);\n+    }\n+    BOOST_CHECK_LT(i, 80'000);\n \n-    for (int i{0}; i < COINS_UNTIL_CRITICAL; ++i) {\n-        const COutPoint res = AddTestCoin(m_rng, view);\n-        print_view_mem_usage(view);\n-        BOOST_CHECK_EQUAL(view.AccessCoin(res).DynamicMemoryUsage(), COIN_SIZE);\n+    // This loop transitions the cache state from OK (< 90%) to LARGE (between 90% and 100%).\n+    for (i = 0; i < 80'000; ++i) {\n+        AddTestCoin(m_rng, view);\n \n-        // adding first coin causes the MemoryResource to allocate one 256 KiB chunk of memory,\n-        // pushing us immediately over to LARGE\n-        BOOST_CHECK_EQUAL(\n-            chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes=*/ 0),\n-            CoinsCacheSizeState::LARGE);\n+        // Fill to about 95% of the cache size limit.\n+        if (view.DynamicMemoryUsage() >= MAX_COINS_CACHE_BYTES * 95 / 100) break;\n     }\n+    BOOST_CHECK_LT(i, 80'000);\n+    BOOST_CHECK_EQUAL(\n+        chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes=*/0),\n+        CoinsCacheSizeState::LARGE);\n \n-    // Adding some additional coins will push us over the edge to CRITICAL.\n-    for (int i{0}; i < 4; ++i) {\n+    // This loop moves the cache state from LARGE (90% to 100%) to CRITICAL (over 100%).\n+    for (i = 0; i < 80'000; ++i) {\n         AddTestCoin(m_rng, view);\n-        print_view_mem_usage(view);\n-        if (chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes=*/0) ==\n-            CoinsCacheSizeState::CRITICAL) {\n-            break;\n-        }\n-    }\n \n+        // Fill to just beyojnd the cache size limit.\n+        if (view.DynamicMemoryUsage() > MAX_COINS_CACHE_BYTES) break;\n+    }\n+    BOOST_CHECK_LT(i, 80'000);\n     BOOST_CHECK_EQUAL(\n         chainstate.GetCoinsCacheSizeState(MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes=*/0),\n         CoinsCacheSizeState::CRITICAL);\n \n-    // Passing non-zero max mempool usage (512 KiB) should allow us more headroom.\n+    // Repeat (continuing with the existing cache) but with a non-zero max mempool;",
      "path": "src/test/validation_flush_tests.cpp",
      "position": 130,
      "original_position": 130,
      "commit_id": "b36b234197f189db7241b2062b37c0e93cfc4e73",
      "original_commit_id": "4228018ace848adcafd197776cbb4afc2400bf16",
      "in_reply_to_id": 2109417797,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I have extracted the suggested test to a separate PR: https://github.com/bitcoin/bitcoin/pull/33021",
      "created_at": "2025-07-20T01:02:32Z",
      "updated_at": "2025-07-20T01:02:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28531#discussion_r2217521200",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2217521200"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28531"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 90,
      "original_line": 90,
      "side": "RIGHT"
    }
  ]
}