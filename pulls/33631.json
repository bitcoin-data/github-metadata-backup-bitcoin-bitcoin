{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33631",
    "id": 2915249205,
    "node_id": "PR_kwDOABII586twyw1",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/33631",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/33631.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/33631.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33631",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33631/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33631/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33631/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/e46d0579911176876a8fbed54b7a553f738df4fc",
    "number": 33631,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "init: Split file path handling out of -asmap option",
    "user": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "Note: There is an alternative change that leaves the behavior of `-asmap` as is but makes slight improvements and adds better documentation: #33632 Please indicate with your conceptual review which option you prefer, thanks!\r\n\r\nThis change adds a new option `-asmapfile` which allows to set the asmap file, while `-asmap` now is simply a bool option. Also fixes the asmap functional test docs, since then had become out of sync with the actual content of the test.\r\n\r\nThe current handling of `-asmap` is a bit confusing and atypical of our usual options behavior. The `-asmap` option can be used as a boolean which turns on the feature and looks for the file in the default location. But it can be alternatively be used to pass a path to a file which is not in the default location, which also turns on the feature implicitly.\r\n\r\nSee #33386 for further discussion. Closes #33386",
    "labels": [],
    "created_at": "2025-10-14T22:25:01Z",
    "updated_at": "2025-10-23T13:39:51Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "32dae7d1eb9c1d53795fd8f09c0731fec4495927",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "fjahr:202510-asmap-arg-split",
      "ref": "202510-asmap-arg-split",
      "sha": "e46d0579911176876a8fbed54b7a553f738df4fc",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 196253948,
        "node_id": "MDEwOlJlcG9zaXRvcnkxOTYyNTM5NDg=",
        "name": "bitcoin",
        "full_name": "fjahr/bitcoin",
        "owner": {
          "login": "fjahr",
          "id": 1322187,
          "node_id": "MDQ6VXNlcjEzMjIxODc=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/fjahr",
          "html_url": "https://github.com/fjahr",
          "followers_url": "https://api.github.com/users/fjahr/followers",
          "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
          "organizations_url": "https://api.github.com/users/fjahr/orgs",
          "repos_url": "https://api.github.com/users/fjahr/repos",
          "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/fjahr/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/fjahr/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/fjahr/bitcoin",
        "archive_url": "https://api.github.com/repos/fjahr/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/fjahr/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/fjahr/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/fjahr/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/fjahr/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/fjahr/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/fjahr/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/fjahr/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/fjahr/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/fjahr/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/fjahr/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/fjahr/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/fjahr/bitcoin/events",
        "forks_url": "https://api.github.com/repos/fjahr/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/fjahr/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/fjahr/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/fjahr/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/fjahr/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/fjahr/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/fjahr/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/fjahr/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/fjahr/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/fjahr/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/fjahr/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/fjahr/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/fjahr/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/fjahr/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/fjahr/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/fjahr/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:fjahr/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/fjahr/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/fjahr/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/fjahr/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/fjahr/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/fjahr/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/fjahr/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/fjahr/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/fjahr/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/fjahr/bitcoin/hooks",
        "svn_url": "https://github.com/fjahr/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 4,
        "watchers_count": 4,
        "size": 279719,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-10-15T23:58:54Z",
        "created_at": "2019-07-10T18:11:06Z",
        "updated_at": "2024-07-23T22:14:45Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "48aa0e98d0b70244658b41d7378c295f3e1dadcd",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 38073,
        "stargazers_count": 86374,
        "watchers_count": 86374,
        "size": 295158,
        "default_branch": "master",
        "open_issues_count": 746,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-10-23T10:19:58Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-10-23T13:42:44Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33631"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 37,
    "deletions": 18,
    "changed_files": 2,
    "commits": 1,
    "review_comments": 1,
    "comments": 5
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU0NmQwNTc5OTExMTc2ODc2YThmYmVkNTRiN2E1NTNmNzM4ZGY0ZmM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e46d0579911176876a8fbed54b7a553f738df4fc",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e46d0579911176876a8fbed54b7a553f738df4fc",
      "tree": {
        "sha": "41eed061842cbb3c1c8f8b0546311a6c7c174699",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/41eed061842cbb3c1c8f8b0546311a6c7c174699"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 41eed061842cbb3c1c8f8b0546311a6c7c174699\nparent 6c4fe401e908cff1b67d80035b117aae15fe7db6\nauthor Fabian Jahr <fjahr@protonmail.com> 1760479323 +0200\ncommitter Fabian Jahr <fjahr@protonmail.com> 1760479323 +0200\n\ninit: Split file path handling out of -asmap\n\nThis adds a new option -asmapfile which allows to set the asmap file, while -asmap now is simply a bool option.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQJJBAABCgAzFiEEtFq20ghhrCHSdrgm8T0enYkHmM0FAmjuyFsVHGZqYWhyQHBy\nb3Rvbm1haWwuY29tAAoJEPE9Hp2JB5jN+oMQAILBx8BdW9/EN6tuQinLiWSLObeX\nyZORVFvx7Mq3URImkystoiScGNtTxb5v8pOZRjToGglFMFoZ9sWmcPbGyyCFaLtP\nuT7lN48KzVImT5MWJ8pG4p6+uALBJiUop9PisupHZfTVRbiimaYeOpAaKFC2Y5io\nNEKG/PcEp01l7pyvHko5Wlkc65gKTFVebRc4leIg7/l5BBBpGrwwrbalE1lEvH8b\ny4OjUVOgA7y96foPDSMZxTbVg0QdzPhGgvqx7cGXcDby3Q3+U1tJuNe55U4oaNrB\ngQU7eLmZIedhGq5xBGygbK1HTlSoLzzH/Vw0t4+mNZpsp1BWW9SCA9KsuTFvCQd+\nBKDTD4OtrOuwDCCo+w+HVmvKUPZ2DZ6Eaj/pNiflm9BAULubepNwDyktmQkHfn8S\nh+WXbHgsSkaT33261qSmJehF3n1tz0JS213gi7TSQPHjFuQLZTH0RoIwLqspU/nq\nht2DyodGPnqxj4RXDDCEZH/3yf8Y9+R4KRYVrsVvyWG69FHMRgG3cMqA2xm6RouD\ns3euIj5wgp0Xl9qiaHBwZ0TGvk3rXTf1oJ9izD+tc2I8BnOez/XHqLr83q7y4gvl\n3oSm2JLez/G1Xlro/h5s4uqQXc0fTRsxwhdOISqO9Nyr0RsgRjoSF0IlljgKxLHw\nf6bPqFJXcRuwF5Y1\n=CLDX\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6c4fe401e908cff1b67d80035b117aae15fe7db6",
          "sha": "6c4fe401e908cff1b67d80035b117aae15fe7db6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6c4fe401e908cff1b67d80035b117aae15fe7db6"
        }
      ],
      "message": "init: Split file path handling out of -asmap\n\nThis adds a new option -asmapfile which allows to set the asmap file, while -asmap now is simply a bool option.",
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2025-10-14T22:02:03Z"
      },
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2025-10-14T22:02:03Z"
      },
      "sha": "e46d0579911176876a8fbed54b7a553f738df4fc"
    },
    {
      "event": "commented",
      "id": 3403811599,
      "node_id": "IC_kwDOABII587K4gsP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3403811599",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-14T22:25:06Z",
      "updated_at": "2025-10-22T19:47:17Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/33631.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [laanwj](https://github.com/bitcoin/bitcoin/pull/33631#issuecomment-3431948513) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#31260](https://github.com/bitcoin/bitcoin/pull/31260) (scripted-diff: Type-safe settings retrieval by ryanofsky)\n* [#28792](https://github.com/bitcoin/bitcoin/pull/28792) (Embed default ASMap as binary dump header file by fjahr)\n* [#17783](https://github.com/bitcoin/bitcoin/pull/17783) (common: Disallow calling IsArgSet() on ALLOW_LIST options by ryanofsky)\n* [#17581](https://github.com/bitcoin/bitcoin/pull/17581) (refactor: Remove settings merge reverse precedence code by ryanofsky)\n* [#17580](https://github.com/bitcoin/bitcoin/pull/17580) (refactor: Add ALLOW_LIST flags and enforce usage in CheckArgFlags by ryanofsky)\n* [#17493](https://github.com/bitcoin/bitcoin/pull/17493) (util: Forbid ambiguous multiple assignments in config file by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33631#issuecomment-3403811599",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33631"
    },
    {
      "event": "renamed",
      "id": 20280794020,
      "node_id": "RTE_lADOABII587RjWIwzwAAAAS41Fuk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20280794020",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-14T22:33:02Z",
      "rename": {
        "from": "init: Split file path handling out of -asmap",
        "to": "init: Split file path handling out of -asmap option"
      }
    },
    {
      "event": "commented",
      "id": 3410302383,
      "node_id": "IC_kwDOABII587LRRWv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3410302383",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-16T10:55:31Z",
      "updated_at": "2025-10-16T10:55:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Note: There is an alternative change that leaves the behavior of `-asmap` as is but makes slight improvements and adds better documentation: #33632 Please indicate with your conceptual review which option you prefer, thanks!\r\n\r\nIMO #33631 and #33632 are both reasonable ways of patching up a confusing UI and making it slightly better, and either would be an improvement over current behavior.\r\n\r\nBut neither of these PRs seem to solve the fundamental problem here: that if a user goes through the trouble of saving `ip_asn.map` file in their data directory, the software treats this file differently from other data files and ignores it. This seems like an obvious footgun, made worse by the fact that if the file is present and software chooses to ignore it, it doesn't warn about the unused file. These choices seem likely to result in situations where a user thinks they  have provided asmap data but it just sits there unused. It seems to me like a much more natural solution would be to use the data by default if it is present:\r\n\r\n<details><summary>diff</summary>\r\n<p>\r\n\r\n```diff\r\n--- a/src/init.cpp\r\n+++ b/src/init.cpp\r\n@@ -1547,15 +1547,20 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\r\n \r\n         // Read asmap file if configured\r\n         std::vector<bool> asmap;\r\n-        if (args.IsArgSet(\"-asmap\") && !args.IsArgNegated(\"-asmap\")) {\r\n-            fs::path asmap_path = args.GetPathArg(\"-asmap\", DEFAULT_ASMAP_FILENAME);\r\n+        fs::path asmap_path = args.GetPathArg(\"-asmap\", DEFAULT_ASMAP_FILENAME);\r\n+        if (!asmap_path.empty()) {\r\n             if (!asmap_path.is_absolute()) {\r\n                 asmap_path = args.GetDataDirNet() / asmap_path;\r\n             }\r\n-            if (!fs::exists(asmap_path)) {\r\n+            if (!args.IsArgSet(\"-asmap\") && !fs::exists(asmap_path)) {\r\n+                // It is ok for asmap file not to exist if not specified.\r\n+                asmap_path.clear();\r\n+            } else if (!fs::exists(asmap_path)) {\r\n                 InitError(strprintf(_(\"Could not find asmap file %s\"), fs::quoted(fs::PathToString(asmap_path))));\r\n                 return false;\r\n             }\r\n+        }\r\n+        if (!asmap_path.empty()) {\r\n             asmap = DecodeAsmap(asmap_path);\r\n             if (asmap.size() == 0) {\r\n                 InitError(strprintf(_(\"Could not parse asmap file %s\"), fs::quoted(fs::PathToString(asmap_path))));\r\n--- a/test/functional/feature_asmap.py\r\n+++ b/test/functional/feature_asmap.py\r\n@@ -49,7 +49,14 @@ class AsmapTest(BitcoinTestFramework):\r\n             self.nodes[node_id].addpeeraddress(address=f\"101.{addr}.0.0\", tried=tried, port=8333)\r\n \r\n     def test_without_asmap_arg(self):\r\n-        self.log.info('Test bitcoind with no -asmap arg passed')\r\n+        self.log.info(f'Test bitcoind with no -asmap arg passed, with {DEFAULT_ASMAP_FILENAME} present')\r\n+        shutil.copyfile(self.asmap_raw, self.default_asmap)\r\n+        self.stop_node(0)\r\n+        with self.node.assert_debug_log(expected_messages(self.default_asmap)):\r\n+            self.start_node(0)\r\n+        os.remove(self.default_asmap)\r\n+\r\n+        self.log.info(f'Test bitcoind with no -asmap arg passed, without {DEFAULT_ASMAP_FILENAME} present')\r\n         self.stop_node(0)\r\n         with self.node.assert_debug_log(['Using /16 prefix for IP bucketing']):\r\n             self.start_node(0)\r\n```\r\n</p>\r\n</details>\r\n\r\nAlternately, if it is unsafe to load this data by default unless the node is explicitly configured to load it, then it is unnecessarily confusing to define a default filename that is not used by default. It would make more sense to make the default value empty:\r\n\r\n<details><summary>diff</summary>\r\n<p>\r\n\r\n```diff\r\n--- a/src/init.cpp\r\n+++ b/src/init.cpp\r\n@@ -158,7 +158,6 @@ static constexpr bool DEFAULT_STOPAFTERBLOCKIMPORT{false};\r\n #endif\r\n \r\n static constexpr int MIN_CORE_FDS = MIN_LEVELDB_FDS + NUM_FDS_MESSAGE_CAPTURE;\r\n-static const char* DEFAULT_ASMAP_FILENAME=\"ip_asn.map\";\r\n \r\n /**\r\n  * The PID file facilities.\r\n@@ -532,7 +531,7 @@ void SetupServerArgs(ArgsManager& argsman, bool can_listen_ipc)\r\n                  ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\r\n \r\n     argsman.AddArg(\"-addnode=<ip>\", strprintf(\"Add a node to connect to and attempt to keep the connection open (see the addnode RPC help for more info). This option can be specified multiple times to add multiple nodes; connections are limited to %u at a time and are counted separately from the -maxconnections limit.\", MAX_ADDNODE_CONNECTIONS), ArgsManager::ALLOW_ANY | ArgsManager::NETWORK_ONLY, OptionsCategory::CONNECTION);\r\n-    argsman.AddArg(\"-asmap=<file>\", strprintf(\"Specify asn mapping used for bucketing of the peers (default: %s). Relative paths will be prefixed by the net-specific datadir location.\", DEFAULT_ASMAP_FILENAME), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\r\n+    argsman.AddArg(\"-asmap=<file>\", strprintf(\"Specify asn mapping used for bucketing of the peers (default: none). Relative paths will be prefixed by the net-specific datadir location.\"), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\r\n     argsman.AddArg(\"-bantime=<n>\", strprintf(\"Default duration (in seconds) of manually configured bans (default: %u)\", DEFAULT_MISBEHAVING_BANTIME), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\r\n     argsman.AddArg(\"-bind=<addr>[:<port>][=onion]\", strprintf(\"Bind to given address and always listen on it (default: 0.0.0.0). Use [host]:port notation for IPv6. Append =onion to tag any incoming connections to that address and port as incoming Tor connections (default: 127.0.0.1:%u=onion, testnet3: 127.0.0.1:%u=onion, testnet4: 127.0.0.1:%u=onion, signet: 127.0.0.1:%u=onion, regtest: 127.0.0.1:%u=onion)\", defaultChainParams->GetDefaultPort() + 1, testnetChainParams->GetDefaultPort() + 1, testnet4ChainParams->GetDefaultPort() + 1, signetChainParams->GetDefaultPort() + 1, regtestChainParams->GetDefaultPort() + 1), ArgsManager::ALLOW_ANY | ArgsManager::NETWORK_ONLY, OptionsCategory::CONNECTION);\r\n     argsman.AddArg(\"-cjdnsreachable\", \"If set, then this host is configured for CJDNS (connecting to fc00::/8 addresses would lead us to the CJDNS network, see doc/cjdns.md) (default: 0)\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\r\n@@ -1548,11 +1547,11 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\r\n         // Read asmap file if configured\r\n         std::vector<bool> asmap;\r\n         if (args.IsArgSet(\"-asmap\") && !args.IsArgNegated(\"-asmap\")) {\r\n-            fs::path asmap_path = args.GetPathArg(\"-asmap\", DEFAULT_ASMAP_FILENAME);\r\n+            fs::path asmap_path = args.GetPathArg(\"-asmap\");\r\n             if (!asmap_path.is_absolute()) {\r\n                 asmap_path = args.GetDataDirNet() / asmap_path;\r\n             }\r\n-            if (!fs::exists(asmap_path)) {\r\n+            if (!fs::is_regular_file(asmap_path)) {\r\n                 InitError(strprintf(_(\"Could not find asmap file %s\"), fs::quoted(fs::PathToString(asmap_path))));\r\n                 return false;\r\n             }\r\n--- a/test/functional/feature_asmap.py\r\n+++ b/test/functional/feature_asmap.py\r\n@@ -29,7 +29,6 @@ import shutil\r\n from test_framework.test_framework import BitcoinTestFramework\r\n from test_framework.util import assert_equal\r\n \r\n-DEFAULT_ASMAP_FILENAME = 'ip_asn.map' # defined in src/init.cpp\r\n ASMAP = 'src/test/data/asmap.raw' # path to unit test skeleton asmap\r\n VERSION = 'fec61fa21a9f46f3b17bdcd660d7f4cd90b966aad3aec593c99b35f0aca15853'\r\n \r\n@@ -80,21 +79,18 @@ class AsmapTest(BitcoinTestFramework):\r\n         os.remove(filename)\r\n \r\n     def test_default_asmap(self):\r\n-        shutil.copyfile(self.asmap_raw, self.default_asmap)\r\n+        msg = f\"Error: Could not find asmap file \\\"{self.datadir}{os.sep}\\\"\"\r\n         for arg in ['-asmap', '-asmap=']:\r\n             self.log.info(f'Test bitcoind {arg} (using default map file)')\r\n             self.stop_node(0)\r\n-            with self.node.assert_debug_log(expected_messages(self.default_asmap)):\r\n-                self.start_node(0, [arg])\r\n-        os.remove(self.default_asmap)\r\n+            self.node.assert_start_raises_init_error(extra_args=[arg], expected_msg=msg)\r\n \r\n     def test_asmap_interaction_with_addrman_containing_entries(self):\r\n         self.log.info(\"Test bitcoind -asmap restart with addrman containing new and tried entries\")\r\n         self.stop_node(0)\r\n-        shutil.copyfile(self.asmap_raw, self.default_asmap)\r\n-        self.start_node(0, [\"-asmap\", \"-checkaddrman=1\", \"-test=addrman\"])\r\n+        self.start_node(0, [f\"-asmap={self.asmap_raw}\", \"-checkaddrman=1\", \"-test=addrman\"])\r\n         self.fill_addrman(node_id=0)\r\n-        self.restart_node(0, [\"-asmap\", \"-checkaddrman=1\", \"-test=addrman\"])\r\n+        self.restart_node(0, [f\"-asmap={self.asmap_raw}\", \"-checkaddrman=1\", \"-test=addrman\"])\r\n         with self.node.assert_debug_log(\r\n             expected_msgs=[\r\n                 \"CheckAddrman: new 2, tried 2, total 4 started\",\r\n@@ -102,29 +98,29 @@ class AsmapTest(BitcoinTestFramework):\r\n             ]\r\n         ):\r\n             self.node.getnodeaddresses()  # getnodeaddresses re-runs the addrman checks\r\n-        os.remove(self.default_asmap)\r\n \r\n     def test_default_asmap_with_missing_file(self):\r\n         self.log.info('Test bitcoind -asmap with missing default map file')\r\n         self.stop_node(0)\r\n-        msg = f\"Error: Could not find asmap file \\\"{self.default_asmap}\\\"\"\r\n-        self.node.assert_start_raises_init_error(extra_args=['-asmap'], expected_msg=msg)\r\n+        msg = f\"Error: Could not find asmap file \\\"{self.datadir}{os.sep}missing\\\"\"\r\n+        self.node.assert_start_raises_init_error(extra_args=[f'-asmap=missing'], expected_msg=msg)\r\n \r\n     def test_empty_asmap(self):\r\n         self.log.info('Test bitcoind -asmap with empty map file')\r\n         self.stop_node(0)\r\n-        with open(self.default_asmap, \"w\", encoding=\"utf-8\") as f:\r\n+\r\n+        empty_asmap = os.path.join(self.datadir, \"ip_asn.map\")\r\n+        with open(empty_asmap, \"w\", encoding=\"utf-8\") as f:\r\n             f.write(\"\")\r\n-        msg = f\"Error: Could not parse asmap file \\\"{self.default_asmap}\\\"\"\r\n-        self.node.assert_start_raises_init_error(extra_args=['-asmap'], expected_msg=msg)\r\n-        os.remove(self.default_asmap)\r\n+        msg = f\"Error: Could not parse asmap file \\\"{empty_asmap}\\\"\"\r\n+        self.node.assert_start_raises_init_error(extra_args=[f'-asmap={empty_asmap}'], expected_msg=msg)\r\n+        os.remove(empty_asmap)\r\n \r\n     def test_asmap_health_check(self):\r\n         self.log.info('Test bitcoind -asmap logs ASMap Health Check with basic stats')\r\n-        shutil.copyfile(self.asmap_raw, self.default_asmap)\r\n         msg = \"ASMap Health Check: 4 clearnet peers are mapped to 3 ASNs with 0 peers being unmapped\"\r\n         with self.node.assert_debug_log(expected_msgs=[msg]):\r\n-            self.start_node(0, extra_args=['-asmap'])\r\n+            self.start_node(0, extra_args=[f'-asmap={self.asmap_raw}'])\r\n         raw_addrman = self.node.getrawaddrman()\r\n         asns = []\r\n         for _, entries in raw_addrman.items():\r\n@@ -133,12 +129,10 @@ class AsmapTest(BitcoinTestFramework):\r\n                 if asn not in asns:\r\n                     asns.append(asn)\r\n         assert_equal(len(asns), 3)\r\n-        os.remove(self.default_asmap)\r\n \r\n     def run_test(self):\r\n         self.node = self.nodes[0]\r\n         self.datadir = self.node.chain_path\r\n-        self.default_asmap = os.path.join(self.datadir, DEFAULT_ASMAP_FILENAME)\r\n         base_dir = self.config[\"environment\"][\"SRCDIR\"]\r\n         self.asmap_raw = os.path.join(base_dir, ASMAP)\r\n \r\n```\r\n</p>\r\n</details>",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33631#issuecomment-3410302383",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33631"
    },
    {
      "event": "reviewed",
      "id": 3365391222,
      "node_id": "PRR_kwDOABII587Il8t2",
      "url": null,
      "actor": null,
      "commit_id": "e46d0579911176876a8fbed54b7a553f738df4fc",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-10-22T11:37:13Z",
      "author_association": "MEMBER",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33631#pullrequestreview-3365391222",
      "submitted_at": "2025-10-22T11:37:13Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33631"
    },
    {
      "event": "commented",
      "id": 3431948513,
      "node_id": "IC_kwDOABII587Mj2Dh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3431948513",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-22T11:39:42Z",
      "updated_at": "2025-10-22T11:39:42Z",
      "author_association": "MEMBER",
      "body": "Concept ACK. Splitting it to a separate filename option makes sense. imo it's better to avoid overloading the type (boolean or path) of options and introducing ambiguity. This is conceptually simpler for the user and simplifies the code.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33631#issuecomment-3431948513",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33631"
    },
    {
      "event": "commented",
      "id": 3432763010,
      "node_id": "IC_kwDOABII587Mm86C",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3432763010",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-22T14:48:48Z",
      "updated_at": "2025-10-22T14:48:48Z",
      "author_association": "CONTRIBUTOR",
      "body": "@laanwj do you agree this PR would be unnecessary if the `ip_asn.map` file were loaded by default  (or if asmap data were embedded in the binary and enabled by default)? Those seem like cleaner solutions to me.\r\n\r\nOr if it is not safe to load asmap data be default, it would seem cleaner not to have a default'filename that is not actually used by default. ",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33631#issuecomment-3432763010",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33631"
    },
    {
      "event": "mentioned",
      "id": 20433252494,
      "node_id": "MEE_lADOABII587RjWIwzwAAAATB6rCO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20433252494",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-22T14:48:49Z"
    },
    {
      "event": "subscribed",
      "id": 20433252613,
      "node_id": "SE_lADOABII587RjWIwzwAAAATB6rEF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20433252613",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-22T14:48:49Z"
    },
    {
      "event": "commented",
      "id": 3437071519,
      "node_id": "IC_kwDOABII587M3Yyf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3437071519",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-23T13:39:51Z",
      "updated_at": "2025-10-23T13:39:51Z",
      "author_association": "MEMBER",
      "body": "> @laanwj do you agree this PR would be unnecessary if the ip_asn.map file were loaded by default (or if asmap data were embedded in the binary and enabled by default)? Those seem like cleaner solutions to me.\r\n\r\nThe reason i like this PR is that i dislike how the current code interprets an argument as either a boolean or a string. This is not compatible with stricter option parsing.\r\n\r\nIf reading a file by default or embedding it into the binary gets rid of that, that's fine with me too. But i guess even in that case, one might want to either disable the functionality, or override the path? It seems partly orthogonal to these options.\r\n\r\n> Or if it is not safe to load asmap data be default, it would seem cleaner not to have a default'filename that is not actually used by default.\r\n\r\nRight.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33631#issuecomment-3437071519",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33631"
    },
    {
      "event": "mentioned",
      "id": 20454732012,
      "node_id": "MEE_lADOABII587RjWIwzwAAAATDMnDs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20454732012",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-23T13:39:52Z"
    },
    {
      "event": "subscribed",
      "id": 20454732062,
      "node_id": "SE_lADOABII587RjWIwzwAAAATDMnEe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20454732062",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-23T13:39:52Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2451792938",
      "pull_request_review_id": 3365391222,
      "id": 2451792938,
      "node_id": "PRRC_kwDOABII586SI2Qq",
      "diff_hunk": "@@ -532,7 +532,8 @@ void SetupServerArgs(ArgsManager& argsman, bool can_listen_ipc)\n                  ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n \n     argsman.AddArg(\"-addnode=<ip>\", strprintf(\"Add a node to connect to and attempt to keep the connection open (see the addnode RPC help for more info). This option can be specified multiple times to add multiple nodes; connections are limited to %u at a time and are counted separately from the -maxconnections limit.\", MAX_ADDNODE_CONNECTIONS), ArgsManager::ALLOW_ANY | ArgsManager::NETWORK_ONLY, OptionsCategory::CONNECTION);\n-    argsman.AddArg(\"-asmap=<file>\", strprintf(\"Specify asn mapping used for bucketing of the peers (default: %s). Relative paths will be prefixed by the net-specific datadir location.\", DEFAULT_ASMAP_FILENAME), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n+    argsman.AddArg(\"-asmap\", \"Use AS mapping for IP bucketing (default: 0)\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n+    argsman.AddArg(\"-asmapfile=<file>\", strprintf(\"Specify asn mapping file used for bucketing of the peers (default: %s). Relative paths will be prefixed by the net-specific datadir location.\", DEFAULT_ASMAP_FILENAME), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);",
      "path": "src/init.cpp",
      "position": 6,
      "original_position": 6,
      "commit_id": "e46d0579911176876a8fbed54b7a553f738df4fc",
      "original_commit_id": "e46d0579911176876a8fbed54b7a553f738df4fc",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: AS mapping versus \"asn mapping\", let's settle on one spelling.",
      "created_at": "2025-10-22T11:37:13Z",
      "updated_at": "2025-10-22T11:37:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33631#discussion_r2451792938",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2451792938"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 536,
      "original_line": 536,
      "side": "RIGHT"
    }
  ]
}