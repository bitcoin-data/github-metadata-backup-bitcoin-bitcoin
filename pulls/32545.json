{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32545",
    "id": 2526397126,
    "node_id": "PR_kwDOABII586WlcLG",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/32545",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/32545.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/32545.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32545",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32545/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32545/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32545/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/52b983bf90e0bc5809a166924abe762f0d2bd975",
    "number": 32545,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Replace cluster linearization algorithm with SFL",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "Part of cluster mempool: #30289.\r\n\r\nThis replaces the cluster linearization algorithm introduced in #30126 and #30286 (a combination of LIMO with candidate-set search), with a completely different algorithm: [spanning-forest linearization](https://delvingbitcoin.org/t/spanning-forest-cluster-linearization/1419/1), which appears to have much better performance for hard clusters. See [this post](https://delvingbitcoin.org/t/how-to-linearize-your-cluster/303/68) for a comparison between various linearization algorithms, and [this post](https://delvingbitcoin.org/t/how-to-linearize-your-cluster/303/73) for benchmarks comparing them. Replaying historical mempool data on it shows that it can effectively linearize every observed cluster up to 64 transactions optimally within tens of microseconds, though pathological examples can be created which take longer.\r\n\r\nThe algorithm is effectively a very specialized version of the [simplex algorithm](https://en.wikipedia.org/wiki/Simplex_algorithm) to the problem of finding high-feerate topological subsets of clusters, but modified to find all consecutive such subsets concurrently rather than just the first one. See the post above for how it is related.\r\n\r\nIt represents the cluster as partitioned into a set of chunks, each with a spanning tree of its internal dependencies connecting the transactions. Randomized improvements are made by selecting dependencies to add and remove to these spanning trees, merging and splitting chunks, until no more improvements are possible, or a computation budget is reached. Like simplex, it does not necessarily make progress in every step, and thus has no upper bound on its runtime to find optimal, but randomization makes long runtimes very unlikely, and additionally makes it hard to adversarially construct clusters in which the algorithm reliably makes bad choices.\r\n\r\n",
    "labels": [
      {
        "id": 164208572,
        "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
        "name": "Mempool",
        "color": "fef2c0",
        "default": false
      }
    ],
    "created_at": "2025-05-17T23:24:56Z",
    "updated_at": "2025-10-23T11:28:58Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "86a7eba961db92ffef0913437b5f2d3e25d72b8f",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "sipa:202505_sfl",
      "ref": "202505_sfl",
      "sha": "52b983bf90e0bc5809a166924abe762f0d2bd975",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1458655,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDU4NjU1",
        "name": "bitcoin",
        "full_name": "sipa/bitcoin",
        "owner": {
          "login": "sipa",
          "id": 548488,
          "node_id": "MDQ6VXNlcjU0ODQ4OA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sipa",
          "html_url": "https://github.com/sipa",
          "followers_url": "https://api.github.com/users/sipa/followers",
          "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
          "organizations_url": "https://api.github.com/users/sipa/orgs",
          "repos_url": "https://api.github.com/users/sipa/repos",
          "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/sipa/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/sipa/bitcoin",
        "description": "Bitcoin integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/sipa/bitcoin",
        "archive_url": "https://api.github.com/repos/sipa/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/sipa/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/sipa/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/sipa/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/sipa/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/sipa/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/sipa/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/sipa/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/sipa/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/sipa/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/sipa/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/sipa/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/sipa/bitcoin/events",
        "forks_url": "https://api.github.com/repos/sipa/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/sipa/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/sipa/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/sipa/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/sipa/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/sipa/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/sipa/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/sipa/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/sipa/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/sipa/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/sipa/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/sipa/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/sipa/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/sipa/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/sipa/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/sipa/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:sipa/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/sipa/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/sipa/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/sipa/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/sipa/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/sipa/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/sipa/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/sipa/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/sipa/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/sipa/bitcoin/hooks",
        "svn_url": "https://github.com/sipa/bitcoin",
        "homepage": "http://www.bitcoin.org",
        "language": "TypeScript",
        "forks_count": 22,
        "stargazers_count": 89,
        "watchers_count": 89,
        "size": 277868,
        "default_branch": "lows",
        "open_issues_count": 16,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-10-22T08:59:21Z",
        "created_at": "2011-03-09T10:46:59Z",
        "updated_at": "2025-09-01T06:42:52Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "4371740bebfad18bffd555585df1bb76817ee778",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 38073,
        "stargazers_count": 86368,
        "watchers_count": 86368,
        "size": 295158,
        "default_branch": "master",
        "open_issues_count": 745,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-10-23T10:19:58Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-10-23T11:38:29Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32545"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 1392,
    "deletions": 1523,
    "changed_files": 7,
    "commits": 25,
    "review_comments": 3,
    "comments": 23
  },
  "events": [
    {
      "event": "commented",
      "id": 2888635107,
      "node_id": "IC_kwDOABII586sLRLj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2888635107",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-17T23:24:59Z",
      "updated_at": "2025-10-16T18:54:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/32545.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [jonatack](https://github.com/bitcoin/bitcoin/pull/32545#pullrequestreview-2861830018) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32545#issuecomment-2888635107",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32545"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17700679932,
      "node_id": "HRFPE_lADOABII5863DfgAzwAAAAQfCvD8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17700679932",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2fb6a0efbebb9f0a5f75f8ad252df21ea2b4871c",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/2fb6a0efbebb9f0a5f75f8ad252df21ea2b4871c",
      "created_at": "2025-05-17T23:38:28Z"
    },
    {
      "event": "labeled",
      "id": 17700682965,
      "node_id": "LE_lADOABII5863DfgAzwAAAAQfCvzV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17700682965",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-17T23:39:59Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2888640225,
      "node_id": "IC_kwDOABII586sLSbh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2888640225",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-17T23:40:01Z",
      "updated_at": "2025-05-17T23:40:01Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Task `ARM, unit tests, no functional tests`: https://github.com/bitcoin/bitcoin/runs/42417371062</sub>\n<sub>LLM reason (✨ experimental): The CI failure is due to a build error during the compilation of `txgraph.cpp.o`.\n</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32545#issuecomment-2888640225",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32545"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17701343343,
      "node_id": "HRFPE_lADOABII5863DfgAzwAAAAQfFRBv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17701343343",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "3b7477b9577d525cbe4cd7207264162773ab512e",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/3b7477b9577d525cbe4cd7207264162773ab512e",
      "created_at": "2025-05-18T02:12:56Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17701379766,
      "node_id": "HRFPE_lADOABII5863DfgAzwAAAAQfFZ62",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17701379766",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b920e76496fcdc8d5e6922fb800651987807d1ad",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/b920e76496fcdc8d5e6922fb800651987807d1ad",
      "created_at": "2025-05-18T02:20:54Z"
    },
    {
      "event": "unlabeled",
      "id": 17701576368,
      "node_id": "UNLE_lADOABII5863DfgAzwAAAAQfGJ6w",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17701576368",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-18T03:16:08Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17704006957,
      "node_id": "HRFPE_lADOABII5863DfgAzwAAAAQfPbUt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17704006957",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1c6bb7280c9fd6b95c8afa2552c9c1bfd38d6c01",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/1c6bb7280c9fd6b95c8afa2552c9c1bfd38d6c01",
      "created_at": "2025-05-18T17:01:59Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17706173337,
      "node_id": "HRFPE_lADOABII5863DfgAzwAAAAQfXsOZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17706173337",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "df589da0772bfb40b08ae62b6332cebaf1ff695d",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/df589da0772bfb40b08ae62b6332cebaf1ff695d",
      "created_at": "2025-05-19T02:54:44Z"
    },
    {
      "event": "labeled",
      "id": 17706483139,
      "node_id": "LE_lADOABII5863DfgAzwAAAAQfY33D",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17706483139",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-19T03:39:16Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2889517252,
      "node_id": "IC_kwDOABII586sOojE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2889517252",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-19T03:39:17Z",
      "updated_at": "2025-05-19T03:39:17Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Task `ARM, unit tests, no functional tests`: https://github.com/bitcoin/bitcoin/runs/42447412610</sub>\n<sub>LLM reason (✨ experimental): The CI failure is due to a failed CTest test: `cluster_linearize_tests`.\n</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32545#issuecomment-2889517252",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32545"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17724049198,
      "node_id": "HRFPE_lADOABII5863DfgAzwAAAAQgb4cu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17724049198",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7d5e4dcc35e21b56567c030a493db69a8b42da51",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/7d5e4dcc35e21b56567c030a493db69a8b42da51",
      "created_at": "2025-05-20T01:04:04Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17724726802,
      "node_id": "HRFPE_lADOABII5863DfgAzwAAAAQged4S",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17724726802",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "23072f2b0e3201b00db19bf8fcca474f81593c2f",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/23072f2b0e3201b00db19bf8fcca474f81593c2f",
      "created_at": "2025-05-20T02:30:34Z"
    },
    {
      "event": "unlabeled",
      "id": 17725509234,
      "node_id": "UNLE_lADOABII5863DfgAzwAAAAQghc5y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17725509234",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-20T04:06:05Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 17732902990,
      "node_id": "LE_lADOABII5863DfgAzwAAAAQg9qBO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17732902990",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-20T11:59:43Z",
      "label": {
        "name": "Mempool",
        "color": "fef2c0"
      }
    },
    {
      "event": "reviewed",
      "id": 2861830018,
      "node_id": "PRR_kwDOABII586qlA-C",
      "url": null,
      "actor": null,
      "commit_id": "23072f2b0e3201b00db19bf8fcca474f81593c2f",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-05-22T16:09:36Z",
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32545#pullrequestreview-2861830018",
      "submitted_at": "2025-05-22T16:09:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32545"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17789642375,
      "node_id": "HRFPE_lADOABII5863DfgAzwAAAAQkWGaH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17789642375",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d7ff8026dc5369798d7926f84dec65ca28fb4b19",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/d7ff8026dc5369798d7926f84dec65ca28fb4b19",
      "created_at": "2025-05-23T12:56:39Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17794433014,
      "node_id": "HRFPE_lADOABII5863DfgAzwAAAAQkoX_2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17794433014",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d2579527cf6208d81f5037ec55e95cd51ac1b76c",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/d2579527cf6208d81f5037ec55e95cd51ac1b76c",
      "created_at": "2025-05-23T18:06:10Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17801605719,
      "node_id": "HRFPE_lADOABII5863DfgAzwAAAAQlDvJX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17801605719",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7fff93160a7d5de2041b87cba9c34dd2304b3d32",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/7fff93160a7d5de2041b87cba9c34dd2304b3d32",
      "created_at": "2025-05-24T21:36:45Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17804834589,
      "node_id": "HRFPE_lADOABII5863DfgAzwAAAAQlQDcd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17804834589",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "9ee20caf42fe663192e3a6050cca04dcfcd88389",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/9ee20caf42fe663192e3a6050cca04dcfcd88389",
      "created_at": "2025-05-25T16:18:16Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17804895885,
      "node_id": "HRFPE_lADOABII5863DfgAzwAAAAQlQSaN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17804895885",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ba7464a8645bf9c9567e50b77a7f2929544b353d",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/ba7464a8645bf9c9567e50b77a7f2929544b353d",
      "created_at": "2025-05-25T16:43:01Z"
    },
    {
      "event": "labeled",
      "id": 17804900083,
      "node_id": "LE_lADOABII5863DfgAzwAAAAQlQTbz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17804900083",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-25T16:44:43Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2907936831,
      "node_id": "IC_kwDOABII586tU5g_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2907936831",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-25T16:44:44Z",
      "updated_at": "2025-05-25T16:44:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Task `CentOS, depends, gui`: https://github.com/bitcoin/bitcoin/runs/42858330826</sub>\n<sub>LLM reason (✨ experimental): The CI failure is due to assertion failures within the `cluster_linearize_tests` and `bench_sanity_check` tests.\n</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32545#issuecomment-2907936831",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32545"
    },
    {
      "event": "unlabeled",
      "id": 17805031142,
      "node_id": "UNLE_lADOABII5863DfgAzwAAAAQlQzbm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17805031142",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-25T17:37:47Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17805204066,
      "node_id": "HRFPE_lADOABII5863DfgAzwAAAAQlRdpi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17805204066",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "90b72d5115c35a0ece9600d50ffa50971c012940",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/90b72d5115c35a0ece9600d50ffa50971c012940",
      "created_at": "2025-05-25T18:50:10Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17805253947,
      "node_id": "HRFPE_lADOABII5863DfgAzwAAAAQlRp07",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17805253947",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "55931c3cddee570d1740713760493dce654b6d34",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/55931c3cddee570d1740713760493dce654b6d34",
      "created_at": "2025-05-25T19:10:18Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17852589338,
      "node_id": "HRFPE_lADOABII5863DfgAzwAAAAQoGOUa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17852589338",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "47bdf8faafc550bf673b4affadc73415160f9ff2",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/47bdf8faafc550bf673b4affadc73415160f9ff2",
      "created_at": "2025-05-28T14:43:19Z"
    },
    {
      "event": "commented",
      "id": 2916658444,
      "node_id": "IC_kwDOABII586t2K0M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2916658444",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-28T14:57:08Z",
      "updated_at": "2025-05-29T23:37:52Z",
      "author_association": "MEMBER",
      "body": "I'm interested in seeing benchmarks of this on various systems, especially high-end/modern ones (as their performance is likely most predictive of what future hardware will be like).\r\n\r\n```\r\n./build_dev_mode/bin/bench_bitcoin --filter=\"Linearize.*Example.*\" -min-time=10000\r\n```\r\n\r\nHere are some I have gathered:\r\n\r\n<details>\r\n<summary><b>AMD Ryzen 9 5950X 16-Core Processor</b></summary>\r\n\r\n|             ns/cost |              cost/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|                1.68 |      595,052,476.10 |    0.4% |     11.01 | `LinearizeBoundedExample0`\r\n|                1.92 |      521,264,873.78 |    0.1% |     11.01 | `LinearizeBoundedExample1`\r\n|                1.79 |      557,860,504.16 |    0.3% |     10.58 | `LinearizeBoundedExample2`\r\n|                1.89 |      528,599,597.23 |    0.1% |     10.97 | `LinearizeBoundedExample3`\r\n|                1.81 |      552,507,201.82 |    0.4% |     10.81 | `LinearizeBoundedExample4`\r\n|                1.97 |      508,721,677.18 |    1.0% |     11.05 | `LinearizeBoundedExample5`\r\n|                1.89 |      528,912,231.85 |    0.4% |     11.06 | `LinearizeBoundedExample6`\r\n|                1.79 |      557,221,394.89 |    0.8% |     11.01 | `LinearizeBoundedExample7`\r\n|                1.79 |      557,162,554.42 |    0.3% |     11.05 | `LinearizeBoundedExample8`\r\n|                1.84 |      543,573,897.10 |    0.3% |     10.99 | `LinearizeBoundedExample9`\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|            1,576.22 |          634,428.95 |    0.4% |     10.95 | `LinearizeOptimallyExample00`\r\n|            3,010.14 |          332,209.92 |    0.3% |     10.99 | `LinearizeOptimallyExample01`\r\n|            5,871.01 |          170,328.44 |    0.4% |     11.09 | `LinearizeOptimallyExample02`\r\n|            6,321.90 |          158,180.35 |    0.6% |     10.55 | `LinearizeOptimallyExample03`\r\n|           15,081.30 |           66,307.30 |    0.4% |     10.99 | `LinearizeOptimallyExample04`\r\n|           12,227.15 |           81,785.18 |    0.2% |     11.01 | `LinearizeOptimallyExample05`\r\n|           12,703.52 |           78,718.34 |    0.4% |     11.02 | `LinearizeOptimallyExample06`\r\n|           11,519.71 |           86,807.71 |    0.3% |     11.01 | `LinearizeOptimallyExample07`\r\n|           14,768.84 |           67,710.11 |    0.5% |     10.93 | `LinearizeOptimallyExample08`\r\n|           19,655.67 |           50,875.90 |    0.3% |     11.03 | `LinearizeOptimallyExample09`\r\n|           11,776.61 |           84,914.06 |    0.1% |     10.97 | `LinearizeOptimallyExample10`\r\n|           17,396.59 |           57,482.51 |    0.5% |     10.97 | `LinearizeOptimallyExample11`\r\n|           25,232.95 |           39,630.72 |    0.3% |     11.04 | `LinearizeOptimallyExample12`\r\n|           28,941.27 |           34,552.73 |    0.2% |     10.98 | `LinearizeOptimallyExample13`\r\n|           36,964.92 |           27,052.68 |    0.7% |     11.00 | `LinearizeOptimallyExample14`\r\n|           37,103.54 |           26,951.61 |    0.3% |     11.02 | `LinearizeOptimallyExample15`\r\n|           43,747.38 |           22,858.51 |    0.3% |     10.98 | `LinearizeOptimallyExample16`\r\n|           59,132.17 |           16,911.27 |    0.8% |     11.04 | `LinearizeOptimallyExample17`\r\n|           61,824.04 |           16,174.94 |    0.2% |     10.54 | `LinearizeOptimallyExample18`\r\n|           73,274.33 |           13,647.34 |    0.6% |     10.65 | `LinearizeOptimallyExample19`\r\n\r\n</details>\r\n\r\n<details>\r\n<summary><b>AMD Ryzen Threadripper PRO 7995WX 96-Cores</b></summary>\r\n\r\n|             ns/cost |              cost/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|                1.31 |      763,277,399.95 |    0.0% |     10.99 | `LinearizeBoundedExample0`\r\n|                1.53 |      652,463,095.02 |    0.1% |     11.00 | `LinearizeBoundedExample1`\r\n|                1.49 |      672,057,837.39 |    0.0% |     11.00 | `LinearizeBoundedExample2`\r\n|                1.66 |      602,362,799.74 |    0.0% |     10.69 | `LinearizeBoundedExample3`\r\n|                1.52 |      656,146,353.18 |    0.1% |     10.71 | `LinearizeBoundedExample4`\r\n|                1.65 |      607,795,039.45 |    0.0% |     10.76 | `LinearizeBoundedExample5`\r\n|                1.59 |      628,108,657.72 |    0.0% |     10.82 | `LinearizeBoundedExample6`\r\n|                1.50 |      668,384,115.59 |    0.1% |     11.00 | `LinearizeBoundedExample7`\r\n|                1.51 |      663,161,838.88 |    0.0% |     11.01 | `LinearizeBoundedExample8`\r\n|                1.53 |      654,682,223.87 |    0.1% |     10.99 | `LinearizeBoundedExample9`\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|            1,209.24 |          826,967.78 |    0.3% |     10.98 | `LinearizeOptimallyExample00`\r\n|            2,393.97 |          417,716.84 |    0.0% |     11.01 | `LinearizeOptimallyExample01`\r\n|            4,764.63 |          209,879.68 |    0.0% |     11.01 | `LinearizeOptimallyExample02`\r\n|            5,067.95 |          197,318.41 |    0.1% |     11.01 | `LinearizeOptimallyExample03`\r\n|           12,716.36 |           78,638.87 |    0.0% |     11.01 | `LinearizeOptimallyExample04`\r\n|           10,231.29 |           97,739.43 |    0.0% |     11.01 | `LinearizeOptimallyExample05`\r\n|           10,649.64 |           93,899.84 |    0.0% |     11.01 | `LinearizeOptimallyExample06`\r\n|            9,564.17 |          104,556.95 |    0.1% |     11.01 | `LinearizeOptimallyExample07`\r\n|           11,884.47 |           84,143.41 |    0.3% |     11.00 | `LinearizeOptimallyExample08`\r\n|           16,436.12 |           60,841.62 |    0.1% |     11.00 | `LinearizeOptimallyExample09`\r\n|            9,937.05 |          100,633.51 |    0.1% |     11.00 | `LinearizeOptimallyExample10`\r\n|           14,575.73 |           68,607.20 |    0.2% |     11.02 | `LinearizeOptimallyExample11`\r\n|           21,355.98 |           46,825.28 |    0.1% |     11.01 | `LinearizeOptimallyExample12`\r\n|           24,439.13 |           40,917.99 |    0.0% |     11.00 | `LinearizeOptimallyExample13`\r\n|           31,407.36 |           31,839.67 |    0.1% |     11.00 | `LinearizeOptimallyExample14`\r\n|           31,366.41 |           31,881.24 |    0.1% |     11.01 | `LinearizeOptimallyExample15`\r\n|           37,182.88 |           26,894.10 |    0.1% |     11.00 | `LinearizeOptimallyExample16`\r\n|           50,528.12 |           19,790.96 |    0.3% |     11.02 | `LinearizeOptimallyExample17`\r\n|           52,714.16 |           18,970.24 |    0.1% |     11.00 | `LinearizeOptimallyExample18`\r\n|           62,357.87 |           16,036.47 |    0.1% |     10.57 | `LinearizeOptimallyExample19`\r\n</details>\r\n\r\n<details>\r\n<summary><b>Apple 2023 MacBook Pro - M2 Max</b></summary>\r\n\r\n|             ns/cost |              cost/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|                1.53 |      655,436,526.57 |    0.7% |      1.10 | `LinearizeBoundedExample0`\r\n|                1.81 |      552,194,379.23 |    0.2% |      1.10 | `LinearizeBoundedExample1`\r\n|                1.52 |      656,148,852.84 |    0.4% |      1.09 | `LinearizeBoundedExample2`\r\n|                1.75 |      572,294,606.97 |    0.7% |      1.06 | `LinearizeBoundedExample3`\r\n|                1.62 |      615,593,105.29 |    0.3% |      1.07 | `LinearizeBoundedExample4`\r\n|                1.78 |      561,989,024.83 |    1.2% |      1.08 | `LinearizeBoundedExample5`\r\n|                1.69 |      592,612,447.36 |    0.2% |      1.10 | `LinearizeBoundedExample6`\r\n|                1.58 |      633,450,827.45 |    0.3% |      1.10 | `LinearizeBoundedExample7`\r\n|                1.56 |      640,690,050.49 |    0.1% |      1.10 | `LinearizeBoundedExample8`\r\n|                1.59 |      628,148,004.87 |    0.2% |      1.09 | `LinearizeBoundedExample9`\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|            1,499.94 |          666,693.94 |    0.4% |      1.09 | `LinearizeOptimallyExample00`\r\n|            2,884.51 |          346,679.16 |    0.2% |      1.10 | `LinearizeOptimallyExample01`\r\n|            5,815.27 |          171,961.12 |    0.1% |      1.10 | `LinearizeOptimallyExample02`\r\n|            6,097.37 |          164,005.14 |    0.2% |      1.05 | `LinearizeOptimallyExample03`\r\n|           13,502.59 |           74,059.89 |    0.1% |      1.10 | `LinearizeOptimallyExample04`\r\n|           11,447.25 |           87,357.24 |    0.1% |      1.10 | `LinearizeOptimallyExample05`\r\n|           11,639.59 |           85,913.71 |    0.1% |      1.10 | `LinearizeOptimallyExample06`\r\n|            9,557.65 |          104,628.26 |    0.1% |      1.10 | `LinearizeOptimallyExample07`\r\n|           12,139.84 |           82,373.43 |    0.1% |      1.10 | `LinearizeOptimallyExample08`\r\n|           18,237.62 |           54,831.73 |    0.1% |      1.10 | `LinearizeOptimallyExample09`\r\n|           11,806.18 |           84,701.39 |    0.1% |      1.10 | `LinearizeOptimallyExample10`\r\n|           17,519.95 |           57,077.80 |    0.2% |      1.09 | `LinearizeOptimallyExample11`\r\n|           24,397.16 |           40,988.37 |    0.2% |      1.10 | `LinearizeOptimallyExample12`\r\n|           28,264.97 |           35,379.48 |    0.1% |      1.10 | `LinearizeOptimallyExample13`\r\n|           36,230.91 |           27,600.74 |    0.5% |      1.10 | `LinearizeOptimallyExample14`\r\n|           36,251.16 |           27,585.33 |    0.3% |      1.10 | `LinearizeOptimallyExample15`\r\n|           42,480.07 |           23,540.45 |    0.3% |      1.10 | `LinearizeOptimallyExample16`\r\n|           59,497.62 |           16,807.39 |    0.4% |      1.10 | `LinearizeOptimallyExample17`\r\n|           62,192.70 |           16,079.06 |    0.2% |      1.06 | `LinearizeOptimallyExample18`\r\n|           73,604.11 |           13,586.20 |    0.7% |      1.06 | `LinearizeOptimallyExample19`\r\n\r\n</details>\r\n\r\n<details>\r\n<summary><b>Intel Core Processor (Haswell, no TSX) [VPS]</b></summary>\r\n\r\n|             ns/cost |              cost/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|                4.39 |      227,695,874.58 |    0.4% |     10.99 | `LinearizeBoundedExample0`\r\n|                5.32 |      187,925,655.80 |    2.3% |     11.09 | `LinearizeBoundedExample1`\r\n|                4.96 |      201,470,069.83 |    1.6% |     11.13 | `LinearizeBoundedExample2`\r\n|                5.47 |      182,878,034.13 |    1.9% |     10.75 | `LinearizeBoundedExample3`\r\n|                5.02 |      199,278,377.58 |    2.6% |     10.73 | `LinearizeBoundedExample4`\r\n|                5.69 |      175,678,783.21 |    2.7% |     11.08 | `LinearizeBoundedExample5`\r\n|                5.53 |      180,751,956.64 |    4.1% |     11.00 | `LinearizeBoundedExample6`\r\n|                5.80 |      172,338,240.84 |    2.0% |     10.81 | `LinearizeBoundedExample7`\r\n|                5.24 |      190,865,678.33 |    3.1% |     10.63 | `LinearizeBoundedExample8`\r\n|                5.51 |      181,564,438.26 |    2.9% |     11.38 | `LinearizeBoundedExample9`\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|            4,399.38 |          227,304.78 |    1.9% |     11.18 | `LinearizeOptimallyExample00`\r\n|            8,789.91 |          113,766.77 |    0.9% |     10.84 | `LinearizeOptimallyExample01`\r\n|           15,890.75 |           62,929.71 |    1.6% |     11.07 | `LinearizeOptimallyExample02`\r\n|           19,082.82 |           52,403.17 |    2.2% |     11.00 | `LinearizeOptimallyExample03`\r\n|           44,627.25 |           22,407.83 |    1.8% |     11.20 | `LinearizeOptimallyExample04`\r\n|           33,718.11 |           29,657.66 |    1.1% |     11.03 | `LinearizeOptimallyExample05`\r\n|           35,473.62 |           28,189.96 |    1.1% |     11.05 | `LinearizeOptimallyExample06`\r\n|           33,162.95 |           30,154.13 |    1.5% |     10.88 | `LinearizeOptimallyExample07`\r\n|           45,473.12 |           21,991.01 |    0.9% |     11.12 | `LinearizeOptimallyExample08`\r\n|           57,919.95 |           17,265.21 |    1.1% |     11.04 | `LinearizeOptimallyExample09`\r\n|           32,640.19 |           30,637.08 |    2.1% |     11.16 | `LinearizeOptimallyExample10`\r\n|           46,559.58 |           21,477.86 |    1.5% |     10.98 | `LinearizeOptimallyExample11`\r\n|           66,614.50 |           15,011.75 |    1.4% |     10.55 | `LinearizeOptimallyExample12`\r\n|           76,783.09 |           13,023.70 |    0.5% |     10.74 | `LinearizeOptimallyExample13`\r\n|           97,635.10 |           10,242.22 |    1.7% |     11.00 | `LinearizeOptimallyExample14`\r\n|           99,854.80 |           10,014.54 |    0.8% |     11.00 | `LinearizeOptimallyExample15`\r\n|          119,444.66 |            8,372.08 |    1.2% |     11.11 | `LinearizeOptimallyExample16`\r\n|          156,160.25 |            6,403.68 |    0.9% |     10.98 | `LinearizeOptimallyExample17`\r\n|          163,364.57 |            6,121.28 |    0.8% |     10.90 | `LinearizeOptimallyExample18`\r\n|          193,524.10 |            5,167.32 |    1.2% |     11.14 | `LinearizeOptimallyExample19`\r\n\r\n</details>\r\n\r\n<details>\r\n<summary><b>12th Gen Intel(R) Core(TM) i5-12500H [laptop]</b></summary>\r\n\r\n\r\n|             ns/cost |              cost/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|                1.75 |      571,671,353.08 |    0.1% |     10.99 | `LinearizeBoundedExample0`\r\n|                2.05 |      487,547,934.48 |    0.1% |     11.00 | `LinearizeBoundedExample1`\r\n|                1.97 |      506,752,217.57 |    0.1% |     10.64 | `LinearizeBoundedExample2`\r\n|                2.24 |      447,162,026.45 |    0.1% |     11.00 | `LinearizeBoundedExample3`\r\n|                2.08 |      480,557,495.14 |    0.1% |     11.01 | `LinearizeBoundedExample4`\r\n|                2.30 |      434,505,839.40 |    0.1% |     11.12 | `LinearizeBoundedExample5`\r\n|                2.21 |      451,557,580.61 |    0.0% |     11.00 | `LinearizeBoundedExample6`\r\n|                2.25 |      444,374,372.72 |    0.0% |     11.00 | `LinearizeBoundedExample7`\r\n|                2.12 |      471,017,980.18 |    0.1% |     10.93 | `LinearizeBoundedExample8`\r\n|                2.22 |      450,256,469.71 |    1.1% |     11.07 | `LinearizeBoundedExample9`\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|            1,586.71 |          630,233.45 |    0.1% |     10.98 | `LinearizeOptimallyExample00`\r\n|            3,268.23 |          305,976.43 |    0.0% |     11.00 | `LinearizeOptimallyExample01`\r\n|            6,858.84 |          145,797.34 |    0.2% |     10.54 | `LinearizeOptimallyExample02`\r\n|            7,873.51 |          127,008.11 |    0.1% |     10.73 | `LinearizeOptimallyExample03`\r\n|           17,277.23 |           57,879.64 |    0.1% |     11.00 | `LinearizeOptimallyExample04`\r\n|           14,178.66 |           70,528.55 |    0.1% |     11.00 | `LinearizeOptimallyExample05`\r\n|           16,009.26 |           62,463.84 |    0.0% |     10.99 | `LinearizeOptimallyExample06`\r\n|           12,586.44 |           79,450.57 |    1.6% |     10.87 | `LinearizeOptimallyExample07`\r\n|           15,396.54 |           64,949.64 |    0.0% |     11.00 | `LinearizeOptimallyExample08`\r\n|           24,369.54 |           41,034.82 |    0.0% |     11.00 | `LinearizeOptimallyExample09`\r\n|           13,610.19 |           73,474.38 |    0.1% |     10.99 | `LinearizeOptimallyExample10`\r\n|           20,073.90 |           49,815.92 |    0.1% |     11.01 | `LinearizeOptimallyExample11`\r\n|           30,462.32 |           32,827.44 |    0.3% |     11.12 | `LinearizeOptimallyExample12`\r\n|           34,713.56 |           28,807.18 |    0.3% |     10.93 | `LinearizeOptimallyExample13`\r\n|           44,015.70 |           22,719.17 |    0.1% |     11.00 | `LinearizeOptimallyExample14`\r\n|           43,492.08 |           22,992.69 |    0.1% |     11.00 | `LinearizeOptimallyExample15`\r\n|           51,596.62 |           19,381.12 |    0.1% |     11.01 | `LinearizeOptimallyExample16`\r\n|           71,384.39 |           14,008.67 |    0.2% |     10.69 | `LinearizeOptimallyExample17`\r\n|           73,714.84 |           13,565.79 |    0.1% |     10.69 | `LinearizeOptimallyExample18`\r\n|           87,910.27 |           11,375.24 |    0.0% |     10.82 | `LinearizeOptimallyExample19`\r\n\r\n</details>",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32545#issuecomment-2916658444",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32545"
    },
    {
      "event": "commented",
      "id": 2918119652,
      "node_id": "IC_kwDOABII586t7vjk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2918119652",
      "actor": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-29T03:16:46Z",
      "updated_at": "2025-05-29T05:16:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "_(built with Clang)_\r\n\r\n<details> <summary> \r\n\r\n#### AMD Ryzen 9 9950X 16-Core Processor </summary>\r\n```bash\r\n./build/bin/bench_bitcoin --filter=\"Linearize.*Example.*\" -min-time=10000\r\n```\r\n|             ns/cost |              cost/s |    err% |        ins/cost |        cyc/cost |    IPC |       bra/cost |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|                1.19 |      836,855,166.72 |    0.4% |           20.42 |            5.13 |  3.984 |           2.29 |    2.4% |     11.05 | `LinearizeBoundedExample0`\r\n|                1.44 |      695,776,928.37 |    0.1% |           24.33 |            6.17 |  3.945 |           2.74 |    2.4% |     10.99 | `LinearizeBoundedExample1`\r\n|                1.17 |      852,566,861.36 |    0.2% |           18.78 |            5.03 |  3.733 |           2.33 |    3.2% |     11.04 | `LinearizeBoundedExample2`\r\n|                1.36 |      735,968,415.25 |    0.1% |           19.54 |            5.83 |  3.349 |           2.36 |    4.6% |     10.57 | `LinearizeBoundedExample3`\r\n|                1.24 |      805,653,703.91 |    0.0% |           18.58 |            5.33 |  3.487 |           2.27 |    4.2% |     10.56 | `LinearizeBoundedExample4`\r\n|                1.34 |      745,442,570.61 |    0.1% |           20.46 |            5.76 |  3.553 |           2.50 |    4.1% |     10.62 | `LinearizeBoundedExample5`\r\n|                1.27 |      784,639,270.59 |    0.0% |           19.10 |            5.47 |  3.490 |           2.35 |    4.3% |     10.65 | `LinearizeBoundedExample6`\r\n|                1.18 |      847,347,367.90 |    0.2% |           18.45 |            5.07 |  3.642 |           2.23 |    3.6% |     10.70 | `LinearizeBoundedExample7`\r\n|                1.19 |      841,752,012.32 |    0.2% |           18.65 |            5.10 |  3.657 |           2.29 |    3.5% |     10.70 | `LinearizeBoundedExample8`\r\n|                1.20 |      833,486,862.05 |    0.1% |           19.07 |            5.15 |  3.703 |           2.31 |    3.2% |     10.79 | `LinearizeBoundedExample9`\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|            1,062.27 |          941,380.47 |    0.2% |       23,154.64 |        4,561.62 |  5.076 |       2,732.15 |    1.1% |     10.99 | `LinearizeOptimallyExample00`\r\n|            2,199.32 |          454,686.52 |    0.1% |       44,955.91 |        9,443.49 |  4.761 |       5,125.75 |    1.2% |     11.01 | `LinearizeOptimallyExample01`\r\n|            4,655.43 |          214,803.15 |    0.1% |       76,020.42 |       19,989.80 |  3.803 |       8,376.75 |    2.7% |     11.01 | `LinearizeOptimallyExample02`\r\n|            4,687.57 |          213,330.01 |    0.2% |       79,606.35 |       20,125.95 |  3.955 |       8,838.43 |    2.7% |     10.99 | `LinearizeOptimallyExample03`\r\n|           11,198.28 |           89,299.41 |    0.1% |      180,121.05 |       48,080.45 |  3.746 |      21,333.25 |    2.9% |     11.01 | `LinearizeOptimallyExample04`\r\n|            8,806.12 |          113,557.33 |    0.0% |      148,315.36 |       37,809.30 |  3.923 |      17,597.94 |    2.9% |     10.83 | `LinearizeOptimallyExample05`\r\n|            8,881.81 |          112,589.68 |    0.0% |      129,414.56 |       38,127.56 |  3.394 |      15,799.78 |    4.3% |     10.83 | `LinearizeOptimallyExample06`\r\n|            7,396.23 |          135,204.04 |    0.0% |      139,880.41 |       31,756.73 |  4.405 |      16,345.08 |    2.7% |     10.67 | `LinearizeOptimallyExample07`\r\n|            9,691.58 |          103,182.40 |    0.0% |      201,859.77 |       41,612.38 |  4.851 |      23,957.84 |    1.1% |     11.01 | `LinearizeOptimallyExample08`\r\n|           13,912.45 |           71,878.08 |    0.1% |      205,829.89 |       59,733.52 |  3.446 |      25,060.12 |    4.2% |     11.00 | `LinearizeOptimallyExample09`\r\n|            9,799.39 |          102,047.14 |    0.1% |      131,704.66 |       42,074.45 |  3.130 |      13,959.94 |    5.7% |     11.00 | `LinearizeOptimallyExample10`\r\n|           14,178.88 |           70,527.42 |    0.1% |      181,891.98 |       60,879.32 |  2.988 |      18,797.61 |    5.9% |     11.02 | `LinearizeOptimallyExample11`\r\n|           19,417.52 |           51,499.89 |    0.1% |      231,655.76 |       83,370.63 |  2.779 |      26,582.04 |    6.6% |     11.01 | `LinearizeOptimallyExample12`\r\n|           21,875.47 |           45,713.31 |    0.1% |      262,258.87 |       93,911.73 |  2.793 |      30,218.20 |    6.7% |     11.00 | `LinearizeOptimallyExample13`\r\n|           28,875.31 |           34,631.67 |    0.1% |      336,971.73 |      123,981.98 |  2.718 |      38,520.06 |    6.5% |     11.01 | `LinearizeOptimallyExample14`\r\n|           27,860.30 |           35,893.37 |    0.1% |      334,160.29 |      119,619.93 |  2.794 |      37,727.10 |    6.5% |     11.00 | `LinearizeOptimallyExample15`\r\n|           33,495.46 |           29,854.79 |    0.1% |      395,850.86 |      143,808.78 |  2.753 |      45,419.38 |    6.8% |     11.00 | `LinearizeOptimallyExample16`\r\n|           46,820.27 |           21,358.27 |    0.2% |      527,868.16 |      201,024.15 |  2.626 |      60,683.66 |    7.4% |     11.01 | `LinearizeOptimallyExample17`\r\n|           47,420.53 |           21,087.91 |    0.1% |      549,255.39 |      203,589.67 |  2.698 |      62,108.84 |    7.0% |     11.01 | `LinearizeOptimallyExample18`\r\n|           56,870.07 |           17,583.94 |    0.2% |      665,564.77 |      244,167.60 |  2.726 |      75,210.75 |    6.7% |     10.98 | `LinearizeOptimallyExample19`\r\n</details>\r\n<details>\r\n<summary> \r\n\r\n#### AMD Ryzen 9 7900X 12-Core Processor </summary>\r\n```bash\r\n./build/bin/bench_bitcoin --filter=\"Linearize.*Example.*\" -min-time=10000\r\n```\r\n\r\n|             ns/cost |              cost/s |    err% |        ins/cost |        cyc/cost |    IPC |       bra/cost |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|                1.36 |      737,410,406.03 |    0.2% |           20.58 |            6.34 |  3.247 |           2.34 |    2.5% |     11.02 | `LinearizeBoundedExample0`\r\n|                1.65 |      606,854,042.04 |    0.1% |           24.57 |            7.70 |  3.190 |           2.76 |    2.5% |     10.99 | `LinearizeBoundedExample1`\r\n|                1.31 |      760,547,140.52 |    0.1% |           18.87 |            6.14 |  3.071 |           2.36 |    3.4% |     11.02 | `LinearizeBoundedExample2`\r\n|                1.52 |      657,532,700.47 |    0.0% |           19.61 |            7.11 |  2.758 |           2.38 |    4.9% |     10.63 | `LinearizeBoundedExample3`\r\n|                1.39 |      718,444,894.17 |    0.1% |           18.63 |            6.51 |  2.864 |           2.30 |    4.3% |     10.63 | `LinearizeBoundedExample4`\r\n|                1.52 |      656,965,976.43 |    0.1% |           20.51 |            7.11 |  2.882 |           2.53 |    4.1% |     10.71 | `LinearizeBoundedExample5`\r\n|                1.44 |      694,175,863.25 |    0.1% |           19.12 |            6.73 |  2.839 |           2.39 |    4.5% |     10.72 | `LinearizeBoundedExample6`\r\n|                1.34 |      745,455,006.56 |    0.0% |           18.49 |            6.27 |  2.948 |           2.27 |    3.8% |     10.81 | `LinearizeBoundedExample7`\r\n|                1.35 |      740,869,763.95 |    0.2% |           18.70 |            6.31 |  2.965 |           2.32 |    3.7% |     10.83 | `LinearizeBoundedExample8`\r\n|                1.36 |      733,610,430.06 |    0.0% |           19.17 |            6.37 |  3.009 |           2.34 |    3.4% |     11.00 | `LinearizeBoundedExample9`\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|            1,231.66 |          811,912.24 |    0.0% |       23,357.46 |        5,757.88 |  4.057 |       2,788.34 |    1.0% |     11.01 | `LinearizeOptimallyExample00`\r\n|            2,608.32 |          383,388.20 |    0.1% |       44,890.34 |       12,192.83 |  3.682 |       5,176.76 |    1.2% |     11.02 | `LinearizeOptimallyExample01`\r\n|            5,129.41 |          194,954.12 |    0.1% |       76,112.07 |       23,977.96 |  3.174 |       8,574.18 |    2.6% |     10.99 | `LinearizeOptimallyExample02`\r\n|            5,283.32 |          189,274.88 |    0.1% |       79,355.44 |       24,692.88 |  3.214 |       8,960.39 |    2.7% |     11.01 | `LinearizeOptimallyExample03`\r\n|           12,510.48 |           79,933.00 |    0.1% |      178,410.73 |       58,475.18 |  3.051 |      21,948.73 |    3.0% |     11.00 | `LinearizeOptimallyExample04`\r\n|            9,699.21 |          103,101.15 |    0.1% |      147,263.70 |       45,334.12 |  3.248 |      18,517.16 |    2.7% |     10.99 | `LinearizeOptimallyExample05`\r\n|            9,890.03 |          101,111.94 |    0.1% |      128,779.01 |       46,228.98 |  2.786 |      16,175.51 |    4.5% |     11.00 | `LinearizeOptimallyExample06`\r\n|            8,853.35 |          112,951.56 |    0.1% |      138,404.58 |       41,381.10 |  3.345 |      16,972.04 |    2.6% |     10.83 | `LinearizeOptimallyExample07`\r\n|           11,429.49 |           87,493.00 |    0.0% |      199,933.47 |       53,426.08 |  3.742 |      24,782.93 |    1.0% |     11.00 | `LinearizeOptimallyExample08`\r\n|           15,278.31 |           65,452.27 |    0.1% |      203,844.43 |       71,404.74 |  2.855 |      25,811.52 |    4.2% |     10.98 | `LinearizeOptimallyExample09`\r\n|           10,430.03 |           95,877.04 |    0.1% |      130,835.87 |       48,749.71 |  2.684 |      14,322.22 |    5.7% |     11.01 | `LinearizeOptimallyExample10`\r\n|           14,955.33 |           66,865.78 |    0.1% |      181,388.73 |       69,905.18 |  2.595 |      19,826.07 |    5.7% |     11.01 | `LinearizeOptimallyExample11`\r\n|           20,192.09 |           49,524.34 |    0.1% |      229,811.63 |       94,374.34 |  2.435 |      27,200.27 |    6.6% |     11.01 | `LinearizeOptimallyExample12`\r\n|           23,265.71 |           42,981.71 |    0.3% |      260,056.43 |      108,734.94 |  2.392 |      30,956.74 |    6.7% |     10.99 | `LinearizeOptimallyExample13`\r\n|           29,690.95 |           33,680.30 |    0.1% |      334,363.41 |      138,778.90 |  2.409 |      39,510.12 |    6.4% |     10.99 | `LinearizeOptimallyExample14`\r\n|           29,188.83 |           34,259.68 |    0.1% |      331,541.94 |      136,412.59 |  2.430 |      38,603.88 |    6.3% |     10.99 | `LinearizeOptimallyExample15`\r\n|           35,084.30 |           28,502.78 |    0.0% |      391,658.97 |      163,986.36 |  2.388 |      46,505.21 |    6.6% |     11.00 | `LinearizeOptimallyExample16`\r\n|           47,904.99 |           20,874.65 |    0.1% |      521,828.04 |      223,869.99 |  2.331 |      62,246.01 |    7.0% |     11.01 | `LinearizeOptimallyExample17`\r\n|           49,498.85 |           20,202.49 |    0.1% |      543,459.92 |      231,331.22 |  2.349 |      63,630.07 |    6.7% |     11.01 | `LinearizeOptimallyExample18`\r\n|           59,173.83 |           16,899.36 |    0.1% |      658,965.47 |      276,557.48 |  2.383 |      77,128.66 |    6.3% |     11.00 | `LinearizeOptimallyExample19`\r\n</details>\r\n\r\n\r\n\r\n",
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32545#issuecomment-2918119652",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32545"
    },
    {
      "event": "commented",
      "id": 2919479775,
      "node_id": "IC_kwDOABII586uA7nf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2919479775",
      "actor": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-29T13:51:43Z",
      "updated_at": "2025-05-29T14:36:42Z",
      "author_association": "MEMBER",
      "body": "> I'm interested in seeing benchmarks of this on various systems, especially high-end/modern ones (as their performance is likely most predictive of what future hardware will be like).\r\n\r\nBelow are benchmarks on MacBook M2 PRO 2023.\r\nCompiled using clang with only build bench cmake option.\r\n```\r\ncmake -B build -DBUILD_BENCH=ON && cmake --build build\r\n```\r\n<details>\r\n<summary> origin/pr/32545 47bdf8faafc550bf673b4affadc73415160f9ff2</summary>\r\n\r\n```terminal\r\nabubakarismail@Abubakars-MacBook-Pro ~/D/W/b/bitcoin ((47bdf8fa))> ./build/bin/bench_bitcoin --filter=\"Linearize.*Example.*\" -min-ti\r\nme=1000\r\n```\r\n\r\n|             ns/cost |              cost/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|                1.85 |      539,881,102.87 |    6.1% |     10.64 | :wavy_dash: `LinearizeBoundedExample0` (Unstable with ~171,993.8 iters. Increase `minEpochIterations` to e.g. 1719938)\r\n|                2.16 |      463,765,560.64 |    1.9% |     11.52 | `LinearizeBoundedExample1`\r\n|                1.89 |      529,370,444.85 |    3.4% |     11.88 | `LinearizeBoundedExample2`\r\n|                2.09 |      478,266,850.10 |    2.1% |     10.69 | `LinearizeBoundedExample3`\r\n|                2.00 |      500,459,378.92 |    3.4% |     10.99 | `LinearizeBoundedExample4`\r\n|                2.23 |      448,896,053.69 |    4.1% |     12.62 | `LinearizeBoundedExample5`\r\n|                2.21 |      453,201,053.94 |    6.2% |      9.74 | :wavy_dash: `LinearizeBoundedExample6` (Unstable with ~70,645.3 iters. Increase `minEpochIterations` to e.g. 706453)\r\n|                1.88 |      531,282,530.06 |    1.7% |     11.59 | `LinearizeBoundedExample7`\r\n|                1.82 |      550,292,679.97 |    1.5% |     11.85 | `LinearizeBoundedExample8`\r\n|                1.81 |      553,506,180.26 |    1.1% |     10.68 | `LinearizeBoundedExample9`\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|            1,927.91 |          518,696.06 |    1.2% |     11.39 | `LinearizeOptimallyExample00`\r\n|            3,227.99 |          309,790.35 |    1.0% |     10.99 | `LinearizeOptimallyExample01`\r\n|            6,619.50 |          151,068.72 |    2.3% |     10.17 | `LinearizeOptimallyExample02`\r\n|            6,648.74 |          150,404.54 |    1.1% |     10.67 | `LinearizeOptimallyExample03`\r\n|           15,989.38 |           62,541.52 |    1.7% |     11.11 | `LinearizeOptimallyExample04`\r\n|           13,491.31 |           74,121.78 |    4.1% |     12.15 | `LinearizeOptimallyExample05`\r\n|           12,958.96 |           77,166.66 |    1.0% |     10.63 | `LinearizeOptimallyExample06`\r\n|           11,525.25 |           86,766.02 |    3.7% |     11.77 | `LinearizeOptimallyExample07`\r\n|           14,095.38 |           70,945.21 |    0.6% |     10.80 | `LinearizeOptimallyExample08`\r\n|           21,410.11 |           46,706.90 |    1.1% |     11.46 | `LinearizeOptimallyExample09`\r\n|           13,372.29 |           74,781.50 |    1.5% |     11.06 | `LinearizeOptimallyExample10`\r\n|           19,803.65 |           50,495.75 |    3.2% |     10.79 | `LinearizeOptimallyExample11`\r\n|           26,699.86 |           37,453.38 |    1.1% |     11.15 | `LinearizeOptimallyExample12`\r\n|           36,106.95 |           27,695.50 |    8.0% |     11.03 | :wavy_dash: `LinearizeOptimallyExample13` (Unstable with ~24,184.5 iters. Increase `minEpochIterations` to e.g. 241845)\r\n|           41,346.30 |           24,185.96 |    3.3% |     10.49 | `LinearizeOptimallyExample14`\r\n|           41,673.85 |           23,995.86 |    1.6% |      9.89 | `LinearizeOptimallyExample15`\r\n|           47,425.14 |           21,085.87 |    1.1% |     11.07 | `LinearizeOptimallyExample16`\r\n|           66,540.78 |           15,028.38 |    2.4% |     11.26 | `LinearizeOptimallyExample17`\r\n|           66,934.73 |           14,939.93 |    1.4% |     10.54 | `LinearizeOptimallyExample18`\r\n|           81,828.99 |           12,220.61 |    1.8% |     11.44 | `LinearizeOptimallyExample19`\r\n</details>\r\n\r\n~Almost 10x speedup~ \r\nedit: bench cases changed, so not comparable with master.\r\n",
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32545#issuecomment-2919479775",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32545"
    },
    {
      "event": "commented",
      "id": 2919488733,
      "node_id": "IC_kwDOABII586uA9zd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2919488733",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-29T13:54:31Z",
      "updated_at": "2025-05-29T13:54:31Z",
      "author_association": "MEMBER",
      "body": "@ismaelsadeeq Not an apples-to-apples comparison I'm afraid, because the benchmark cases are changed in this PR too. Can you run the `LinearizeBoundedExample?` benchmarks too?",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32545#issuecomment-2919488733",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32545"
    },
    {
      "event": "mentioned",
      "id": 17869002602,
      "node_id": "MEE_lADOABII5863DfgAzwAAAAQpE1dq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17869002602",
      "actor": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-29T13:54:32Z"
    },
    {
      "event": "subscribed",
      "id": 17869002623,
      "node_id": "SE_lADOABII5863DfgAzwAAAAQpE1d_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17869002623",
      "actor": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-29T13:54:32Z"
    },
    {
      "event": "commented",
      "id": 2919605052,
      "node_id": "IC_kwDOABII586uBaM8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2919605052",
      "actor": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-29T14:35:45Z",
      "updated_at": "2025-05-29T14:35:45Z",
      "author_association": "MEMBER",
      "body": "> @ismaelsadeeq Not an apples-to-apples comparison I'm afraid, because the benchmark cases are changed in this PR too\r\n\r\nOops sorry haven't take a look, I was hoping I can compare locally myself. I saw a link to the bench results comparing them in the description 👍🏾 \r\n\r\n> Can you run the LinearizeBoundedExample? benchmarks too?\r\n\r\nYep I did and updated the bench results. previous one was not pointing to your latest push.\r\n\r\n\r\n",
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32545#issuecomment-2919605052",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32545"
    },
    {
      "event": "mentioned",
      "id": 17869696782,
      "node_id": "MEE_lADOABII5863DfgAzwAAAAQpHe8O",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17869696782",
      "actor": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-29T14:35:46Z"
    },
    {
      "event": "subscribed",
      "id": 17869696810,
      "node_id": "SE_lADOABII5863DfgAzwAAAAQpHe8q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17869696810",
      "actor": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-29T14:35:46Z"
    },
    {
      "event": "commented",
      "id": 2919935290,
      "node_id": "IC_kwDOABII586uCq06",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2919935290",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-29T16:28:15Z",
      "updated_at": "2025-05-29T16:28:15Z",
      "author_association": "MEMBER",
      "body": "Ran apples to apples out of curiosity. One example ran marginally slower on this PR (but still very fast), many are many multiples faster and some see 500x+ improvements.",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32545#issuecomment-2919935290",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32545"
    },
    {
      "event": "commented",
      "id": 2920277088,
      "node_id": "IC_kwDOABII586uD-Rg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2920277088",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-29T18:47:51Z",
      "updated_at": "2025-05-29T21:37:07Z",
      "author_association": "CONTRIBUTOR",
      "body": "@instagibbs  I believe the only cases that should be slower with SFL are either very small examples (where their time is irrelevant because its very low per tx compared to bigger clusters)  and ones with huge numbers of dependencies.   Beyond huge dependencies being generally unrepresentative they're also expensive to generate because every dependency needs a vin, they also tend to be so slow with both that I guess neither will run to completion in practice.\r\n\r\nA better way to compare across implementations might be some kind of optimization time vs amount of fee required to create a cluster with that dependency geometry (just assuming a 1s/vb feerate or something, not adding up the actual costs in the cluster because another cluster could exist with the same topology but different fees/size). like fee = 16\\*txn + 41\\*inputs_consumed + 9\\*outputs_consumed_within_cluster -- so I'd hope to find that SFL always beats the current exponential algorithm on this kind of metric (except for very small inputs).\r\n\r\nThe exponential algorithm gets faster with dependency rich clusters because the linearization essentially becomes topologically forced, so the current algorithm doesn't have many options to consider.  If it massive high dependency clusters became common on the network in the future it might make sense to bring back the exponential algorithm for  them.  :P  but I doubt that would happen.\r\n",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32545#issuecomment-2920277088",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32545"
    },
    {
      "event": "mentioned",
      "id": 17873542757,
      "node_id": "MEE_lADOABII5863DfgAzwAAAAQpWJ5l",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17873542757",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-29T18:47:52Z"
    },
    {
      "event": "subscribed",
      "id": 17873542769,
      "node_id": "SE_lADOABII5863DfgAzwAAAAQpWJ5x",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17873542769",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-29T18:47:52Z"
    },
    {
      "event": "commented",
      "id": 2923413036,
      "node_id": "IC_kwDOABII586uP74s",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2923413036",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-30T20:26:27Z",
      "updated_at": "2025-05-30T20:26:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I'm interested in seeing benchmarks of this on various systems\r\n\r\n<details>\r\n<summary>Macbook Pro M4</summary>\r\n\r\n$ build/bin/bench_bitcoin --filter=\"Linearize.*Example.*\" -min-time=10000\r\n\r\n|             ns/cost |              cost/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|                1.12 |      893,382,447.85 |    0.5% |     11.06 | `LinearizeBoundedExample0`\r\n|                1.34 |      743,601,759.92 |    0.7% |     11.07 | `LinearizeBoundedExample1`\r\n|                1.14 |      880,692,144.98 |    0.3% |     10.99 | `LinearizeBoundedExample2`\r\n|                1.33 |      749,663,261.00 |    0.3% |     10.98 | `LinearizeBoundedExample3`\r\n|                1.24 |      807,545,779.18 |    0.5% |     10.57 | `LinearizeBoundedExample4`\r\n|                1.37 |      730,046,090.82 |    0.4% |     10.64 | `LinearizeBoundedExample5`\r\n|                1.28 |      779,862,831.19 |    0.4% |     10.66 | `LinearizeBoundedExample6`\r\n|                1.17 |      856,937,081.55 |    0.4% |     10.71 | `LinearizeBoundedExample7`\r\n|                1.19 |      840,624,085.43 |    0.2% |     10.74 | `LinearizeBoundedExample8`\r\n|                1.19 |      840,938,970.51 |    0.4% |     10.74 | `LinearizeBoundedExample9`\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|            1,155.37 |          865,524.35 |    0.2% |     11.00 | `LinearizeOptimallyExample00`\r\n|            2,170.00 |          460,828.59 |    0.2% |     11.04 | `LinearizeOptimallyExample01`\r\n|            4,507.21 |          221,866.90 |    0.2% |     11.01 | `LinearizeOptimallyExample02`\r\n|            4,435.85 |          225,435.87 |    0.3% |     10.96 | `LinearizeOptimallyExample03`\r\n|           10,189.93 |           98,136.12 |    0.2% |     11.02 | `LinearizeOptimallyExample04`\r\n|            8,854.57 |          112,936.09 |    0.4% |     10.79 | `LinearizeOptimallyExample05`\r\n|            8,685.08 |          115,140.05 |    0.1% |     10.82 | `LinearizeOptimallyExample06`\r\n|            7,162.17 |          139,622.57 |    0.0% |     10.64 | `LinearizeOptimallyExample07`\r\n|            9,120.88 |          109,638.49 |    0.0% |     11.00 | `LinearizeOptimallyExample08`\r\n|           12,780.73 |           78,242.79 |    0.1% |     11.00 | `LinearizeOptimallyExample09`\r\n|            9,242.70 |          108,193.53 |    0.1% |     10.98 | `LinearizeOptimallyExample10`\r\n|           13,653.81 |           73,239.62 |    0.3% |     11.04 | `LinearizeOptimallyExample11`\r\n|           19,211.80 |           52,051.34 |    0.2% |     11.00 | `LinearizeOptimallyExample12`\r\n|           22,243.75 |           44,956.45 |    0.1% |     11.00 | `LinearizeOptimallyExample13`\r\n|           28,409.81 |           35,199.11 |    0.2% |     10.99 | `LinearizeOptimallyExample14`\r\n|           28,265.23 |           35,379.16 |    0.1% |     10.99 | `LinearizeOptimallyExample15`\r\n|           33,767.58 |           29,614.20 |    0.3% |     11.02 | `LinearizeOptimallyExample16`\r\n|           46,851.80 |           21,343.90 |    0.4% |     11.03 | `LinearizeOptimallyExample17`\r\n|           48,470.35 |           20,631.17 |    0.1% |     10.98 | `LinearizeOptimallyExample18`\r\n|           57,668.81 |           17,340.40 |    0.4% |     10.98 | `LinearizeOptimallyExample19`\r\n\r\n</details>",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32545#issuecomment-2923413036",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32545"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17900829865,
      "node_id": "HRFPE_lADOABII5863DfgAzwAAAAQq-Pyp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17900829865",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "de458666f4e7e297dbf9aa6e0b231a4cdc734fcf",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/de458666f4e7e297dbf9aa6e0b231a4cdc734fcf",
      "created_at": "2025-05-31T13:17:22Z"
    },
    {
      "event": "commented",
      "id": 2925180422,
      "node_id": "IC_kwDOABII586uWrYG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2925180422",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-31T13:24:00Z",
      "updated_at": "2025-05-31T13:24:00Z",
      "author_association": "MEMBER",
      "body": "@instagibbs @ismaelsadeeq @gmaxwell FWIW, I didn't include apples-to-apples comparison because the large-scale comparison [benchmarks](https://delvingbitcoin.org/t/how-to-linearize-your-cluster/303/73) I did (especially, [this one](https://delvingbitcoin.org/uploads/default/original/2X/2/22ad16f71db37fcb8cadb8a8f73c4acfd3def203.png)) were just overwhelmingly in favor of SFL over the existing one. The benchmarks were mostly done to decide between SFL and another replacement algorithm, GGT, but see the reasons for choosing SFL [here](https://delvingbitcoin.org/t/how-to-linearize-your-cluster/303/68).\r\n\r\nA fair apples-to-apples comparison I think needs to use a dataset large enough to encompass both good and bad cases for each of the algorithms, and not be specifically biased for one of them, which is hard in a benchmark I can include in the PR directly. If people are interested, I can try to clean up the branch I used to create the graphs above, however.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32545#issuecomment-2925180422",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32545"
    },
    {
      "event": "mentioned",
      "id": 17900881168,
      "node_id": "MEE_lADOABII5863DfgAzwAAAAQq-cUQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17900881168",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-31T13:24:01Z"
    },
    {
      "event": "subscribed",
      "id": 17900881171,
      "node_id": "SE_lADOABII5863DfgAzwAAAAQq-cUT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17900881171",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-31T13:24:01Z"
    },
    {
      "event": "mentioned",
      "id": 17900881172,
      "node_id": "MEE_lADOABII5863DfgAzwAAAAQq-cUU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17900881172",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-31T13:24:01Z"
    },
    {
      "event": "subscribed",
      "id": 17900881175,
      "node_id": "SE_lADOABII5863DfgAzwAAAAQq-cUX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17900881175",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-31T13:24:01Z"
    },
    {
      "event": "mentioned",
      "id": 17900881179,
      "node_id": "MEE_lADOABII5863DfgAzwAAAAQq-cUb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17900881179",
      "actor": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-31T13:24:01Z"
    },
    {
      "event": "subscribed",
      "id": 17900881181,
      "node_id": "SE_lADOABII5863DfgAzwAAAAQq-cUd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17900881181",
      "actor": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-31T13:24:01Z"
    },
    {
      "event": "commented",
      "id": 2925757556,
      "node_id": "IC_kwDOABII586uY4R0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2925757556",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-31T21:25:43Z",
      "updated_at": "2025-06-01T12:32:17Z",
      "author_association": "MEMBER",
      "body": "Thanks for all the benchmarks, here are some graphs created from them to show their relative performance:\r\n\r\n\r\n<img src=\"https://github.com/user-attachments/assets/963a45e2-c44d-4c15-a85b-a42f2dd209a1\" width=49% height=49%><img src=\"https://github.com/user-attachments/assets/84f85f6d-977c-4f2d-b290-0b16426fc21f\" width=49% height=49%>\r\n<img src=\"https://github.com/user-attachments/assets/3615f788-c055-4d18-8acb-6d26a3884815\" width=49% height=49%><img src=\"https://github.com/user-attachments/assets/26f533e5-65e5-4e0d-bf46-2a392c96439e\" width=49% height=49%>\r\n<img src=\"https://github.com/user-attachments/assets/98f55616-4d0d-4eac-8a6c-c4076432f50f\" width=100% height=100%>\r\n\r\n(code & data to generate them is [here](https://gist.github.com/sipa/f002a7e552fedabd5d727eb4a55624f0))",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32545#issuecomment-2925757556",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32545"
    },
    {
      "event": "commented",
      "id": 2928370752,
      "node_id": "IC_kwDOABII586ui2RA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2928370752",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-02T01:43:15Z",
      "updated_at": "2025-06-04T12:42:51Z",
      "author_association": "MEMBER",
      "body": "If people are interested in a much larger scale comparison between the old and the new algorithm, checkout https://github.com/sipa/bitcoin/commits/bench_sfl_css, build its `bin/bench_bitcoin`, and:\r\n\r\n```\r\nwget https://bitcoin.sipa.be/clusters/clusters.tgz\r\ntar -xzf clusters.tgz\r\nfor F in clusters_sim2023_large clusters_medium clusters_spanning clusters_bipartite; do time ./build/bin/bench_bitcoin --filter=\"LinearizeDataSet\" <$F >$F.out; done\r\nzstd -19 clusters_*.out\r\n```\r\n\r\nAnd then PR the resulting `*.out.zst` files to https://github.com/sipa/lin-benches/tree/main/data.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32545#issuecomment-2928370752",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32545"
    },
    {
      "event": "commented",
      "id": 2939458958,
      "node_id": "IC_kwDOABII586vNJWO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2939458958",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-04T10:21:34Z",
      "updated_at": "2025-06-04T10:21:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "I've run the command on a `Raspberry Pi 4 Model B - Cortex-A72 4-Core ARM with SanDisk SSD PLUS 1TB (USB 3.0)` with to have data about lower-end hardware as well. \r\n\r\n<details>\r\n<summary>full command</summary>\r\n\r\n```bash\r\ngit remote add sipa https://github.com/sipa/bitcoin.git || true && git fetch sipa bench_sfl_css && git switch -C bench_sfl_css sipa/bench_sfl_css && \\\r\ngit clean -fxd && git reset --hard && \\\r\ncmake -B build -DBUILD_BENCH=ON -DCMAKE_BUILD_TYPE=Release && cmake --build build -j\"$(nproc)\" && \\\r\nwget -q https://bitcoin.sipa.be/clusters/clusters.tgz && tar -xzf clusters.tgz && \\\r\nfor F in clusters_sim2023_large clusters_medium clusters_spanning clusters_bipartite; do \\\r\n    time build/bin/bench_bitcoin --filter=\"LinearizeDataSet\" <\"$F\" >\"$F.out\"; \\\r\ndone && \\\r\ntar -czf clusters.out.tgz clusters_*.out\r\n```\r\n\r\n</details>\r\n\r\nIt took considerably longer than expected (~13h):\r\n* `clusters_sim2023_large`: 11h 39m\r\n* `clusters_medium`: 26m 33s\r\n* `clusters_spanning`: 19m 37s\r\n* `clusters_bipartite`: 37m 17s\r\n\r\nLet's see if I can attach it here: [clusters.out.tgz](https://github.com/user-attachments/files/20589411/clusters.out.tgz)\r\n",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32545#issuecomment-2939458958",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32545"
    },
    {
      "event": "commented",
      "id": 2939904739,
      "node_id": "IC_kwDOABII586vO2Lj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2939904739",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-04T12:44:36Z",
      "updated_at": "2025-06-04T12:46:07Z",
      "author_association": "MEMBER",
      "body": "I've created a repo for benchmark data, and added my results plus @l0rinc's: https://github.com/sipa/lin-benches/tree/main/data.\r\n\r\nAlso, is this with 32-bit or 64-bit userspace?",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32545#issuecomment-2939904739",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32545"
    },
    {
      "event": "mentioned",
      "id": 17981057029,
      "node_id": "MEE_lADOABII5863DfgAzwAAAAQvwSgF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17981057029",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-04T12:44:38Z"
    },
    {
      "event": "subscribed",
      "id": 17981057059,
      "node_id": "SE_lADOABII5863DfgAzwAAAAQvwSgj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17981057059",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-04T12:44:38Z"
    },
    {
      "event": "commented",
      "id": 2940026257,
      "node_id": "IC_kwDOABII586vPT2R",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2940026257",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-04T13:22:05Z",
      "updated_at": "2025-06-04T13:22:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Also, is this with 32-bit or 64-bit userspace?\r\n\r\n64-bit userspace (AArch64)\r\n```bash\r\n$ file bitcoind\r\nbitcoind: ELF 64-bit LSB pie executable, ARM aarch64, version 1 (GNU/Linux), dynamically linked, interpreter /lib/ld-linux-aarch64.so.1, BuildID[sha1]=7e059ec01f7460042910ca4ed15270382269c9d5, for GNU/Linux 3.7.0, with debug_info, not stripped\r\n```\r\n\r\n<details>\r\n<summary>additional details</summary>\r\n\r\n```bash\r\n$ getconf LONG_BIT\r\n64\r\n$ dpkg --print-architecture\r\narm64\r\n$ uname -m\r\naarch64\r\n```\r\n\r\n</details>",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32545#issuecomment-2940026257",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32545"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18119296956,
      "node_id": "HRFPE_lADOABII5863DfgAzwAAAAQ3_oe8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18119296956",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "58b6fc7b4d86a55b6ef603c5c224c024a1633e1f",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/58b6fc7b4d86a55b6ef603c5c224c024a1633e1f",
      "created_at": "2025-06-12T16:32:53Z"
    },
    {
      "event": "commented",
      "id": 2967662605,
      "node_id": "IC_kwDOABII586w4vAN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2967662605",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-12T17:28:34Z",
      "updated_at": "2025-06-12T17:28:34Z",
      "author_association": "MEMBER",
      "body": "Rebased on top of #30605.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32545#issuecomment-2967662605",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32545"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18122293050,
      "node_id": "HRFPE_lADOABII5863DfgAzwAAAAQ4LD86",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18122293050",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "8b3968fcf16c0622ed9e5c1f879f7585f1b409f7",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/8b3968fcf16c0622ed9e5c1f879f7585f1b409f7",
      "created_at": "2025-06-12T20:23:31Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18153032810,
      "node_id": "HRFPE_lADOABII5863DfgAzwAAAAQ6AUxq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18153032810",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "505bc96f11699cc93116dba688944d8e3e867cbd",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/505bc96f11699cc93116dba688944d8e3e867cbd",
      "created_at": "2025-06-14T22:56:29Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18577466813,
      "node_id": "HRFPE_lADOABII5863DfgAzwAAAARTTaW9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18577466813",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "545c11da465b2e7beda9eedc55d94a7c328a6039",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/545c11da465b2e7beda9eedc55d94a7c328a6039",
      "created_at": "2025-07-11T03:19:17Z"
    },
    {
      "event": "labeled",
      "id": 18879085564,
      "node_id": "LE_lADOABII5863DfgAzwAAAARlR_v8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18879085564",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-29T13:38:10Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19065088361,
      "node_id": "HRFPE_lADOABII5863DfgAzwAAAARwXilp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19065088361",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6a7377d09981d59963792d01bd0bdfed608628f0",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/6a7377d09981d59963792d01bd0bdfed608628f0",
      "created_at": "2025-08-09T03:53:54Z"
    },
    {
      "event": "labeled",
      "id": 19065522331,
      "node_id": "LE_lADOABII5863DfgAzwAAAARwZMib",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19065522331",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-09T04:45:24Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 3170201265,
      "node_id": "IC_kwDOABII58689W6x",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3170201265",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-09T04:45:26Z",
      "updated_at": "2025-08-09T04:45:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Task `no wallet, libbitcoinkernel`: https://github.com/bitcoin/bitcoin/runs/47723469045</sub>\n<sub>LLM reason (✨ experimental): The build failed due to compilation errors in cluster_linearize.cpp caused by incorrect member access of a tuple, leading to a build error.</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32545#issuecomment-3170201265",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32545"
    },
    {
      "event": "unlabeled",
      "id": 19065563066,
      "node_id": "UNLE_lADOABII5863DfgAzwAAAARwZWe6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19065563066",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-09T04:49:58Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19067741928,
      "node_id": "HRFPE_lADOABII5863DfgAzwAAAARwhqbo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19067741928",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "8bca6bb6613c61a432100f70ddd529b214f82180",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/8bca6bb6613c61a432100f70ddd529b214f82180",
      "created_at": "2025-08-09T13:43:39Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19068209278,
      "node_id": "HRFPE_lADOABII5863DfgAzwAAAARwjch-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19068209278",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "3d2b9b410afe711e78cb39cea817e553894d69e3",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/3d2b9b410afe711e78cb39cea817e553894d69e3",
      "created_at": "2025-08-09T15:16:21Z"
    },
    {
      "event": "unlabeled",
      "id": 19068454244,
      "node_id": "UNLE_lADOABII5863DfgAzwAAAARwkYVk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19068454244",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-09T16:11:59Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "convert_to_draft",
      "id": 19640770308,
      "node_id": "CTDE_lADOABII5863DfgAzwAAAASSrl8E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19640770308",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-11T15:31:42Z"
    },
    {
      "event": "commented",
      "id": 3281455036,
      "node_id": "IC_kwDOABII587Dlwe8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3281455036",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-11T15:32:12Z",
      "updated_at": "2025-09-11T15:32:12Z",
      "author_association": "MEMBER",
      "body": "I'm working on some improvements and reorganization of the commit here, so marking it as draft for now.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32545#issuecomment-3281455036",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32545"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19640795635,
      "node_id": "HRFPE_lADOABII5863DfgAzwAAAASSrsHz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19640795635",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d2b1b99217e2e2dc0aa476b331f18ad8509bdd86",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/d2b1b99217e2e2dc0aa476b331f18ad8509bdd86",
      "created_at": "2025-09-11T15:32:46Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDg0YjhhYTA3ZGQ0N2VjMDk4MTMzZWI2YjA4N2JmY2Q4YjVjZGU4MTY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/84b8aa07dd47ec098133eb6b087bfcd8b5cde816",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/84b8aa07dd47ec098133eb6b087bfcd8b5cde816",
      "tree": {
        "sha": "4938e003d5b7c008ecbfbf117874b8e673131f76",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4938e003d5b7c008ecbfbf117874b8e673131f76"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e14451ac87339ed61b8c872f027184a978dd96eb",
          "sha": "e14451ac87339ed61b8c872f027184a978dd96eb",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e14451ac87339ed61b8c872f027184a978dd96eb"
        }
      ],
      "message": "clusterlin: add known-correct optimal linearization tests (tests)",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-16T12:18:28Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-05-17T18:31:38Z"
      },
      "sha": "84b8aa07dd47ec098133eb6b087bfcd8b5cde816"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDI0MGEzMmE3YjIzMzBiYzhkNjMyNTgyODFjYTFmYjAwNjhiMGVkMjY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/240a32a7b2330bc8d63258281ca1fb0068b0ed26",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/240a32a7b2330bc8d63258281ca1fb0068b0ed26",
      "tree": {
        "sha": "d6a5748e5f1599b8582184758c94b67687dc9a84",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d6a5748e5f1599b8582184758c94b67687dc9a84"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/84b8aa07dd47ec098133eb6b087bfcd8b5cde816",
          "sha": "84b8aa07dd47ec098133eb6b087bfcd8b5cde816",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/84b8aa07dd47ec098133eb6b087bfcd8b5cde816"
        }
      ],
      "message": "clusterlin: replace benchmarks with SFL-hard ones (bench)",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-16T12:18:28Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-05-17T23:08:25Z"
      },
      "sha": "240a32a7b2330bc8d63258281ca1fb0068b0ed26"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDNiOWQwYjZmMjNiYjU3YTA0ZWIzNGNlNTJhMjRlODg0ZTgzYjdlNjA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3b9d0b6f23bb57a04eb34ce52a24e884e83b7e60",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3b9d0b6f23bb57a04eb34ce52a24e884e83b7e60",
      "tree": {
        "sha": "3509c6f23a900e36c0b831f9156c4bf31030ae25",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3509c6f23a900e36c0b831f9156c4bf31030ae25"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/240a32a7b2330bc8d63258281ca1fb0068b0ed26",
          "sha": "240a32a7b2330bc8d63258281ca1fb0068b0ed26",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/240a32a7b2330bc8d63258281ca1fb0068b0ed26"
        }
      ],
      "message": "clusterlin: replace cluster linearization with SFL implementation (feature)\n\nThis replaces the existing LIMO linearization algorithm (which internally uses\nancestor set finding and candidate set finding) with the much more performant\nspanning-forest linearization algorithm.\n\nSee https://delvingbitcoin.org/t/spanning-forest-cluster-linearization/1419",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-16T13:07:35Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-05-17T03:04:44Z"
      },
      "sha": "3b9d0b6f23bb57a04eb34ce52a24e884e83b7e60"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 20325418677,
      "node_id": "HRFPE_lADOABII5863DfgAzwAAAAS7fUa1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20325418677",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "af64d36848124dee85c0d0c70400fd8c30172246",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/af64d36848124dee85c0d0c70400fd8c30172246",
      "created_at": "2025-10-16T18:01:47Z"
    },
    {
      "event": "ready_for_review",
      "id": 20325472340,
      "node_id": "RFRE_lADOABII5863DfgAzwAAAAS7fhhU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20325472340",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-16T18:04:26Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 20326289139,
      "node_id": "HRFPE_lADOABII5863DfgAzwAAAAS7io7z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20326289139",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "68c4b554f5c24ccdee94b6243a52fab009863775",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/68c4b554f5c24ccdee94b6243a52fab009863775",
      "created_at": "2025-10-16T18:51:16Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZmNDllNjhiODk4MTM4MzFkMTk0NmViMWY2NDQ4NjA0ZWI0M2VkM2I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ff49e68b89813831d1946eb1f6448604eb43ed3b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ff49e68b89813831d1946eb1f6448604eb43ed3b",
      "tree": {
        "sha": "a2eec6e554927b6b6c3e7e4e50144123af42a8fd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a2eec6e554927b6b6c3e7e4e50144123af42a8fd"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3b9d0b6f23bb57a04eb34ce52a24e884e83b7e60",
          "sha": "3b9d0b6f23bb57a04eb34ce52a24e884e83b7e60",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3b9d0b6f23bb57a04eb34ce52a24e884e83b7e60"
        }
      ],
      "message": "clusterlin: support fixing linearizations in Linearize()\n\nThis also updates FixLinearization to just be a thin wrapper around Linearize.\nIn a future commit, FixLinearization will be removed entirely.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-16T18:53:59Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-16T02:52:09Z"
      },
      "sha": "ff49e68b89813831d1946eb1f6448604eb43ed3b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDZiYjE1NWY3YWEyMTJlODczNDYzMjA4ODliYzE3NGZmNjY0NTdjODU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6bb155f7aa212e87346320889bc174ff66457c85",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6bb155f7aa212e87346320889bc174ff66457c85",
      "tree": {
        "sha": "ee51f005dd15fca6a1f760555dc2fcb94f30c560",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ee51f005dd15fca6a1f760555dc2fcb94f30c560"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ff49e68b89813831d1946eb1f6448604eb43ed3b",
          "sha": "ff49e68b89813831d1946eb1f6448604eb43ed3b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ff49e68b89813831d1946eb1f6448604eb43ed3b"
        }
      ],
      "message": "clusterlin: keep track of active parents per transaction (optimization)\n\nThis avoids the need for a loop over all parents of a transaction while walking\na chunk, and removes the need to store the set of parent dependencies explicitly.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-16T18:54:03Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-16T13:06:37Z"
      },
      "sha": "6bb155f7aa212e87346320889bc174ff66457c85"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDY4NDkzYmYwMjQ5YjQwZjYwMmM4Yzc2ZTZhMWJhMzQ2ZGM3MWYwNDQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/68493bf0249b40f602c8c76e6a1ba346dc71f044",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/68493bf0249b40f602c8c76e6a1ba346dc71f044",
      "tree": {
        "sha": "9cfce3a53aaab0c59a336f0e65a93dbb3bd1487b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9cfce3a53aaab0c59a336f0e65a93dbb3bd1487b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6bb155f7aa212e87346320889bc174ff66457c85",
          "sha": "6bb155f7aa212e87346320889bc174ff66457c85",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6bb155f7aa212e87346320889bc174ff66457c85"
        }
      ],
      "message": "clusterlin: split chunks based on maximum gain (optimization)\n\nThis introduces the notion of gain to the SFL algorithm. Given a chunk c,\nan active dependency d in it, and the chunks (t, b) that c would split into\nif d were deactivated, the gain is defined as either (they are equivalent):\n\n  (feerate(t) - feerate(b)) * size(t) * size(b)\n  fee(t) * size(b) - fee(b) * size(t)\n\nIt happens to also be equal to these:\n\n  (feerate(t) - feerate(c)) * size(t) * size(c)\n  fee(t) * size(c) - fee(c) * size(t)\n\nIts relevance is that this metric is proportional to a lower bound on the area\nunder the fee-size diagram which would be gained IF a deactivation of d does not\nresult in a self-merge of t and b again.\n\nThis commit adds logic to find, within each chunk, the dependency with the highest\ngain. In benchmarks, this appears to be a very good heuristic for deciding which\nsplits are worth making.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-16T18:54:03Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-16T13:00:00Z"
      },
      "sha": "68493bf0249b40f602c8c76e6a1ba346dc71f044"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQwZWQ4MTEwMDdlY2Y1MTcxNDE2Y2I2YmU4OTM0YTkyY2M4NDM4Zjk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d0ed811007ecf5171416cb6be8934a92cc8438f9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d0ed811007ecf5171416cb6be8934a92cc8438f9",
      "tree": {
        "sha": "f3c520cfb2e8bebf4b47bf4afb6082e3cc1b6e5c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f3c520cfb2e8bebf4b47bf4afb6082e3cc1b6e5c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/68493bf0249b40f602c8c76e6a1ba346dc71f044",
          "sha": "68493bf0249b40f602c8c76e6a1ba346dc71f044",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/68493bf0249b40f602c8c76e6a1ba346dc71f044"
        }
      ],
      "message": "clusterlin: use pre-allocated array for dependencies (optimization)\n\nThis reduces the number of allocations required inside the SFL algorithm, and works\nbecause the number of dependencies per transaction is at most n-1.\n\nTo minimize the memory usage from this pre-allocation (which might impact memory\nlocality), change the data type of DepIdx from uint32_t to uint8_t or uint16_t when\npossible.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-16T18:54:03Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-16T12:56:44Z"
      },
      "sha": "d0ed811007ecf5171416cb6be8934a92cc8438f9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDIxZDU2ODY3ODYyZmYxYjZjZjQ2YzEzZWUyNWU3YmU4MDk1NTllYjk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/21d56867862ff1b6cf46c13ee25e7be809559eb9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/21d56867862ff1b6cf46c13ee25e7be809559eb9",
      "tree": {
        "sha": "a856f23580da4fb272a8c0d7641219645b2ab10a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a856f23580da4fb272a8c0d7641219645b2ab10a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d0ed811007ecf5171416cb6be8934a92cc8438f9",
          "sha": "d0ed811007ecf5171416cb6be8934a92cc8438f9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d0ed811007ecf5171416cb6be8934a92cc8438f9"
        }
      ],
      "message": "clusterlin: keep active child dependencies separate (optimization)\n\nWithin the per-transaction child dependency list, keep the active ones before all\ninactive ones. This improves the complexity over iterating over active dependencies\nfrom O(m) to O(n), as at most n-1 dependencies can be active within any given chunk\nat any given time.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-16T18:54:03Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-16T12:22:28Z"
      },
      "sha": "21d56867862ff1b6cf46c13ee25e7be809559eb9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDExYjI3N2ZkMjg3MThmMzhlMjRjNGNlMWU0NzFiZmI4MTliNTEwNjM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/11b277fd28718f38e24c4ce1e471bfb819b51063",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/11b277fd28718f38e24c4ce1e471bfb819b51063",
      "tree": {
        "sha": "b6a6f05591c7df87d44e3017eae1e38e3d24c644",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b6a6f05591c7df87d44e3017eae1e38e3d24c644"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/21d56867862ff1b6cf46c13ee25e7be809559eb9",
          "sha": "21d56867862ff1b6cf46c13ee25e7be809559eb9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/21d56867862ff1b6cf46c13ee25e7be809559eb9"
        }
      ],
      "message": "clusterlin: keep FIFO queue of improvable chunks (optimization)\n\nThis distributes the work over the various chunks fairly, and simultaneously\navoids retrying chunks over and over again which are already known to be optimal.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-16T18:54:03Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-16T01:46:50Z"
      },
      "sha": "11b277fd28718f38e24c4ce1e471bfb819b51063"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDg5ZTIwZjI0NWNjNmI1MWMzZWQ3YTlkZWU2Zjg5NThhZThiYTM0NTE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/89e20f245cc6b51c3ed7a9dee6f8958ae8ba3451",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/89e20f245cc6b51c3ed7a9dee6f8958ae8ba3451",
      "tree": {
        "sha": "799d658623af583523d8b8b4848cb5d91232adcf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/799d658623af583523d8b8b4848cb5d91232adcf"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/11b277fd28718f38e24c4ce1e471bfb819b51063",
          "sha": "11b277fd28718f38e24c4ce1e471bfb819b51063",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/11b277fd28718f38e24c4ce1e471bfb819b51063"
        }
      ],
      "message": "clusterlin: keep track of whether chunks are already in suboptimal lists\n\nThis avoids adding them a second time when they happen to already be there.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-16T18:54:03Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-16T01:35:58Z"
      },
      "sha": "89e20f245cc6b51c3ed7a9dee6f8958ae8ba3451"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDY5NzljOThmZDBkZmU4MmI4NjkwYzBjMTM2MjBjMWYxZDUzMDVmNGM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6979c98fd0dfe82b8690c0c13620c1f1d5305f4c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6979c98fd0dfe82b8690c0c13620c1f1d5305f4c",
      "tree": {
        "sha": "9b76279a1ac1ba67ca6301090df9756315ffed0a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9b76279a1ac1ba67ca6301090df9756315ffed0a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/89e20f245cc6b51c3ed7a9dee6f8958ae8ba3451",
          "sha": "89e20f245cc6b51c3ed7a9dee6f8958ae8ba3451",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/89e20f245cc6b51c3ed7a9dee6f8958ae8ba3451"
        }
      ],
      "message": "clusterlin: randomize merges/splits in SFL (feature)",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-16T18:54:03Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-14T20:41:20Z"
      },
      "sha": "6979c98fd0dfe82b8690c0c13620c1f1d5305f4c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDE2NDljMTlkMTcxYzFmZDYyZTRiZmFlMjQ5MGExYzk5MGYwZDFjZDE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1649c19d171c1fd62e4bfae2490a1c990f0d1cd1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1649c19d171c1fd62e4bfae2490a1c990f0d1cd1",
      "tree": {
        "sha": "f17f9e22c2b9e9b1928676b2309a0162c50b45d6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f17f9e22c2b9e9b1928676b2309a0162c50b45d6"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6979c98fd0dfe82b8690c0c13620c1f1d5305f4c",
          "sha": "6979c98fd0dfe82b8690c0c13620c1f1d5305f4c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6979c98fd0dfe82b8690c0c13620c1f1d5305f4c"
        }
      ],
      "message": "clusterlin: use random split in SFL on every 3rd attempt (feature)\n\nOut of an abundance of caution that adversarially-constructed clusters might\nreliably result in bad chunk split decisions with the maximum-gain strategy,\nmake every third consecutive attempt to split the same chunk use a random\nstrategy instead.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-16T18:54:03Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-14T20:30:05Z"
      },
      "sha": "1649c19d171c1fd62e4bfae2490a1c990f0d1cd1"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDI5NWU2ZTYyMzk5MzFhYzA3MTcwYTUxOTA1YTdiOTUxYjdkOTJiYTE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/295e6e6239931ac07170a51905a7b951b7d92ba1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/295e6e6239931ac07170a51905a7b951b7d92ba1",
      "tree": {
        "sha": "28e198eea6f84b7fd5847291657378f857116cb9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/28e198eea6f84b7fd5847291657378f857116cb9"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1649c19d171c1fd62e4bfae2490a1c990f0d1cd1",
          "sha": "1649c19d171c1fd62e4bfae2490a1c990f0d1cd1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1649c19d171c1fd62e4bfae2490a1c990f0d1cd1"
        }
      ],
      "message": "clusterlin: make dependency being active implicit (optimization)\n\nWe do not need to actually keep track of whether a dependency is active\nor not; it is implied by whether or not it appears within the active\nprefix of its parent's child_deps, and its child's parent_deps.\n\nJust remove setting and checking it.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-16T18:54:03Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-14T20:20:16Z"
      },
      "sha": "295e6e6239931ac07170a51905a7b951b7d92ba1"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDY0YWJmMmYyMzJkNzJmOTg0NmNmNTEzZjZmZmQ5YWM1ZmZhMGNiM2M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/64abf2f232d72f9846cf513f6ffd9ac5ffa0cb3c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/64abf2f232d72f9846cf513f6ffd9ac5ffa0cb3c",
      "tree": {
        "sha": "b94af7a0a09b88f588eb9cf3e213b0b7f25ef1ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b94af7a0a09b88f588eb9cf3e213b0b7f25ef1ed"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/295e6e6239931ac07170a51905a7b951b7d92ba1",
          "sha": "295e6e6239931ac07170a51905a7b951b7d92ba1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/295e6e6239931ac07170a51905a7b951b7d92ba1"
        }
      ],
      "message": "clusterlin: only consider 1 direction initially in MakeTopological (optimization)",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-16T18:54:03Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-15T21:59:09Z"
      },
      "sha": "64abf2f232d72f9846cf513f6ffd9ac5ffa0cb3c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDc1Y2RlNTE1NDliYWY4ZDQwNTc0YWM4YTllMTJhNmM3MjI4MDMwZjA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/75cde51549baf8d40574ac8a9e12a6c7228030f0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/75cde51549baf8d40574ac8a9e12a6c7228030f0",
      "tree": {
        "sha": "2d35a6abb3cf5d4fd0ac3b5796302353bd1aba91",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2d35a6abb3cf5d4fd0ac3b5796302353bd1aba91"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/64abf2f232d72f9846cf513f6ffd9ac5ffa0cb3c",
          "sha": "64abf2f232d72f9846cf513f6ffd9ac5ffa0cb3c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/64abf2f232d72f9846cf513f6ffd9ac5ffa0cb3c"
        }
      ],
      "message": "clusterlin: minimize chunks (feature)\n\nAfter the normal optimization process finishes, and finds an optimal\nspanning forest, run a second process (while computation budget remains)\nto split chunks into minimal equal-feerate chunks.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-16T18:54:03Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-14T20:15:19Z"
      },
      "sha": "75cde51549baf8d40574ac8a9e12a6c7228030f0"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGJhNjY0MzYzN2E3MDgyNjI2Njk2OTY3YmQxOGJjMGE4YjY2NTY4MDA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ba6643637a7082626696967bd18bc0a8b6656800",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ba6643637a7082626696967bd18bc0a8b6656800",
      "tree": {
        "sha": "410652ad79428dd92dec1f7e8381626db12962ab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/410652ad79428dd92dec1f7e8381626db12962ab"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/75cde51549baf8d40574ac8a9e12a6c7228030f0",
          "sha": "75cde51549baf8d40574ac8a9e12a6c7228030f0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/75cde51549baf8d40574ac8a9e12a6c7228030f0"
        }
      ],
      "message": "clusterlin: add more accurate cost modeling (feature)\n\nhis adds a rough estimate of algorithm runtime, so it can be interrupted if no\nsolution is found in time. Due to inherent differences between platforms, this\nwill not be extremely accurate, but it is preferable over directly measuring\ntime for consistency.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-16T18:54:03Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-14T19:59:44Z"
      },
      "sha": "ba6643637a7082626696967bd18bc0a8b6656800"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA3YTI5YTY4MjdmM2JmMDJjZmM0Y2FiMzU4MmRhMDEzYjE4MTM3NDI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/07a29a6827f3bf02cfc4cab3582da013b1813742",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/07a29a6827f3bf02cfc4cab3582da013b1813742",
      "tree": {
        "sha": "2d82b78c66d10bbc7f838ad59def70dc2a0294b3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2d82b78c66d10bbc7f838ad59def70dc2a0294b3"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ba6643637a7082626696967bd18bc0a8b6656800",
          "sha": "ba6643637a7082626696967bd18bc0a8b6656800",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ba6643637a7082626696967bd18bc0a8b6656800"
        }
      ],
      "message": "clusterlin: randomize equal-feerate parts of linearization (privacy)\n\nThis places equal-feerate chunks (with no dependencies between them) in random\norder in the linearization output, hiding information about DepGraph insertion\norder from the output. Likewise, it randomizes the order of transactions within\nchunks for the same reason.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-16T18:54:03Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-14T19:34:42Z"
      },
      "sha": "07a29a6827f3bf02cfc4cab3582da013b1813742"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGNmZWZjZmE1YjkzMjIxOGVkYmZmMTUyMTAyNzY1ZDIzYjllYTA5MWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cfefcfa5b932218edbff152102765d23b9ea091b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/cfefcfa5b932218edbff152102765d23b9ea091b",
      "tree": {
        "sha": "ccae51be96ce052df505c5a04cecc74f90dc16fb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ccae51be96ce052df505c5a04cecc74f90dc16fb"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/07a29a6827f3bf02cfc4cab3582da013b1813742",
          "sha": "07a29a6827f3bf02cfc4cab3582da013b1813742",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/07a29a6827f3bf02cfc4cab3582da013b1813742"
        }
      ],
      "message": "txgraph: drop NEEDS_SPLIT_ACCEPTABLE (simplification)\n\nWith the SFL algorithm, we will practically be capable of keeping\nmost if not all clusters optimal. With that, it seems less valuable\nto avoid doing work after splitting an acceptable cluster, because by\ndoing some work we may get it to OPTIMAL.\n\nThis reduces the complexity of the code a bit as well.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-16T18:54:03Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-16T15:23:50Z"
      },
      "sha": "cfefcfa5b932218edbff152102765d23b9ea091b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGE3N2M0M2M3ODY1ZWY2NTcwZjM5NDIzZmRjYmE4Y2ZlYjEwNWU1MjQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a77c43c7865ef6570f39423fdcba8cfeb105e524",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a77c43c7865ef6570f39423fdcba8cfeb105e524",
      "tree": {
        "sha": "08f5083504f6914865d5d6a2abd1491832511fdb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/08f5083504f6914865d5d6a2abd1491832511fdb"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cfefcfa5b932218edbff152102765d23b9ea091b",
          "sha": "cfefcfa5b932218edbff152102765d23b9ea091b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/cfefcfa5b932218edbff152102765d23b9ea091b"
        }
      ],
      "message": "txgraph: use PostLinearize less prior to linearizing\n\nWith the new SFL algorithm, the process of loading an existing linearization into the\nSFL state is very similar to what PostLinearize does. This means there is little benefit\nto performing an explicit PostLinearize step before linearizing inside txgraph. Instead,\nit seems better to use our allotted CPU time to perform more SFL optimization steps.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-16T18:54:03Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-16T15:23:14Z"
      },
      "sha": "a77c43c7865ef6570f39423fdcba8cfeb105e524"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGRmODg0MzA4OGQ3YzA1M2VjZjNlZmIyOTc1YjkxNGQ2YjQ5ZmQ2ZDg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/df8843088d7c053ecf3efb2975b914d6b49fd6d8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/df8843088d7c053ecf3efb2975b914d6b49fd6d8",
      "tree": {
        "sha": "36d57fd01345a54b89942744209bb79208086099",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/36d57fd01345a54b89942744209bb79208086099"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a77c43c7865ef6570f39423fdcba8cfeb105e524",
          "sha": "a77c43c7865ef6570f39423fdcba8cfeb105e524",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a77c43c7865ef6570f39423fdcba8cfeb105e524"
        }
      ],
      "message": "txgraph: always PostLinearize after linearization\n\nWith the new linearization algorithm which includes randomization (in order to\nnot leak information about transaction insertion order through the linearization\noutput), reduce some of that non-determinism by postlinearizing. Note that this\ndoes not reintroduce the leak, because postlinearizing does not care about the\ninput DepGraphIndexes.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-16T18:54:03Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-16T15:58:22Z"
      },
      "sha": "df8843088d7c053ecf3efb2975b914d6b49fd6d8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDE2ZTEwNjg3NWExMGYwMzc3NDI5YjJmNjA3MDg4MjU5MDc1NjM4M2E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/16e106875a10f0377429b2f6070882590756383a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/16e106875a10f0377429b2f6070882590756383a",
      "tree": {
        "sha": "a6b6c51c7eb95120f52aebd08f683ebb02df9b79",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a6b6c51c7eb95120f52aebd08f683ebb02df9b79"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/df8843088d7c053ecf3efb2975b914d6b49fd6d8",
          "sha": "df8843088d7c053ecf3efb2975b914d6b49fd6d8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/df8843088d7c053ecf3efb2975b914d6b49fd6d8"
        }
      ],
      "message": "txgraph: make topological inside Linearize rather than FixLinearization",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-16T18:54:03Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-16T02:52:52Z"
      },
      "sha": "16e106875a10f0377429b2f6070882590756383a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDY0OTg2Yzk5NjJmNjI3ZWFlYzEyZTI2YTIwZGViNDJlOGYyMTI2Y2M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/64986c9962f627eaec12e26a20deb42e8f2126cc",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/64986c9962f627eaec12e26a20deb42e8f2126cc",
      "tree": {
        "sha": "f4d64d27f2e5d366563b280552d955f10976aafc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f4d64d27f2e5d366563b280552d955f10976aafc"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/16e106875a10f0377429b2f6070882590756383a",
          "sha": "16e106875a10f0377429b2f6070882590756383a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/16e106875a10f0377429b2f6070882590756383a"
        }
      ],
      "message": "clusterlin: remove unused {Ancestor,Search}CandidateFinder code (cleanup)\n\nThis removes the candidate set finding classes, as well as related tests\nand benchmarks for them.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-16T18:54:03Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-05-17T03:21:17Z"
      },
      "sha": "64986c9962f627eaec12e26a20deb42e8f2126cc"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGNlYTIyYjZkODEwMzQ0M2RhYzRhMGYyMzIwMDA2NmRjY2YyY2ZhZGQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cea22b6d8103443dac4a0f23200066dccf2cfadd",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/cea22b6d8103443dac4a0f23200066dccf2cfadd",
      "tree": {
        "sha": "40ffc6c0cc923ecec8db2ccd1f6d03721d3d0d07",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/40ffc6c0cc923ecec8db2ccd1f6d03721d3d0d07"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/64986c9962f627eaec12e26a20deb42e8f2126cc",
          "sha": "64986c9962f627eaec12e26a20deb42e8f2126cc",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/64986c9962f627eaec12e26a20deb42e8f2126cc"
        }
      ],
      "message": "clusterlin: remove unused FixLinearization (cleanup)",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-16T18:54:03Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-09-16T17:36:36Z"
      },
      "sha": "cea22b6d8103443dac4a0f23200066dccf2cfadd"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDZhOTlmNjU5ZmFmOWM1MzQ5M2UwNzU2ZDY2NGNkNGQ1ZTNlOGY5YzM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6a99f659faf9c53493e0756d664cd4d5e3e8f9c3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6a99f659faf9c53493e0756d664cd4d5e3e8f9c3",
      "tree": {
        "sha": "2d47556abdd42353df22bfceb45f5e93ed6e1edf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2d47556abdd42353df22bfceb45f5e93ed6e1edf"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cea22b6d8103443dac4a0f23200066dccf2cfadd",
          "sha": "cea22b6d8103443dac4a0f23200066dccf2cfadd",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/cea22b6d8103443dac4a0f23200066dccf2cfadd"
        }
      ],
      "message": "clusterlin: remove unused MergeLinearizations (cleanup)\n\nThis ended up never being used in txgraph.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-16T18:54:03Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-09-16T17:38:24Z"
      },
      "sha": "6a99f659faf9c53493e0756d664cd4d5e3e8f9c3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDUyYjk4M2JmOTBlMGJjNTgwOWExNjY5MjRhYmU3NjJmMGQyYmQ5NzU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/52b983bf90e0bc5809a166924abe762f0d2bd975",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/52b983bf90e0bc5809a166924abe762f0d2bd975",
      "tree": {
        "sha": "bffcb5bb766228b560b557b875296a84dc10a152",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bffcb5bb766228b560b557b875296a84dc10a152"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6a99f659faf9c53493e0756d664cd4d5e3e8f9c3",
          "sha": "6a99f659faf9c53493e0756d664cd4d5e3e8f9c3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6a99f659faf9c53493e0756d664cd4d5e3e8f9c3"
        }
      ],
      "message": "clusterlin: drop support for improvable chunking (simplification)\n\nWith MergeLinearizations() gone and the LIMO-based Linearize() replaced by SFL, we do not\nneed a class (LinearizationChunking) that can maintain an incrementally-improving chunk\nset anymore.\n\nReplace it with a function (ChunkLinearizationInfo) that just computes the chunks as\nSetInfos once, and returns them as a vector. This simplifies several call sites too.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-16T18:54:03Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-10-12T13:48:19Z"
      },
      "sha": "52b983bf90e0bc5809a166924abe762f0d2bd975"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 20326360247,
      "node_id": "HRFPE_lADOABII5863DfgAzwAAAAS7i6S3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20326360247",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "52b983bf90e0bc5809a166924abe762f0d2bd975",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/52b983bf90e0bc5809a166924abe762f0d2bd975",
      "created_at": "2025-10-16T18:54:16Z"
    },
    {
      "event": "commented",
      "id": 3412455674,
      "node_id": "IC_kwDOABII587LZfD6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3412455674",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-16T19:01:42Z",
      "updated_at": "2025-10-16T19:01:42Z",
      "author_association": "MEMBER",
      "body": "Rebased, and made a significant change to the SFL algorithm itself:\r\n* Switched to a different technique for making the initial state topological. The big advantage is that this approach also works when one already has a linearization which is not entirely topological already.\r\n\r\nAlso the following changes to the `cluster_linearize.h` code in general:\r\n* Using SFL gaining the ability to fix existing linearizations, replaced `FixLinearization` with just making this feature part of `Linearize`.\r\n* With the LIMO-based `Linearize`, and `MergeLinearizations` (see below), gone, there is no more need for the `LinearizationChunking` class.\r\n\r\nAnd as a result some changes in `TxGraph` are possible too:\r\n* Removed the need for `FixLinearization` by introducing `QualityLevel` states to represent \"may be non-topological\", which makes the next call to `Linearize()` do the fixing instead.\r\n* Removed `MergeLinearizations`, as it was never used.\r\n* As SFL, upon being fed an existing linearization, runs through an initialization procedure that is pretty much equivalent to `PostLinearize`, drop all calls to `PostLinearize()` *prior* to `Linearize()` calls.\r\n* Because the new algorithm randomizes output linearization order (within equal-chunk-feerate parts), undo some of the non-determinism that introduces by always calling `PostLinearize()` *after* `Linearize()` calls (before it would only do this if non-optimal).\r\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32545#issuecomment-3412455674",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32545"
    },
    {
      "event": "commented",
      "id": 3412487618,
      "node_id": "IC_kwDOABII587LZm3C",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3412487618",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-16T19:10:54Z",
      "updated_at": "2025-10-16T19:10:54Z",
      "author_association": "MEMBER",
      "body": "This PR has grown quite a bit in scope (despite still being a net negative in LoC!), so I don't think it's unreasonable to split it up into an SFL-specific one, and one with follow-up changes to `txgraph`, or even further. I'll wait for reviewer comments.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32545#issuecomment-3412487618",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32545"
    },
    {
      "event": "review_requested",
      "id": 20369331382,
      "node_id": "RRE_lADOABII5863DfgAzwAAAAS-G1S2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20369331382",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-20T00:29:45Z",
      "requested_reviewer": {
        "login": "Copilot",
        "id": 175728472,
        "node_id": "BOT_kgDOCnlnWA",
        "avatar_url": "https://avatars.githubusercontent.com/in/946600?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Copilot",
        "html_url": "https://github.com/apps/copilot-pull-request-reviewer",
        "followers_url": "https://api.github.com/users/Copilot/followers",
        "following_url": "https://api.github.com/users/Copilot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Copilot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Copilot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Copilot/subscriptions",
        "organizations_url": "https://api.github.com/users/Copilot/orgs",
        "repos_url": "https://api.github.com/users/Copilot/repos",
        "events_url": "https://api.github.com/users/Copilot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Copilot/received_events",
        "type": "Bot",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 3354761107,
      "node_id": "PRR_kwDOABII587H9ZeT",
      "url": null,
      "actor": null,
      "commit_id": "52b983bf90e0bc5809a166924abe762f0d2bd975",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-10-20T00:30:41Z",
      "author_association": "NONE",
      "body": "## Pull Request Overview\n\nThis PR replaces the existing cluster linearization algorithm (LIMO with candidate-set search) with a new spanning-forest linearization (SFL) algorithm that offers significantly better performance for complex clusters. The new algorithm uses a fundamentally different approach based on maintaining spanning trees within chunks and performing split/merge operations.\n\n**Key Changes:**\n- Replaces search-based linearization with spanning-forest based approach\n- Simplifies quality level management by introducing `NEEDS_FIX` and `NEEDS_SPLIT_FIX` states\n- Updates the `ExtractTransactions` interface to use two separate visitor callbacks\n\n### Reviewed Changes\n\nCopilot reviewed 6 out of 7 changed files in this pull request and generated 2 comments.\n\n<details>\n<summary>Show a summary per file</summary>\n\n| File | Description |\r\n| ---- | ----------- |\r\n| src/txgraph.cpp | Implements quality level changes, updates transaction extraction to use two-pass visitors, modifies merging/splitting logic to work with new algorithm |\r\n| src/test/util/cluster_linearize.h | Adjusts test utilities for changed type parameters and updated iteration bounds |\r\n| src/test/fuzz/txgraph.cpp | Updates fuzz tests to use new chunking API |\r\n| src/test/fuzz/cluster_linearize.cpp | Removes tests for deprecated algorithm components, adds tests for new chunking functions |\r\n| src/cluster_linearize.h | Replaces entire linearization algorithm implementation with spanning-forest approach, adds `ChunkLinearizationInfo` function |\r\n| src/bench/cluster_linearize.cpp | Updates benchmarks to test new algorithm with historical and random cluster examples |\n</details>\n\n\n\n<details>\n<summary>Comments suppressed due to low confidence (1)</summary>\n\n**src/test/fuzz/cluster_linearize.cpp:1**\n* [nitpick] The variable name `done` changed from `TestBitSet` to `SetType`. While this makes the code more generic, verify that this change aligns with the intended test coverage, as the original code may have been explicitly testing with `TestBitSet` for specific reasons.\n```\n// Copyright (c) The Bitcoin Core developers\n```\n</details>\n\n\n\n---\n\n<sub>**Tip:** Customize your code reviews with copilot-instructions.md. <a href=\"/bitcoin/bitcoin/new/master/.github?filename=copilot-instructions.md\" class=\"Link--inTextBlock\" target=\"_blank\" rel=\"noopener noreferrer\">Create the file</a> or <a href=\"https://docs.github.com/en/copilot/customizing-copilot/adding-repository-custom-instructions-for-github-copilot\" class=\"Link--inTextBlock\" target=\"_blank\" rel=\"noopener noreferrer\">learn how to get started</a>.</sub>",
      "user": {
        "login": "Copilot",
        "id": 175728472,
        "node_id": "BOT_kgDOCnlnWA",
        "avatar_url": "https://avatars.githubusercontent.com/in/946600?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Copilot",
        "html_url": "https://github.com/apps/copilot-pull-request-reviewer",
        "followers_url": "https://api.github.com/users/Copilot/followers",
        "following_url": "https://api.github.com/users/Copilot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Copilot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Copilot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Copilot/subscriptions",
        "organizations_url": "https://api.github.com/users/Copilot/orgs",
        "repos_url": "https://api.github.com/users/Copilot/repos",
        "events_url": "https://api.github.com/users/Copilot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Copilot/received_events",
        "type": "Bot",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32545#pullrequestreview-3354761107",
      "submitted_at": "2025-10-20T00:30:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32545"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2102935031",
      "pull_request_review_id": 2861830018,
      "id": 2102935031,
      "node_id": "PRRC_kwDOABII5859WD33",
      "diff_hunk": "@@ -539,492 +555,651 @@ class LinearizationChunking\n     }\n };\n \n-/** Class encapsulating the state needed to find the best remaining ancestor set.\n+/** Class to represent the internal state of the spanning-forest linearization algorithm.",
      "path": "src/cluster_linearize.h",
      "position": 57,
      "original_position": 28,
      "commit_id": "52b983bf90e0bc5809a166924abe762f0d2bd975",
      "original_commit_id": "23072f2b0e3201b00db19bf8fcca474f81593c2f",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Appreciate the excellent doxygen documentation here.",
      "created_at": "2025-05-22T16:09:08Z",
      "updated_at": "2025-05-22T16:09:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32545#discussion_r2102935031",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2102935031"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32545"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 462,
      "original_line": 462,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2443583986",
      "pull_request_review_id": 3354761107,
      "id": 2443583986,
      "node_id": "PRRC_kwDOABII586RpiHy",
      "diff_hunk": "@@ -423,710 +459,933 @@ std::vector<FeeFrac> ChunkLinearization(const DepGraph<SetType>& depgraph, std::\n     return ret;\n }\n \n-/** Data structure encapsulating the chunking of a linearization, permitting removal of subsets. */\n+/** Class to represent the internal state of the spanning-forest linearization algorithm.\n+ *\n+ * At all times, each dependency is marked as \"active\" or \"inactive\", with the constraint that\n+ * no cycle of active dependencies may exist when ignoring the direction of those dependencies.\n+ * So for example, the diamond (C->X->P, C->Y->P) would be considered a cycle, and those 4\n+ * dependencies cannot all simultaneously be active.\n+ *\n+ * The sets of transactions that are internally connected by active dependencies are called chunks.\n+ * Each chunk of N transactions contains exactly N-1 active dependencies (an additional one would\n+ * necessarily form a cycle), and thus those active dependencies form a spanning tree for the chunk.\n+ * The collection of all spanning trees for the entire cluster form a spanning forest. Each\n+ * transaction may be in its own chunk (and thus 0 dependencies are active), or all transactions\n+ * may form a single chunk (and thus N-1 dependencies are active).\n+ *\n+ * Each chunk has a feerate: the total fee of all transactions in it divided by the total size of\n+ * all transactions in it. We say the spanning forest is topological whenever no inactive\n+ * dependencies exist from one chunk to another chunk with lower or equal feerate. The algorithm\n+ * can be stopped whenever the state is topological. In this case, the output linearization\n+ * consists of each of the chunks, from high to low feerate, each internally ordered in an\n+ * arbitrary but topologically-valid way. If the spanning forest is topological, then the output\n+ * linearization is also topological.\n+ *\n+ * At a high level, the algorithm works by performing a sequence of the following operations:\n+ * - Merging:\n+ *   - Whenever an inactive dependency exists from a chunk to another chunk which has lower or\n+ *     equal feerate, that dependency can be made active, merging the two chunks.\n+ *   - Merging is only possible in non-topological forests, and generally helps making it\n+ *     topological.\n+ * - Splitting:\n+ *   - Whenever an active dependency d exists, making it inactive will result in the chunk it is in\n+ *     splitting in two: a bottom chunk (which d is from) and a top chunk (which d is to). This is\n+ *     the case because no other active dependency between the top and bottom can exist; if it did,\n+ *     it would form a cycle together with d.\n+ *   - An active dependency can be deactivated whenever its would-be top chunk has strictly higher\n+ *     feerate than its would-be bottom chunk.\n+ *   - Splitting generally helps making a forest's output linearization better, but can result in\n+ *     it becoming non-topological, necessitating merging steps.\n+ *\n+ * A forest is said to be optimal when neither of these operations are applicable anymore. It can\n+ * be shown that the output linearization for an optimal spanning forest is optimal, and that at\n+ * least one optimal spanning forest exists for every cluster. Note that no proof exists that an\n+ * optimal state will always be reached.\n+ *\n+ * To make sure the algorithm can be interrupted quickly and get a valid linearization out, merging\n+ * will always be prioritized over splitting:\n+ *\n+ * - Construct an initial topological spanning forest for the graph.\n+ * - Loop until optimal or time runs out:\n+ *   - Perform a splitting step.\n+ *   - Loop until the forest is topological:\n+ *     - Perform a merging step.\n+ * - Output the chunks from high to low feerate, each internally sorted topologically.\n+ *\n+ * Merging is always done by maximal feerate difference. This guarantees that the sequence of a\n+ * single split followed by merges until topological never makes the output linearization worse.\n+ * In addition, this allows refining the algorithm flow into:\n+ *\n+ * - Construct an initial topological spanning forest for the graph:\n+ *   - Start with graph with all dependencies inactive (i.e., each transaction is a singleton\n+ *     chunk).\n+ *   - Make the graph topological by randomly picking chunks, and merging them (with their\n+ *     lowest-feerate dependency, or highest-feerate dependee) when possible, until no such chunks\n+ *     remain.\n+ * - Loop until optimal or time runs out:\n+ *   - Pick a dependency D to deactivate among those whose would-be top chunk has strictly higher\n+ *     feerate than its would-be bottom chunk.\n+ *   - Deactivate D, causing the chunk it is in to split into top T and bottom B.\n+ *   - Merge T with its lowest-feerate dependency, if any. Repeat the same with the merged result.\n+ *   - Merge B with its highest-feerate dependee, if any. Repeat the same with the merged result.\n+ * - Output the chunks from high to low feerate, each internally sorted topologically.\n+ *\n+ * Instead of starting with an empty graph and making it topological directly, it is possible to\n+ * bootstrap from an existing linearization:\n+ * - Start with an empty graph.\n+ * - For each transaction t in the existing linearization:\n+ *   - Add the transaction as a singleton chunk to the graph.\n+ *   - Merge the newly created chunk with its lowest-feerate dependency, if any. Repeat with the\n+ *     merged result.\n+ *\n+ * This guarantees an initial, topological, state whose output linearization is at least as good\n+ * (in the convexified feerate diagram sense) as the input existing linearization bootstrapped from.\n+ *\n+ * What remains to be specified are two heuristics:\n+ *\n+ * - How to decide what dependency to deactivate (when splitting chunks):\n+ *   - Define the gain of an active dependency as\n+ *     (feerate(top) - feerate(chunk)) * size(top) * size(chunk), also equal to:\n+ *     fee(top) * size(chunk) - fee(chunk) * size(top).\n+ *   - After every split, it is possible that the top and the bottom chunk merge with each other\n+ *     again in the merge sequence (through a top->bottom dependency, not through the deactivated\n+ *     one, which was bottom->top). Call this a self-merge. If a self-merge does not occur after\n+ *     a split, the resulting linearization is strictly improved (the area under the fee-size\n+ *     diagram increases by at least gain/2), while self-merges do not change it.\n+ *   - Keep track of how many consecutive self-merges a chunk undergoes: incremented upon\n+ *     self-merge, and reset to 0 in both top and bottom otherwise.\n+ *   - If the number of consecutive self-merges is 2 mod 3 (i.e., it is 2, 5, 8, 11, ...), a\n+ *     uniformly random dependency in the chunk among those with strictly positive gain is\n+ *     deactivated.\n+ *   - Otherwise (self-merges so far is not 2 mod 3), a uniformly random dependency within a chunk\n+ *     among those with maximal gain is deactivated, if any with strictly positive gain exist.\n+ *\n+ * - How to decide what dependency to activate (when merging chunks):\n+ *   - A uniformly random dependency between the two maximum-feerate-difference chunks is activated.\n+ *\n+ * If an optimal state is found by the above procedure, it is still possible that it contains\n+ * chunks that can be split further into equal-feerate chunks. To find these, a second stage is\n+ * added, which acts as if the feerates of transactions are perturbed slightly, to make\n+ * equal-feerate parts of chunks break apart. The idea is:\n+ * - If a transaction t is given slightly higher feerate than it really has, and an equal-feerate\n+ *   topological subset of the chunk exists with t in it, it will be found using the normal\n+ *   algorithm.\n+ * - If a transaction t is given slightly *lower* feerate than it really has, and an equal-feerate\n+ *   topological subset of the chunk exists with t *not* in it, it will be found using the normal\n+ *   algorithm.\n+ * Thus, by picking one transaction in a chunk, and trying both of the approaches above, then if a\n+ * split exists, it must be found, because the subset must either contain t or not contain it.\n+ *\n+ * Specifically, within each chunk:\n+ * - Pick an arbitrary pivot transaction t in the chunk.\n+ * - Loop:\n+ *   - Find a gain=0 dependency d in the chunk where t appears in its top. If not found, stop.\n+ *   - Deactivate d.\n+ *   - Find a dependency e from d's top to d's bottom. If not found, recurse into the created top\n+ *     and bottom chunks.\n+ *   - Activate e.\n+ * - Loop:\n+ *   - Find a gain=0 dependency d in the chunk where t appears in its bottom. If not found, stop.\n+ *   - Deactivate d.\n+ *   - Find a dependency e from d's top to d's bottom. If not found, recurse into the created top\n+ *     and bottom chunks.\n+ *   - Activate e.\n+ */\n template<typename SetType>\n-class LinearizationChunking\n+class SpanningForestState\n {\n-    /** The depgraph this linearization is for. */\n-    const DepGraph<SetType>& m_depgraph;\n-\n-    /** The linearization we started from, possibly with removed prefix stripped. */\n-    std::span<const DepGraphIndex> m_linearization;\n-\n-    /** Chunk sets and their feerates, of what remains of the linearization. */\n-    std::vector<SetInfo<SetType>> m_chunks;\n+private:\n+    /** Internal RNG. */\n+    InsecureRandomContext m_rng;\n \n-    /** How large a prefix of m_chunks corresponds to removed transactions. */\n-    DepGraphIndex m_chunks_skip{0};\n+    /** Data type to represent indexing into m_tx_data. */\n+    using TxIdx = uint32_t;\n+    /** Data type to represent indexing into m_dep_data. */\n+    using DepIdx = std::conditional_t<(SetType::Size() <= 32), uint8_t, std::conditional_t<(SetType::Size() <= 512), uint16_t, uint32_t>>;\n+\n+    /** Structure with information about a single transaction. For transactions that are the\n+     *  representative for the chunk they are in, this also stores chunk information. */\n+    struct TxData {\n+        /** The dependencies to children of this transaction. All active ones (see\n+         *  child_deps_active) appear first. */\n+        std::array<DepIdx, SetType::Size() - 1> child_deps;\n+        /** The number of children of this transaction. Immutable after construction. */\n+        TxIdx child_deps_total{0};\n+        /** The number of active children of this transaction. */\n+        TxIdx child_deps_active{0};\n+        /** The set of parent transactions of this transaction. Immutable after construction. */\n+        SetType parents;\n+        /** The set of child transactions of this transaction. Immutable after construction. */\n+        SetType children;\n+        /** The set of parent transactions of this transaction reachable through active\n+         *  dependencies. */\n+        SetType active_parents;\n+        /** Which transaction holds the chunk_setinfo for the chunk this transaction is in\n+         *  (the representative for the chunk). */\n+        TxIdx chunk_rep;\n+        /** (Only if this transaction is the representative for the chunk it is in) the total\n+         *  chunk set and feerate. */\n+        SetInfo<SetType> chunk_setinfo;\n+        /** In what ways this transaction exists in suboptimality lists:\n+         *  - 0: not in m_suboptimal_chunks\n+         *  - >0: in m_suboptimal_chunks, and:\n+         *    - (during optimization) 1: needs processing\n+         *    - (during MakeTopological) 1: needs to be merged upwards\n+         *    - (during MakeTopological) 2: needs to be merged downwards\n+         *    - (during MakeTopological) 3: needs to be merged upwards and downwards */\n+        unsigned suboptimal{0};\n+        /** Number of consecutive self-merges this chunk has experienced. */\n+        uint32_t self_merges;\n+    };\n \n-    /** Which transactions remain in the linearization. */\n-    SetType m_todo;\n+    /** Structure with information about a single dependency. */\n+    struct DepData {\n+        /** What the parent and child transactions are. Immutable after construction. */\n+        TxIdx parent, child;\n+        /** Index into the parent's TxData::child_deps where this dependency appears. */\n+        DepIdx child_pos;\n+        /** (Only if this dependency is active) the would-be top chunk and its feerate that would\n+         *  be formed if this dependency were to be deactivated. */\n+        SetInfo<SetType> top_setinfo;\n+    };\n \n-    /** Fill the m_chunks variable, and remove the done prefix of m_linearization. */\n-    void BuildChunks() noexcept\n+    /** The set of all transactions in the cluster. */\n+    SetType m_transactions;\n+    /** A FIFO of chunk representatives of chunks that may be improved still. */\n+    VecDeque<TxIdx> m_suboptimal_chunks;\n+    /** A FIFO of chunk representatives, a pivot tx in it, and the stage it is in (false = first\n+     *  stage, move pivot up, true = second stage, move pivot down). */\n+    VecDeque<std::tuple<TxIdx, TxIdx, bool>> m_nonminimal_chunks;\n+    /** Information about each transaction (and chunks). Indexed by TxIdx. */\n+    std::vector<TxData> m_tx_data;\n+    /** Information about each dependency. Indexed by DepIdx. */\n+    std::vector<DepData> m_dep_data;\n+\n+    /** A metric for predicting the runtime of the algorithm. Corresponds to ~2ns on Ryzen 7995WX. */\n+    uint64_t m_cost{0};\n+\n+    /** Walk a chunk, starting from transaction start. visit_tx(idx) is called for each encountered\n+     *  transaction. visit_dep_down(dep) is called for each encountered dependency that is traversed\n+     *  in the parent-to-child (downward) direction. */\n+    void Walk(TxIdx start, std::invocable<TxData&> auto visit_tx, std::invocable<DepData&> auto visit_dep_down) noexcept\n     {\n-        // Caller must clear m_chunks.\n-        Assume(m_chunks.empty());\n-\n-        // Chop off the initial part of m_linearization that is already done.\n-        while (!m_linearization.empty() && !m_todo[m_linearization.front()]) {\n-            m_linearization = m_linearization.subspan(1);\n-        }\n-\n-        // Iterate over the remaining entries in m_linearization. This is effectively the same\n-        // algorithm as ChunkLinearization, but supports skipping parts of the linearization and\n-        // keeps track of the sets themselves instead of just their feerates.\n-        for (auto idx : m_linearization) {\n-            if (!m_todo[idx]) continue;\n-            // Start with an initial chunk containing just element idx.\n-            SetInfo add(m_depgraph, idx);\n-            // Absorb existing final chunks into add while they have lower feerate.\n-            while (!m_chunks.empty() && add.feerate >> m_chunks.back().feerate) {\n-                add |= m_chunks.back();\n-                m_chunks.pop_back();\n+        /** The set of transactions we still have to process. */\n+        SetType todo = SetType::Singleton(start);\n+        /** The set of transactions we have already processed. */\n+        SetType done;\n+        do {\n+            for (auto tx_idx : todo) {\n+                // Mark the transaction as processed, and invoke the visitor for it.\n+                auto& tx_data = m_tx_data[tx_idx];\n+                done.Set(tx_idx);\n+                visit_tx(tx_data);\n+                // Mark all active parents as to be processed.\n+                todo |= tx_data.active_parents;\n+                todo -= done;\n+                // Iterate over all its active child dependencies.\n+                auto child_deps = std::span{tx_data.child_deps}.first(tx_data.child_deps_active);\n+                for (auto dep_idx : child_deps) {\n+                    auto& dep_entry = m_dep_data[dep_idx];\n+                    Assume(dep_entry.parent == tx_idx);\n+                    // If this is the first time reaching the child, mark it as todo, and invoke\n+                    // the downward dependency visitor for it. We do not need to check if it isn't\n+                    // already in todo here, because there cannot be multiple dependencies that\n+                    // reach the same transaction; the !done check is purely to prevent travelling\n+                    // an already-travelled dependency back in reverse direction.\n+                    if (!done[dep_entry.child]) {\n+                        Assume(!todo[dep_entry.child]);\n+                        todo.Set(dep_entry.child);\n+                        visit_dep_down(dep_entry);\n+                    }\n+                }\n             }\n-            // Remember new chunk.\n-            m_chunks.push_back(std::move(add));\n-        }\n+        } while (todo.Any());\n     }\n \n-public:\n-    /** Initialize a LinearizationSubset object for a given length of linearization. */\n-    explicit LinearizationChunking(const DepGraph<SetType>& depgraph LIFETIMEBOUND, std::span<const DepGraphIndex> lin LIFETIMEBOUND) noexcept :\n-        m_depgraph(depgraph), m_linearization(lin)\n+    /** Swap two dependencies in a given transaction's implied list of child deps. */\n+    void SwapChildDeps(TxData& tx_data, DepIdx pos1, DepIdx pos2) noexcept\n     {\n-        // Mark everything in lin as todo still.\n-        for (auto i : m_linearization) m_todo.Set(i);\n-        // Compute the initial chunking.\n-        m_chunks.reserve(depgraph.TxCount());\n-        BuildChunks();\n+        if (pos1 == pos2) return;\n+        std::swap(tx_data.child_deps[pos1], tx_data.child_deps[pos2]);\n+        m_dep_data[tx_data.child_deps[pos1]].child_pos = pos1;\n+        m_dep_data[tx_data.child_deps[pos2]].child_pos = pos2;\n     }\n \n-    /** Determine how many chunks remain in the linearization. */\n-    DepGraphIndex NumChunksLeft() const noexcept { return m_chunks.size() - m_chunks_skip; }\n+    /** Make a specified inactive dependency active. Returns the merged chunk representative. */\n+    TxIdx Activate(DepIdx dep_idx) noexcept\n+    {\n+        auto& dep_data = m_dep_data[dep_idx];\n+        auto& child_tx_data = m_tx_data[dep_data.child];\n+        auto& parent_tx_data = m_tx_data[dep_data.parent];\n+        // Make dep_idx the first inactive dependency in the parent's list of child deps.\n+        SwapChildDeps(parent_tx_data, dep_data.child_pos, parent_tx_data.child_deps_active);\n+        // Gather information about the parent and child chunks.\n+        Assume(parent_tx_data.chunk_rep != child_tx_data.chunk_rep);\n+        auto& par_chunk_data = m_tx_data[parent_tx_data.chunk_rep];\n+        auto& chl_chunk_data = m_tx_data[child_tx_data.chunk_rep];\n+        TxIdx top_rep = parent_tx_data.chunk_rep;\n+        auto top_part = par_chunk_data.chunk_setinfo;\n+        auto bottom_part = chl_chunk_data.chunk_setinfo;\n+        // Update the parent chunk to also contain the child.\n+        par_chunk_data.chunk_setinfo |= bottom_part;\n+        int ntx = par_chunk_data.chunk_setinfo.transactions.Count();\n+        m_cost += ntx * 4 - 3;\n+        // Add bottom component to top transactions.\n+        Walk(dep_data.parent,\n+             [](TxData&) noexcept {},\n+             [&](DepData& depdata) noexcept { depdata.top_setinfo |= bottom_part; });\n+        // Add top component to bottom transactions.\n+        Walk(dep_data.child,\n+             [&](TxData& txdata) noexcept { txdata.chunk_rep = top_rep; },\n+             [&](DepData& depdata) noexcept { depdata.top_setinfo |= top_part; });\n+        // Make active.\n+        dep_data.top_setinfo = top_part;\n+        child_tx_data.active_parents.Set(dep_data.parent);\n+        parent_tx_data.child_deps_active += 1;\n+        Assume(parent_tx_data.child_deps_active <= parent_tx_data.child_deps_total);\n+        return top_rep;\n+    }\n \n-    /** Access a chunk. Chunk 0 is the highest-feerate prefix of what remains. */\n-    const SetInfo<SetType>& GetChunk(DepGraphIndex n) const noexcept\n+    /** Make a specified active dependency inactive. */\n+    void Deactivate(DepIdx dep_idx) noexcept\n     {\n-        Assume(n + m_chunks_skip < m_chunks.size());\n-        return m_chunks[n + m_chunks_skip];\n+        auto& dep_data = m_dep_data[dep_idx];\n+        auto& child_tx_data = m_tx_data[dep_data.child];\n+        auto& parent_tx_data = m_tx_data[dep_data.parent];\n+        // Make dep_idx the last active dependency in the parent's list of child deps.\n+        SwapChildDeps(parent_tx_data, dep_data.child_pos, parent_tx_data.child_deps_active - 1);\n+        // Make inactive.\n+        child_tx_data.active_parents.Reset(dep_data.parent);\n+        parent_tx_data.child_deps_active -= 1;\n+        // Update representatives.\n+        auto& chunk_data = m_tx_data[parent_tx_data.chunk_rep];\n+        int ntx = chunk_data.chunk_setinfo.transactions.Count();\n+        m_cost += ntx * 4 + 2;\n+        auto top_part = dep_data.top_setinfo;\n+        auto bottom_part = chunk_data.chunk_setinfo - top_part;\n+        chunk_data.chunk_setinfo = top_part;\n+        TxIdx bottom_rep = dep_data.child;\n+        auto& bottom_chunk_data = m_tx_data[bottom_rep];\n+        bottom_chunk_data.chunk_setinfo = bottom_part;\n+        TxIdx top_rep = dep_data.parent;\n+        auto& top_chunk_data = m_tx_data[top_rep];\n+        top_chunk_data.chunk_setinfo = top_part;\n+        // Remove bottom component from top transactions, and make top_rep the representative for\n+        // all of them.\n+        Walk(dep_data.parent,\n+             [&](TxData& txdata) noexcept { txdata.chunk_rep = top_rep; },\n+             [&](DepData& depdata) noexcept { depdata.top_setinfo -= bottom_part; });\n+        // Remove top component from bottom transactions, and make bottom_rep the representative\n+        // for all of them.\n+        Walk(dep_data.child,\n+             [&](TxData& txdata) noexcept { txdata.chunk_rep = bottom_rep; },\n+             [&](DepData& depdata) noexcept { depdata.top_setinfo -= top_part; });\n     }\n \n-    /** Remove some subset of transactions from the linearization. */\n-    void MarkDone(SetType subset) noexcept\n+    /** Activate a dependency from the chunk represented by bottom_rep to the chunk represented by\n+     *  top_rep. Return the representative of the merged chunk, or TxIdx(-1) if no merge took\n+     *  place. */\n+    TxIdx MergeChunks(TxIdx top_rep, TxIdx bottom_rep) noexcept\n     {\n-        Assume(subset.Any());\n-        Assume(subset.IsSubsetOf(m_todo));\n-        m_todo -= subset;\n-        if (GetChunk(0).transactions == subset) {\n-            // If the newly done transactions exactly match the first chunk of the remainder of\n-            // the linearization, we do not need to rechunk; just remember to skip one\n-            // additional chunk.\n-            ++m_chunks_skip;\n-            // With subset marked done, some prefix of m_linearization will be done now. How long\n-            // that prefix is depends on how many done elements were interspersed with subset,\n-            // but at least as many transactions as there are in subset.\n-            m_linearization = m_linearization.subspan(subset.Count());\n-        } else {\n-            // Otherwise rechunk what remains of m_linearization.\n-            m_chunks.clear();\n-            m_chunks_skip = 0;\n-            BuildChunks();\n+        auto& top_chunk = m_tx_data[top_rep];\n+        Assume(top_chunk.chunk_rep == top_rep);\n+        auto& bottom_chunk = m_tx_data[bottom_rep];\n+        Assume(bottom_chunk.chunk_rep == bottom_rep);\n+        // Count the number of dependencies between bottom_chunk and top_chunk.\n+        TxIdx num_deps{0};\n+        for (auto tx : top_chunk.chunk_setinfo.transactions) {\n+            auto& tx_data = m_tx_data[tx];\n+            num_deps += (tx_data.children & bottom_chunk.chunk_setinfo.transactions).Count();\n+            m_cost += 1;\n         }\n+        if (num_deps == 0) return TxIdx(-1);\n+        // Uniformly randomly pick one of them and activate it.\n+        TxIdx pick = m_rng.randrange(num_deps);\n+        for (auto tx : top_chunk.chunk_setinfo.transactions) {\n+            auto& tx_data = m_tx_data[tx];\n+            auto intersect = tx_data.children & bottom_chunk.chunk_setinfo.transactions;\n+            auto count = intersect.Count();\n+            m_cost += 1;\n+            if (pick < count) {\n+                for (auto dep : std::span{tx_data.child_deps}.first(tx_data.child_deps_total)\n+                                                             .subspan(tx_data.child_deps_active)) {\n+                    m_cost += 1;\n+                    auto& dep_data = m_dep_data[dep];\n+                    if (bottom_chunk.chunk_setinfo.transactions[dep_data.child]) {\n+                        if (pick == 0) return Activate(dep);\n+                        --pick;\n+                    }\n+                }\n+                break;\n+            }\n+            pick -= count;\n+        }\n+        Assume(false);\n+        return TxIdx(-1);\n     }\n \n-    /** Find the shortest intersection between subset and the prefixes of remaining chunks\n-     *  of the linearization that has a feerate not below subset's.\n-     *\n-     * This is a crucial operation in guaranteeing improvements to linearizations. If subset has\n-     * a feerate not below GetChunk(0)'s, then moving IntersectPrefixes(subset) to the front of\n-     * (what remains of) the linearization is guaranteed not to make it worse at any point.\n-     *\n-     * See https://delvingbitcoin.org/t/introduction-to-cluster-linearization/1032 for background.\n-     */\n-    SetInfo<SetType> IntersectPrefixes(const SetInfo<SetType>& subset) const noexcept\n+    /** Perform an upward or downward merge step, on the specified chunk representative. Returns\n+     *  the representative of the merged chunk, or TxIdx(-1) if no merge took place. */\n+    template<bool DownWard>\n+    TxIdx MergeStep(TxIdx chunk_rep) noexcept\n     {\n-        Assume(subset.transactions.IsSubsetOf(m_todo));\n-        SetInfo<SetType> accumulator;\n-        // Iterate over all chunks of the remaining linearization.\n-        for (DepGraphIndex i = 0; i < NumChunksLeft(); ++i) {\n-            // Find what (if any) intersection the chunk has with subset.\n-            const SetType to_add = GetChunk(i).transactions & subset.transactions;\n-            if (to_add.Any()) {\n-                // If adding that to accumulator makes us hit all of subset, we are done as no\n-                // shorter intersection with higher/equal feerate exists.\n-                accumulator.transactions |= to_add;\n-                if (accumulator.transactions == subset.transactions) break;\n-                // Otherwise update the accumulator feerate.\n-                accumulator.feerate += m_depgraph.FeeRate(to_add);\n-                // If that does result in something better, or something with the same feerate but\n-                // smaller, return that. Even if a longer, higher-feerate intersection exists, it\n-                // does not hurt to return the shorter one (the remainder of the longer intersection\n-                // will generally be found in the next call to Intersect, but even if not, it is not\n-                // required for the improvement guarantee this function makes).\n-                if (!(accumulator.feerate << subset.feerate)) return accumulator;\n+        /** Information about the chunk that tx_idx is currently in. */\n+        auto& chunk_data = m_tx_data[chunk_rep];\n+        SetType chunk_txn = chunk_data.chunk_setinfo.transactions;\n+        // Iterate over all transactions in the chunk, figuring out which other chunk each\n+        // depends on, but only testing each other chunk once. For those depended-on chunks,\n+        // remember the highest-feerate (if DownWard) or lowest-feerate (if !DownWard) one.\n+        // If multiple equal-feerate candidate chunks to merge with exist, pick a uniformly\n+        // random one among them (using random tiebreaker).\n+        SetType explored = chunk_txn;\n+        FeeFrac best_other_chunk_feerate;\n+        TxIdx best_other_chunk_rep = TxIdx(-1);\n+        uint64_t best_other_chunk_tiebreak{0};\n+        for (auto tx : chunk_txn) {\n+            auto& tx_data = m_tx_data[tx];\n+            auto unreached = (DownWard ? tx_data.children : tx_data.parents) - explored;\n+            while (unreached.Any()) {\n+                m_cost += 3;\n+                auto chunk_rep = m_tx_data[unreached.First()].chunk_rep;\n+                auto& reached = m_tx_data[m_tx_data[unreached.First()].chunk_rep].chunk_setinfo;\n+                explored |= reached.transactions;\n+                unreached -= explored;\n+                auto cmp = DownWard ? FeeRateCompare(best_other_chunk_feerate, reached.feerate)\n+                                    : FeeRateCompare(reached.feerate, best_other_chunk_feerate);\n+                if (cmp > 0) continue;\n+                uint64_t tiebreak = m_rng.rand64();\n+                if ((cmp < 0) || (tiebreak >= best_other_chunk_tiebreak)) {\n+                    best_other_chunk_feerate = reached.feerate;\n+                    best_other_chunk_tiebreak = tiebreak;\n+                    best_other_chunk_rep = chunk_rep;\n+                }\n             }\n         }\n-        return subset;\n+        // Stop if all of the depended-on chunks have a lower/higher feerate than the chunk\n+        // that tx_idx is in.\n+        if (best_other_chunk_feerate.IsEmpty()) return TxIdx(-1);\n+        if (DownWard && best_other_chunk_feerate << chunk_data.chunk_setinfo.feerate) return TxIdx(-1);\n+        if (!DownWard && best_other_chunk_feerate >> chunk_data.chunk_setinfo.feerate) return TxIdx(-1);\n+        Assume(best_other_chunk_rep != TxIdx(-1));\n+        if constexpr (DownWard) {\n+            chunk_rep = MergeChunks(chunk_rep, best_other_chunk_rep);\n+        } else {\n+            chunk_rep = MergeChunks(best_other_chunk_rep, chunk_rep);\n+        }\n+        Assume(chunk_rep != TxIdx(-1));\n+        return chunk_rep;\n     }\n-};\n \n-/** Class encapsulating the state needed to find the best remaining ancestor set.\n- *\n- * It is initialized for an entire DepGraph, and parts of the graph can be dropped by calling\n- * MarkDone.\n- *\n- * As long as any part of the graph remains, FindCandidateSet() can be called which will return a\n- * SetInfo with the highest-feerate ancestor set that remains (an ancestor set is a single\n- * transaction together with all its remaining ancestors).\n- */\n-template<typename SetType>\n-class AncestorCandidateFinder\n-{\n-    /** Internal dependency graph. */\n-    const DepGraph<SetType>& m_depgraph;\n-    /** Which transaction are left to include. */\n-    SetType m_todo;\n-    /** Precomputed ancestor-set feerates (only kept up-to-date for indices in m_todo). */\n-    std::vector<FeeFrac> m_ancestor_set_feerates;\n \n-public:\n-    /** Construct an AncestorCandidateFinder for a given cluster.\n-     *\n-     * Complexity: O(N^2) where N=depgraph.TxCount().\n-     */\n-    AncestorCandidateFinder(const DepGraph<SetType>& depgraph LIFETIMEBOUND) noexcept :\n-        m_depgraph(depgraph),\n-        m_todo{depgraph.Positions()},\n-        m_ancestor_set_feerates(depgraph.PositionRange())\n+    /** Perform an upward or downward merge sequence on the specified transaction. Returns the\n+     *  representative of the merged chunk. */\n+    template<bool DownWard>\n+    TxIdx MergeSequence(TxIdx tx_idx) noexcept\n     {\n-        // Precompute ancestor-set feerates.\n-        for (DepGraphIndex i : m_depgraph.Positions()) {\n-            /** The remaining ancestors for transaction i. */\n-            SetType anc_to_add = m_depgraph.Ancestors(i);\n-            FeeFrac anc_feerate;\n-            // Reuse accumulated feerate from first ancestor, if usable.\n-            Assume(anc_to_add.Any());\n-            DepGraphIndex first = anc_to_add.First();\n-            if (first < i) {\n-                anc_feerate = m_ancestor_set_feerates[first];\n-                Assume(!anc_feerate.IsEmpty());\n-                anc_to_add -= m_depgraph.Ancestors(first);\n-            }\n-            // Add in other ancestors (which necessarily include i itself).\n-            Assume(anc_to_add[i]);\n-            anc_feerate += m_depgraph.FeeRate(anc_to_add);\n-            // Store the result.\n-            m_ancestor_set_feerates[i] = anc_feerate;\n+        auto chunk_rep = m_tx_data[tx_idx].chunk_rep;\n+        while (true) {\n+            auto merged_rep = MergeStep<DownWard>(chunk_rep);\n+            if (merged_rep == TxIdx(-1)) break;\n+            chunk_rep = merged_rep;\n         }\n+        // Add the chunk to the queue of improvable chunks, if it wasn't already there.\n+        auto& chunk_data = m_tx_data[chunk_rep];\n+        if (!chunk_data.suboptimal) {\n+            chunk_data.suboptimal = 1;\n+            m_suboptimal_chunks.push_back(chunk_rep);\n+        }\n+        return chunk_rep;\n     }\n \n-    /** Remove a set of transactions from the set of to-be-linearized ones.\n-     *\n-     * The same transaction may not be MarkDone()'d twice.\n-     *\n-     * Complexity: O(N*M) where N=depgraph.TxCount(), M=select.Count().\n-     */\n-    void MarkDone(SetType select) noexcept\n+    /** Split a chunk, and then merge the resulting two chunks to make the graph topological\n+     *  again. */\n+    void Improve(DepIdx dep_idx) noexcept\n     {\n-        Assume(select.Any());\n-        Assume(select.IsSubsetOf(m_todo));\n-        m_todo -= select;\n-        for (auto i : select) {\n-            auto feerate = m_depgraph.FeeRate(i);\n-            for (auto j : m_depgraph.Descendants(i) & m_todo) {\n-                m_ancestor_set_feerates[j] -= feerate;\n-            }\n+        auto& dep_data = m_dep_data[dep_idx];\n+        // Remember the number of self-merges this chunk underwent so far.\n+        auto self_merges = m_tx_data[m_tx_data[dep_data.parent].chunk_rep].self_merges;\n+        // Deactivate the specified dependency, splitting it into two new chunks: a top containing\n+        // the parent, and a bottom containing the child. The top should have a higher feerate.\n+        Deactivate(dep_idx);\n+        // Merge the top chunk with lower-feerate chunks it depends on (which may be the bottom it\n+        // was just split from, or other pre-existing chunks).\n+        auto new_par_chunk_rep = MergeSequence<false>(dep_data.parent);\n+        // Merge the bottom chunk with higher-feerate chunks that depend on it.\n+        auto new_chl_chunk_rep = MergeSequence<true>(dep_data.child);\n+        // If the parent and child end up in the same chunk, a self-merge happened.\n+        if (new_par_chunk_rep == new_chl_chunk_rep) {\n+            // If so, increment the self_merges counter for this chunk.\n+            m_tx_data[new_par_chunk_rep].self_merges = self_merges + 1;\n+        } else {\n+            // Otherwise, set the counters for both chunks (incl. whatever they merged with) to\n+            // zero.\n+            m_tx_data[new_par_chunk_rep].self_merges = 0;\n+            m_tx_data[new_chl_chunk_rep].self_merges = 0;\n         }\n     }\n \n-    /** Check whether any unlinearized transactions remain. */\n-    bool AllDone() const noexcept\n+public:\n+    /** Construct a spanning forest for the given DepGraph, with every transaction in its own chunk\n+     *  (not topological). */\n+    explicit SpanningForestState(const DepGraph<SetType>& depgraph, uint64_t rng_seed) noexcept : m_rng(rng_seed)\n     {\n-        return m_todo.None();\n+        m_transactions = depgraph.Positions();\n+        m_cost = 10;\n+        auto num_transactions = m_transactions.Count();\n+        m_tx_data.resize(depgraph.PositionRange());\n+        m_dep_data.reserve(((num_transactions + 1) / 2) * (num_transactions / 2));\n+        for (auto tx : m_transactions) {\n+            // Fill in transaction data.\n+            auto& tx_data = m_tx_data[tx];\n+            tx_data.chunk_rep = tx;\n+            tx_data.chunk_setinfo.transactions = SetType::Singleton(tx);\n+            tx_data.chunk_setinfo.feerate = depgraph.FeeRate(tx);\n+            tx_data.self_merges = 0;\n+            // Add its dependencies.\n+            SetType parents = depgraph.GetReducedParents(tx);\n+            for (auto par : parents) {\n+                auto& par_tx_data = m_tx_data[par];\n+                auto dep_idx = m_dep_data.size();\n+                // Construct new dependency.\n+                auto& dep = m_dep_data.emplace_back();\n+                dep.parent = par;\n+                dep.child = tx;\n+                // Add it as parent of the child.\n+                tx_data.parents.Set(par);\n+                // Add it as child of the parent.\n+                dep.child_pos = par_tx_data.child_deps_total;\n+                par_tx_data.child_deps[par_tx_data.child_deps_total++] = dep_idx;\n+                par_tx_data.children.Set(tx);\n+                m_cost += 2;\n+            }\n+        }\n+        // Account for the cost of producing linearization.\n+        m_cost += 2 * m_dep_data.size() + 30 * num_transactions;\n     }\n \n-    /** Count the number of remaining unlinearized transactions. */\n-    DepGraphIndex NumRemaining() const noexcept\n+    /** Load an existing linearization. Must be called immediately after constructor. The result is\n+     *  topological if the linearization is valid. Otherwise, MakeTopological still needs to be\n+     *  called. */\n+    void LoadLinearization(std::span<const DepGraphIndex> old_linearization) noexcept\n     {\n-        return m_todo.Count();\n+        // Add transactions one by one, in order of existing linearization.\n+        for (DepGraphIndex tx : old_linearization) {\n+            auto chunk_rep = m_tx_data[tx].chunk_rep;\n+            while (true) {\n+                chunk_rep = MergeStep<false>(chunk_rep);\n+                if (chunk_rep == TxIdx(-1)) break;\n+            }\n+        }\n     }\n \n-    /** Find the best (highest-feerate, smallest among those in case of a tie) ancestor set\n-     *  among the remaining transactions. Requires !AllDone().\n-     *\n-     * Complexity: O(N) where N=depgraph.TxCount();\n-     */\n-    SetInfo<SetType> FindCandidateSet() const noexcept\n+    /** Make state topological. Can be called after constructing, or after LoadLinearization. */\n+    void MakeTopological() noexcept\n     {\n-        Assume(!AllDone());\n-        std::optional<DepGraphIndex> best;\n-        for (auto i : m_todo) {\n-            if (best.has_value()) {\n-                Assume(!m_ancestor_set_feerates[i].IsEmpty());\n-                if (!(m_ancestor_set_feerates[i] > m_ancestor_set_feerates[*best])) continue;\n+        /** What direction to initially mark all chunks for merging in. It suffices to pick one of\n+         *  the two directions. Note that when a chunk is merged, it is always marked as needing\n+         *  both directions; only the initial set get just one of the two. */\n+        bool init_dir = m_rng.randbool();\n+        for (auto tx : m_transactions) {\n+            auto& tx_data = m_tx_data[tx];\n+            if (tx_data.chunk_rep == tx) {\n+                m_suboptimal_chunks.emplace_back(tx);\n+                tx_data.suboptimal = 1 + init_dir;\n+                // Randomize the initial order of suboptimal chunks in the queue.\n+                TxIdx j = m_rng.randrange<TxIdx>(m_suboptimal_chunks.size());\n+                if (j != m_suboptimal_chunks.size() - 1) {\n+                    std::swap(m_suboptimal_chunks.back(), m_suboptimal_chunks[j]);\n+                }\n+                m_cost += 3;\n+            }\n+        }\n+        while (true) {\n+            // If the queue of potentially-suboptimal chunks is empty, we are done.\n+            if (m_suboptimal_chunks.empty()) break;\n+            // Pop an entry from the potentially-suboptimal chunk queue.\n+            TxIdx chunk = m_suboptimal_chunks.front();\n+            m_suboptimal_chunks.pop_front();\n+            auto& chunk_data = m_tx_data[chunk];\n+            Assume(chunk_data.suboptimal);\n+            auto old_suboptimal = chunk_data.suboptimal;\n+            chunk_data.suboptimal = 0;\n+            // If what was popped is not currently a chunk representative, continue. This may\n+            // happen when it was merged with something else since being added.\n+            if (chunk_data.chunk_rep != chunk) continue;\n+            int flip = m_rng.randbool();\n+            m_cost += 1;\n+            for (int i = 0; i < 2; ++i) {\n+                if (i ^ flip) {\n+                    if (!(old_suboptimal & 1)) continue;\n+                    // Attempt to merge the chunk upwards.\n+                    auto result_up = MergeStep<false>(chunk);\n+                    if (result_up != TxIdx(-1)) {\n+                        if (!m_tx_data[result_up].suboptimal) {\n+                            m_suboptimal_chunks.push_back(result_up);\n+                        }\n+                        m_tx_data[result_up].suboptimal = 3;\n+                        break;\n+                    }\n+                } else {\n+                    if (!(old_suboptimal & 2)) continue;\n+                    // Attempt to merge the chunk downwards.\n+                    auto result_down = MergeStep<true>(chunk);\n+                    if (result_down != TxIdx(-1)) {\n+                        if (!m_tx_data[result_down].suboptimal) {\n+                            m_suboptimal_chunks.push_back(result_down);\n+                        }\n+                        m_tx_data[result_down].suboptimal = 3;\n+                        break;\n+                    }\n+                }\n             }\n-            best = i;\n         }\n-        Assume(best.has_value());\n-        return {m_depgraph.Ancestors(*best) & m_todo, m_ancestor_set_feerates[*best]};\n     }\n-};\n \n-/** Class encapsulating the state needed to perform search for good candidate sets.\n- *\n- * It is initialized for an entire DepGraph, and parts of the graph can be dropped by calling\n- * MarkDone().\n- *\n- * As long as any part of the graph remains, FindCandidateSet() can be called to perform a search\n- * over the set of topologically-valid subsets of that remainder, with a limit on how many\n- * combinations are tried.\n- */\n-template<typename SetType>\n-class SearchCandidateFinder\n-{\n-    /** Internal RNG. */\n-    InsecureRandomContext m_rng;\n-    /** m_sorted_to_original[i] is the original position that sorted transaction position i had. */\n-    std::vector<DepGraphIndex> m_sorted_to_original;\n-    /** m_original_to_sorted[i] is the sorted position original transaction position i has. */\n-    std::vector<DepGraphIndex> m_original_to_sorted;\n-    /** Internal dependency graph for the cluster (with transactions in decreasing individual\n-     *  feerate order). */\n-    DepGraph<SetType> m_sorted_depgraph;\n-    /** Which transactions are left to do (indices in m_sorted_depgraph's order). */\n-    SetType m_todo;\n-\n-    /** Given a set of transactions with sorted indices, get their original indices. */\n-    SetType SortedToOriginal(const SetType& arg) const noexcept\n+    /** Initialize the data structure for optimization. It must be topological already. */\n+    void StartOptimizing() noexcept\n     {\n-        SetType ret;\n-        for (auto pos : arg) ret.Set(m_sorted_to_original[pos]);\n-        return ret;\n+        // Mark chunks suboptimal.\n+        for (auto tx : m_transactions) {\n+            auto& tx_data = m_tx_data[tx];\n+            Assume(!tx_data.suboptimal);\n+            if (tx_data.chunk_rep == tx) {\n+                tx_data.suboptimal = true;\n+                m_suboptimal_chunks.push_back(tx);\n+                // Randomize the initial order of suboptimal chunks in the queue.\n+                TxIdx j = m_rng.randrange<TxIdx>(m_suboptimal_chunks.size());\n+                if (j != m_suboptimal_chunks.size() - 1) {\n+                    std::swap(m_suboptimal_chunks.back(), m_suboptimal_chunks[j]);\n+                }\n+                m_cost += 3;\n+            }\n+        }\n     }\n \n-    /** Given a set of transactions with original indices, get their sorted indices. */\n-    SetType OriginalToSorted(const SetType& arg) const noexcept\n+    /** Try to improve the forest. Returns false if it is optimal, true otherwise. */\n+    bool OptimizeStep() noexcept\n     {\n-        SetType ret;\n-        for (auto pos : arg) ret.Set(m_original_to_sorted[pos]);\n-        return ret;\n+        while (true) {\n+            // If the queue of potentially-suboptimal chunks is empty, we are done.\n+            if (m_suboptimal_chunks.empty()) return false;\n+            // Pop an entry from the potentially-suboptimal chunk queue.\n+            TxIdx chunk = m_suboptimal_chunks.front();\n+            m_suboptimal_chunks.pop_front();\n+            auto& chunk_data = m_tx_data[chunk];\n+            Assume(chunk_data.suboptimal);\n+            chunk_data.suboptimal = false;\n+            // If what was popped is not currently a chunk representative, continue. This may\n+            // happen when a split chunk merges in Improve() with one or more existing chunks that\n+            // are themselves on the suboptimal queue.\n+            if (chunk_data.chunk_rep != chunk) continue;\n+            // Determine whether to use max-gain strategy or random strategy. Generally max-gain is\n+            // used, but out of an abundance of caution that max-gain might in\n+            // adversarially-contructed clusters reliably make bad choices, every 3rd attempt to\n+            // split the same cluster uses the random strategy.\n+            const bool use_max_gain = (chunk_data.self_merges % 3) != 2;\n+            // Remember the best dependency seen so far, together with its top feerate.\n+            DepIdx candidate_dep = DepIdx(-1);\n+            FeeFrac candidate_top_feerate; //!< Feerate of the candidate, or {} if random strategy.\n+            uint64_t candidate_tiebreak = std::numeric_limits<uint64_t>::max();\n+            // Iterate over all transactions.\n+            for (auto tx : chunk_data.chunk_setinfo.transactions) {\n+                const auto& tx_data = m_tx_data[tx];\n+                // Iterate over all active child dependencies of the transaction.\n+                const auto active_children = std::span{tx_data.child_deps}.first(tx_data.child_deps_active);\n+                for (DepIdx dep_idx : active_children) {\n+                    m_cost += 3;\n+                    const auto& dep_data = m_dep_data[dep_idx];\n+                    // Define gain(top) = fee(top)*size(chunk) - fee(chunk)*size(top).\n+                    //                  = (feerate(top) - feerate(chunk)) * size(top) * size(chunk).\n+                    // Thus:\n+                    //\n+                    //     gain(top1) > gain(top2)\n+                    // <=>   fee(top1)*size(chunk) - fee(chunk)*size(top1)\n+                    //     > fee(top2)*size(chunk) - fee(chunk)*size(top2)\n+                    // <=> (fee(top1)-fee(top2))*size(chunk) > fee(chunk)*(size(top1)-size(top2))\n+                    //\n+                    // If size(top1)>size(top2), this corresponds to feerate(top1-top2) > feerate(chunk),\n+                    // so we can use FeeRateCompare to discover if dep_data.top_setinfo has better\n+                    // gain than best_top_feerate. As FeeRateCompare() is actually implemented by\n+                    // checking the sign of the cross-product, it even works when\n+                    // size(top1) <= size(top2). When no candidate exists so far (or the random\n+                    // strategy is in use), this is equal to comparing the feerate with the chunk\n+                    // directly (= the sign of gain(top)).\n+                    auto cmp = FeeRateCompare(dep_data.top_setinfo.feerate - candidate_top_feerate,\n+                                              chunk_data.chunk_setinfo.feerate);\n+                    if (cmp < 0) continue;\n+                    // Generate a random tiebreak for this dependency, and reject it if its gain is\n+                    // equal to the candidate so far, but has worse tiebreak. This means that among\n+                    // equal-gain dependencies, a uniformly random one (the one with the highest\n+                    // tiebreak) will be chosen.\n+                    uint64_t tiebreak = m_rng.rand64() >> 1;\n+                    if (cmp == 0 && tiebreak <= candidate_tiebreak) continue;\n+                    // Remember this as our (new) candidate dependency.\n+                    candidate_dep = dep_idx;\n+                    if (use_max_gain) candidate_top_feerate = dep_data.top_setinfo.feerate;\n+                    candidate_tiebreak = tiebreak;\n+                }\n+            }\n+            // If a candidate with positive gain was found, activate it.\n+            if (candidate_tiebreak != std::numeric_limits<uint64_t>::max()) Improve(candidate_dep);\n+            // Stop processing for now, even if nothing was activated, as the loop above may have\n+            // had a nontrivial cost.\n+            return true;\n+        }\n     }\n \n-public:\n-    /** Construct a candidate finder for a graph.\n-     *\n-     * @param[in] depgraph   Dependency graph for the to-be-linearized cluster.\n-     * @param[in] rng_seed   A random seed to control the search order.\n-     *\n-     * Complexity: O(N^2) where N=depgraph.Count().\n-     */\n-    SearchCandidateFinder(const DepGraph<SetType>& depgraph, uint64_t rng_seed) noexcept :\n-        m_rng(rng_seed),\n-        m_sorted_to_original(depgraph.TxCount()),\n-        m_original_to_sorted(depgraph.PositionRange())\n+    /** Initialize data structure for minimizing the chunks. Step() cannot be called anymore\n+     *  afterwards. */\n+    void StartMinimizing() noexcept\n     {\n-        // Determine reordering mapping, by sorting by decreasing feerate. Unused positions are\n-        // not included, as they will never be looked up anyway.\n-        DepGraphIndex sorted_pos{0};\n-        for (auto i : depgraph.Positions()) {\n-            m_sorted_to_original[sorted_pos++] = i;\n+        m_nonminimal_chunks.clear();\n+        m_nonminimal_chunks.reserve(m_transactions.Count());\n+        // Gather all chunks, and add the representative of each to m_nonminimal_chunks, with the\n+        // representative itself as pivot.\n+        for (auto i : m_transactions) {\n+            auto& tx_data = m_tx_data[i];\n+            if (tx_data.chunk_rep == i) {\n+                m_nonminimal_chunks.emplace_back(i, i, false);\n+            }\n         }\n-        std::sort(m_sorted_to_original.begin(), m_sorted_to_original.end(), [&](auto a, auto b) {\n-            auto feerate_cmp = depgraph.FeeRate(a) <=> depgraph.FeeRate(b);\n-            if (feerate_cmp == 0) return a < b;\n-            return feerate_cmp > 0;\n-        });\n-        // Compute reverse mapping.\n-        for (DepGraphIndex i = 0; i < m_sorted_to_original.size(); ++i) {\n-            m_original_to_sorted[m_sorted_to_original[i]] = i;\n+        // Randomize the initial order of nonminimal chunks in the queue.\n+        for (TxIdx i = 0; i < m_nonminimal_chunks.size(); ++i) {\n+            TxIdx j = i + m_rng.randrange<TxIdx>(m_nonminimal_chunks.size() - i);\n+            if (i != j) std::swap(m_nonminimal_chunks[i], m_nonminimal_chunks[j]);\n         }\n-        // Compute reordered dependency graph.\n-        m_sorted_depgraph = DepGraph(depgraph, m_original_to_sorted, m_sorted_to_original.size());\n-        m_todo = m_sorted_depgraph.Positions();\n+        m_cost += 2 + 3 * m_nonminimal_chunks.size();\n     }\n \n-    /** Check whether any unlinearized transactions remain. */\n-    bool AllDone() const noexcept\n+    /** Try to reduce a chunk's size. Returns false if all chunks are minimal, true otherwise. */\n+    bool MinimizeStep() noexcept\n     {\n-        return m_todo.None();\n+        // If the queue of potentially-non-minimal chunks is empty, we are done.\n+        if (m_nonminimal_chunks.empty()) return false;\n+        // Pop an entry from the potentially-non-minimal chunk queue.\n+        auto [chunk, pivot, move_pivot_down] = m_nonminimal_chunks.front();\n+        m_nonminimal_chunks.pop_front();\n+        auto& chunk_data = m_tx_data[chunk];\n+        Assume(chunk_data.chunk_rep == chunk);\n+        Assume(chunk_data.chunk_setinfo.transactions[pivot]);\n+\n+        // Find a random dependency whose gain is non-negative, and which has pivot as bottom\n+        // (if move_pivot_down) or as top (if !move_pivot_down).\n+        DepIdx candidate_dep = DepIdx(-1);\n+        uint64_t candidate_tiebreak{0};\n+        bool have_any = false;\n+        // Iterate over all transactions.\n+        for (auto tx : chunk_data.chunk_setinfo.transactions) {\n+            const auto& tx_data = m_tx_data[tx];\n+            // Iterate over all active child dependencies of the transaction.\n+            const auto active_children = std::span{tx_data.child_deps}.first(tx_data.child_deps_active);\n+            for (DepIdx dep_idx : active_children) {\n+                m_cost += 3;\n+                const auto& dep_data = m_dep_data[dep_idx];\n+                // Skip if this dependency has negative gain.\n+                if (dep_data.top_setinfo.feerate << chunk_data.chunk_setinfo.feerate) continue;\n+                have_any = true;\n+                // Skip if this dependency does not have pivot in the right place.\n+                if (move_pivot_down == dep_data.top_setinfo.transactions[pivot]) continue;\n+                // Remember this as our chosen dependency if it has a better tiebreak.\n+                uint64_t tiebreak = m_rng.rand64() | 1;\n+                if (tiebreak > candidate_tiebreak) {\n+                    candidate_tiebreak = tiebreak;\n+                    candidate_dep = dep_idx;\n+                }\n+            }\n+        }\n+        // If all dependencies have negative gain, this chunk is optimal.\n+        if (!have_any) return true;\n+        // If all found dependencies have the pivot in the wrong place, try moving the pivot down\n+        // instead of up. If we were already attempting to move it down, no splitting is possible.\n+        if (candidate_tiebreak == 0) {\n+            if (!move_pivot_down) m_nonminimal_chunks.emplace_back(chunk, pivot, true);\n+            return true;\n+        }\n+\n+        // Otherwise, deactivate the dependency that was found.\n+        Deactivate(candidate_dep);\n+        // If the new top has a dependency on the new bottom (opposite from chosen_dep),\n+        // activate it.\n+        auto& candidate_dep_data = m_dep_data[candidate_dep];\n+        auto new_top_rep = m_tx_data[candidate_dep_data.parent].chunk_rep;\n+        auto new_bottom_rep = m_tx_data[candidate_dep_data.child].chunk_rep;\n+        auto new_rep = MergeChunks(new_bottom_rep, new_top_rep);\n+        m_cost += 2;\n+        if (new_rep == TxIdx(-1)) {\n+            // No new dependency was activated, and thus we have found a way to split the\n+            // chunk. Add the created smaller chunks to the queue in random order.\n+            bool top_first = m_rng.randbool();\n+            if (top_first) m_nonminimal_chunks.emplace_back(new_top_rep, new_top_rep, false);\n+            m_nonminimal_chunks.emplace_back(new_bottom_rep, new_bottom_rep, false);\n+            if (!top_first) m_nonminimal_chunks.emplace_back(new_top_rep, new_top_rep, false);\n+        } else {\n+            // A new dependency was activated, so this chunk failed to be split. Keep trying\n+            // with the same pivot (but note that the representative may have changed).\n+            m_nonminimal_chunks.emplace_back(new_rep, pivot, move_pivot_down);\n+        }\n+        return true;\n     }\n \n-    /** Find a high-feerate topologically-valid subset of what remains of the cluster.\n-     *  Requires !AllDone().\n-     *\n-     * @param[in] max_iterations  The maximum number of optimization steps that will be performed.\n-     * @param[in] best            A set/feerate pair with an already-known good candidate. This may\n-     *                            be empty.\n-     * @return                    A pair of:\n-     *                            - The best (highest feerate, smallest size as tiebreaker)\n-     *                              topologically valid subset (and its feerate) that was\n-     *                              encountered during search. It will be at least as good as the\n-     *                              best passed in (if not empty).\n-     *                            - The number of optimization steps that were performed. This will\n-     *                              be <= max_iterations. If strictly < max_iterations, the\n-     *                              returned subset is optimal.\n-     *\n-     * Complexity: possibly O(N * min(max_iterations, sqrt(2^N))) where N=depgraph.TxCount().\n-     */\n-    std::pair<SetInfo<SetType>, uint64_t> FindCandidateSet(uint64_t max_iterations, SetInfo<SetType> best) noexcept\n+    /** Construct a topologically-valid linearization from the current forest state. Must be\n+     *  topological. */\n+    std::vector<DepGraphIndex> GetLinearization() noexcept\n     {\n-        Assume(!AllDone());\n-\n-        // Convert the provided best to internal sorted indices.\n-        best.transactions = OriginalToSorted(best.transactions);\n-\n-        /** Type for work queue items. */\n-        struct WorkItem\n-        {\n-            /** Set of transactions definitely included (and its feerate). This must be a subset\n-             *  of m_todo, and be topologically valid (includes all in-m_todo ancestors of\n-             *  itself). */\n-            SetInfo<SetType> inc;\n-            /** Set of undecided transactions. This must be a subset of m_todo, and have no overlap\n-             *  with inc. The set (inc | und) must be topologically valid. */\n-            SetType und;\n-            /** (Only when inc is not empty) The best feerate of any superset of inc that is also a\n-             *  subset of (inc | und), without requiring it to be topologically valid. It forms a\n-             *  conservative upper bound on how good a set this work item can give rise to.\n-             *  Transactions whose feerate is below best's are ignored when determining this value,\n-             *  which means it may technically be an underestimate, but if so, this work item\n-             *  cannot result in something that beats best anyway. */\n-            FeeFrac pot_feerate;\n-\n-            /** Construct a new work item. */\n-            WorkItem(SetInfo<SetType>&& i, SetType&& u, FeeFrac&& p_f) noexcept :\n-                inc(std::move(i)), und(std::move(u)), pot_feerate(std::move(p_f))\n-            {\n-                Assume(pot_feerate.IsEmpty() == inc.feerate.IsEmpty());\n+        /** The output linearization. */\n+        std::vector<DepGraphIndex> ret;\n+        ret.reserve(m_transactions.Count());\n+        /** A heap with all chunks (by representative) that can currently be included, sorted by\n+         *  chunk feerate and a random tie-breaker. */\n+        std::vector<std::pair<TxIdx, uint64_t>> ready_chunks;\n+        /** Information about chunks:\n+         *  - The first value is only used for chunk representatives, and counts the number of\n+         *    unmet dependencies this chunk has on other chunks (not including dependencies within\n+         *    the chunk itself).\n+         *  - The second value is the number of unmet dependencies overall.\n+         */\n+        std::vector<std::pair<TxIdx, TxIdx>> chunk_deps(m_tx_data.size(), {0, 0});\n+        /** The set of all chunk representatives. */\n+        SetType chunk_reps;\n+        /** A heap with all transactions within the current chunk that can be included, sorted by\n+         *  random value. */\n+        std::vector<std::pair<uint64_t, TxIdx>> ready_tx;\n+        // Populate chunk_deps[c] with the number of {out-of-chunk dependencies, dependencies} the\n+        // child has.\n+        for (TxIdx chl_idx : m_transactions) {\n+            const auto& chl_data = m_tx_data[chl_idx];\n+            chunk_deps[chl_idx].second = chl_data.parents.Count();\n+            auto chl_chunk_rep = chl_data.chunk_rep;\n+            chunk_reps.Set(chl_chunk_rep);\n+            for (auto par_idx : chl_data.parents) {\n+                auto par_chunk_rep = m_tx_data[par_idx].chunk_rep;\n+                chunk_deps[chl_chunk_rep].first += (par_chunk_rep != chl_chunk_rep);\n             }\n-\n-            /** Swap two WorkItems. */\n-            void Swap(WorkItem& other) noexcept\n-            {\n-                swap(inc, other.inc);\n-                swap(und, other.und);\n-                swap(pot_feerate, other.pot_feerate);\n+        }\n+        // Construct a heap with all chunks that have no out-of-chunk dependencies.\n+        /** Comparison function for the heap. */\n+        auto chunk_cmp_fn = [&](const std::pair<TxIdx, uint64_t>& a, const std::pair<TxIdx, uint64_t>& b) noexcept {\n+            auto& chunk_a = m_tx_data[a.first];\n+            auto& chunk_b = m_tx_data[b.first];\n+            Assume(chunk_a.chunk_rep == a.first);\n+            Assume(chunk_b.chunk_rep == b.first);\n+            // First sort by chunk feerate.\n+            if (chunk_a.chunk_setinfo.feerate != chunk_b.chunk_setinfo.feerate) {\n+                return chunk_a.chunk_setinfo.feerate < chunk_b.chunk_setinfo.feerate;\n             }\n+            // Tie-break randomly.\n+            if (a.second != b.second) return a.second < b.second;\n+            // Lastly, tie-break by chunk representative.\n+            return a.first < b.first;\n         };\n-\n-        /** The queue of work items. */\n-        VecDeque<WorkItem> queue;\n-        queue.reserve(std::max<size_t>(256, 2 * m_todo.Count()));\n-\n-        // Create initial entries per connected component of m_todo. While clusters themselves are\n-        // generally connected, this is not necessarily true after some parts have already been\n-        // removed from m_todo. Without this, effort can be wasted on searching \"inc\" sets that\n-        // span multiple components.\n-        auto to_cover = m_todo;\n-        do {\n-            auto component = m_sorted_depgraph.FindConnectedComponent(to_cover);\n-            to_cover -= component;\n-            // If best is not provided, set it to the first component, so that during the work\n-            // processing loop below, and during the add_fn/split_fn calls, we do not need to deal\n-            // with the best=empty case.\n-            if (best.feerate.IsEmpty()) best = SetInfo(m_sorted_depgraph, component);\n-            queue.emplace_back(/*inc=*/SetInfo<SetType>{},\n-                               /*und=*/std::move(component),\n-                               /*pot_feerate=*/FeeFrac{});\n-        } while (to_cover.Any());\n-\n-        /** Local copy of the iteration limit. */\n-        uint64_t iterations_left = max_iterations;\n-\n-        /** The set of transactions in m_todo which have feerate > best's. */\n-        SetType imp = m_todo;\n-        while (imp.Any()) {\n-            DepGraphIndex check = imp.Last();\n-            if (m_sorted_depgraph.FeeRate(check) >> best.feerate) break;\n-            imp.Reset(check);\n+        for (TxIdx chunk_rep : chunk_reps) {\n+            if (chunk_deps[chunk_rep].first == 0) ready_chunks.emplace_back(chunk_rep, m_rng.rand64());\n         }\n-\n-        /** Internal function to add an item to the queue of elements to explore if there are any\n-         *  transactions left to split on, possibly improving it before doing so, and to update\n-         *  best/imp.\n-         *\n-         * - inc: the \"inc\" value for the new work item (must be topological).\n-         * - und: the \"und\" value for the new work item ((inc | und) must be topological).\n-         */\n-        auto add_fn = [&](SetInfo<SetType> inc, SetType und) noexcept {\n-            /** SetInfo object with the set whose feerate will become the new work item's\n-             *  pot_feerate. It starts off equal to inc. */\n-            auto pot = inc;\n-            if (!inc.feerate.IsEmpty()) {\n-                // Add entries to pot. We iterate over all undecided transactions whose feerate is\n-                // higher than best. While undecided transactions of lower feerate may improve pot,\n-                // the resulting pot feerate cannot possibly exceed best's (and this item will be\n-                // skipped in split_fn anyway).\n-                for (auto pos : imp & und) {\n-                    // Determine if adding transaction pos to pot (ignoring topology) would improve\n-                    // it. If not, we're done updating pot. This relies on the fact that\n-                    // m_sorted_depgraph, and thus the transactions iterated over, are in decreasing\n-                    // individual feerate order.\n-                    if (!(m_sorted_depgraph.FeeRate(pos) >> pot.feerate)) break;\n-                    pot.Set(m_sorted_depgraph, pos);\n-                }\n-\n-                // The \"jump ahead\" optimization: whenever pot has a topologically-valid subset,\n-                // that subset can be added to inc. Any subset of (pot - inc) has the property that\n-                // its feerate exceeds that of any set compatible with this work item (superset of\n-                // inc, subset of (inc | und)). Thus, if T is a topological subset of pot, and B is\n-                // the best topologically-valid set compatible with this work item, and (T - B) is\n-                // non-empty, then (T | B) is better than B and also topological. This is in\n-                // contradiction with the assumption that B is best. Thus, (T - B) must be empty,\n-                // or T must be a subset of B.\n-                //\n-                // See https://delvingbitcoin.org/t/how-to-linearize-your-cluster/303 section 2.4.\n-                const auto init_inc = inc.transactions;\n-                for (auto pos : pot.transactions - inc.transactions) {\n-                    // If the transaction's ancestors are a subset of pot, we can add it together\n-                    // with its ancestors to inc. Just update the transactions here; the feerate\n-                    // update happens below.\n-                    auto anc_todo = m_sorted_depgraph.Ancestors(pos) & m_todo;\n-                    if (anc_todo.IsSubsetOf(pot.transactions)) inc.transactions |= anc_todo;\n-                }\n-                // Finally update und and inc's feerate to account for the added transactions.\n-                und -= inc.transactions;\n-                inc.feerate += m_sorted_depgraph.FeeRate(inc.transactions - init_inc);\n-\n-                // If inc's feerate is better than best's, remember it as our new best.\n-                if (inc.feerate > best.feerate) {\n-                    best = inc;\n-                    // See if we can remove any entries from imp now.\n-                    while (imp.Any()) {\n-                        DepGraphIndex check = imp.Last();\n-                        if (m_sorted_depgraph.FeeRate(check) >> best.feerate) break;\n-                        imp.Reset(check);\n-                    }\n+        std::make_heap(ready_chunks.begin(), ready_chunks.end(), chunk_cmp_fn);\n+        // Pop chunks off the heap, highest-feerate ones first.\n+        while (!ready_chunks.empty()) {\n+            auto [chunk_rep, _rnd] = ready_chunks.front();\n+            std::pop_heap(ready_chunks.begin(), ready_chunks.end(), chunk_cmp_fn);\n+            ready_chunks.pop_back();\n+            Assume(m_tx_data[chunk_rep].chunk_rep == chunk_rep);\n+            Assume(chunk_deps[chunk_rep].first == 0);\n+            const auto& chunk_txn = m_tx_data[chunk_rep].chunk_setinfo.transactions;\n+            // Build heap of all includable transactions in chunk.\n+            for (TxIdx tx_idx : chunk_txn) {\n+                if (chunk_deps[tx_idx].second == 0) {\n+                    ready_tx.emplace_back(m_rng.rand64(), tx_idx);\n                 }\n-\n-                // If no potential transactions exist beyond the already included ones, no\n-                // improvement is possible anymore.\n-                if (pot.feerate.size == inc.feerate.size) return;\n-                // At this point und must be non-empty. If it were empty then pot would equal inc.\n-                Assume(und.Any());\n-            } else {\n-                Assume(inc.transactions.None());\n-                // If inc is empty, we just make sure there are undecided transactions left to\n-                // split on.\n-                if (und.None()) return;\n-            }\n-\n-            // Actually construct a new work item on the queue. Due to the switch to DFS when queue\n-            // space runs out (see below), we know that no reallocation of the queue should ever\n-            // occur.\n-            Assume(queue.size() < queue.capacity());\n-            queue.emplace_back(/*inc=*/std::move(inc),\n-                               /*und=*/std::move(und),\n-                               /*pot_feerate=*/std::move(pot.feerate));\n-        };\n-\n-        /** Internal process function. It takes an existing work item, and splits it in two: one\n-         *  with a particular transaction (and its ancestors) included, and one with that\n-         *  transaction (and its descendants) excluded. */\n-        auto split_fn = [&](WorkItem&& elem) noexcept {\n-            // Any queue element must have undecided transactions left, otherwise there is nothing\n-            // to explore anymore.\n-            Assume(elem.und.Any());\n-            // The included and undecided set are all subsets of m_todo.\n-            Assume(elem.inc.transactions.IsSubsetOf(m_todo) && elem.und.IsSubsetOf(m_todo));\n-            // Included transactions cannot be undecided.\n-            Assume(!elem.inc.transactions.Overlaps(elem.und));\n-            // If pot is empty, then so is inc.\n-            Assume(elem.inc.feerate.IsEmpty() == elem.pot_feerate.IsEmpty());\n-\n-            const DepGraphIndex first = elem.und.First();\n-            if (!elem.inc.feerate.IsEmpty()) {\n-                // If no undecided transactions remain with feerate higher than best, this entry\n-                // cannot be improved beyond best.\n-                if (!elem.und.Overlaps(imp)) return;\n-                // We can ignore any queue item whose potential feerate isn't better than the best\n-                // seen so far.\n-                if (elem.pot_feerate <= best.feerate) return;\n-            } else {\n-                // In case inc is empty use a simpler alternative check.\n-                if (m_sorted_depgraph.FeeRate(first) <= best.feerate) return;\n             }\n-\n-            // Decide which transaction to split on. Splitting is how new work items are added, and\n-            // how progress is made. One split transaction is chosen among the queue item's\n-            // undecided ones, and:\n-            // - A work item is (potentially) added with that transaction plus its remaining\n-            //   descendants excluded (removed from the und set).\n-            // - A work item is (potentially) added with that transaction plus its remaining\n-            //   ancestors included (added to the inc set).\n-            //\n-            // To decide what to split on, consider the undecided ancestors of the highest\n-            // individual feerate undecided transaction. Pick the one which reduces the search space\n-            // most. Let I(t) be the size of the undecided set after including t, and E(t) the size\n-            // of the undecided set after excluding t. Then choose the split transaction t such\n-            // that 2^I(t) + 2^E(t) is minimal, tie-breaking by highest individual feerate for t.\n-            DepGraphIndex split = 0;\n-            const auto select = elem.und & m_sorted_depgraph.Ancestors(first);\n-            Assume(select.Any());\n-            std::optional<std::pair<DepGraphIndex, DepGraphIndex>> split_counts;\n-            for (auto t : select) {\n-                // Call max = max(I(t), E(t)) and min = min(I(t), E(t)). Let counts = {max,min}.\n-                // Sorting by the tuple counts is equivalent to sorting by 2^I(t) + 2^E(t). This\n-                // expression is equal to 2^max + 2^min = 2^max * (1 + 1/2^(max - min)). The second\n-                // factor (1 + 1/2^(max - min)) there is in (1,2]. Thus increasing max will always\n-                // increase it, even when min decreases. Because of this, we can first sort by max.\n-                std::pair<DepGraphIndex, DepGraphIndex> counts{\n-                    (elem.und - m_sorted_depgraph.Ancestors(t)).Count(),\n-                    (elem.und - m_sorted_depgraph.Descendants(t)).Count()};\n-                if (counts.first < counts.second) std::swap(counts.first, counts.second);\n-                // Remember the t with the lowest counts.\n-                if (!split_counts.has_value() || counts < *split_counts) {\n-                    split = t;\n-                    split_counts = counts;\n+            Assume(!ready_tx.empty());\n+            std::make_heap(ready_tx.begin(), ready_tx.end());\n+            // Pop transactions from the heap, append them to linearization, and decrement\n+            // dependency counts.\n+            while (!ready_tx.empty()) {\n+                // Pop from heap.\n+                auto [_rnd2, tx_idx] = ready_tx.front();\n+                Assume(chunk_txn[tx_idx]);\n+                std::pop_heap(ready_tx.begin(), ready_tx.end());\n+                ready_tx.pop_back();\n+                // Append to linearization.\n+                ret.push_back(tx_idx);\n+                // Decrement dependency counts.\n+                auto& tx_data = m_tx_data[tx_idx];\n+                for (TxIdx chl_idx : tx_data.children) {\n+                    auto& chl_data = m_tx_data[chl_idx];\n+                    // Decrement tx dependency count.\n+                    Assume(chunk_deps[chl_idx].second > 0);\n+                    if (--chunk_deps[chl_idx].second == 0 && chunk_txn[chl_idx]) {\n+                        // Child tx has no dependencies left, and is in this chunk. Add it to the tx heap.\n+                        ready_tx.emplace_back(m_rng.rand64(), chl_idx);\n+                        std::push_heap(ready_tx.begin(), ready_tx.end());\n+                    }\n+                    // Decrement chunk dependency count if this is out-of-chunk dependency.\n+                    if (chl_data.chunk_rep != chunk_rep) {\n+                        Assume(chunk_deps[chl_data.chunk_rep].first > 0);\n+                        if (--chunk_deps[chl_data.chunk_rep].first == 0) {\n+                            // Child chunk has no dependencies left. Add it to the chunk heap.\n+                            ready_chunks.emplace_back(chl_data.chunk_rep, m_rng.rand64());\n+                            std::push_heap(ready_chunks.begin(), ready_chunks.end(), chunk_cmp_fn);\n+                        }\n+                    }\n                 }\n             }\n-            // Since there was at least one transaction in select, we must always find one.\n-            Assume(split_counts.has_value());\n-\n-            // Add a work item corresponding to exclusion of the split transaction.\n-            const auto& desc = m_sorted_depgraph.Descendants(split);\n-            add_fn(/*inc=*/elem.inc,\n-                   /*und=*/elem.und - desc);\n-\n-            // Add a work item corresponding to inclusion of the split transaction.\n-            const auto anc = m_sorted_depgraph.Ancestors(split) & m_todo;\n-            add_fn(/*inc=*/elem.inc.Add(m_sorted_depgraph, anc),\n-                   /*und=*/elem.und - anc);\n-\n-            // Account for the performed split.\n-            --iterations_left;\n-        };\n-\n-        // Work processing loop.\n-        //\n-        // New work items are always added at the back of the queue, but items to process use a\n-        // hybrid approach where they can be taken from the front or the back.\n-        //\n-        // Depth-first search (DFS) corresponds to always taking from the back of the queue. This\n-        // is very memory-efficient (linear in the number of transactions). Breadth-first search\n-        // (BFS) corresponds to always taking from the front, which potentially uses more memory\n-        // (up to exponential in the transaction count), but seems to work better in practice.\n-        //\n-        // The approach here combines the two: use BFS (plus random swapping) until the queue grows\n-        // too large, at which point we temporarily switch to DFS until the size shrinks again.\n-        while (!queue.empty()) {\n-            // Randomly swap the first two items to randomize the search order.\n-            if (queue.size() > 1 && m_rng.randbool()) {\n-                queue[0].Swap(queue[1]);\n-            }\n-\n-            // Processing the first queue item, and then using DFS for everything it gives rise to,\n-            // may increase the queue size by the number of undecided elements in there, minus 1\n-            // for the first queue item being removed. Thus, only when that pushes the queue over\n-            // its capacity can we not process from the front (BFS), and should we use DFS.\n-            while (queue.size() - 1 + queue.front().und.Count() > queue.capacity()) {\n-                if (!iterations_left) break;\n-                auto elem = queue.back();\n-                queue.pop_back();\n-                split_fn(std::move(elem));\n-            }\n-\n-            // Process one entry from the front of the queue (BFS exploration)\n-            if (!iterations_left) break;\n-            auto elem = queue.front();\n-            queue.pop_front();\n-            split_fn(std::move(elem));\n         }\n-\n-        // Return the found best set (converted to the original transaction indices), and the\n-        // number of iterations performed.\n-        best.transactions = SortedToOriginal(best.transactions);\n-        return {std::move(best), max_iterations - iterations_left};\n+        Assume(ret.size() == m_transactions.Count());\n+        return ret;\n     }\n \n-    /** Remove a subset of transactions from the cluster being linearized.\n-     *\n-     * Complexity: O(N) where N=done.Count().\n-     */\n-    void MarkDone(const SetType& done) noexcept\n-    {\n-        const auto done_sorted = OriginalToSorted(done);\n-        Assume(done_sorted.Any());\n-        Assume(done_sorted.IsSubsetOf(m_todo));\n-        m_todo -= done_sorted;\n-    }\n+    /** Determine how much work was performed so far. */\n+    uint64_t GetCost() const noexcept { return m_cost; }\n };\n \n /** Find or improve a linearization for a cluster.\n  *\n  * @param[in] depgraph            Dependency graph of the cluster to be linearized.\n- * @param[in] max_iterations      Upper bound on the number of optimization steps that will be done.\n+ * @param[in] max_iterations      Upper bound on the amount of work that will be done.\n  * @param[in] rng_seed            A random number seed to control search order. This prevents peers\n  *                                from predicting exactly which clusters would be hard for us to\n  *                                linearize.\n- * @param[in] old_linearization   An existing linearization for the cluster (which must be\n- *                                topologically valid), or empty.\n+ * @param[in] old_linearization   An existing linearization for the cluster, or empty.\n+ * @param[in] is_topological      (Only relevant if old_linearization is not empty) Whether\n+ *                                old_linearization is topologically valid.\n  * @return                        A tuple of:\n  *                                - The resulting linearization. It is guaranteed to be at least as\n  *                                  good (in the feerate diagram sense) as old_linearization.\n  *                                - A boolean indicating whether the result is guaranteed to be\n  *                                  optimal.\n  *                                - How many optimization steps were actually performed.\n- *\n- * Complexity: possibly O(N * min(max_iterations + N, sqrt(2^N))) where N=depgraph.TxCount().\n  */\n template<typename SetType>\n-std::tuple<std::vector<DepGraphIndex>, bool, uint64_t> Linearize(const DepGraph<SetType>& depgraph, uint64_t max_iterations, uint64_t rng_seed, std::span<const DepGraphIndex> old_linearization = {}) noexcept\n+std::tuple<std::vector<DepGraphIndex>, bool, uint64_t> Linearize(const DepGraph<SetType>& depgraph, uint64_t max_iterations, uint64_t rng_seed, std::span<const DepGraphIndex> old_linearization = {}, bool is_topological = true) noexcept",
      "path": "src/cluster_linearize.h",
      "position": 1495,
      "original_position": 1495,
      "commit_id": "52b983bf90e0bc5809a166924abe762f0d2bd975",
      "original_commit_id": "52b983bf90e0bc5809a166924abe762f0d2bd975",
      "in_reply_to_id": null,
      "user": {
        "login": "Copilot",
        "id": 175728472,
        "node_id": "BOT_kgDOCnlnWA",
        "avatar_url": "https://avatars.githubusercontent.com/in/946600?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Copilot",
        "html_url": "https://github.com/apps/copilot-pull-request-reviewer",
        "followers_url": "https://api.github.com/users/Copilot/followers",
        "following_url": "https://api.github.com/users/Copilot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Copilot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Copilot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Copilot/subscriptions",
        "organizations_url": "https://api.github.com/users/Copilot/orgs",
        "repos_url": "https://api.github.com/users/Copilot/repos",
        "events_url": "https://api.github.com/users/Copilot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Copilot/received_events",
        "type": "Bot",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The new `is_topological` parameter defaults to `true`, but when `old_linearization` is empty, this parameter is ignored. This could be confusing for API consumers. Consider documenting this behavior more explicitly in the function comment, or validate that when `old_linearization` is empty, `is_topological` is not set to `false`.",
      "created_at": "2025-10-20T00:30:40Z",
      "updated_at": "2025-10-20T00:30:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32545#discussion_r2443583986",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2443583986"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32545"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1358,
      "original_line": 1358,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2443583989",
      "pull_request_review_id": 3354761107,
      "id": 2443583989,
      "node_id": "PRRC_kwDOABII586RpiH1",
      "diff_hunk": "@@ -189,29 +44,7 @@ void BenchPostLinearizeWorstCase(DepGraphIndex ntx, benchmark::Bench& bench)\n     });\n }\n \n-template<typename SetType>\n-void BenchMergeLinearizationsWorstCase(DepGraphIndex ntx, benchmark::Bench& bench)\n-{\n-    DepGraph<SetType> depgraph;\n-    for (DepGraphIndex i = 0; i < ntx; ++i) {\n-        depgraph.AddTransaction({i, 1});\n-        if (i) depgraph.AddDependencies(SetType::Singleton(0), i);\n-    }\n-    std::vector<DepGraphIndex> lin1;\n-    std::vector<DepGraphIndex> lin2;\n-    lin1.push_back(0);\n-    lin2.push_back(0);\n-    for (DepGraphIndex i = 1; i < ntx; ++i) {\n-        lin1.push_back(i);\n-        lin2.push_back(ntx - i);\n-    }\n-    bench.run([&] {\n-        MergeLinearizations(depgraph, lin1, lin2);\n-    });\n-}\n-\n-template<size_t N>\n-void BenchLinearizeOptimally(benchmark::Bench& bench, const std::array<uint8_t, N>& serialized)\n+void BenchLinearizeOptimally(benchmark::Bench& bench, const std::vector<uint8_t>& serialized)",
      "path": "src/bench/cluster_linearize.cpp",
      "position": 186,
      "original_position": 186,
      "commit_id": "52b983bf90e0bc5809a166924abe762f0d2bd975",
      "original_commit_id": "52b983bf90e0bc5809a166924abe762f0d2bd975",
      "in_reply_to_id": null,
      "user": {
        "login": "Copilot",
        "id": 175728472,
        "node_id": "BOT_kgDOCnlnWA",
        "avatar_url": "https://avatars.githubusercontent.com/in/946600?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Copilot",
        "html_url": "https://github.com/apps/copilot-pull-request-reviewer",
        "followers_url": "https://api.github.com/users/Copilot/followers",
        "following_url": "https://api.github.com/users/Copilot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Copilot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Copilot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Copilot/subscriptions",
        "organizations_url": "https://api.github.com/users/Copilot/orgs",
        "repos_url": "https://api.github.com/users/Copilot/repos",
        "events_url": "https://api.github.com/users/Copilot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Copilot/received_events",
        "type": "Bot",
        "site_admin": false,
        "patch_url": null
      },
      "body": "[nitpick] The function signature changed from accepting `const std::array<uint8_t, N>&` to `const std::vector<uint8_t>&`. This removes compile-time size checking. While this makes the function more flexible, it also removes a safety guarantee. Consider if the added flexibility is worth the loss of compile-time size verification.\n```suggestion\ntemplate <size_t N>\nvoid BenchLinearizeOptimally(benchmark::Bench& bench, const std::array<uint8_t, N>& serialized)\n```",
      "created_at": "2025-10-20T00:30:41Z",
      "updated_at": "2025-10-20T00:30:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32545#discussion_r2443583989",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2443583989"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32545"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 47,
      "original_line": 47,
      "side": "RIGHT"
    }
  ]
}