{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33069",
    "id": 2696746607,
    "node_id": "PR_kwDOABII586gvRZv",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/33069",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/33069.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/33069.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33069",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33069/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33069/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33069/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/b5ad89f036e21c9f7b36f47cd438ac8d07c93864",
    "number": 33069,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "[POC] wallet: Add Support for BIP-353 DNS-Based Bitcoin Address via External Resolver",
    "user": {
      "login": "w0xlt",
      "id": 94266259,
      "node_id": "U_kgDOBZ5jkw",
      "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/w0xlt",
      "html_url": "https://github.com/w0xlt",
      "followers_url": "https://api.github.com/users/w0xlt/followers",
      "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
      "organizations_url": "https://api.github.com/users/w0xlt/orgs",
      "repos_url": "https://api.github.com/users/w0xlt/repos",
      "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/w0xlt/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "This PR implements [BIP-353](https://github.com/bitcoin/bips/blob/master/bip-0353.mediawiki) support in Bitcoin Core's wallet, enabling users to send Bitcoin to human-readable usernames instead of traditional addresses.\r\n\r\n### What is BIP-353?\r\nBIP-353 specifies a method for resolving human-friendly payment instructions via DNS. Instead of sharing long Bitcoin addresses, users can share memorable usernames like `alice._bitcoin-payment.example.com`.\r\n\r\n### Key Features\r\n\r\n* New `-dnsresolver` option: Specify a DNSSEC-validating DNS resolver command to handle BIP-353 lookups\r\n* Seamless integration: The `sendtoaddress` RPC now accepts both traditional Bitcoin addresses and BIP-353 usernames\r\n* Automatic resolution: When a BIP-353 username is provided, it's automatically resolved to a Bitcoin address before processing the transaction\r\n\r\n### How it works\r\n\r\n1. Users provide a username in the format: `username._bitcoin-payment.domain.com`\r\n2. The wallet validates the username format\r\n3. If valid and a DNS resolver is configured, it queries the DNS TXT record\r\n4. The resolver returns a `bitcoin:` URI containing the destination address\r\n5. The transaction proceeds with the resolved address\r\n\r\n### Example Usage\r\n```bash\r\n# Configure DNS resolver\r\nbitcoind -dnsresolver=\"/home/user/dns-bitcoin-resolver\"\r\n\r\n# Send to a BIP-353 username\r\nbitcoin-cli sendtoaddress \"alice.user._bitcoin-payment.alice.com\" 0.01\r\n```\r\n\r\n###  Implementation Details\r\n\r\n* Validates usernames according to DNS naming rules and BIP-353 format\r\n* Handles FQDN format (with or without trailing dot)\r\n* Provides error messages for resolution failures\r\n* Falls back to traditional address validation if the input isn't a valid BIP-353 username\r\n\r\nP.S.: There is an example `-dnsresolver` application here: https://github.com/w0xlt/dns-bitcoin-resolver for testing\r\n\r\nThe idea of this PR is to gather feedback on whether this direction makes sense and how we might best implement BIP-353 support if there's interest. \r\nThis would be even better if combined with Silent Payment and DNS resolver with DNSSEC validation could also solve some issues related to Payjoin V2 implementation in Core.",
    "labels": [],
    "created_at": "2025-07-26T07:13:26Z",
    "updated_at": "2025-10-24T10:50:42Z",
    "closed_at": "2025-10-22T15:57:37Z",
    "mergeable_state": "unknown",
    "merged": false,
    "merge_commit_sha": "c6c9fe55813f7a67c39c11e7f4c5bf48f584a026",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "w0xlt:bip353",
      "ref": "bip353",
      "sha": "b5ad89f036e21c9f7b36f47cd438ac8d07c93864",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 427811926,
        "node_id": "R_kgDOGX_kVg",
        "name": "bitcoin",
        "full_name": "w0xlt/bitcoin",
        "owner": {
          "login": "w0xlt",
          "id": 94266259,
          "node_id": "U_kgDOBZ5jkw",
          "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/w0xlt",
          "html_url": "https://github.com/w0xlt",
          "followers_url": "https://api.github.com/users/w0xlt/followers",
          "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
          "organizations_url": "https://api.github.com/users/w0xlt/orgs",
          "repos_url": "https://api.github.com/users/w0xlt/repos",
          "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/w0xlt/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/w0xlt/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/w0xlt/bitcoin",
        "archive_url": "https://api.github.com/repos/w0xlt/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/w0xlt/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/w0xlt/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/w0xlt/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/w0xlt/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/w0xlt/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/w0xlt/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/w0xlt/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/w0xlt/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/w0xlt/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/w0xlt/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/w0xlt/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/w0xlt/bitcoin/events",
        "forks_url": "https://api.github.com/repos/w0xlt/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/w0xlt/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/w0xlt/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/w0xlt/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/w0xlt/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/w0xlt/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/w0xlt/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/w0xlt/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/w0xlt/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/w0xlt/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/w0xlt/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/w0xlt/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/w0xlt/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/w0xlt/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/w0xlt/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/w0xlt/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:w0xlt/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/w0xlt/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/w0xlt/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/w0xlt/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/w0xlt/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/w0xlt/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/w0xlt/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/w0xlt/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/w0xlt/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/w0xlt/bitcoin/hooks",
        "svn_url": "https://github.com/w0xlt/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 2,
        "stargazers_count": 5,
        "watchers_count": 5,
        "size": 286149,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-10-24T07:07:07Z",
        "created_at": "2021-11-14T01:34:01Z",
        "updated_at": "2025-10-23T20:23:41Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "3b188b8b3daef4ae648e792d0ac3fd4db9c1fd36",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 38073,
        "stargazers_count": 86385,
        "watchers_count": 86385,
        "size": 295169,
        "default_branch": "master",
        "open_issues_count": 744,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-10-24T08:05:39Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-10-24T10:31:37Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33069"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": true,
    "additions": 219,
    "deletions": 1,
    "changed_files": 3,
    "commits": 1,
    "review_comments": 11,
    "comments": 18
  },
  "events": [
    {
      "event": "commented",
      "id": 3121427264,
      "node_id": "IC_kwDOABII5866DTNA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3121427264",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-26T07:13:29Z",
      "updated_at": "2025-10-15T16:36:32Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/33069.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept NACK | [luke-jr](https://github.com/bitcoin/bitcoin/pull/33069#issuecomment-3130771830), [1440000bytes](https://github.com/bitcoin/bitcoin/pull/33069#issuecomment-3131364440) |\n| Concept ACK | [Sjors](https://github.com/bitcoin/bitcoin/pull/33069#issuecomment-3121475171) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#31260](https://github.com/bitcoin/bitcoin/pull/31260) (scripted-diff: Type-safe settings retrieval by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33069#issuecomment-3121427264",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33069"
    },
    {
      "event": "convert_to_draft",
      "id": 18827708813,
      "node_id": "CTDE_lADOABII587CoBEfzwAAAARiOAmN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18827708813",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-26T07:13:38Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18827761436,
      "node_id": "HRFPE_lADOABII587CoBEfzwAAAARiONcc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18827761436",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1deee5e0791163895da96c0b8bf247f17eff9b21",
      "commit_url": "https://api.github.com/repos/w0xlt/bitcoin/commits/1deee5e0791163895da96c0b8bf247f17eff9b21",
      "created_at": "2025-07-26T07:21:10Z"
    },
    {
      "event": "labeled",
      "id": 18827761911,
      "node_id": "LE_lADOABII587CoBEfzwAAAARiONj3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18827761911",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-26T07:21:19Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 3121437333,
      "node_id": "IC_kwDOABII5866DVqV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3121437333",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-26T07:21:21Z",
      "updated_at": "2025-07-26T07:21:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Task `lint`: https://github.com/bitcoin/bitcoin/runs/46773849269</sub>\n<sub>LLM reason (✨ experimental): The CI failure is caused by an assertion error in the lint check, specifically due to a missing hidden argument '-dnsresolver'.</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33069#issuecomment-3121437333",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33069"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18827806926,
      "node_id": "HRFPE_lADOABII587CoBEfzwAAAARiOYjO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18827806926",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "65edc4e2558118673827eaa4e9d5192ee9cf0e23",
      "commit_url": "https://api.github.com/repos/w0xlt/bitcoin/commits/65edc4e2558118673827eaa4e9d5192ee9cf0e23",
      "created_at": "2025-07-26T07:27:55Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGI1YWQ4OWYwMzZlMjFjOWY3YjM2ZjQ3Y2Q0MzhhYzhkMDdjOTM4NjQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b5ad89f036e21c9f7b36f47cd438ac8d07c93864",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b5ad89f036e21c9f7b36f47cd438ac8d07c93864",
      "tree": {
        "sha": "f8a2f8ce38e4e30bf8510e733f3dff2fc40427ac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f8a2f8ce38e4e30bf8510e733f3dff2fc40427ac"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3b188b8b3daef4ae648e792d0ac3fd4db9c1fd36",
          "sha": "3b188b8b3daef4ae648e792d0ac3fd4db9c1fd36",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3b188b8b3daef4ae648e792d0ac3fd4db9c1fd36"
        }
      ],
      "message": "Add Support for BIP-353 DNS-Based Bitcoin Address via External Resolver",
      "committer": {
        "name": "w0xlt",
        "email": "94266259+w0xlt@users.noreply.github.com",
        "date": "2025-07-26T07:33:24Z"
      },
      "author": {
        "name": "w0xlt",
        "email": "94266259+w0xlt@users.noreply.github.com",
        "date": "2025-07-26T06:33:42Z"
      },
      "sha": "b5ad89f036e21c9f7b36f47cd438ac8d07c93864"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18827843172,
      "node_id": "HRFPE_lADOABII587CoBEfzwAAAARiOhZk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18827843172",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b5ad89f036e21c9f7b36f47cd438ac8d07c93864",
      "commit_url": "https://api.github.com/repos/w0xlt/bitcoin/commits/b5ad89f036e21c9f7b36f47cd438ac8d07c93864",
      "created_at": "2025-07-26T07:33:30Z"
    },
    {
      "event": "reviewed",
      "id": 3057955243,
      "node_id": "PRR_kwDOABII5862RLGr",
      "url": null,
      "actor": null,
      "commit_id": "b5ad89f036e21c9f7b36f47cd438ac8d07c93864",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-07-26T07:52:19Z",
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33069#pullrequestreview-3057955243",
      "submitted_at": "2025-07-26T07:52:19Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33069"
    },
    {
      "event": "reviewed",
      "id": 3057955429,
      "node_id": "PRR_kwDOABII5862RLJl",
      "url": null,
      "actor": null,
      "commit_id": "b5ad89f036e21c9f7b36f47cd438ac8d07c93864",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-07-26T07:53:18Z",
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33069#pullrequestreview-3057955429",
      "submitted_at": "2025-07-26T07:53:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33069"
    },
    {
      "event": "reviewed",
      "id": 3057955916,
      "node_id": "PRR_kwDOABII5862RLRM",
      "url": null,
      "actor": null,
      "commit_id": "b5ad89f036e21c9f7b36f47cd438ac8d07c93864",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-07-26T07:55:55Z",
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33069#pullrequestreview-3057955916",
      "submitted_at": "2025-07-26T07:55:55Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33069"
    },
    {
      "event": "commented",
      "id": 3121475171,
      "node_id": "IC_kwDOABII5866De5j",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3121475171",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-26T08:04:57Z",
      "updated_at": "2025-07-26T08:07:13Z",
      "author_association": "MEMBER",
      "body": "Concept ACK\r\n\r\nUsing `RunCommandParseJSON()` is similar to how we handle external signers. It's a good way to add this functionality without adding a lot of code and dependencies.\r\n\r\nIt won't be useful until we have silent payments _send_ support #28201 (we don't want to encourage address reuse), so this PR could be contingent on that.\r\n\r\nNode in a box applications like [Raspiblitz](https://github.com/raspiblitz/raspiblitz) could easily ship and configure a resolver, so this can be used not just by advanced users.\r\n\r\nURI parsing is always a bit dangerous so it would be nice to have fuzzer coverage. In fact we already have some well tested parsing code that you may want to reuse.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33069#issuecomment-3121475171",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33069"
    },
    {
      "event": "reviewed",
      "id": 3058325866,
      "node_id": "PRR_kwDOABII5862Sllq",
      "url": null,
      "actor": null,
      "commit_id": "b5ad89f036e21c9f7b36f47cd438ac8d07c93864",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-07-26T17:57:03Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33069#pullrequestreview-3058325866",
      "submitted_at": "2025-07-26T17:57:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33069"
    },
    {
      "event": "commented",
      "id": 3122198909,
      "node_id": "IC_kwDOABII5866GPl9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3122198909",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-26T18:22:04Z",
      "updated_at": "2025-07-26T18:22:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "Oh one last comment, it would be nice if the resolver also provided the proof which was stored in the wallet.\n\nIn general on-chain bitcoin users expect txids to, by themselves, be \"proof of payment\". That changes with 353 - you now need the txid plus the DNSSEC proof (as the records may change out from under you). Whether the proof are available today or not, ensuring they get stored in the wallet is good future-proofing for PoP.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33069#issuecomment-3122198909",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33069"
    },
    {
      "event": "commented",
      "id": 3123379929,
      "node_id": "IC_kwDOABII5866Kv7Z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3123379929",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-26T21:04:09Z",
      "updated_at": "2025-07-26T21:04:09Z",
      "author_association": "MEMBER",
      "body": "> New `-dnsresolver` option: Specify a DNSSEC-validating DNS resolver command to handle BIP-353 lookups\r\n\r\nI don't think we should be outsourcing that to another program. Validating DNSSEC signatures is an integral part of BIP 353 and the only way we can guarantee that the proof is valid is for us to receive the prrof and validate it internally, which defeats the purpose of calling another binary.\r\n\r\nUnlike with `-signer`, I don't think there's a good reason to use a separate binary for the DNS lookups. There is no need for minimizing attack surface since we already do DNS lookups via syscalls. I don't think there's a situation where the called binary would need to be any different. It's not like HWI where the binary may support different hardware; rather there's exactly one thing that it is supposed to do, so I think it would be better for us to (re)write TXT resolving and DNSSEC validation internally.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33069#issuecomment-3123379929",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33069"
    },
    {
      "event": "subscribed",
      "id": 18835214176,
      "node_id": "SE_lADOABII587CoBEfzwAAAARiqo9g",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18835214176",
      "actor": {
        "login": "ConorOkus",
        "id": 10757874,
        "node_id": "MDQ6VXNlcjEwNzU3ODc0",
        "avatar_url": "https://avatars.githubusercontent.com/u/10757874?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ConorOkus",
        "html_url": "https://github.com/ConorOkus",
        "followers_url": "https://api.github.com/users/ConorOkus/followers",
        "following_url": "https://api.github.com/users/ConorOkus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ConorOkus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ConorOkus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ConorOkus/subscriptions",
        "organizations_url": "https://api.github.com/users/ConorOkus/orgs",
        "repos_url": "https://api.github.com/users/ConorOkus/repos",
        "events_url": "https://api.github.com/users/ConorOkus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ConorOkus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-26T22:34:15Z"
    },
    {
      "event": "commented",
      "id": 3123472162,
      "node_id": "IC_kwDOABII5866LGci",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3123472162",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-26T22:39:08Z",
      "updated_at": "2025-07-26T22:39:08Z",
      "author_association": "CONTRIBUTOR",
      "body": "One advantage of doing a separate process is that it sidesteps either dealing with validation integration [1], which will invariably stall progress ~forever. Using a separate binary for now would let the work streams progress independently and figuring out how to in-house validation can come separately.\n\n[1] I think there's several ways, so even analyzing them will probably stall things ~forever - Rust integration, trying to write secp256r1/RSA plus DNSSEC validation in C++, or taking on some dependency that does those (though there's now several not-DNS-resolvers that can do DNSSEC validation, including systemd and dnsmasq, so maybe one has reusable code).",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33069#issuecomment-3123472162",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33069"
    },
    {
      "event": "subscribed",
      "id": 18835522423,
      "node_id": "SE_lADOABII587CoBEfzwAAAARir0N3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18835522423",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-26T23:14:49Z"
    },
    {
      "event": "commented",
      "id": 3123744788,
      "node_id": "IC_kwDOABII5866MJAU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3123744788",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-27T01:53:15Z",
      "updated_at": "2025-07-27T01:53:15Z",
      "author_association": "MEMBER",
      "body": "> One advantage of doing a separate process is that it sidesteps either dealing with validation integration\r\n\r\nIt introduces a potential security issue though since we can't validate the output of the separate process. We're just trusting whatever it spits out, and if it were malicious, it could be making fake addresses which results in funds being sent to an attacker., and the user basically wouldn't know.\r\n\r\nThere's also the question of how to distribute that binary which I think would result in a significant stalling. We still haven't resolved the distribution questions around assumeutxo and asmap, and I think those projects probably have more interest from contributors than BIP 353.\r\n\r\nSince we'd only need a DNS client that does TXT and the DNSSEC records, and validation for RSA and secp256r1, I don't think an internal implementation would actually be a major blocker. These implementations can even be relatively slow and naive as they're just validation only, as you've done in dnssec-prover. I'm planning to dig into that next week.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33069#issuecomment-3123744788",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33069"
    },
    {
      "event": "comment_deleted",
      "id": 18847571819,
      "node_id": "CDE_lADOABII587CoBEfzwAAAARjZx9r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18847571819",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-28T06:57:26Z"
    },
    {
      "event": "commented",
      "id": 3126116213,
      "node_id": "IC_kwDOABII5866VL91",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3126116213",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-28T08:28:25Z",
      "updated_at": "2025-07-28T08:28:25Z",
      "author_association": "CONTRIBUTOR",
      "body": "I've created a C++ implementation of the dnssec-prover, available at: [https://github.com/w0xlt/dnssec-validation](https://github.com/w0xlt/dnssec-validation).\r\nThis implementation focuses solely on the DNSSEC **validation** component, which is the critical aspect for our use case.\r\n\r\nThe `dnssec-validation` binary can also be used as an external dependency in this PR. Functionally, it mirrors `dnssec-prover`, with the main difference being its C++ codebase.\r\n\r\nIf the goal is to eventually integrate DNSSEC validation directly into the Bitcoin Core codebase, most of the required C++ logic is already implemented in the repository above. However, a key challenge lies in the cryptographic validation implemented in `validation.cpp` (equivalent to `validation.rs` in the original project), which relies on **OpenSSL**.\r\n\r\nBelow is a breakdown of the OpenSSL functionality currently in use.\r\n\r\nAt this point, it's unclear whether incorporating these OpenSSL-based cryptographic functions directly into the Bitcoin Core codebase is practical or desirable. Further discussion would be needed to evaluate this integration path.\r\n\r\n---\r\n\r\n### Hashing via EVP (Envelope) Interface\r\n\r\n* `EVP_MD_CTX_new()` – Allocate a new message digest context\r\n* `EVP_MD_CTX_free()` – Free the context\r\n* `EVP_sha1()`, `EVP_sha256()`, `EVP_sha384()`, `EVP_sha512()` – Retrieve specific hash algorithms\r\n* `EVP_DigestInit_ex()` – Initialize the digest context\r\n* `EVP_DigestUpdate()` – Feed data into the digest\r\n* `EVP_DigestFinal_ex()` – Finalize and retrieve the digest\r\n* `EVP_MD_size()` – Get the digest size for a given algorithm\r\n\r\n---\r\n\r\n### RSA Functions\r\n\r\n* `RSA_new()`, `RSA_free()` – Allocate and free RSA structures\r\n* `RSA_set0_key()` – Set modulus (`n`) and exponent (`e`)\r\n* `RSA_verify()` – Verify an RSA signature (PKCS#1 padding)\r\n\r\n---\r\n\r\n### BIGNUM Utilities\r\n\r\n* `BN_bin2bn()` – Convert binary to `BIGNUM` (used in RSA key construction)\r\n* `BN_free()` – Free BIGNUM structures\r\n\r\n---\r\n\r\n### Elliptic Curve (EC) Handling\r\n\r\n* `EC_KEY_new_by_curve_name()` – Create a key for a named curve\r\n* `EC_KEY_set_public_key_affine_coordinates()` – Set EC public key coordinates (x, y)\r\n* `EC_KEY_free()` – Free the EC\\_KEY\r\n\r\n---\r\n\r\n### ECDSA Operations\r\n\r\n* `ECDSA_SIG_new()`, `ECDSA_SIG_free()` – Allocate and free ECDSA signatures\r\n* `ECDSA_SIG_set0()` – Set `r` and `s` components\r\n* `ECDSA_do_verify()` – Verify an ECDSA signature\r\n\r\n---\r\n\r\n### OpenSSL Constants Used\r\n\r\n* `NID_sha256`, `NID_sha512` – Identifiers for SHA-2 algorithms\r\n* `NID_X9_62_prime256v1` – Identifier for the P-256 curve\r\n* `NID_secp384r1` – Identifier for the P-384 curve\r\n\r\n---\r\n\r\n### Supported Cryptographic Algorithms\r\n\r\n* **RSA/SHA-256** (algorithm 8)\r\n* **RSA/SHA-512** (algorithm 10)\r\n* **ECDSA P-256/SHA-256** (algorithm 13)\r\n* **ECDSA P-384/SHA-384** (algorithm 14)\r\n* **ED25519** is referenced but currently not supported (algorithm 15)\r\n\r\n---\r\n\r\nThe implementation uses OpenSSL's **EVP interface** for hashing (encapsulated within a `Hasher` class), and leverages direct RSA and ECDSA operations for signature verification, in line with DNSSEC requirements.",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33069#issuecomment-3126116213",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33069"
    },
    {
      "event": "commented",
      "id": 3128153057,
      "node_id": "IC_kwDOABII5866c9Ph",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3128153057",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-28T16:57:56Z",
      "updated_at": "2025-07-28T16:57:56Z",
      "author_association": "MEMBER",
      "body": "> and validation for RSA and secp256r1, I don't think an internal implementation would actually be a major blocker. These implementations can even be relatively slow and naive as they're just validation only, as you've done in dnssec-prover. I'm planning to dig into that next week.\r\n\r\nJust off the top of my head, a minimalistic approach would be to implement an ASN.1 DER parser. For RSA, we’d extend our arith_uint to support 4096-bit numbers with a mod operator (doubling the modulus size as needed for exponentiation) and implement modular squaring exponentiation. For secp256r1, we could extend arith_uint256 for finite field arithmetic (adding FLT for inverses to keep the code small), and then we’d need to implement the curve’s point addition, doubling, and scalar multiplication.\r\nNote: while fun to implement, I’m currently a ~0 on adding this to Core. A naive implementation with no proper review could be as bad as using an external library too.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33069#issuecomment-3128153057",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33069"
    },
    {
      "event": "commented",
      "id": 3128482538,
      "node_id": "IC_kwDOABII5866eNrq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3128482538",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-28T18:34:48Z",
      "updated_at": "2025-07-28T18:34:48Z",
      "author_association": "MEMBER",
      "body": "> At this point, it's unclear whether incorporating these OpenSSL-based cryptographic functions directly into the Bitcoin Core codebase is practical or desirable.\r\n\r\nI don't think it is desirable. OpenSSL is a massive codebase, and we only need a tiny part. We spent a very long time trying to remove OpenSSL as well.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33069#issuecomment-3128482538",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33069"
    },
    {
      "event": "commented",
      "id": 3128518901,
      "node_id": "IC_kwDOABII5866eWj1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3128518901",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-28T18:48:32Z",
      "updated_at": "2025-07-28T18:48:32Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I don't think it is desirable. OpenSSL is a massive codebase, and we only need a tiny part. We spent a very long time trying to remove OpenSSL as well.\r\n\r\nWhat I meant was reimplementing those OpenSSL functions I mentioned above in our codebase.\r\n\r\n> A naive implementation with no proper review could be as bad as using an external library too.\r\n\r\nThat's my point. Adding cryptographic schemes that aren't directly part of the Bitcoin protocol can be difficult to obtain sufficient review or even consensus for merging.",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33069#issuecomment-3128518901",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33069"
    },
    {
      "event": "commented",
      "id": 3129986454,
      "node_id": "IC_kwDOABII5866j82W",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3129986454",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-28T21:55:19Z",
      "updated_at": "2025-07-28T21:55:19Z",
      "author_association": "CONTRIBUTOR",
      "body": "> It introduces a potential security issue though since we can't validate the output of the separate process. We're just trusting whatever it spits out, and if it were malicious, it could be making fake addresses which results in funds being sent to an attacker., and the user basically wouldn't know.\r\n\r\nThis is why I raised it in the context of multi-process - multi-process already inherently moves to a world where Bitcoin Core trusts output of other processes, doing this in that context wouldn't change anything.\r\n\r\n> There's also the question of how to distribute that binary which I think would result in a significant stalling. We still haven't resolved the distribution questions around assumeutxo and asmap, and I think those projects probably have more interest from contributors than BIP 353.\r\n\r\nHow is it different than any other multi-process binary?\r\n\r\n> Since we'd only need a DNS client that does TXT and the DNSSEC records, and validation for RSA and secp256r1, I don't think an internal implementation would actually be a major blocker. These implementations can even be relatively slow and naive as they're just validation only, as you've done in dnssec-prover. I'm planning to dig into that next week.\r\n\r\nOkay, if you want to build it all in-house great, I imagine that will take a while, though :)",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33069#issuecomment-3129986454",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33069"
    },
    {
      "event": "commented",
      "id": 3130771830,
      "node_id": "IC_kwDOABII5866m8l2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3130771830",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-29T05:40:59Z",
      "updated_at": "2025-07-29T05:40:59Z",
      "author_association": "MEMBER",
      "body": "Concept NACK, Bitcoin invoice addresses are single-use, and it doesn't make sense to put them in DNS.",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33069#issuecomment-3130771830",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33069"
    },
    {
      "event": "commented",
      "id": 3131364440,
      "node_id": "IC_kwDOABII5866pNRY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3131364440",
      "actor": {
        "login": "1440000bytes",
        "id": 147166694,
        "node_id": "U_kgDOCMWV5g",
        "avatar_url": "https://avatars.githubusercontent.com/u/147166694?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/1440000bytes",
        "html_url": "https://github.com/1440000bytes",
        "followers_url": "https://api.github.com/users/1440000bytes/followers",
        "following_url": "https://api.github.com/users/1440000bytes/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/1440000bytes/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/1440000bytes/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/1440000bytes/subscriptions",
        "organizations_url": "https://api.github.com/users/1440000bytes/orgs",
        "repos_url": "https://api.github.com/users/1440000bytes/repos",
        "events_url": "https://api.github.com/users/1440000bytes/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/1440000bytes/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-29T08:53:24Z",
      "updated_at": "2025-07-31T19:15:37Z",
      "author_association": "NONE",
      "body": "Concept NACK \r\n\r\n- Adds unnecessary complexity\r\n- Adds attack vector\r\n- It is possible to achieve this functionality without changing bitcoin core\r\n\r\nBIP 353 itself is controversial because it expects an average user to securely manage DNS for bitcoin payments.",
      "user": {
        "login": "1440000bytes",
        "id": 147166694,
        "node_id": "U_kgDOCMWV5g",
        "avatar_url": "https://avatars.githubusercontent.com/u/147166694?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/1440000bytes",
        "html_url": "https://github.com/1440000bytes",
        "followers_url": "https://api.github.com/users/1440000bytes/followers",
        "following_url": "https://api.github.com/users/1440000bytes/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/1440000bytes/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/1440000bytes/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/1440000bytes/subscriptions",
        "organizations_url": "https://api.github.com/users/1440000bytes/orgs",
        "repos_url": "https://api.github.com/users/1440000bytes/repos",
        "events_url": "https://api.github.com/users/1440000bytes/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/1440000bytes/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33069#issuecomment-3131364440",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33069"
    },
    {
      "event": "commented",
      "id": 3133584656,
      "node_id": "IC_kwDOABII5866xrUQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3133584656",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-29T18:23:29Z",
      "updated_at": "2025-07-29T18:23:29Z",
      "author_association": "MEMBER",
      "body": "> How is it different than any other multi-process binary?\r\n\r\nThe multiprocess binaries are produced by this project, built using the same deterministic build system, using the same code as the monolithic binaries. There are already concrete ways that the binaries can be distributed with minimal changes to our own release process. Users who run the multiprocess binaries don't have to do any special configuration for them to work. This is different from requiring users to set a configuration option that points to a binary that they may be downloading from somewhere else, and probably has different review standards. Multiprocess would work straight out of the box, whereas at least in the initial releases, this BIP 353 implementation won't. This extra configuration opens the door to malicious documentation where users who are trying to set this up are directed by attackers to download a malicious binary for use as the external resolver.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33069#issuecomment-3133584656",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33069"
    },
    {
      "event": "commented",
      "id": 3136293939,
      "node_id": "IC_kwDOABII58668Awz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3136293939",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-30T13:11:16Z",
      "updated_at": "2025-07-30T13:11:16Z",
      "author_association": "CONTRIBUTOR",
      "body": "> The multiprocess binaries are produced by this project, built using the same deterministic build system, using the same code as the monolithic binaries. There are already concrete ways that the binaries can be distributed with minimal changes to our own release process. Users who run the multiprocess binaries don't have to do any special configuration for them to work.\r\n\r\nRight, I was ancitipating that, ultimately, an external-process DNS resolution thing would be built and dstributed the same, even if its in a different language. Whether an initial PR or intermediate PR does that seems unrelated.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33069#issuecomment-3136293939",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33069"
    },
    {
      "event": "unlabeled",
      "id": 19942338890,
      "node_id": "UNLE_lADOABII587CoBEfzwAAAASkp_FK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19942338890",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-26T11:57:05Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 3433131337,
      "node_id": "IC_kwDOABII587MoW1J",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3433131337",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-22T15:57:37Z",
      "updated_at": "2025-10-22T15:57:37Z",
      "author_association": "MEMBER",
      "body": "This PR does not seem to have attracted much attention from reviewers. As such, it does not seem important enough right now to keep it sitting idle in the list of open PRs.\r\n\r\nClosing due to lack of interest.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33069#issuecomment-3433131337",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33069"
    },
    {
      "event": "closed",
      "id": 20434791560,
      "node_id": "CE_lADOABII587CoBEfzwAAAATCAiyI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20434791560",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-22T15:57:37Z"
    },
    {
      "event": "commented",
      "id": 3442484138,
      "node_id": "IC_kwDOABII587NMCOq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3442484138",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-24T10:50:42Z",
      "updated_at": "2025-10-24T10:50:42Z",
      "author_association": "MEMBER",
      "body": "To recap what I think the main arguments are for closing this for now:\r\n\r\nUntil we have Silent Payment (sending) support, fetching addresses via DNS is an anti-feature because it encourages address reuse. When we do, it still leaves the dilemma that we don't want to rely on external(ly generated) binary nor are we excited about adding RSA and such to our own codebase. But we could revisit that then.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33069#issuecomment-3442484138",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33069"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2232783849",
      "pull_request_review_id": 3057955243,
      "id": 2232783849,
      "node_id": "PRRC_kwDOABII586FFZPp",
      "diff_hunk": "@@ -221,6 +223,194 @@ static void SetFeeEstimateMode(const CWallet& wallet, CCoinControl& cc, const Un\n     }\n }\n \n+bool hasDNSResolver()\n+{\n+    return gArgs.GetArg(\"-dnsresolver\", \"\") != \"\";\n+}\n+\n+/**\n+ * Validate if a string follows the BIP 353 username format\n+ * @param username The username to validate\n+ * @return true if the username follows BIP 353 format, false otherwise\n+ *\n+ * Valid examples:\n+ *   - carol.user._bitcoin-payment.carol.com\n+ *   - carol.user._bitcoin-payment.carol.com. (with trailing dot - FQDN)\n+ *   - alice._bitcoin-payment.example.org\n+ *   - pay.bob._bitcoin-payment.company.co.uk\n+ *\n+ * Invalid examples:\n+ *   - carol.user.carol.com (missing ._bitcoin-payment.)\n+ *   - _bitcoin-payment.example.com (missing username part)\n+ *   - user@example.com (not a valid DNS name format)\n+ */\n+bool IsValidBIP353Username(const std::string& username)\n+{\n+    // Check for empty string\n+    if (username.empty()) {\n+        return false;\n+    }\n+\n+    // Handle trailing dot (FQDN format)\n+    std::string name = username;\n+    if (!name.empty() && name.back() == '.') {\n+        name.pop_back(); // Remove trailing dot for validation\n+\n+        // Check if it was just a dot\n+        if (name.empty()) {\n+            return false;\n+        }\n+    }\n+\n+    // Must contain the BIP 353 identifier\n+    if (name.find(\"._bitcoin-payment.\") == std::string::npos) {\n+        return false;\n+    }\n+\n+    // Basic DNS name validation\n+    // - Maximum length of 253 characters (excluding trailing dot)\n+    // - Labels separated by dots\n+    // - Each label: 1-63 characters, alphanumeric and hyphens\n+    // - Labels cannot start or end with hyphens\n+    if (name.length() > 253) {\n+        return false;\n+    }\n+\n+    // Check for valid characters (alphanumeric, dots, hyphens, underscores)\n+    // Use locale-independent character checking\n+    if (!std::all_of(name.begin(), name.end(), [](unsigned char c) {\n+        return (c >= 'a' && c <= 'z') ||\n+               (c >= 'A' && c <= 'Z') ||\n+               (c >= '0' && c <= '9') ||\n+               c == '.' || c == '-' || c == '_';\n+    })) {\n+        return false;\n+    }\n+\n+    // Split by dots and validate each label\n+    size_t start = 0;\n+    size_t dot_pos = name.find('.');\n+\n+    while (dot_pos != std::string::npos || start < name.length()) {\n+        size_t end = (dot_pos != std::string::npos) ? dot_pos : name.length();\n+        std::string label = name.substr(start, end - start);\n+\n+        // Empty label (consecutive dots)\n+        if (label.empty()) {\n+            return false;\n+        }\n+\n+        // Label too long\n+        if (label.length() > 63) {\n+            return false;\n+        }\n+\n+        // Label starts or ends with hyphen (unless it's the special _bitcoin-payment label)\n+        if (label != \"_bitcoin-payment\") {\n+            if (label.front() == '-' || label.back() == '-') {\n+                return false;\n+            }\n+        }\n+\n+        if (dot_pos == std::string::npos) {\n+            break;\n+        }\n+\n+        start = dot_pos + 1;\n+        dot_pos = name.find('.', start);\n+    }\n+\n+    // Ensure it ends with a valid TLD (at least 2 characters after the last dot)\n+    size_t last_dot = name.rfind('.');\n+    if (last_dot == std::string::npos || name.length() - last_dot < 3) {\n+        return false;\n+    }\n+\n+    return true;\n+}\n+\n+struct BIP353Result {\n+    bool success;\n+    std::string result;  // Either the Bitcoin address or error message\n+};\n+\n+/**\n+ * Resolve a BIP 353 username to a Bitcoin address\n+ * @param username The BIP 353 username (e.g., carol.user._bitcoin-payment.carol.com)\n+ * @return BIP353Result containing success status and either the address or error message\n+ */\n+BIP353Result ResolveBIP353Username(const std::string& username)\n+{\n+    // Build the command\n+    const std::string dnsresolver = gArgs.GetArg(\"-dnsresolver\", \"\");\n+    std::string command = dnsresolver + \" resolve \" + username;\n+\n+    // Execute the command and parse JSON response\n+    UniValue result;\n+    try {\n+        result = RunCommandParseJSON(command);\n+    } catch (const std::exception& e) {\n+        return {false, strprintf(\"Failed to execute dns-bitcoin-resolver: %s\", e.what())};\n+    }\n+\n+    // Check if result is an error object\n+    if (result.isObject() && result.exists(\"error\")) {\n+        std::string error_msg = result[\"error\"].get_str();\n+        return {false, strprintf(\"DNS resolution error: %s\", error_msg)};\n+    }\n+\n+    // Result should be an array of DNS records\n+    if (!result.isArray() || result.empty()) {\n+        return {false, \"Invalid response from dns-bitcoin-resolver\"};\n+    }\n+\n+    // Look for TXT record with bitcoin: URI\n+    for (size_t i = 0; i < result.size(); ++i) {\n+        const UniValue& record = result[i];\n+\n+        if (!record.isObject() || !record.exists(\"type\") || !record.exists(\"contents\")) {\n+            continue;\n+        }\n+\n+        if (record[\"type\"].get_str() != \"txt\") {\n+            continue;\n+        }\n+\n+        std::string contents = record[\"contents\"].get_str();\n+\n+        // Check if it starts with \"bitcoin:\"\n+        if (contents.find(\"bitcoin:\") != 0) {\n+            continue;\n+        }\n+\n+        // Extract the address part (between \"bitcoin:\" and \"?\" or end of string)\n+        std::string uri = contents.substr(8); // Remove \"bitcoin:\" prefix\n+        size_t question_pos = uri.find('?');\n+\n+        if (question_pos == 0) {\n+            // No address, only parameters (bitcoin:?lno=...)\n+            return {false, \"No Bitcoin address found in the DNS record\"};",
      "path": "src/wallet/rpc/spend.cpp",
      "position": 180,
      "original_position": 180,
      "commit_id": "b5ad89f036e21c9f7b36f47cd438ac8d07c93864",
      "original_commit_id": "b5ad89f036e21c9f7b36f47cd438ac8d07c93864",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "So after #28201 this would no longer be a failure?",
      "created_at": "2025-07-26T07:52:19Z",
      "updated_at": "2025-07-26T07:52:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33069#discussion_r2232783849",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2232783849"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33069"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 392,
      "original_line": 392,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2232784061",
      "pull_request_review_id": 3057955429,
      "id": 2232784061,
      "node_id": "PRRC_kwDOABII586FFZS9",
      "diff_hunk": "@@ -221,6 +223,194 @@ static void SetFeeEstimateMode(const CWallet& wallet, CCoinControl& cc, const Un\n     }\n }\n \n+bool hasDNSResolver()\n+{\n+    return gArgs.GetArg(\"-dnsresolver\", \"\") != \"\";\n+}\n+\n+/**\n+ * Validate if a string follows the BIP 353 username format\n+ * @param username The username to validate\n+ * @return true if the username follows BIP 353 format, false otherwise\n+ *\n+ * Valid examples:\n+ *   - carol.user._bitcoin-payment.carol.com\n+ *   - carol.user._bitcoin-payment.carol.com. (with trailing dot - FQDN)\n+ *   - alice._bitcoin-payment.example.org\n+ *   - pay.bob._bitcoin-payment.company.co.uk\n+ *\n+ * Invalid examples:\n+ *   - carol.user.carol.com (missing ._bitcoin-payment.)\n+ *   - _bitcoin-payment.example.com (missing username part)\n+ *   - user@example.com (not a valid DNS name format)\n+ */\n+bool IsValidBIP353Username(const std::string& username)\n+{\n+    // Check for empty string\n+    if (username.empty()) {\n+        return false;\n+    }\n+\n+    // Handle trailing dot (FQDN format)\n+    std::string name = username;\n+    if (!name.empty() && name.back() == '.') {\n+        name.pop_back(); // Remove trailing dot for validation\n+\n+        // Check if it was just a dot\n+        if (name.empty()) {\n+            return false;\n+        }\n+    }\n+\n+    // Must contain the BIP 353 identifier\n+    if (name.find(\"._bitcoin-payment.\") == std::string::npos) {\n+        return false;\n+    }\n+\n+    // Basic DNS name validation\n+    // - Maximum length of 253 characters (excluding trailing dot)\n+    // - Labels separated by dots\n+    // - Each label: 1-63 characters, alphanumeric and hyphens\n+    // - Labels cannot start or end with hyphens\n+    if (name.length() > 253) {\n+        return false;\n+    }\n+\n+    // Check for valid characters (alphanumeric, dots, hyphens, underscores)\n+    // Use locale-independent character checking\n+    if (!std::all_of(name.begin(), name.end(), [](unsigned char c) {\n+        return (c >= 'a' && c <= 'z') ||\n+               (c >= 'A' && c <= 'Z') ||\n+               (c >= '0' && c <= '9') ||\n+               c == '.' || c == '-' || c == '_';\n+    })) {\n+        return false;\n+    }\n+\n+    // Split by dots and validate each label\n+    size_t start = 0;\n+    size_t dot_pos = name.find('.');\n+\n+    while (dot_pos != std::string::npos || start < name.length()) {\n+        size_t end = (dot_pos != std::string::npos) ? dot_pos : name.length();\n+        std::string label = name.substr(start, end - start);\n+\n+        // Empty label (consecutive dots)\n+        if (label.empty()) {\n+            return false;\n+        }\n+\n+        // Label too long\n+        if (label.length() > 63) {\n+            return false;\n+        }\n+\n+        // Label starts or ends with hyphen (unless it's the special _bitcoin-payment label)\n+        if (label != \"_bitcoin-payment\") {\n+            if (label.front() == '-' || label.back() == '-') {\n+                return false;\n+            }\n+        }\n+\n+        if (dot_pos == std::string::npos) {\n+            break;\n+        }\n+\n+        start = dot_pos + 1;\n+        dot_pos = name.find('.', start);\n+    }\n+\n+    // Ensure it ends with a valid TLD (at least 2 characters after the last dot)\n+    size_t last_dot = name.rfind('.');\n+    if (last_dot == std::string::npos || name.length() - last_dot < 3) {\n+        return false;\n+    }\n+\n+    return true;\n+}\n+\n+struct BIP353Result {",
      "path": "src/wallet/rpc/spend.cpp",
      "position": 120,
      "original_position": 120,
      "commit_id": "b5ad89f036e21c9f7b36f47cd438ac8d07c93864",
      "original_commit_id": "b5ad89f036e21c9f7b36f47cd438ac8d07c93864",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Maybe return an array of strings, because there might be multiple options we can pay to (regular address, silent payment, some future thing).",
      "created_at": "2025-07-26T07:53:17Z",
      "updated_at": "2025-07-26T07:53:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33069#discussion_r2232784061",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2232784061"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33069"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 332,
      "original_line": 332,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2232784859",
      "pull_request_review_id": 3057955916,
      "id": 2232784859,
      "node_id": "PRRC_kwDOABII586FFZfb",
      "diff_hunk": "@@ -303,7 +493,32 @@ RPCHelpMan sendtoaddress()\n     EnsureWalletIsUnlocked(*pwallet);\n \n     UniValue address_amounts(UniValue::VOBJ);\n-    const std::string address = request.params[0].get_str();\n+    std::string address = request.params[0].get_str();",
      "path": "src/wallet/rpc/spend.cpp",
      "position": 210,
      "original_position": 210,
      "commit_id": "b5ad89f036e21c9f7b36f47cd438ac8d07c93864",
      "original_commit_id": "b5ad89f036e21c9f7b36f47cd438ac8d07c93864",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Can you add this to the send RPC as well? Ideally the code should reusable by the GUI too, so maybe move it to CWallet.",
      "created_at": "2025-07-26T07:55:55Z",
      "updated_at": "2025-07-26T07:55:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33069#discussion_r2232784859",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2232784859"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33069"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 496,
      "original_line": 496,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2233118375",
      "pull_request_review_id": 3058325866,
      "id": 2233118375,
      "node_id": "PRRC_kwDOABII586FGq6n",
      "diff_hunk": "@@ -221,6 +223,194 @@ static void SetFeeEstimateMode(const CWallet& wallet, CCoinControl& cc, const Un\n     }\n }\n \n+bool hasDNSResolver()\n+{\n+    return gArgs.GetArg(\"-dnsresolver\", \"\") != \"\";\n+}\n+\n+/**\n+ * Validate if a string follows the BIP 353 username format\n+ * @param username The username to validate\n+ * @return true if the username follows BIP 353 format, false otherwise\n+ *\n+ * Valid examples:\n+ *   - carol.user._bitcoin-payment.carol.com\n+ *   - carol.user._bitcoin-payment.carol.com. (with trailing dot - FQDN)\n+ *   - alice._bitcoin-payment.example.org\n+ *   - pay.bob._bitcoin-payment.company.co.uk\n+ *\n+ * Invalid examples:\n+ *   - carol.user.carol.com (missing ._bitcoin-payment.)\n+ *   - _bitcoin-payment.example.com (missing username part)\n+ *   - user@example.com (not a valid DNS name format)\n+ */\n+bool IsValidBIP353Username(const std::string& username)\n+{\n+    // Check for empty string\n+    if (username.empty()) {\n+        return false;\n+    }\n+\n+    // Handle trailing dot (FQDN format)\n+    std::string name = username;\n+    if (!name.empty() && name.back() == '.') {\n+        name.pop_back(); // Remove trailing dot for validation\n+\n+        // Check if it was just a dot\n+        if (name.empty()) {\n+            return false;\n+        }\n+    }\n+\n+    // Must contain the BIP 353 identifier\n+    if (name.find(\"._bitcoin-payment.\") == std::string::npos) {\n+        return false;\n+    }\n+\n+    // Basic DNS name validation\n+    // - Maximum length of 253 characters (excluding trailing dot)\n+    // - Labels separated by dots\n+    // - Each label: 1-63 characters, alphanumeric and hyphens\n+    // - Labels cannot start or end with hyphens\n+    if (name.length() > 253) {\n+        return false;\n+    }\n+\n+    // Check for valid characters (alphanumeric, dots, hyphens, underscores)\n+    // Use locale-independent character checking\n+    if (!std::all_of(name.begin(), name.end(), [](unsigned char c) {\n+        return (c >= 'a' && c <= 'z') ||\n+               (c >= 'A' && c <= 'Z') ||\n+               (c >= '0' && c <= '9') ||\n+               c == '.' || c == '-' || c == '_';\n+    })) {\n+        return false;\n+    }\n+\n+    // Split by dots and validate each label\n+    size_t start = 0;\n+    size_t dot_pos = name.find('.');\n+\n+    while (dot_pos != std::string::npos || start < name.length()) {\n+        size_t end = (dot_pos != std::string::npos) ? dot_pos : name.length();\n+        std::string label = name.substr(start, end - start);\n+\n+        // Empty label (consecutive dots)\n+        if (label.empty()) {\n+            return false;\n+        }\n+\n+        // Label too long\n+        if (label.length() > 63) {\n+            return false;\n+        }\n+\n+        // Label starts or ends with hyphen (unless it's the special _bitcoin-payment label)\n+        if (label != \"_bitcoin-payment\") {\n+            if (label.front() == '-' || label.back() == '-') {\n+                return false;\n+            }\n+        }\n+",
      "path": "src/wallet/rpc/spend.cpp",
      "position": 102,
      "original_position": 102,
      "commit_id": "b5ad89f036e21c9f7b36f47cd438ac8d07c93864",
      "original_commit_id": "b5ad89f036e21c9f7b36f47cd438ac8d07c93864",
      "in_reply_to_id": null,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This should be allowed, I believe.",
      "created_at": "2025-07-26T17:46:56Z",
      "updated_at": "2025-07-26T17:57:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33069#discussion_r2233118375",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2233118375"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33069"
        }
      },
      "start_line": 308,
      "original_start_line": 308,
      "start_side": "RIGHT",
      "line": 314,
      "original_line": 314,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2233120018",
      "pull_request_review_id": 3058325866,
      "id": 2233120018,
      "node_id": "PRRC_kwDOABII586FGrUS",
      "diff_hunk": "@@ -221,6 +223,194 @@ static void SetFeeEstimateMode(const CWallet& wallet, CCoinControl& cc, const Un\n     }\n }\n \n+bool hasDNSResolver()\n+{\n+    return gArgs.GetArg(\"-dnsresolver\", \"\") != \"\";\n+}\n+\n+/**\n+ * Validate if a string follows the BIP 353 username format\n+ * @param username The username to validate\n+ * @return true if the username follows BIP 353 format, false otherwise\n+ *\n+ * Valid examples:\n+ *   - carol.user._bitcoin-payment.carol.com\n+ *   - carol.user._bitcoin-payment.carol.com. (with trailing dot - FQDN)\n+ *   - alice._bitcoin-payment.example.org\n+ *   - pay.bob._bitcoin-payment.company.co.uk\n+ *\n+ * Invalid examples:\n+ *   - carol.user.carol.com (missing ._bitcoin-payment.)\n+ *   - _bitcoin-payment.example.com (missing username part)\n+ *   - user@example.com (not a valid DNS name format)",
      "path": "src/wallet/rpc/spend.cpp",
      "position": 33,
      "original_position": 33,
      "commit_id": "b5ad89f036e21c9f7b36f47cd438ac8d07c93864",
      "original_commit_id": "b5ad89f036e21c9f7b36f47cd438ac8d07c93864",
      "in_reply_to_id": null,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Why require users to pass in the converted string rather than letting them just pass in the HRN directly and adding the `.user._bitcoin-payment` ourselves?",
      "created_at": "2025-07-26T17:48:26Z",
      "updated_at": "2025-07-26T17:57:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33069#discussion_r2233120018",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2233120018"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33069"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 245,
      "original_line": 245,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2233122382",
      "pull_request_review_id": 3058325866,
      "id": 2233122382,
      "node_id": "PRRC_kwDOABII586FGr5O",
      "diff_hunk": "@@ -221,6 +223,194 @@ static void SetFeeEstimateMode(const CWallet& wallet, CCoinControl& cc, const Un\n     }\n }\n \n+bool hasDNSResolver()\n+{\n+    return gArgs.GetArg(\"-dnsresolver\", \"\") != \"\";\n+}\n+\n+/**\n+ * Validate if a string follows the BIP 353 username format\n+ * @param username The username to validate\n+ * @return true if the username follows BIP 353 format, false otherwise\n+ *\n+ * Valid examples:\n+ *   - carol.user._bitcoin-payment.carol.com\n+ *   - carol.user._bitcoin-payment.carol.com. (with trailing dot - FQDN)\n+ *   - alice._bitcoin-payment.example.org\n+ *   - pay.bob._bitcoin-payment.company.co.uk\n+ *\n+ * Invalid examples:\n+ *   - carol.user.carol.com (missing ._bitcoin-payment.)\n+ *   - _bitcoin-payment.example.com (missing username part)\n+ *   - user@example.com (not a valid DNS name format)\n+ */\n+bool IsValidBIP353Username(const std::string& username)\n+{\n+    // Check for empty string\n+    if (username.empty()) {\n+        return false;\n+    }\n+\n+    // Handle trailing dot (FQDN format)\n+    std::string name = username;\n+    if (!name.empty() && name.back() == '.') {\n+        name.pop_back(); // Remove trailing dot for validation\n+\n+        // Check if it was just a dot\n+        if (name.empty()) {\n+            return false;\n+        }\n+    }\n+\n+    // Must contain the BIP 353 identifier\n+    if (name.find(\"._bitcoin-payment.\") == std::string::npos) {\n+        return false;\n+    }\n+\n+    // Basic DNS name validation\n+    // - Maximum length of 253 characters (excluding trailing dot)\n+    // - Labels separated by dots\n+    // - Each label: 1-63 characters, alphanumeric and hyphens\n+    // - Labels cannot start or end with hyphens\n+    if (name.length() > 253) {\n+        return false;\n+    }\n+\n+    // Check for valid characters (alphanumeric, dots, hyphens, underscores)\n+    // Use locale-independent character checking\n+    if (!std::all_of(name.begin(), name.end(), [](unsigned char c) {\n+        return (c >= 'a' && c <= 'z') ||\n+               (c >= 'A' && c <= 'Z') ||\n+               (c >= '0' && c <= '9') ||\n+               c == '.' || c == '-' || c == '_';\n+    })) {\n+        return false;\n+    }\n+\n+    // Split by dots and validate each label\n+    size_t start = 0;\n+    size_t dot_pos = name.find('.');\n+\n+    while (dot_pos != std::string::npos || start < name.length()) {\n+        size_t end = (dot_pos != std::string::npos) ? dot_pos : name.length();\n+        std::string label = name.substr(start, end - start);\n+\n+        // Empty label (consecutive dots)\n+        if (label.empty()) {\n+            return false;\n+        }\n+\n+        // Label too long\n+        if (label.length() > 63) {\n+            return false;\n+        }\n+\n+        // Label starts or ends with hyphen (unless it's the special _bitcoin-payment label)\n+        if (label != \"_bitcoin-payment\") {\n+            if (label.front() == '-' || label.back() == '-') {\n+                return false;\n+            }\n+        }\n+\n+        if (dot_pos == std::string::npos) {\n+            break;\n+        }\n+\n+        start = dot_pos + 1;\n+        dot_pos = name.find('.', start);\n+    }\n+\n+    // Ensure it ends with a valid TLD (at least 2 characters after the last dot)\n+    size_t last_dot = name.rfind('.');\n+    if (last_dot == std::string::npos || name.length() - last_dot < 3) {\n+        return false;\n+    }\n+\n+    return true;\n+}\n+\n+struct BIP353Result {\n+    bool success;\n+    std::string result;  // Either the Bitcoin address or error message\n+};\n+\n+/**\n+ * Resolve a BIP 353 username to a Bitcoin address\n+ * @param username The BIP 353 username (e.g., carol.user._bitcoin-payment.carol.com)\n+ * @return BIP353Result containing success status and either the address or error message\n+ */\n+BIP353Result ResolveBIP353Username(const std::string& username)\n+{\n+    // Build the command\n+    const std::string dnsresolver = gArgs.GetArg(\"-dnsresolver\", \"\");\n+    std::string command = dnsresolver + \" resolve \" + username;\n+\n+    // Execute the command and parse JSON response\n+    UniValue result;\n+    try {\n+        result = RunCommandParseJSON(command);\n+    } catch (const std::exception& e) {\n+        return {false, strprintf(\"Failed to execute dns-bitcoin-resolver: %s\", e.what())};\n+    }\n+\n+    // Check if result is an error object\n+    if (result.isObject() && result.exists(\"error\")) {\n+        std::string error_msg = result[\"error\"].get_str();\n+        return {false, strprintf(\"DNS resolution error: %s\", error_msg)};\n+    }\n+\n+    // Result should be an array of DNS records\n+    if (!result.isArray() || result.empty()) {\n+        return {false, \"Invalid response from dns-bitcoin-resolver\"};\n+    }\n+\n+    // Look for TXT record with bitcoin: URI\n+    for (size_t i = 0; i < result.size(); ++i) {\n+        const UniValue& record = result[i];\n+\n+        if (!record.isObject() || !record.exists(\"type\") || !record.exists(\"contents\")) {",
      "path": "src/wallet/rpc/spend.cpp",
      "position": 159,
      "original_position": 159,
      "commit_id": "b5ad89f036e21c9f7b36f47cd438ac8d07c93864",
      "original_commit_id": "b5ad89f036e21c9f7b36f47cd438ac8d07c93864",
      "in_reply_to_id": null,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'm not quite sure what the anticipated format for this response is, is it documented anywhere? eg there's the google-proprietary format at https://dns.google/resolve?name=matt.user._bitcoin-payment.mattcorallo.com&type=TXT which seems to be similar to what you want, but uses the integer value for `type` (also would require checking the `AD` bit!).",
      "created_at": "2025-07-26T17:51:38Z",
      "updated_at": "2025-07-26T17:57:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33069#discussion_r2233122382",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2233122382"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33069"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 371,
      "original_line": 371,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2233122778",
      "pull_request_review_id": 3058325866,
      "id": 2233122778,
      "node_id": "PRRC_kwDOABII586FGr_a",
      "diff_hunk": "@@ -221,6 +223,194 @@ static void SetFeeEstimateMode(const CWallet& wallet, CCoinControl& cc, const Un\n     }\n }\n \n+bool hasDNSResolver()\n+{\n+    return gArgs.GetArg(\"-dnsresolver\", \"\") != \"\";\n+}\n+\n+/**\n+ * Validate if a string follows the BIP 353 username format\n+ * @param username The username to validate\n+ * @return true if the username follows BIP 353 format, false otherwise\n+ *\n+ * Valid examples:\n+ *   - carol.user._bitcoin-payment.carol.com\n+ *   - carol.user._bitcoin-payment.carol.com. (with trailing dot - FQDN)\n+ *   - alice._bitcoin-payment.example.org\n+ *   - pay.bob._bitcoin-payment.company.co.uk\n+ *\n+ * Invalid examples:\n+ *   - carol.user.carol.com (missing ._bitcoin-payment.)\n+ *   - _bitcoin-payment.example.com (missing username part)\n+ *   - user@example.com (not a valid DNS name format)\n+ */\n+bool IsValidBIP353Username(const std::string& username)\n+{\n+    // Check for empty string\n+    if (username.empty()) {\n+        return false;\n+    }\n+\n+    // Handle trailing dot (FQDN format)\n+    std::string name = username;\n+    if (!name.empty() && name.back() == '.') {\n+        name.pop_back(); // Remove trailing dot for validation\n+\n+        // Check if it was just a dot\n+        if (name.empty()) {\n+            return false;\n+        }\n+    }\n+\n+    // Must contain the BIP 353 identifier\n+    if (name.find(\"._bitcoin-payment.\") == std::string::npos) {\n+        return false;\n+    }\n+\n+    // Basic DNS name validation\n+    // - Maximum length of 253 characters (excluding trailing dot)\n+    // - Labels separated by dots\n+    // - Each label: 1-63 characters, alphanumeric and hyphens\n+    // - Labels cannot start or end with hyphens\n+    if (name.length() > 253) {\n+        return false;\n+    }\n+\n+    // Check for valid characters (alphanumeric, dots, hyphens, underscores)\n+    // Use locale-independent character checking\n+    if (!std::all_of(name.begin(), name.end(), [](unsigned char c) {\n+        return (c >= 'a' && c <= 'z') ||\n+               (c >= 'A' && c <= 'Z') ||\n+               (c >= '0' && c <= '9') ||\n+               c == '.' || c == '-' || c == '_';\n+    })) {\n+        return false;\n+    }\n+\n+    // Split by dots and validate each label\n+    size_t start = 0;\n+    size_t dot_pos = name.find('.');\n+\n+    while (dot_pos != std::string::npos || start < name.length()) {\n+        size_t end = (dot_pos != std::string::npos) ? dot_pos : name.length();\n+        std::string label = name.substr(start, end - start);\n+\n+        // Empty label (consecutive dots)\n+        if (label.empty()) {\n+            return false;\n+        }\n+\n+        // Label too long\n+        if (label.length() > 63) {\n+            return false;\n+        }\n+\n+        // Label starts or ends with hyphen (unless it's the special _bitcoin-payment label)\n+        if (label != \"_bitcoin-payment\") {\n+            if (label.front() == '-' || label.back() == '-') {\n+                return false;\n+            }\n+        }\n+\n+        if (dot_pos == std::string::npos) {\n+            break;\n+        }\n+\n+        start = dot_pos + 1;\n+        dot_pos = name.find('.', start);\n+    }\n+\n+    // Ensure it ends with a valid TLD (at least 2 characters after the last dot)\n+    size_t last_dot = name.rfind('.');\n+    if (last_dot == std::string::npos || name.length() - last_dot < 3) {\n+        return false;\n+    }\n+\n+    return true;\n+}\n+\n+struct BIP353Result {\n+    bool success;\n+    std::string result;  // Either the Bitcoin address or error message\n+};\n+\n+/**\n+ * Resolve a BIP 353 username to a Bitcoin address\n+ * @param username The BIP 353 username (e.g., carol.user._bitcoin-payment.carol.com)\n+ * @return BIP353Result containing success status and either the address or error message\n+ */\n+BIP353Result ResolveBIP353Username(const std::string& username)\n+{\n+    // Build the command\n+    const std::string dnsresolver = gArgs.GetArg(\"-dnsresolver\", \"\");\n+    std::string command = dnsresolver + \" resolve \" + username;\n+\n+    // Execute the command and parse JSON response\n+    UniValue result;\n+    try {\n+        result = RunCommandParseJSON(command);\n+    } catch (const std::exception& e) {\n+        return {false, strprintf(\"Failed to execute dns-bitcoin-resolver: %s\", e.what())};\n+    }\n+\n+    // Check if result is an error object\n+    if (result.isObject() && result.exists(\"error\")) {\n+        std::string error_msg = result[\"error\"].get_str();\n+        return {false, strprintf(\"DNS resolution error: %s\", error_msg)};\n+    }\n+\n+    // Result should be an array of DNS records\n+    if (!result.isArray() || result.empty()) {\n+        return {false, \"Invalid response from dns-bitcoin-resolver\"};\n+    }\n+\n+    // Look for TXT record with bitcoin: URI\n+    for (size_t i = 0; i < result.size(); ++i) {\n+        const UniValue& record = result[i];\n+\n+        if (!record.isObject() || !record.exists(\"type\") || !record.exists(\"contents\")) {\n+            continue;\n+        }\n+\n+        if (record[\"type\"].get_str() != \"txt\") {\n+            continue;\n+        }\n+\n+        std::string contents = record[\"contents\"].get_str();\n+\n+        // Check if it starts with \"bitcoin:\"\n+        if (contents.find(\"bitcoin:\") != 0) {\n+            continue;\n+        }\n+\n+        // Extract the address part (between \"bitcoin:\" and \"?\" or end of string)\n+        std::string uri = contents.substr(8); // Remove \"bitcoin:\" prefix\n+        size_t question_pos = uri.find('?');\n+\n+        if (question_pos == 0) {\n+            // No address, only parameters (bitcoin:?lno=...)\n+            return {false, \"No Bitcoin address found in the DNS record\"};\n+        }\n+\n+        std::string address;\n+        if (question_pos != std::string::npos) {\n+            address = uri.substr(0, question_pos);\n+        } else {\n+            address = uri;\n+        }\n+\n+        // Basic validation - check if address is not empty\n+        if (address.empty()) {\n+            return {false, \"No Bitcoin address found in the DNS record\"};",
      "path": "src/wallet/rpc/spend.cpp",
      "position": 192,
      "original_position": 192,
      "commit_id": "b5ad89f036e21c9f7b36f47cd438ac8d07c93864",
      "original_commit_id": "b5ad89f036e21c9f7b36f47cd438ac8d07c93864",
      "in_reply_to_id": null,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "spec also mandates that you fail if there is more than one TXT record that starts with \"bitcoin:\"",
      "created_at": "2025-07-26T17:53:03Z",
      "updated_at": "2025-07-26T17:57:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33069#discussion_r2233122778",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2233122778"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33069"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 404,
      "original_line": 404,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2233122798",
      "pull_request_review_id": 3058325866,
      "id": 2233122798,
      "node_id": "PRRC_kwDOABII586FGr_u",
      "diff_hunk": "@@ -221,6 +223,194 @@ static void SetFeeEstimateMode(const CWallet& wallet, CCoinControl& cc, const Un\n     }\n }\n \n+bool hasDNSResolver()\n+{\n+    return gArgs.GetArg(\"-dnsresolver\", \"\") != \"\";\n+}\n+\n+/**\n+ * Validate if a string follows the BIP 353 username format\n+ * @param username The username to validate\n+ * @return true if the username follows BIP 353 format, false otherwise\n+ *\n+ * Valid examples:\n+ *   - carol.user._bitcoin-payment.carol.com\n+ *   - carol.user._bitcoin-payment.carol.com. (with trailing dot - FQDN)\n+ *   - alice._bitcoin-payment.example.org\n+ *   - pay.bob._bitcoin-payment.company.co.uk\n+ *\n+ * Invalid examples:\n+ *   - carol.user.carol.com (missing ._bitcoin-payment.)\n+ *   - _bitcoin-payment.example.com (missing username part)\n+ *   - user@example.com (not a valid DNS name format)\n+ */\n+bool IsValidBIP353Username(const std::string& username)\n+{\n+    // Check for empty string\n+    if (username.empty()) {\n+        return false;\n+    }\n+\n+    // Handle trailing dot (FQDN format)\n+    std::string name = username;\n+    if (!name.empty() && name.back() == '.') {\n+        name.pop_back(); // Remove trailing dot for validation\n+\n+        // Check if it was just a dot\n+        if (name.empty()) {\n+            return false;\n+        }\n+    }\n+\n+    // Must contain the BIP 353 identifier\n+    if (name.find(\"._bitcoin-payment.\") == std::string::npos) {\n+        return false;\n+    }\n+\n+    // Basic DNS name validation\n+    // - Maximum length of 253 characters (excluding trailing dot)\n+    // - Labels separated by dots\n+    // - Each label: 1-63 characters, alphanumeric and hyphens\n+    // - Labels cannot start or end with hyphens\n+    if (name.length() > 253) {\n+        return false;\n+    }\n+\n+    // Check for valid characters (alphanumeric, dots, hyphens, underscores)\n+    // Use locale-independent character checking\n+    if (!std::all_of(name.begin(), name.end(), [](unsigned char c) {\n+        return (c >= 'a' && c <= 'z') ||\n+               (c >= 'A' && c <= 'Z') ||\n+               (c >= '0' && c <= '9') ||\n+               c == '.' || c == '-' || c == '_';\n+    })) {\n+        return false;\n+    }\n+\n+    // Split by dots and validate each label\n+    size_t start = 0;\n+    size_t dot_pos = name.find('.');\n+\n+    while (dot_pos != std::string::npos || start < name.length()) {\n+        size_t end = (dot_pos != std::string::npos) ? dot_pos : name.length();\n+        std::string label = name.substr(start, end - start);\n+\n+        // Empty label (consecutive dots)\n+        if (label.empty()) {\n+            return false;\n+        }\n+\n+        // Label too long\n+        if (label.length() > 63) {\n+            return false;\n+        }\n+\n+        // Label starts or ends with hyphen (unless it's the special _bitcoin-payment label)\n+        if (label != \"_bitcoin-payment\") {\n+            if (label.front() == '-' || label.back() == '-') {\n+                return false;\n+            }\n+        }\n+\n+        if (dot_pos == std::string::npos) {\n+            break;\n+        }\n+\n+        start = dot_pos + 1;\n+        dot_pos = name.find('.', start);\n+    }\n+\n+    // Ensure it ends with a valid TLD (at least 2 characters after the last dot)\n+    size_t last_dot = name.rfind('.');\n+    if (last_dot == std::string::npos || name.length() - last_dot < 3) {\n+        return false;\n+    }\n+\n+    return true;\n+}\n+\n+struct BIP353Result {\n+    bool success;\n+    std::string result;  // Either the Bitcoin address or error message\n+};\n+\n+/**\n+ * Resolve a BIP 353 username to a Bitcoin address\n+ * @param username The BIP 353 username (e.g., carol.user._bitcoin-payment.carol.com)\n+ * @return BIP353Result containing success status and either the address or error message\n+ */\n+BIP353Result ResolveBIP353Username(const std::string& username)\n+{\n+    // Build the command\n+    const std::string dnsresolver = gArgs.GetArg(\"-dnsresolver\", \"\");\n+    std::string command = dnsresolver + \" resolve \" + username;\n+\n+    // Execute the command and parse JSON response\n+    UniValue result;\n+    try {\n+        result = RunCommandParseJSON(command);\n+    } catch (const std::exception& e) {\n+        return {false, strprintf(\"Failed to execute dns-bitcoin-resolver: %s\", e.what())};\n+    }\n+\n+    // Check if result is an error object\n+    if (result.isObject() && result.exists(\"error\")) {\n+        std::string error_msg = result[\"error\"].get_str();\n+        return {false, strprintf(\"DNS resolution error: %s\", error_msg)};\n+    }\n+\n+    // Result should be an array of DNS records\n+    if (!result.isArray() || result.empty()) {\n+        return {false, \"Invalid response from dns-bitcoin-resolver\"};\n+    }\n+\n+    // Look for TXT record with bitcoin: URI\n+    for (size_t i = 0; i < result.size(); ++i) {\n+        const UniValue& record = result[i];\n+\n+        if (!record.isObject() || !record.exists(\"type\") || !record.exists(\"contents\")) {\n+            continue;\n+        }\n+\n+        if (record[\"type\"].get_str() != \"txt\") {\n+            continue;\n+        }\n+\n+        std::string contents = record[\"contents\"].get_str();\n+\n+        // Check if it starts with \"bitcoin:\"\n+        if (contents.find(\"bitcoin:\") != 0) {",
      "path": "src/wallet/rpc/spend.cpp",
      "position": 170,
      "original_position": 170,
      "commit_id": "b5ad89f036e21c9f7b36f47cd438ac8d07c93864",
      "original_commit_id": "b5ad89f036e21c9f7b36f47cd438ac8d07c93864",
      "in_reply_to_id": null,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Should be ignoring case.",
      "created_at": "2025-07-26T17:53:12Z",
      "updated_at": "2025-07-26T17:57:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33069#discussion_r2233122798",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2233122798"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33069"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 382,
      "original_line": 382,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2233123549",
      "pull_request_review_id": 3058325866,
      "id": 2233123549,
      "node_id": "PRRC_kwDOABII586FGsLd",
      "diff_hunk": "@@ -221,6 +223,194 @@ static void SetFeeEstimateMode(const CWallet& wallet, CCoinControl& cc, const Un\n     }\n }\n \n+bool hasDNSResolver()\n+{\n+    return gArgs.GetArg(\"-dnsresolver\", \"\") != \"\";\n+}\n+\n+/**\n+ * Validate if a string follows the BIP 353 username format\n+ * @param username The username to validate\n+ * @return true if the username follows BIP 353 format, false otherwise\n+ *\n+ * Valid examples:\n+ *   - carol.user._bitcoin-payment.carol.com\n+ *   - carol.user._bitcoin-payment.carol.com. (with trailing dot - FQDN)\n+ *   - alice._bitcoin-payment.example.org\n+ *   - pay.bob._bitcoin-payment.company.co.uk\n+ *\n+ * Invalid examples:\n+ *   - carol.user.carol.com (missing ._bitcoin-payment.)\n+ *   - _bitcoin-payment.example.com (missing username part)\n+ *   - user@example.com (not a valid DNS name format)\n+ */\n+bool IsValidBIP353Username(const std::string& username)\n+{\n+    // Check for empty string\n+    if (username.empty()) {\n+        return false;\n+    }\n+\n+    // Handle trailing dot (FQDN format)\n+    std::string name = username;\n+    if (!name.empty() && name.back() == '.') {\n+        name.pop_back(); // Remove trailing dot for validation\n+\n+        // Check if it was just a dot\n+        if (name.empty()) {\n+            return false;\n+        }\n+    }\n+\n+    // Must contain the BIP 353 identifier\n+    if (name.find(\"._bitcoin-payment.\") == std::string::npos) {\n+        return false;\n+    }\n+\n+    // Basic DNS name validation\n+    // - Maximum length of 253 characters (excluding trailing dot)\n+    // - Labels separated by dots\n+    // - Each label: 1-63 characters, alphanumeric and hyphens\n+    // - Labels cannot start or end with hyphens\n+    if (name.length() > 253) {\n+        return false;\n+    }\n+\n+    // Check for valid characters (alphanumeric, dots, hyphens, underscores)\n+    // Use locale-independent character checking\n+    if (!std::all_of(name.begin(), name.end(), [](unsigned char c) {\n+        return (c >= 'a' && c <= 'z') ||\n+               (c >= 'A' && c <= 'Z') ||\n+               (c >= '0' && c <= '9') ||\n+               c == '.' || c == '-' || c == '_';\n+    })) {\n+        return false;\n+    }\n+\n+    // Split by dots and validate each label\n+    size_t start = 0;\n+    size_t dot_pos = name.find('.');\n+\n+    while (dot_pos != std::string::npos || start < name.length()) {\n+        size_t end = (dot_pos != std::string::npos) ? dot_pos : name.length();\n+        std::string label = name.substr(start, end - start);\n+\n+        // Empty label (consecutive dots)\n+        if (label.empty()) {\n+            return false;\n+        }\n+\n+        // Label too long\n+        if (label.length() > 63) {\n+            return false;\n+        }\n+\n+        // Label starts or ends with hyphen (unless it's the special _bitcoin-payment label)\n+        if (label != \"_bitcoin-payment\") {\n+            if (label.front() == '-' || label.back() == '-') {\n+                return false;\n+            }\n+        }\n+\n+        if (dot_pos == std::string::npos) {\n+            break;\n+        }\n+\n+        start = dot_pos + 1;\n+        dot_pos = name.find('.', start);\n+    }\n+\n+    // Ensure it ends with a valid TLD (at least 2 characters after the last dot)\n+    size_t last_dot = name.rfind('.');\n+    if (last_dot == std::string::npos || name.length() - last_dot < 3) {\n+        return false;\n+    }\n+\n+    return true;\n+}\n+\n+struct BIP353Result {\n+    bool success;\n+    std::string result;  // Either the Bitcoin address or error message\n+};\n+\n+/**\n+ * Resolve a BIP 353 username to a Bitcoin address\n+ * @param username The BIP 353 username (e.g., carol.user._bitcoin-payment.carol.com)\n+ * @return BIP353Result containing success status and either the address or error message\n+ */\n+BIP353Result ResolveBIP353Username(const std::string& username)\n+{\n+    // Build the command\n+    const std::string dnsresolver = gArgs.GetArg(\"-dnsresolver\", \"\");\n+    std::string command = dnsresolver + \" resolve \" + username;\n+\n+    // Execute the command and parse JSON response\n+    UniValue result;\n+    try {\n+        result = RunCommandParseJSON(command);\n+    } catch (const std::exception& e) {\n+        return {false, strprintf(\"Failed to execute dns-bitcoin-resolver: %s\", e.what())};\n+    }\n+\n+    // Check if result is an error object\n+    if (result.isObject() && result.exists(\"error\")) {\n+        std::string error_msg = result[\"error\"].get_str();\n+        return {false, strprintf(\"DNS resolution error: %s\", error_msg)};\n+    }\n+\n+    // Result should be an array of DNS records\n+    if (!result.isArray() || result.empty()) {\n+        return {false, \"Invalid response from dns-bitcoin-resolver\"};\n+    }\n+\n+    // Look for TXT record with bitcoin: URI\n+    for (size_t i = 0; i < result.size(); ++i) {\n+        const UniValue& record = result[i];\n+\n+        if (!record.isObject() || !record.exists(\"type\") || !record.exists(\"contents\")) {\n+            continue;\n+        }\n+\n+        if (record[\"type\"].get_str() != \"txt\") {\n+            continue;\n+        }\n+\n+        std::string contents = record[\"contents\"].get_str();\n+\n+        // Check if it starts with \"bitcoin:\"\n+        if (contents.find(\"bitcoin:\") != 0) {\n+            continue;\n+        }\n+\n+        // Extract the address part (between \"bitcoin:\" and \"?\" or end of string)\n+        std::string uri = contents.substr(8); // Remove \"bitcoin:\" prefix\n+        size_t question_pos = uri.find('?');\n+\n+        if (question_pos == 0) {\n+            // No address, only parameters (bitcoin:?lno=...)\n+            return {false, \"No Bitcoin address found in the DNS record\"};\n+        }\n+\n+        std::string address;\n+        if (question_pos != std::string::npos) {\n+            address = uri.substr(0, question_pos);\n+        } else {\n+            address = uri;\n+        }\n+\n+        // Basic validation - check if address is not empty\n+        if (address.empty()) {\n+            return {false, \"No Bitcoin address found in the DNS record\"};\n+        }\n+\n+        // Return the extracted address",
      "path": "src/wallet/rpc/spend.cpp",
      "position": 195,
      "original_position": 195,
      "commit_id": "b5ad89f036e21c9f7b36f47cd438ac8d07c93864",
      "original_commit_id": "b5ad89f036e21c9f7b36f47cd438ac8d07c93864",
      "in_reply_to_id": null,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "You also need to accept arguments. As @Sjors noted this will be needed for future things like silent payments `?sp=...` but also BIP 321 mandates that you need to recognize any bech32 payment instructions in parameters (eg `bitcoin:1Legacy?bc=segwit&BC=TAPROOT`). Probably this code should be shared with the existing URI-parsing logic in the GUI, which may or may not need updating to handle 321 correctly.",
      "created_at": "2025-07-26T17:55:39Z",
      "updated_at": "2025-07-26T17:57:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33069#discussion_r2233123549",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2233123549"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33069"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 407,
      "original_line": 407,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2233124434",
      "pull_request_review_id": 3058325866,
      "id": 2233124434,
      "node_id": "PRRC_kwDOABII586FGsZS",
      "diff_hunk": "@@ -82,6 +82,8 @@ void WalletInit::AddWalletOptions(ArgsManager& argsman) const\n \n     argsman.AddArg(\"-walletrejectlongchains\", strprintf(\"Wallet will not create transactions that violate mempool chain limits (default: %u)\", DEFAULT_WALLET_REJECT_LONG_CHAINS), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::WALLET_DEBUG_TEST);\n     argsman.AddArg(\"-walletcrosschain\", strprintf(\"Allow reusing wallet files across chains (default: %u)\", DEFAULT_WALLETCROSSCHAIN), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::WALLET_DEBUG_TEST);\n+    argsman.AddArg(\"-dnsresolver=<cmd>\", \"DNSSEC-validating resolver for BIP-353 Bitcoin addresses\", ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);",
      "path": "src/wallet/init.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "b5ad89f036e21c9f7b36f47cd438ac8d07c93864",
      "original_commit_id": "b5ad89f036e21c9f7b36f47cd438ac8d07c93864",
      "in_reply_to_id": null,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "What is the plan here? Ship a separate binary (included via the same multi-process release process) to do resolution or is the goal to eventually just embed something that can talk directly to a DNS server over TCP and fetch results (its pretty trivial code, but its a bunch of parsing to do in C/C++)?",
      "created_at": "2025-07-26T17:57:01Z",
      "updated_at": "2025-07-26T17:57:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33069#discussion_r2233124434",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2233124434"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33069"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 85,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2233868340",
      "pull_request_review_id": 3059417370,
      "id": 2233868340,
      "node_id": "PRRC_kwDOABII586FJiA0",
      "diff_hunk": "@@ -82,6 +82,8 @@ void WalletInit::AddWalletOptions(ArgsManager& argsman) const\n \n     argsman.AddArg(\"-walletrejectlongchains\", strprintf(\"Wallet will not create transactions that violate mempool chain limits (default: %u)\", DEFAULT_WALLET_REJECT_LONG_CHAINS), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::WALLET_DEBUG_TEST);\n     argsman.AddArg(\"-walletcrosschain\", strprintf(\"Allow reusing wallet files across chains (default: %u)\", DEFAULT_WALLETCROSSCHAIN), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::WALLET_DEBUG_TEST);\n+    argsman.AddArg(\"-dnsresolver=<cmd>\", \"DNSSEC-validating resolver for BIP-353 Bitcoin addresses\", ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);",
      "path": "src/wallet/init.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "b5ad89f036e21c9f7b36f47cd438ac8d07c93864",
      "original_commit_id": "b5ad89f036e21c9f7b36f47cd438ac8d07c93864",
      "in_reply_to_id": 2233124434,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think initially it would be similar to [HWI](https://github.com/bitcoin-core/HWI): separately maintained and released. (but see discussion below)",
      "created_at": "2025-07-27T08:43:39Z",
      "updated_at": "2025-07-27T08:43:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33069#discussion_r2233868340",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2233868340"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33069"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 85,
      "original_line": 85,
      "side": "RIGHT"
    }
  ]
}